'BasicConv2d | Test | input shape is: ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 128) | done 3/3'
'BasicConv2d | Test | Test Successfull!'
'||'
'InceptionAux | random_test_tensor shape is: ivy.Shape(1, 17, 17, 768)'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'InceptionAux | input shape is:ivy.Shape(1, 17, 17, 768)'
'InceptionAux | done 1/8, output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 128) | done 3/3'
'InceptionAux | done 2/8'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 1, 1, 768) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 1, 1, 768) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 1, 1, 768) | done 3/3'
'InceptionAux | done 3/8'
'InceptionAux | input shape to adaptive_avg_pool2d is:ivy.Shape(1, 1, 1, 768)'
('InceptionAux | permuted input shape to adaptive_avg_pool2d is:ivy.Shape(1, '
 '768, 1, 1)')
('InceptionAux | output shape from adaptive_avg_pool2d is:ivy.Shape(1, 768, 1, '
 '1)')
('InceptionAux | permuted output shape from adaptive_avg_pool2d '
 'is:ivy.Shape(1, 1, 1, 768)')
'InceptionAux | done 4/8'
'InceptionAux | done 5/8'
'InceptionAux | done 8/8'
'InceptionAux | Test Successfull!'
'random_test_tensor shape is: ivy.Shape(1, 35, 35, 192)'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'input shape is:ivy.Shape(1, 35, 35, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 35, 35, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 35, 35, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 35, 35, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 35, 35, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 35, 35, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 35, 35, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 35, 35, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 35, 35, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 35, 35, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 35, 35, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 35, 35, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 35, 35, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 35, 35, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 35, 35, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 35, 35, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 35, 35, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 35, 35, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 35, 35, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 35, 35, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 35, 35, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 35, 35, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 35, 35, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 35, 35, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 35, 35, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 35, 35, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 35, 35, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 35, 35, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 35, 35, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 35, 35, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 35, 35, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 35, 35, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 35, 35, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 35, 35, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 35, 35, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 35, 35, 32) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 35, 35, 32)'
'InceptionA | outputs 20/20'
'Test Successfull!'
'random_test_tensor shape is: ivy.Shape(1, 35, 35, 288)'
'layer 1/4 built'
'layer 2/4 built'
'layer 3/4 built'
'layer 4/4 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'input shape is:ivy.Shape(1, 35, 35, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 35, 35, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 17, 17, 384) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 17, 17, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 35, 35, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 35, 35, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 35, 35, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 35, 35, 64) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 35, 35, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 35, 35, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 35, 35, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 35, 35, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 35, 35, 96) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 35, 35, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 35, 35, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 17, 17, 96) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 17, 17, 96)'
'one 20/20, output shape is:ivy.Shape(1, 17, 17, 288)'
'one 20/20'
'Test Successfull!'
'random_test_tensor shape is: ivy.Shape(1, 17, 17, 768)'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'input shape is:ivy.Shape(1, 17, 17, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 17, 17, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 17, 17, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 17, 17, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 17, 17, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 17, 17, 128) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 17, 17, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 17, 17, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 17, 17, 128) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 17, 17, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 17, 17, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 17, 17, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 17, 17, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 17, 17, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 17, 17, 128) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 17, 17, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 17, 17, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 17, 17, 128) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 17, 17, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 17, 17, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 17, 17, 128) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 17, 17, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 17, 17, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 17, 17, 128) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 17, 17, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 17, 17, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 17, 17, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 17, 17, 192)'
'one 10/20, output shape is:ivy.Shape(1, 17, 17, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 17, 17, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 17, 17, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 17, 17, 192)'
'one 20/20'
'Test Successfull!'
'random_test_tensor shape is: ivy.Shape(1, 17, 17, 768)'
'layer 1/6 built'
'layer 2/6 built'
'layer 3/6 built'
'layer 4/6 built'
'layer 5/6 built'
'layer 6/6 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'input shape is:ivy.Shape(1, 17, 17, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 17, 17, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 17, 17, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 17, 17, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 17, 17, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 8, 8, 320) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 8, 8, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 17, 17, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 17, 17, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 17, 17, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 17, 17, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 17, 17, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 17, 17, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 17, 17, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 17, 17, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 17, 17, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 17, 17, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 8, 8, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 8, 8, 192)'
'one 7/20, output shape is:ivy.Shape(1, 8, 8, 768)'
'one 20/20'
'Test Successfull!'
'random_test_tensor shape is: ivy.Shape(1, 8, 8, 1280)'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'input shape is:ivy.Shape(1, 8, 8, 1280)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 8, 8, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 8, 8, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 8, 8, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 8, 8, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 8, 8, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 8, 8, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 8, 8, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 8, 8, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 8, 8, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 8, 8, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 8, 8, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 8, 8, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 8, 8, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 8, 8, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 8, 8, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 8, 8, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 8, 8, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 8, 8, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 8, 8, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 8, 8, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 8, 8, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 8, 8, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 8, 8, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 8, 8, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 8, 8, 192)'
'20/20'
'Test Successfull!'
'test_inceptionnet | device is: cpu'
'test_inceptionnet | fw is: numpy'
'test_inceptionnet | load_weights is: False'
'InceptionV3 | build | layer 1/22 built'
'InceptionV3 | build | layer 2/22 built'
'layer 3/22 built'
'InceptionV3 | build | layer 4/22 built'
'InceptionV3 | build | layer 5/22 built'
'InceptionV3 | build | layer 6/22 built'
'InceptionV3 | build | layer 7/22 built'
'InceptionV3 | build | layer 8/22 built'
'InceptionV3 | build | layer 9/22 built'
'InceptionV3 | build | layer 10/22 built'
'InceptionV3 | build | layer 11/22 built'
'InceptionV3 | build | layer 12/22 built'
'InceptionV3 | build | layer 13/22 built'
'InceptionV3 | build | layer 14/22 built'
'InceptionV3 | build | layer 15/22 built'
'InceptionV3 | build | layer 17/22 built'
'InceptionV3 | build | layer 18/22 built'
'InceptionV3 | build | layer 19/22 built'
'InceptionV3 | build | layer 20/22 built'
'InceptionV3 | build | layer 21/22 built'
'InceptionV3 | build | layer 22/22 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/4 built'
'layer 2/4 built'
'layer 3/4 built'
'layer 4/4 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/6 built'
'layer 2/6 built'
'layer 3/6 built'
'layer 4/6 built'
'layer 5/6 built'
'layer 6/6 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'inceptionNet_v3 | building InceptionV3 model | done 1/3'
'InceptionV3 | forward | input data_format is:NHWC | done 1/27'
'InceptionV3 | forward | data_format is going to be used is:NHWC | done 1/27'
'InceptionV3 | forward | input shape is:ivy.Shape(1, 224, 224, 3) | done 1/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 224, 224, 3) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 111, 111, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 111, 111, 32) | done 2/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 111, 111, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 32) | done 3/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 109, 109, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 64) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 64) | done 4/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 54, 54, 64) | done 5/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 54, 54, 80) | done 3/3'
'InceptionV3 | forward | is:ivy.Shape(1, 54, 54, 80) | done 6/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 80) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 52, 52, 192) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 52, 52, 192) | done 7/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 192) | done 8/27'
'input shape is:ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 32) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 32)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 25, 25, 256) | done 9/27'
'input shape is:ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 10/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 11/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 384) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 96) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 96)'
'one 20/20, output shape is:ivy.Shape(1, 12, 12, 288)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 12/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 12, 12, 768) | done 13/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 14/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 15/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 16/27'
'v3 16/27, output shape is:ivy.Shape(1, 12, 12, 768)'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 5, 5, 192)'
'one 7/20, output shape is:ivy.Shape(1, 5, 5, 768)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 1280) | done 17/27'
'input shape is:ivy.Shape(1, 5, 5, 1280)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 18/27'
'input shape is:ivy.Shape(1, 5, 5, 2048)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 19/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 20/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 5, 5) | done 21/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 1, 1) | done 22/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 27/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 24/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 25/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048) | done 26/27'
'InceptionV3 | forward | fc | done 27/27'
('test_inceptionnet | logits is: ivy.array([[-2.24785719e+05, -4.50569562e+05, '
 '-3.41093750e+04,\n'
 '        -2.66059594e+05, -1.81252781e+05,  9.52138906e+04,\n'
 '         2.50343906e+04,  3.85820906e+05,  1.36853184e+04,\n'
 '         1.91528969e+05, -5.39343672e+04, -3.19541312e+05,\n'
 '        -2.35611688e+05, -4.99041797e+04, -1.91180500e+05,\n'
 '         1.32535812e+05, -9.40412578e+04, -1.81151062e+05,\n'
 '         4.00244812e+05, -2.63117719e+05,  5.94005938e+04,\n'
 '        -2.85784531e+05, -3.99972656e+05,  9.63230391e+04,\n'
 '        -1.58174094e+05, -4.31352500e+04,  9.08068594e+04,\n'
 '        -3.17530250e+05, -2.89143938e+05,  2.98805406e+05,\n'
 '         1.47253594e+04,  2.05459906e+05, -6.27475820e+04,\n'
 '        -4.83811625e+05,  8.89019375e+04,  2.80044062e+04,\n'
 '        -1.80129516e+05, -3.79460594e+05,  1.86992266e+04,\n'
 '        -2.76550156e+05, -3.19520781e+04, -1.69354188e+05,\n'
 '        -2.35035500e+05,  5.89820500e+05,  1.04922820e+05,\n'
 '         5.66739375e+05, -4.31076000e+05, -4.81821953e+04,\n'
 '         5.20100781e+05, -2.37536016e+05, -7.82722578e+04,\n'
 '        -1.75005422e+05, -1.28695219e+05,  2.77304438e+05,\n'
 '         2.39441812e+05,  2.43235047e+05, -3.21110031e+05,\n'
 '         2.15969438e+05,  7.69102625e+05, -2.52973625e+05,\n'
 '         3.65137281e+05, -5.12125312e+04, -2.25570562e+05,\n'
 '        -7.84593375e+05, -8.51454688e+03,  1.64822875e+05,\n'
 '        -3.52409562e+05,  3.52853625e+05,  2.82005438e+05,\n'
 '        -4.79435719e+05,  1.06018672e+05, -5.98274922e+04,\n'
 '         3.41372312e+05,  3.64257125e+05,  7.59722312e+05,\n'
 '         8.39482500e+04, -2.73037875e+05, -3.83014469e+05,\n'
 '        -2.15633844e+05,  8.69382031e+04, -3.12850000e+05,\n'
 '         1.37301219e+05,  3.65554312e+05, -2.76042688e+05,\n'
 '         1.83555781e+05, -2.47776094e+05, -1.48898719e+05,\n'
 '        -7.46557344e+04, -2.14880438e+05,  2.05552203e+05,\n'
 '        -1.36791594e+05,  1.76010141e+05, -1.29596141e+05,\n'
 '         2.20870500e+05,  9.79745625e+04, -1.11347203e+05,\n'
 '         2.70184062e+05,  6.51678062e+05, -8.87130391e+04,\n'
 '        -6.10632625e+05,  4.16878125e+04,  2.05761188e+05,\n'
 '        -2.76787281e+05, -3.57380594e+05, -4.22964562e+05,\n'
 '         3.46828750e+05,  4.38660469e+05, -1.74919492e+04,\n'
 '        -1.41766641e+04,  1.08117516e+05,  2.42727094e+05,\n'
 '         1.53683391e+05,  2.85561625e+05,  4.44925938e+04,\n'
 '         4.82357812e+04, -1.55212312e+05, -4.47730875e+05,\n'
 '        -3.82646562e+05,  2.83540000e+05, -1.38245656e+05,\n'
 '         1.58397750e+05, -5.58945500e+05,  2.91015438e+05,\n'
 '        -1.94848125e+04, -3.21132281e+05,  1.82481344e+05,\n'
 '        -1.01670781e+04,  3.61963750e+04,  2.21071125e+05,\n'
 '        -1.45607375e+05,  3.45308344e+05,  8.29078438e+04,\n'
 '         4.52097578e+04, -1.46802359e+05,  2.00436875e+05,\n'
 '        -1.21392625e+05, -6.16769531e+04,  8.85328500e+05,\n'
 '         7.14064688e+04,  2.61067594e+05, -9.35996406e+04,\n'
 '        -6.71156719e+04,  6.02484812e+05,  6.02376000e+05,\n'
 '         2.55026375e+05, -1.55913531e+05, -3.67384688e+05,\n'
 '        -1.58822062e+05,  8.03437500e+01,  3.31783344e+05,\n'
 '         5.31402266e+04, -2.26462062e+05,  1.89282156e+05,\n'
 '        -3.25402812e+05,  2.44700781e+05, -2.17017797e+05,\n'
 '        -3.45195875e+05,  1.22297031e+05, -2.42563188e+05,\n'
 '         4.92149000e+05,  1.77822781e+05,  3.85009125e+05,\n'
 '         1.49683500e+05, -9.60081250e+03, -1.42084906e+05,\n'
 '         2.49744156e+05,  1.22589719e+05, -5.02829812e+05,\n'
 '         2.43384547e+05,  3.61784562e+05, -8.22492969e+04,\n'
 '        -3.32288750e+05,  3.89055703e+04, -2.55793500e+05,\n'
 '        -7.09199531e+04,  3.63751719e+05, -3.32596094e+03,\n'
 '        -2.14757984e+05,  4.81267250e+05,  1.38995844e+05,\n'
 '        -2.74929219e+04,  1.87580656e+05,  3.32235000e+05,\n'
 '        -2.89261250e+04,  2.32845031e+05,  6.42637734e+04,\n'
 '         3.50785000e+04, -1.68793422e+05, -2.20941469e+05,\n'
 '         3.21403125e+05,  1.67189750e+05,  6.53103125e+05,\n'
 '         4.19537281e+05,  9.14043750e+03,  3.14998250e+05,\n'
 '        -4.03613984e+04,  3.14724531e+04,  7.60828500e+05,\n'
 '        -2.59640375e+05, -1.19166891e+05, -2.53095125e+05,\n'
 '        -9.82731875e+04,  5.24523875e+05, -2.21591281e+05,\n'
 '        -7.07422688e+05,  1.23565852e+05, -3.81188125e+05,\n'
 '         7.21398938e+05, -6.45428047e+04, -3.67533812e+05,\n'
 '        -5.95229141e+04,  1.72291375e+05,  2.88889219e+04,\n'
 '         1.33122531e+05,  1.58002531e+05,  2.49103906e+05,\n'
 '        -1.44778125e+03, -5.19317656e+05, -1.55407422e+05,\n'
 '        -4.58160938e+03, -8.03240312e+04,  5.72714750e+05,\n'
 '         3.66771406e+04, -1.02445812e+05, -1.48611062e+05,\n'
 '         1.62558438e+05,  1.09031555e+05, -1.00628219e+05,\n'
 '        -2.60136047e+05, -4.78966719e+04, -3.38869688e+05,\n'
 '         4.08727062e+05, -2.12193125e+05,  2.84258000e+05,\n'
 '        -1.07029211e+05,  9.77785156e+04,  1.54757328e+05,\n'
 '        -9.70862344e+04, -7.30521875e+04,  1.88698844e+05,\n'
 '         5.49606562e+04,  1.57867188e+05,  1.27286773e+05,\n'
 '         1.48217359e+05, -4.65971062e+05,  2.16898250e+05,\n'
 '        -1.23003594e+05,  1.25765750e+05, -1.11106650e+06,\n'
 '        -3.59438188e+05, -2.07062219e+05, -1.12452766e+05,\n'
 '         4.89535125e+05,  6.39093672e+04,  4.39282266e+04,\n'
 '         3.57260125e+05, -2.34895938e+04,  1.63418750e+05,\n'
 '         1.39418500e+05,  4.69082500e+04, -1.17166461e+05,\n'
 '         3.81692250e+05,  6.38745812e+05, -4.63213906e+04,\n'
 '         5.16573750e+04, -1.87383844e+05, -5.64703875e+05,\n'
 '         1.05989500e+05, -2.84844469e+05, -4.20217719e+05,\n'
 '        -1.42364375e+04, -7.87983047e+04,  1.16350828e+05,\n'
 '         9.30881094e+04,  3.26809938e+05,  8.25213438e+04,\n'
 '        -4.09044594e+05,  2.98652562e+05,  1.01705734e+05,\n'
 '        -5.62177812e+05,  1.48132750e+05,  3.42555375e+05,\n'
 '        -4.46041016e+04,  5.18650875e+05,  6.99528906e+04,\n'
 '         3.16134062e+05,  9.55001797e+04,  6.43351094e+04,\n'
 '        -1.26296875e+02,  1.51104562e+05, -6.65895410e+03,\n'
 '         3.03418688e+05, -4.00758812e+05,  2.08009141e+05,\n'
 '        -3.23296465e+04, -1.61752781e+05, -2.74854156e+05,\n'
 '        -2.50737219e+05, -1.04656172e+05,  1.83407359e+05,\n'
 '         2.92128516e+04,  3.99048312e+05, -5.36924750e+05,\n'
 '        -5.83715500e+05, -5.00428812e+05, -3.34057000e+05,\n'
 '         3.03800594e+05,  6.31667375e+05,  3.13902781e+05,\n'
 '        -3.82378750e+04, -1.74839812e+05, -6.89930312e+04,\n'
 '        -5.93046562e+04,  1.06840570e+05,  8.88637344e+04,\n'
 '         6.92235438e+05,  4.73057312e+05, -1.56496504e+04,\n'
 '        -3.70426406e+04,  4.03729141e+04,  1.51005875e+05,\n'
 '        -9.78753203e+04, -3.87821812e+05,  4.79969594e+05,\n'
 '         9.45236562e+04,  5.48411625e+05, -4.03247031e+05,\n'
 '         3.82095250e+05, -1.27694156e+05,  3.09077383e+04,\n'
 '        -2.20170234e+04,  2.96675750e+05,  2.88505250e+05,\n'
 '        -4.32934609e+04,  7.36479844e+04, -4.38906062e+05,\n'
 '        -2.48628750e+04,  3.57824906e+05,  1.86193469e+05,\n'
 '        -3.21518125e+04,  8.66489141e+04, -3.36494656e+05,\n'
 '         2.52024219e+04,  4.52662312e+05,  2.04391250e+04,\n'
 '        -2.00629969e+05, -6.93338375e+05,  9.81454688e+05,\n'
 '        -1.40411406e+05,  1.22637070e+05,  7.56645000e+04,\n'
 '        -6.35877109e+04, -4.25147125e+05,  2.61760156e+05,\n'
 '        -1.46238250e+05,  2.55121250e+04,  4.73204625e+05,\n'
 '        -1.90263641e+05, -3.63942531e+05,  1.12313766e+05,\n'
 '         4.76490625e+04, -1.87560156e+05, -8.76854688e+03,\n'
 '         2.20022469e+05,  2.06782125e+05,  1.11990977e+04,\n'
 '        -1.45045391e+05, -3.40561016e+04,  1.51449375e+05,\n'
 '        -2.56693469e+05, -2.24764984e+05, -4.80331750e+05,\n'
 '         4.70286438e+05, -2.15428969e+05, -1.22808688e+05,\n'
 '        -1.65975969e+05,  8.34144219e+04,  9.06300781e+03,\n'
 '        -2.77550156e+05,  1.62521609e+05, -5.86861641e+04,\n'
 '         1.08540172e+05,  2.93821250e+05, -3.97754250e+05,\n'
 '         1.33604375e+05, -4.43640125e+05,  3.79166781e+05,\n'
 '        -1.27468156e+05, -1.17420609e+05, -6.23985375e+05,\n'
 '        -5.94136562e+04,  4.99811797e+04,  9.34228906e+04,\n'
 '         3.71858094e+05, -1.36684250e+05, -1.40806688e+05,\n'
 '         5.31422000e+05,  1.01661094e+04,  1.14770312e+05,\n'
 '        -1.84014281e+05,  9.22278750e+04,  3.95571469e+05,\n'
 '        -2.69985312e+05, -4.48592750e+05,  2.60154250e+05,\n'
 '        -1.29329906e+05, -1.23654398e+05, -1.57699375e+04,\n'
 '         1.66915062e+05,  1.76719844e+05,  1.04340781e+05,\n'
 '        -1.42133594e+05, -3.35253188e+05,  1.90713000e+05,\n'
 '         5.53881375e+05,  2.95968312e+05, -2.05533969e+05,\n'
 '         5.45222375e+05, -3.17847312e+05, -2.50643594e+05,\n'
 '        -5.50033312e+05,  1.62922906e+05, -2.03379500e+05,\n'
 '        -3.42662469e+05, -2.51352781e+05, -4.03667500e+05,\n'
 '        -5.27519812e+05,  2.23584375e+05,  2.08764031e+05,\n'
 '        -1.13118766e+05,  3.87703688e+05, -4.32831469e+05,\n'
 '         5.18305875e+05,  2.40019578e+05, -5.28465375e+05,\n'
 '        -8.84562734e+04,  3.36749312e+05, -2.99121500e+05,\n'
 '        -2.13335266e+05,  3.65014250e+05, -1.12745016e+05,\n'
 '        -1.00254586e+05,  4.12240750e+05, -2.08134625e+05,\n'
 '         2.33823578e+05,  1.71003594e+05,  4.28796406e+05,\n'
 '        -1.71883109e+05, -1.56851062e+05, -1.13239742e+05,\n'
 '         4.04728375e+05, -1.66413781e+05,  3.45342594e+05,\n'
 '        -9.19159922e+04, -1.04533906e+05, -6.34130078e+04,\n'
 '         2.08378250e+05, -9.63072031e+04,  3.88440219e+05,\n'
 '        -2.84417875e+05,  3.06077875e+05, -3.01042000e+05,\n'
 '        -3.27114062e+04,  4.60615562e+05,  2.92587906e+05,\n'
 '        -4.03900859e+04,  6.89544844e+04, -3.35700719e+05,\n'
 '        -2.82900781e+05,  3.48674781e+05,  1.93382656e+04,\n'
 '        -2.55104656e+05,  1.35568094e+05, -9.88674922e+04,\n'
 '         4.14630375e+05, -3.27001375e+05, -2.50082750e+05,\n'
 '         2.85151531e+05, -3.89233156e+05,  8.70901562e+03,\n'
 '         1.91127859e+05, -3.31348750e+04, -1.41213750e+05,\n'
 '        -3.55065391e+04, -1.19422531e+05,  1.15197992e+05,\n'
 '        -3.18685688e+05, -1.94141984e+05, -7.71243281e+04,\n'
 '        -5.17979438e+05,  1.66180531e+05, -3.78934500e+05,\n'
 '         1.35731656e+05, -5.52143062e+05, -3.76171484e+03,\n'
 '         1.88112594e+05,  8.64457578e+04, -1.27075453e+05,\n'
 '         9.64760938e+03, -1.20649492e+05, -2.15749359e+05,\n'
 '         3.11400906e+05,  4.77965156e+05,  6.98483688e+05,\n'
 '        -3.16957000e+05,  1.37943750e+03,  1.42436359e+05,\n'
 '        -3.48820039e+04, -8.18754562e+05, -1.11979000e+05,\n'
 '        -6.77537031e+04,  7.13247000e+05, -5.89301875e+05,\n'
 '        -1.28184094e+05,  1.11118531e+05,  2.08545781e+05,\n'
 '         1.87509703e+05, -2.95601133e+04, -4.97608750e+05,\n'
 '        -3.24478844e+05, -2.87788062e+05,  5.14645469e+04,\n'
 '         4.93868500e+05, -3.57394969e+05,  6.93434219e+04,\n'
 '         3.35658750e+04,  5.12929062e+04,  1.55888750e+05,\n'
 '        -3.47118812e+05,  4.11276969e+05, -2.71152750e+05,\n'
 '        -9.32887812e+04,  2.81432109e+04,  1.96484812e+05,\n'
 '         4.39439812e+05,  5.77398906e+04,  3.26577938e+05,\n'
 '        -1.29681562e+04, -3.72512070e+04, -5.33524938e+05,\n'
 '        -4.65108945e+04, -1.00106625e+05, -2.52227188e+04,\n'
 '         1.04615531e+05, -3.28229500e+05, -4.87087875e+05,\n'
 '         3.20945996e+04,  4.59300562e+05, -6.29680625e+04,\n'
 '        -1.02751594e+05, -3.91364570e+04, -2.21885781e+05,\n'
 '        -7.81892125e+05, -2.03600125e+05,  2.58500984e+05,\n'
 '        -7.83541562e+04, -2.68907344e+05,  3.19231062e+05,\n'
 '        -4.97713688e+05, -4.82084844e+05,  2.86533719e+05,\n'
 '         2.18328734e+05, -1.08486125e+05, -6.00430859e+04,\n'
 '         3.49718062e+05, -1.04565273e+05,  2.36915625e+03,\n'
 '         1.94149641e+05,  3.04376031e+05,  5.85742688e+05,\n'
 '        -3.50359188e+05,  1.09165297e+05, -2.26993219e+05,\n'
 '         3.42774688e+04, -2.85293938e+05,  2.32887000e+05,\n'
 '        -6.38192461e+04,  1.42967188e+05,  3.28720000e+04,\n'
 '         1.43969438e+05,  2.36273250e+05,  6.97871094e+04,\n'
 '        -1.53604734e+05, -5.65261562e+05,  1.42469359e+05,\n'
 '        -3.87664500e+05, -2.29345547e+04,  2.15915781e+05,\n'
 '         2.81529188e+05,  8.11402188e+04,  4.99489375e+04,\n'
 '        -7.29255547e+04, -4.02548938e+05,  1.11035906e+05,\n'
 '         1.29973219e+05,  5.03708281e+04, -4.73358875e+05,\n'
 '         3.05732562e+05,  5.75367188e+04, -8.08647734e+04,\n'
 '        -1.20039289e+05,  1.56060312e+04,  2.27430016e+05,\n'
 '        -2.71654625e+05, -1.66372547e+05,  1.59942812e+04,\n'
 '         3.69471875e+03,  1.54096688e+05, -1.20771812e+05,\n'
 '        -3.26408062e+05, -5.63761250e+05, -1.46380297e+05,\n'
 '         3.61787688e+05,  3.50485281e+05, -6.12546289e+04,\n'
 '        -5.83697688e+05, -3.72470781e+04,  2.21760000e+05,\n'
 '         1.52450703e+05, -3.92574062e+05, -1.49206781e+05,\n'
 '        -6.13837000e+05,  2.63986172e+04, -1.13111656e+05,\n'
 '         1.14307391e+05, -1.33831469e+05, -1.39612562e+05,\n'
 '         1.30143469e+05,  1.54304891e+05, -6.68704219e+04,\n'
 '         1.84943031e+05,  6.12090062e+05, -1.43982969e+04,\n'
 '         5.72579688e+05,  2.70712156e+05, -1.40848094e+05,\n'
 '        -2.55750188e+05, -1.49076000e+05,  2.64904375e+04,\n'
 '         1.70399125e+05,  6.41497656e+04,  1.50152875e+05,\n'
 '         3.78415531e+05, -2.78437094e+05, -1.13768422e+05,\n'
 '         4.27030625e+05, -1.21627281e+05,  1.99800812e+05,\n'
 '         2.56640297e+05, -5.66130000e+05,  1.00154812e+05,\n'
 '        -2.21252812e+05,  2.82879000e+05, -2.10447719e+05,\n'
 '         2.50729844e+05, -2.49581188e+05, -3.92533688e+05,\n'
 '         7.33228438e+04, -1.67890812e+05, -4.09020969e+05,\n'
 '         1.48579812e+05, -3.01930781e+05, -1.69325281e+05,\n'
 '         3.92926797e+04,  5.43237812e+04,  6.08047500e+04,\n'
 '        -2.88577438e+05, -3.65236562e+05,  1.06007812e+05,\n'
 '         9.69463594e+04,  2.40515977e+04, -2.27010406e+05,\n'
 '        -1.85812656e+05, -3.46424375e+05,  6.46718750e+04,\n'
 '        -5.67384375e+03,  5.68164750e+05, -3.32354000e+05,\n'
 '         1.68110844e+05,  8.61202812e+04, -5.65018125e+05,\n'
 '         1.19241484e+04,  2.74353750e+05, -5.45694375e+04,\n'
 '        -1.14132281e+05,  4.37700312e+05,  9.02522109e+04,\n'
 '        -2.15795031e+05, -1.44654258e+04, -5.33586016e+04,\n'
 '        -5.18189188e+05,  5.17478500e+05,  5.59581000e+05,\n'
 '        -8.47740078e+04, -1.59171781e+05, -3.19426688e+05,\n'
 '        -1.49174281e+05,  2.80942531e+05,  1.13779422e+05,\n'
 '         5.17135312e+05,  2.99919156e+05, -2.51870766e+05,\n'
 '         2.88023375e+05,  4.34074062e+05,  1.74429672e+05,\n'
 '        -6.39118750e+05, -1.99750578e+05,  1.37610953e+05,\n'
 '         3.72050406e+05,  1.92484672e+05, -3.91293469e+05,\n'
 '         1.73973984e+05, -5.72109312e+05, -7.74623125e+04,\n'
 '        -2.57652562e+05,  1.95446719e+04, -5.02296125e+05,\n'
 '        -2.75883969e+05,  2.49059125e+05,  4.44432930e+04,\n'
 '         2.55403016e+05,  4.91406875e+04, -3.14392688e+05,\n'
 '         2.91716969e+05, -4.68462578e+04, -6.19842188e+05,\n'
 '         3.85325562e+05, -4.81221625e+05,  2.63220844e+05,\n'
 '         9.52271250e+04,  6.34336719e+04,  3.77062625e+05,\n'
 '         3.30478875e+05, -6.01689375e+04, -1.45438000e+05,\n'
 '        -2.76310312e+05,  2.89838375e+05, -6.14071438e+05,\n'
 '        -4.22558656e+05,  4.56230688e+05,  1.26471484e+05,\n'
 '        -3.34147219e+05,  9.14765000e+04,  1.04174234e+05,\n'
 '        -1.19979977e+05, -1.18061422e+05,  3.23359719e+05,\n'
 '        -2.77695062e+05, -3.07448250e+05,  1.82929219e+05,\n'
 '         2.79581406e+05,  4.19154492e+04,  3.80567156e+05,\n'
 '        -5.11567625e+05,  3.42954312e+05, -5.43586172e+04,\n'
 '        -5.23608375e+05, -3.21937219e+05, -4.44576562e+05,\n'
 '        -4.64285875e+05,  1.06742406e+05, -1.22851875e+04,\n'
 '        -3.34189375e+05, -8.00937500e+03, -1.13566258e+05,\n'
 '         4.82187656e+04,  1.21142047e+05,  5.01707031e+05,\n'
 '         2.23931562e+05,  7.64761250e+05, -5.37427688e+05,\n'
 '         3.31873156e+05,  3.23447438e+05, -9.34064750e+05,\n'
 '        -2.29819312e+05, -6.21272562e+05,  5.45693125e+04,\n'
 '         2.44055875e+05,  2.81073156e+05,  8.90776406e+04,\n'
 '         3.90766812e+05,  4.00896938e+05,  3.63792250e+05,\n'
 '         2.82656000e+05, -6.92586875e+04,  5.61559188e+05,\n'
 '        -6.17453938e+05,  4.80210062e+05, -2.44947094e+05,\n'
 '        -2.77007062e+05, -8.30010859e+04,  4.12574469e+05,\n'
 '         2.44629188e+05,  6.30829625e+05, -8.80571406e+04,\n'
 '        -3.87467875e+05, -3.10786250e+04,  4.61893594e+04,\n'
 '         2.15954375e+04, -2.26812859e+05, -1.83777156e+05,\n'
 '        -3.99227344e+04,  8.73653125e+05, -4.21114688e+04,\n'
 '        -1.03260156e+04, -2.90598594e+05,  2.88007188e+04,\n'
 '        -5.92884375e+04,  1.52919656e+05,  6.30283938e+05,\n'
 '        -3.14213672e+04,  3.12041500e+05,  9.26616562e+04,\n'
 '         2.57236984e+05, -1.66639219e+05,  4.93299375e+04,\n'
 '         2.80980375e+05, -2.96207688e+05, -2.98542375e+05,\n'
 '        -4.58155438e+05,  3.91813562e+05,  6.15254500e+05,\n'
 '        -3.09902094e+05, -6.68881562e+04,  2.04920762e+04,\n'
 '         7.99844219e+04, -3.09728125e+05,  2.43678656e+05,\n'
 '        -7.22471312e+05,  3.59934875e+05,  2.23025094e+05,\n'
 '         4.00065500e+05,  1.19393578e+05, -1.41786375e+05,\n'
 '        -2.44486594e+05,  3.16661031e+05, -4.93359375e+03,\n'
 '         2.35021688e+05, -9.05843125e+04, -4.53608812e+05,\n'
 '         6.58489188e+05,  5.80000812e+05, -1.79605391e+05,\n'
 '        -1.99297688e+05, -2.10725453e+05, -8.21663125e+04,\n'
 '        -1.09318788e+06, -4.47707094e+05,  5.83120500e+05,\n'
 '        -2.93712688e+05, -3.15442031e+04,  3.97097688e+05,\n'
 '         3.83244062e+05,  1.14642594e+05, -3.43549750e+05,\n'
 '         4.41670688e+05, -5.82391875e+05, -5.07396875e+05,\n'
 '         9.25665156e+04, -5.23371375e+05,  5.60198312e+05,\n'
 '        -2.53932062e+05, -6.98332812e+03, -1.00178680e+05,\n'
 '         6.47759375e+03,  3.11517344e+05,  2.07303656e+05,\n'
 '         2.20169547e+05,  1.63623062e+05,  9.11940000e+05,\n'
 '         8.87853750e+04,  5.61362438e+05, -3.22213938e+05,\n'
 '        -1.74724219e+05, -1.44232531e+05,  1.83064125e+05,\n'
 '        -2.05651438e+05,  2.26698438e+03, -6.02545875e+05,\n'
 '         2.18697672e+05,  2.05052156e+05,  1.63191750e+05,\n'
 '        -5.16872938e+05, -3.73647812e+05,  4.44385438e+05,\n'
 '         5.39789062e+05,  2.13980766e+05,  2.70537062e+05,\n'
 '         4.62398750e+04,  4.08699805e+04,  2.13793500e+05,\n'
 '         4.18182375e+05, -3.28829375e+05, -4.21368438e+04,\n'
 '         1.76115281e+05,  2.17126219e+05,  5.12427500e+05,\n'
 '        -4.38607906e+05, -4.12174570e+04,  1.50720000e+05,\n'
 '        -1.46931766e+05, -3.53265312e+05, -2.76182375e+05,\n'
 '        -1.80019844e+05,  2.35227016e+05, -4.17152906e+05,\n'
 '        -4.74617312e+05,  2.91673000e+05, -8.05215688e+05,\n'
 '        -1.81471156e+05,  2.84569219e+04,  1.65242125e+05,\n'
 '         2.60728016e+05,  2.23481469e+05, -7.82905000e+05,\n'
 '        -2.53711297e+05,  3.47711062e+05,  3.29405062e+05,\n'
 '        -7.00547188e+05, -1.02319250e+05, -6.15616250e+04,\n'
 '         1.98165312e+05, -4.93881156e+05, -4.06319562e+05,\n'
 '         7.07096438e+05, -4.39626781e+05,  2.68909375e+04,\n'
 '         3.40110250e+05,  5.48493000e+05,  7.04647109e+04,\n'
 '         1.23032906e+05,  1.91762219e+05,  1.53563031e+05,\n'
 '         4.33418219e+05, -7.25737812e+05,  1.30930344e+05,\n'
 '        -4.69823562e+05,  2.38047562e+05, -1.70997406e+05,\n'
 '         2.28068078e+05,  1.40718219e+05,  3.03356875e+05,\n'
 '         1.62748672e+05,  4.76875781e+03,  3.54679625e+05,\n'
 '         3.81207031e+05,  4.90477812e+05, -3.98625969e+05,\n'
 '        -5.87233281e+04, -1.50322281e+05,  1.11925219e+05,\n'
 '         1.19391531e+05, -3.12812281e+05,  1.95423438e+05,\n'
 '         4.88926719e+04,  5.54874312e+05, -1.89487531e+05,\n'
 '         1.53174125e+05,  4.12134875e+05, -2.14984547e+05,\n'
 '        -9.57317656e+04,  5.27883242e+04, -4.02532531e+05,\n'
 '         9.67942109e+04,  2.05752625e+05,  5.67205438e+05,\n'
 '        -4.87454938e+05,  6.62173250e+05, -9.09678281e+04,\n'
 '         6.10447969e+04,  1.54144578e+05, -2.02542406e+05,\n'
 '        -3.69766875e+04, -1.59722312e+05, -1.49184234e+05,\n'
 '        -7.18466719e+04,  2.62372688e+05, -2.69638188e+05,\n'
 '         1.99240562e+05, -1.50500750e+05, -7.72290250e+05,\n'
 '         4.77475750e+05,  2.11863938e+05, -6.07282250e+05,\n'
 '         2.34391125e+05,  4.78155062e+05,  1.09494383e+05,\n'
 '        -7.88599062e+04,  2.49977484e+05, -2.22752078e+05,\n'
 '         5.42814688e+05, -2.58514844e+05, -1.80045516e+05,\n'
 '         2.34052281e+05,  1.72593406e+05, -4.73842438e+05,\n'
 '         2.20000906e+05, -2.06795047e+05, -6.41134812e+05,\n'
 '        -3.84609844e+05]])')
'test_inceptionnet | batch_shape is: [1]'
'test_inceptionnet | logits.shape is: ivy.Shape(1, 1000)'
'||'
'test_inceptionnet | device is: cpu'
'test_inceptionnet | fw is: numpy'
'test_inceptionnet | load_weights is: True'
'InceptionV3 | build | layer 1/22 built'
'InceptionV3 | build | layer 2/22 built'
'layer 3/22 built'
'InceptionV3 | build | layer 4/22 built'
'InceptionV3 | build | layer 5/22 built'
'InceptionV3 | build | layer 6/22 built'
'InceptionV3 | build | layer 7/22 built'
'InceptionV3 | build | layer 8/22 built'
'InceptionV3 | build | layer 9/22 built'
'InceptionV3 | build | layer 10/22 built'
'InceptionV3 | build | layer 11/22 built'
'InceptionV3 | build | layer 12/22 built'
'InceptionV3 | build | layer 13/22 built'
'InceptionV3 | build | layer 14/22 built'
'InceptionV3 | build | layer 15/22 built'
'InceptionV3 | build | layer 17/22 built'
'InceptionV3 | build | layer 18/22 built'
'InceptionV3 | build | layer 19/22 built'
'InceptionV3 | build | layer 20/22 built'
'InceptionV3 | build | layer 21/22 built'
'InceptionV3 | build | layer 22/22 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/4 built'
'layer 2/4 built'
'layer 3/4 built'
'layer 4/4 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/6 built'
'layer 2/6 built'
'layer 3/6 built'
'layer 4/6 built'
'layer 5/6 built'
'layer 6/6 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'inceptionNet_v3 | building InceptionV3 model | done 1/3'
'inceptionNet_v3 | clearning pretrained weights | done 2/3'
'inceptionNet_v3 | loading pretrained weights | done 3/3'
'InceptionV3 | forward | input data_format is:NHWC | done 1/27'
'InceptionV3 | forward | data_format is going to be used is:NHWC | done 1/27'
'InceptionV3 | forward | input shape is:ivy.Shape(1, 224, 224, 3) | done 1/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 224, 224, 3) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 111, 111, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 111, 111, 32) | done 2/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 111, 111, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 32) | done 3/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 109, 109, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 64) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 64) | done 4/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 54, 54, 64) | done 5/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 54, 54, 80) | done 3/3'
'InceptionV3 | forward | is:ivy.Shape(1, 54, 54, 80) | done 6/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 80) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 52, 52, 192) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 52, 52, 192) | done 7/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 192) | done 8/27'
'input shape is:ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 32) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 32)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 25, 25, 256) | done 9/27'
'input shape is:ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 10/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 11/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 384) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 96) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 96)'
'one 20/20, output shape is:ivy.Shape(1, 12, 12, 288)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 12/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 12, 12, 768) | done 13/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 14/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 15/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 16/27'
'v3 16/27, output shape is:ivy.Shape(1, 12, 12, 768)'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 5, 5, 192)'
'one 7/20, output shape is:ivy.Shape(1, 5, 5, 768)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 1280) | done 17/27'
'input shape is:ivy.Shape(1, 5, 5, 1280)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 18/27'
'input shape is:ivy.Shape(1, 5, 5, 2048)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 19/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 20/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 5, 5) | done 21/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 1, 1) | done 22/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 27/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 24/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 25/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048) | done 26/27'
'InceptionV3 | forward | fc | done 27/27'
('test_inceptionnet | logits is: ivy.array([[-2.64326721e-01, -3.42025459e-01, '
 '-1.79863095e-01,\n'
 '         2.36103702e+00, -1.14310050e+00, -8.16097110e-03,\n'
 '         1.85935140e+00, -1.31221890e+00, -1.68198288e+00,\n'
 '        -2.65610409e+00, -1.21506918e+00, -2.71770501e+00,\n'
 '        -1.53767335e+00,  1.72013238e-01, -5.32527745e-01,\n'
 '        -2.19959354e+00, -3.10654259e+00, -1.13468516e+00,\n'
 '        -2.00569296e+00, -7.06302524e-02,  8.51521134e-01,\n'
 '        -2.28035283e+00, -2.65002132e+00, -1.46622443e+00,\n'
 '         4.00321722e-01, -2.15246677e+00, -2.51206613e+00,\n'
 '        -2.82527256e+00, -1.24670088e+00, -2.57974005e+00,\n'
 '         4.43599462e-01,  2.50456572e-01,  1.84245443e+00,\n'
 '         1.59771073e+00,  4.06998110e+00, -7.63427257e-01,\n'
 '         2.22906280e+00, -3.64759147e-01, -1.45430481e+00,\n'
 '         2.05922437e+00, -1.08728969e+00, -8.48571658e-01,\n'
 '         4.25308138e-01,  2.06500006e+00, -2.52916837e+00,\n'
 '        -2.14506835e-01, -2.15353727e+00,  9.95481908e-01,\n'
 '        -2.84641206e-01, -1.46561634e+00,  3.57854873e-01,\n'
 '         1.09068680e+00,  1.62527800e-01, -9.07519221e-01,\n'
 '         1.56647563e-01,  1.38595426e+00, -1.88723493e+00,\n'
 '        -2.35843563e+00, -1.44211546e-01,  3.04746449e-01,\n'
 '        -1.00921428e+00,  7.66599834e-01, -1.69019914e+00,\n'
 '        -1.67042196e-01,  2.73009539e-02,  1.38338065e+00,\n'
 '         2.41518116e+00,  1.74319065e+00,  2.09683943e+00,\n'
 '         1.11324049e-01, -1.64138365e+00, -5.45758605e-01,\n'
 '        -1.69847930e+00, -8.03575396e-01, -9.47551370e-01,\n'
 '        -3.91697258e-01, -1.70251086e-01, -1.12012669e-01,\n'
 '        -7.17182875e-01, -1.06878197e+00, -2.14540958e+00,\n'
 '        -7.49126792e-01, -3.77647185e+00, -3.05829704e-01,\n'
 '         6.07457638e-01, -1.63133597e+00, -3.38335895e+00,\n'
 '         7.50206709e-01,  1.16690636e+00, -1.99366510e-01,\n'
 '         7.22266197e-01,  5.77588975e-02, -2.01905584e+00,\n'
 '        -1.45472479e+00, -7.01668620e-01, -3.83902478e+00,\n'
 '        -2.15051770e+00, -1.36578321e+00, -2.31332994e+00,\n'
 '         1.41844213e+00,  1.60875559e+00, -3.99798155e-01,\n'
 '        -2.20621228e-02, -1.31742239e+00,  5.01077473e-01,\n'
 '        -9.82416987e-01, -7.08425522e-01,  1.32325816e+00,\n'
 '         3.76952291e+00,  6.85759306e-01, -2.23325825e+00,\n'
 '        -1.66173017e+00,  7.68757343e-01,  1.74207389e+00,\n'
 '        -4.66994762e-01, -9.17808354e-01, -2.26777220e+00,\n'
 '         1.13323951e+00, -1.72127259e+00,  1.48895490e+00,\n'
 '        -1.63364768e+00, -1.16547060e+00,  2.17847675e-01,\n'
 '         1.35573292e+00, -2.06512141e+00, -4.50928152e-01,\n'
 '        -1.51044571e+00,  6.73580408e-01, -1.17041302e+00,\n'
 '        -7.31774926e-01,  5.19599020e-01,  3.73302072e-01,\n'
 '         2.12171793e-01, -2.77436852e+00, -5.38117349e-01,\n'
 '        -1.29614934e-01,  1.02638805e+00,  7.69139528e-01,\n'
 '        -1.14358902e+00, -1.41234481e+00, -4.32222217e-01,\n'
 '         1.61541790e-01, -2.10633802e+00, -9.37894404e-01,\n'
 '         2.31003976e+00, -2.86078119e+00, -1.09585667e+00,\n'
 '         5.12670398e-01,  7.95526430e-02, -7.55942583e-01,\n'
 '        -1.12810707e+00,  1.77074397e+00,  3.65012813e+00,\n'
 '        -1.53433836e+00,  8.73185098e-01, -1.75986302e+00,\n'
 '         4.52911407e-02,  4.98341465e+00, -1.29182613e+00,\n'
 '        -1.04435885e+00, -5.50181210e-01, -2.67511416e+00,\n'
 '        -2.32269144e+00,  3.43794376e-01, -3.17795217e-01,\n'
 '        -5.93692124e-01, -2.02792335e+00, -7.26948023e-01,\n'
 '        -2.93520004e-01,  1.81522536e+00,  1.97129559e+00,\n'
 '        -3.77689004e-02, -5.16636133e-01,  8.61335099e-01,\n'
 '         1.38555527e+00, -4.48240340e-01, -1.41090468e-01,\n'
 '         8.40209544e-01,  1.01562667e+00,  9.32223618e-01,\n'
 '        -1.67091751e+00,  6.65962100e-01, -3.09624344e-01,\n'
 '        -1.40233889e-01, -7.34858811e-01,  2.64301300e-01,\n'
 '         5.67750215e+00, -1.39453268e+00, -7.55736947e-01,\n'
 '        -1.56829429e+00, -1.23724926e+00,  9.96299684e-02,\n'
 '        -4.04177964e-01, -1.74825120e+00, -9.55160737e-01,\n'
 '         3.75814021e-01, -3.01904345e+00,  1.03424692e+00,\n'
 '        -2.36532271e-01, -2.02665836e-01, -1.49070406e+00,\n'
 '        -3.18756032e+00, -1.98161602e+00,  4.62022495e+00,\n'
 '        -2.92958140e+00, -2.56663942e+00,  2.89908946e-01,\n'
 '         2.32079601e+00, -1.67266107e+00, -1.08430356e-01,\n'
 '        -5.73724449e-01, -2.22624874e+00,  6.54626250e-01,\n'
 '         1.35142684e+00,  1.15481389e+00,  7.26515204e-02,\n'
 '         2.46675700e-01,  2.51107752e-01,  5.36208093e-01,\n'
 '        -2.99943614e+00, -9.17723551e-02, -9.83444154e-02,\n'
 '         4.23758030e+00,  2.29384470e+00,  5.72274590e+00,\n'
 '        -4.93070900e-01,  2.07824874e+00, -8.72973561e-01,\n'
 '         1.07004464e+00,  3.53699303e+00,  2.09027243e+00,\n'
 '         4.72699308e+00,  3.09358072e+00,  1.24410725e+00,\n'
 '        -4.35338259e-01,  6.18408024e-01,  9.34120178e-01,\n'
 '        -1.54376328e+00,  2.75150090e-01,  5.16688705e-01,\n'
 '         1.81178224e+00,  8.77681494e-01, -2.97297239e-01,\n'
 '        -1.30888486e+00, -1.59864187e-01,  5.12907207e-02,\n'
 '        -7.12990046e-01,  2.58245015e+00,  8.27426720e+00,\n'
 '         6.57545471e+00,  5.70817375e+00,  1.62486148e+00,\n'
 '        -1.27402508e+00, -1.80996990e+00, -4.15119588e-01,\n'
 '         5.39833963e-01,  2.46217084e+00,  8.65054703e+00,\n'
 '         2.04953709e+01,  6.43281031e+00,  5.33077622e+00,\n'
 '         5.99020672e+00,  1.29379427e+00,  1.26789659e-02,\n'
 '        -7.71090567e-01, -6.84981763e-01, -3.80412912e+00,\n'
 '         2.07933068e+00, -3.19984615e-01,  3.87054181e+00,\n'
 '         1.40579195e+01, -1.10717523e+00, -8.37378383e-01,\n'
 '         1.53550696e+00, -4.63778794e-01, -3.62115908e+00,\n'
 '        -4.28381354e-01,  8.96094590e-02, -8.16601455e-01,\n'
 '         1.32971296e+01,  8.46921653e-02, -3.52932781e-01,\n'
 '        -1.47032571e+00,  3.49530721e+00, -1.65940130e+00,\n'
 '        -8.21770191e-01, -1.17978454e+00,  8.11148405e-01,\n'
 '         6.00892305e-03,  3.05631304e+00, -5.35121202e-01,\n'
 '         1.16807628e+00,  8.39654982e-01, -8.98498118e-01,\n'
 '        -4.24005061e-01, -1.54369008e+00,  4.26041365e+00,\n'
 '        -1.38634586e+00, -1.83708596e+00,  1.38611108e-01,\n'
 '        -1.97506502e-01, -1.81914616e+00,  1.06913340e+00,\n'
 '        -1.07034123e+00, -4.85497564e-01,  1.20532066e-01,\n'
 '        -2.16433615e-01,  2.54775953e+00,  2.17505992e-02,\n'
 '         4.37195540e-01, -6.37478173e-01, -1.99967754e+00,\n'
 '        -5.89972556e-01, -1.37841988e+00, -1.23843729e+00,\n'
 '        -1.93715081e-01, -1.91374528e+00, -1.93524241e+00,\n'
 '        -2.64892435e+00, -1.56932473e+00, -4.28465188e-01,\n'
 '        -1.35545862e+00, -1.26050937e+00,  2.88605273e-01,\n'
 '        -3.86501575e+00, -1.79064900e-01,  7.01150119e-01,\n'
 '         2.10486269e+00,  2.67074776e+00, -3.12388036e-02,\n'
 '        -7.80201793e-01,  1.53466296e+00,  2.82000971e+00,\n'
 '        -3.87853235e-01,  2.00532293e+00, -1.76622641e+00,\n'
 '        -1.21832180e+00, -4.25315499e-02,  1.26843739e+00,\n'
 '        -1.20590067e+00, -6.28224015e-01, -1.03808320e+00,\n'
 '        -2.49445033e+00, -1.12163651e+00, -1.29338765e+00,\n'
 '        -1.21247351e-01, -7.86144137e-01, -7.48064756e-01,\n'
 '        -3.03314805e-01, -1.37586832e+00, -1.23760748e+00,\n'
 '        -1.24534893e+00, -2.67618465e+00, -7.14704871e-01,\n'
 '        -5.41813612e-01,  2.36995769e+00,  2.56913960e-01,\n'
 '        -1.57009646e-01,  1.41615248e+00,  1.25470698e-01,\n'
 '        -8.69026303e-01,  4.23240423e-01, -4.56018060e-01,\n'
 '         1.29148138e+00, -1.26337945e+00, -8.54702294e-01,\n'
 '        -2.08015895e+00,  5.54840088e-01,  1.12595156e-01,\n'
 '        -1.47335136e+00, -7.61787891e-01, -5.44082165e-01,\n'
 '         6.49166882e-01,  2.43822634e-01, -1.79718578e+00,\n'
 '        -2.06590605e+00, -2.01621509e+00, -9.13864732e-01,\n'
 '        -3.21446002e-01, -1.44778514e+00, -1.22963571e+00,\n'
 '        -9.91786718e-01, -1.15876520e+00, -8.07945207e-02,\n'
 '        -1.46688414e+00,  1.06127357e+00, -1.68771446e+00,\n'
 '         2.58764505e-01,  1.24700046e+00, -9.60679233e-01,\n'
 '         1.23313594e+00, -9.00458217e-01,  6.80704117e-01,\n'
 '         2.09759188e+00, -7.64009953e-01, -4.34344679e-01,\n'
 '         3.24114132e+00,  9.56211567e-01,  1.16454875e+00,\n'
 '         1.01385677e+00,  8.13847721e-01,  1.95319265e-01,\n'
 '         3.95447493e-01,  9.83655810e-01,  1.20183086e+00,\n'
 '        -7.04820037e-01, -7.52335489e-02,  1.27236867e+00,\n'
 '         2.36174679e+00,  1.22732274e-01, -1.87081122e+00,\n'
 '        -1.80638385e+00, -4.30019283e+00, -1.52079105e+00,\n'
 '        -7.27530539e-01,  3.66954207e-02,  2.68114418e-01,\n'
 '         4.41913307e-01, -4.35010731e-01, -2.19257379e+00,\n'
 '        -1.18907857e+00, -3.21891093e+00, -1.58713150e+00,\n'
 '        -7.36179948e-01, -6.23349786e-01,  1.19710398e+00,\n'
 '         1.75492421e-01, -9.27679658e-01,  3.51669729e-01,\n'
 '        -8.69130313e-01,  2.59291381e-01, -8.49181786e-03,\n'
 '         7.41697550e-01,  3.09143245e-01, -2.49074385e-01,\n'
 '         1.28663302e+00, -1.18073678e+00, -5.82155764e-01,\n'
 '        -6.54389083e-01,  8.10095429e-01,  1.13869977e+00,\n'
 '         8.60155821e-01,  3.40919852e-01, -1.51265061e+00,\n'
 '         5.12445688e-01,  1.76095784e-01, -1.33177090e+00,\n'
 '        -1.27453780e+00, -1.31057954e+00, -3.42827320e-01,\n'
 '        -2.99647749e-02, -8.64855349e-01, -9.80447829e-02,\n'
 '         2.17582971e-01,  1.28114134e-01, -9.38191414e-01,\n'
 '         9.75972235e-01, -1.32372701e+00, -2.32194042e+00,\n'
 '        -1.62544143e+00,  1.21402383e-01, -1.92456996e+00,\n'
 '         1.22716320e+00,  1.55664778e+00,  2.29856634e+00,\n'
 '        -9.13820028e-01, -1.33582997e+00, -9.12389517e-01,\n'
 '        -9.13494676e-02,  1.85902029e-01,  1.53904140e+00,\n'
 '         7.93367922e-02,  5.96454918e-01, -1.29867053e+00,\n'
 '        -7.42603779e-01, -1.18613720e+00,  1.74633765e+00,\n'
 '         4.10033673e-01,  2.07767749e+00,  2.08148241e-01,\n'
 '         2.44903565e-01,  5.48342407e-01, -3.25038409e+00,\n'
 '         2.11618280e+00,  1.61177695e+00, -1.23859859e+00,\n'
 '        -2.16894460e+00, -3.98842394e-02, -9.41704065e-02,\n'
 '         8.29867482e-01,  1.87144411e+00,  1.16314101e+00,\n'
 '        -7.63141751e-01,  4.87405926e-01, -2.45490170e+00,\n'
 '         1.10475206e+00,  3.10380697e-01, -1.89013755e+00,\n'
 '        -8.22503567e-02,  1.04365373e+00, -1.22844935e+00,\n'
 '         1.59840310e+00, -3.55396569e-02, -9.15542841e-01,\n'
 '        -9.75410819e-01,  1.07753313e+00,  2.87241489e-01,\n'
 '         3.48103762e-01,  4.97439682e-01, -8.46735477e-01,\n'
 '        -1.05347264e+00,  6.34444952e-01,  1.36826062e+00,\n'
 '        -6.22931957e-01, -6.90038383e-01, -1.26707101e+00,\n'
 '        -1.66967094e+00,  4.59469110e-02, -2.22451878e+00,\n'
 '        -2.46643329e+00, -1.07543409e+00, -9.57742214e-01,\n'
 '        -4.11111504e-01, -2.82956743e+00,  2.62974322e-01,\n'
 '        -5.04256487e-01, -9.44289923e-01, -2.79227805e+00,\n'
 '         1.54313520e-01, -2.54906917e+00,  1.74426043e+00,\n'
 '         2.31095934e+00,  6.68347537e-01, -4.80549395e-01,\n'
 '         2.35028774e-01, -1.11872363e+00, -3.29048085e+00,\n'
 '         4.41894150e+00, -3.81951034e-01, -8.13706696e-01,\n'
 '         9.16833460e-01, -5.98393142e-01, -9.74991441e-01,\n'
 '         8.47026527e-01,  4.82227892e-01, -7.01617539e-01,\n'
 '         4.09804821e-01, -9.92281377e-01, -2.19582939e+00,\n'
 '         3.22283953e-01, -1.33678153e-01,  1.93144038e-01,\n'
 '        -6.75761342e-01, -9.78707433e-01,  2.16996408e+00,\n'
 '        -1.06991506e+00,  5.82403004e-01,  8.04836452e-01,\n'
 '        -1.00284255e+00,  1.70026302e+00, -2.00586706e-01,\n'
 '        -1.66881609e+00,  2.95025587e+00,  1.88981354e+00,\n'
 '         2.31873155e-01, -3.40802431e+00,  1.40614700e+00,\n'
 '         4.25780296e-01,  6.92631602e-01, -1.71308565e+00,\n'
 '         1.54806897e-01, -8.63404989e-01,  1.51455712e+00,\n'
 '         1.38938045e+00, -3.43463093e-01, -9.80309784e-01,\n'
 '         8.48167658e-01,  2.58289695e-01,  1.76353121e+00,\n'
 '        -1.88679159e+00,  3.81246775e-01,  3.53524715e-01,\n'
 '         1.37551224e+00, -1.22281015e+00,  8.79475653e-01,\n'
 '         1.23946893e+00, -2.64433408e+00,  6.62819982e-01,\n'
 '         1.34511185e+00, -1.08223546e+00,  1.28693795e+00,\n'
 '        -3.18214178e-01,  9.53846812e-01, -1.13680512e-01,\n'
 '         1.76412284e-01, -1.20026147e+00,  1.20609331e+00,\n'
 '        -3.49323988e-01, -2.25834107e+00,  2.64698118e-01,\n'
 '        -1.26646614e+00, -1.96296561e+00, -9.71414864e-01,\n'
 '        -8.48813117e-01,  2.23023915e+00, -6.83189511e-01,\n'
 '         3.00705695e+00, -2.92779952e-02,  1.77293718e-01,\n'
 '         8.82979929e-01,  3.54868919e-01,  8.80980074e-01,\n'
 '        -1.04140425e+00,  1.90043473e+00,  2.18990254e+00,\n'
 '        -7.06823468e-01,  2.46273950e-01,  3.67146224e-01,\n'
 '        -1.00062156e+00, -3.53084862e-01, -2.61371708e+00,\n'
 '        -5.46098769e-01,  1.07350707e+00, -8.96655321e-01,\n'
 '         2.21974802e+00,  1.01133987e-01, -3.52166295e-01,\n'
 '        -1.24321330e+00,  3.09470653e+00,  1.09786391e-02,\n'
 '        -1.80464935e+00, -9.14619982e-01, -2.30676580e+00,\n'
 '        -1.27118635e+00, -2.71494031e+00, -1.30626559e+00,\n'
 '        -1.01741075e+00, -8.29646707e-01,  1.35591611e-01,\n'
 '         1.48020375e+00, -6.09404087e-01, -3.48462462e-01,\n'
 '        -5.67022264e-02,  9.18013752e-02,  1.59474492e+00,\n'
 '         8.90193582e-01,  1.30164969e+00, -1.43777743e-01,\n'
 '         1.45132542e+00,  8.99264574e-01, -1.62665045e+00,\n'
 '         1.26922703e+00,  1.00381589e+00, -2.37409878e+00,\n'
 '        -4.82346565e-01, -2.22974801e+00,  2.05466127e+00,\n'
 '        -1.39645219e+00, -1.60285199e+00, -7.14456797e-01,\n'
 '        -2.87293553e+00,  9.06600416e-01,  1.68582535e+00,\n'
 '        -1.22008932e+00, -9.72787499e-01,  7.12866113e-02,\n'
 '         1.78251505e-01,  1.26589191e+00, -1.30615532e+00,\n'
 '         6.81960404e-01,  1.47004581e+00, -9.03247774e-01,\n'
 '         9.78488564e-01,  8.83674979e-01,  7.98983216e-01,\n'
 '         1.18973803e+00,  1.46546745e+00,  1.64027798e+00,\n'
 '         1.27079296e+00, -2.91972905e-01, -2.04604936e+00,\n'
 '        -3.50673962e+00,  3.02436662e+00,  2.48546660e-01,\n'
 '        -1.28251404e-01,  7.88808942e-01, -2.66200662e+00,\n'
 '         1.54734147e+00,  5.69133461e-01, -2.16946185e-01,\n'
 '         9.41264987e-01, -2.31852770e+00,  8.32248509e-01,\n'
 '        -1.95859826e+00,  2.71771610e-01,  9.41354632e-01,\n'
 '        -9.54270720e-01,  1.04336083e-01,  1.79378796e+00,\n'
 '         6.66740179e-01, -3.14378071e+00, -3.16524893e-01,\n'
 '        -2.51419759e+00,  1.07948744e+00, -2.99442124e+00,\n'
 '        -4.64424372e+00,  1.01901269e+00,  2.30652154e-01,\n'
 '        -6.67650104e-01, -1.85776278e-01,  2.12262821e+00,\n'
 '         1.44048428e+00, -1.48406351e+00, -1.25249886e+00,\n'
 '         6.12063527e-01,  8.59836221e-01, -1.53108656e+00,\n'
 '        -1.48781943e+00, -3.25590074e-01,  4.33137924e-01,\n'
 '         5.52336693e-01, -4.86996919e-01,  2.51854110e+00,\n'
 '         3.27977747e-01,  2.07183433e+00, -2.48197272e-01,\n'
 '        -1.10799491e-01,  4.47649062e-01, -1.44076812e+00,\n'
 '         7.26806879e-01, -1.40305436e+00,  3.21091700e+00,\n'
 '        -7.06772804e-01,  1.48631275e-01, -7.61808634e-01,\n'
 '        -1.87908202e-01, -2.30834150e+00, -6.36318564e-01,\n'
 '         1.41293967e+00, -1.00797033e+00,  2.79552722e+00,\n'
 '        -1.15997112e+00, -1.72279728e+00,  1.44626096e-01,\n'
 '         1.04357943e-01, -2.17373157e+00,  5.35697031e+00,\n'
 '        -5.40817380e-01, -2.39425588e+00,  1.60404754e+00,\n'
 '        -1.48396719e+00, -9.25065756e-01,  1.23016405e+00,\n'
 '        -1.21169710e+00, -2.10729766e+00, -1.37930667e+00,\n'
 '        -1.93242264e+00,  7.14534879e-01,  1.45738506e+00,\n'
 '        -2.58506536e-01, -1.68790984e+00,  3.15394998e-02,\n'
 '         8.98948610e-02,  1.45613658e+00, -2.34094787e+00,\n'
 '         1.43260849e+00, -8.80024612e-01,  2.32243705e+00,\n'
 '         2.25537419e-02,  2.59605360e+00,  1.13372564e-01,\n'
 '        -1.12866163e+00, -9.96405959e-01, -1.65928328e+00,\n'
 '        -1.26690197e+00,  1.82968116e+00,  2.38892937e+00,\n'
 '        -1.15972646e-01, -5.41401982e-01, -1.08908856e+00,\n'
 '         1.87759268e+00,  7.39917576e-01,  1.44205129e+00,\n'
 '        -7.05270290e-01, -1.07108975e+00, -1.97915173e+00,\n'
 '        -1.09927010e+00, -5.83916247e-01, -3.47348273e-01,\n'
 '         8.97671342e-01, -2.77446747e-01,  1.29976380e+00,\n'
 '        -5.24856329e-01, -2.35861689e-01,  1.27261484e+00,\n'
 '        -5.51892042e-01, -1.05610788e+00, -2.25496221e+00,\n'
 '        -5.76873481e-01,  4.02152598e-01,  4.29246247e-01,\n'
 '        -4.71644819e-01,  1.96118832e-01,  1.29178608e+00,\n'
 '        -1.39134049e+00, -1.01344097e+00, -3.50274229e+00,\n'
 '        -9.61578250e-01, -1.08565241e-02,  1.63852882e+00,\n'
 '         2.63370395e+00, -1.46387041e+00,  8.07588816e-01,\n'
 '         2.54162788e-01,  2.04497004e+00,  5.17806232e-01,\n'
 '        -2.44213730e-01, -3.15783024e-01, -4.23021704e-01,\n'
 '         8.69875908e-01, -2.77628839e-01, -4.63710457e-01,\n'
 '         8.48019779e-01,  1.14644691e-01,  1.41072190e+00,\n'
 '         7.71322787e-01,  1.70306122e+00,  9.45174575e-01,\n'
 '         1.68192005e+00, -3.61350059e-01,  5.18259883e-01,\n'
 '        -3.37709412e-02,  1.99532306e+00,  8.54866147e-01,\n'
 '        -3.85444760e-01, -2.16152501e+00,  1.09349024e+00,\n'
 '        -1.09946656e+00, -5.50575554e-02, -7.23664880e-01,\n'
 '        -1.17827463e+00,  1.78997874e-01, -8.35038066e-01,\n'
 '         1.70745432e+00,  3.36164761e+00, -1.34262037e+00,\n'
 '        -1.43533492e+00, -2.04532051e+00, -6.18196785e-01,\n'
 '        -5.25572777e-01,  1.88323224e+00, -6.46497846e-01,\n'
 '         2.24229574e+00,  1.56256902e+00,  3.26424718e-01,\n'
 '         1.53173953e-02, -2.00621915e+00,  1.32650995e+00,\n'
 '         1.08461451e+00, -1.39625704e+00, -1.75360963e-01,\n'
 '         1.20415485e+00,  9.15963411e-01,  8.88378560e-01,\n'
 '        -2.45235825e+00, -3.98277044e-02, -5.99627852e-01,\n'
 '         1.37186027e+00, -1.70842779e+00, -6.12587392e-01,\n'
 '         6.31938756e-01,  1.89664096e-01,  9.47728038e-01,\n'
 '        -1.13888705e+00,  9.68667209e-01, -1.91934443e+00,\n'
 '        -1.21824598e+00, -3.49772716e+00,  2.82824159e+00,\n'
 '         5.00091195e-01, -1.84067905e+00, -1.17184854e+00,\n'
 '        -6.52586877e-01, -2.44950008e+00,  6.28257871e-01,\n'
 '        -5.46488583e-01,  1.16649795e+00, -1.04550839e-01,\n'
 '        -5.73696971e-01, -2.07785201e+00,  3.42462391e-01,\n'
 '         6.37170374e-01, -1.67257130e+00,  1.39575696e+00,\n'
 '        -4.52858478e-01, -7.74685621e-01,  3.74139786e+00,\n'
 '        -2.03932309e+00,  5.42980313e-01, -1.05076766e+00,\n'
 '         6.31949544e-01, -2.41467690e+00,  2.66087353e-01,\n'
 '        -3.65360832e+00, -7.98707783e-01, -2.46808386e+00,\n'
 '        -6.30528212e-01,  2.47367215e+00,  1.08673930e+00,\n'
 '        -3.45318377e-01,  9.86162305e-01, -3.89273643e-01,\n'
 '        -5.03425956e-01,  2.26979470e+00,  1.52808714e+00,\n'
 '         1.70036316e+00, -6.91938162e-01, -1.92821562e-01,\n'
 '        -4.60037261e-01, -7.56376028e-01, -1.08348942e+00,\n'
 '         1.62592387e+00,  2.28397474e-01,  1.87213266e+00,\n'
 '        -5.73131323e-01,  3.22763085e-01, -1.03787792e+00,\n'
 '        -8.44769239e-01,  7.39325762e-01, -1.08366561e+00,\n'
 '         1.06967974e+00, -1.59181964e+00, -1.27426517e+00,\n'
 '        -1.67182875e+00, -2.16467619e+00, -7.47456372e-01,\n'
 '        -1.42772543e+00,  2.12367153e+00,  1.18612683e+00,\n'
 '         1.39377475e+00, -1.45329034e+00,  1.67088723e+00,\n'
 '         2.65883708e+00,  7.66516626e-01,  8.30757201e-01,\n'
 '         8.08768719e-02, -5.05826831e-01, -1.61818934e+00,\n'
 '        -2.74682134e-01,  7.01409340e-01,  1.81221080e+00,\n'
 '         5.21645665e-01,  1.33762825e+00,  9.49947596e-01,\n'
 '         4.46904689e-01,  1.08322871e+00,  2.58155227e+00,\n'
 '         1.06930959e+00, -6.08155727e-01,  7.70975709e-01,\n'
 '         9.73643959e-02,  2.34657288e+00, -5.12925088e-02,\n'
 '         7.02385068e-01, -6.97738469e-01, -3.25161815e-01,\n'
 '         5.92165887e-01,  4.28812325e-01, -1.03096366e+00,\n'
 '        -2.76079148e-01, -3.98766637e-01,  9.39642787e-01,\n'
 '         2.69044542e+00,  1.51060224e+00, -3.27557087e-01,\n'
 '        -1.13100958e+00, -2.58116245e-01,  1.54536474e+00,\n'
 '         1.21629476e+00, -1.88440382e+00,  3.61688435e-01,\n'
 '        -1.85203224e-01, -2.26777345e-02,  3.15029812e+00,\n'
 '        -1.68014503e+00, -2.10589886e-01, -1.75535631e+00,\n'
 '        -1.36477792e+00, -2.30780542e-01, -5.49616575e-01,\n'
 '        -1.78641975e-02,  1.88846767e+00, -2.48581195e+00,\n'
 '        -3.36399198e+00, -2.51221800e+00,  2.89831728e-01,\n'
 '         5.71432948e-01, -2.12327361e-01, -1.84296155e+00,\n'
 '         9.94007766e-01]])')
'test_inceptionnet | batch_shape is: [1]'
'test_inceptionnet | logits.shape is: ivy.Shape(1, 1000)'
'||'
'test_inceptionnet | indices_test | true_indices is: [258 270 279]'
'test_inceptionnet | indices_test | calc_indices is: [258 270 279]'
'test_inceptionnet | device is: cpu'
'test_inceptionnet | fw is: numpy'
'test_inceptionnet | load_weights is: False'
'InceptionV3 | build | layer 1/22 built'
'InceptionV3 | build | layer 2/22 built'
'layer 3/22 built'
'InceptionV3 | build | layer 4/22 built'
'InceptionV3 | build | layer 5/22 built'
'InceptionV3 | build | layer 6/22 built'
'InceptionV3 | build | layer 7/22 built'
'InceptionV3 | build | layer 8/22 built'
'InceptionV3 | build | layer 9/22 built'
'InceptionV3 | build | layer 10/22 built'
'InceptionV3 | build | layer 11/22 built'
'InceptionV3 | build | layer 12/22 built'
'InceptionV3 | build | layer 13/22 built'
'InceptionV3 | build | layer 14/22 built'
'InceptionV3 | build | layer 15/22 built'
'InceptionV3 | build | layer 17/22 built'
'InceptionV3 | build | layer 18/22 built'
'InceptionV3 | build | layer 19/22 built'
'InceptionV3 | build | layer 20/22 built'
'InceptionV3 | build | layer 21/22 built'
'InceptionV3 | build | layer 22/22 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/4 built'
'layer 2/4 built'
'layer 3/4 built'
'layer 4/4 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/6 built'
'layer 2/6 built'
'layer 3/6 built'
'layer 4/6 built'
'layer 5/6 built'
'layer 6/6 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'inceptionNet_v3 | building InceptionV3 model | done 1/3'
'InceptionV3 | forward | input data_format is:NCHW | done 1/27'
'InceptionV3 | forward | data_format is going to be used is:NCHW | done 1/27'
'InceptionV3 | forward | input shape is:ivy.Shape(1, 224, 224, 3) | done 1/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 224, 224, 3) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 111, 111, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 111, 111, 32) | done 2/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 111, 111, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 32) | done 3/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 109, 109, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 64) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 64) | done 4/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 54, 54, 64) | done 5/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 54, 54, 80) | done 3/3'
'InceptionV3 | forward | is:ivy.Shape(1, 54, 54, 80) | done 6/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 80) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 52, 52, 192) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 52, 52, 192) | done 7/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 192) | done 8/27'
'input shape is:ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 32) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 32)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 25, 25, 256) | done 9/27'
'input shape is:ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 10/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 11/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 384) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 96) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 96)'
'one 20/20, output shape is:ivy.Shape(1, 12, 12, 288)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 12/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 12, 12, 768) | done 13/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 14/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 15/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 16/27'
'v3 16/27, output shape is:ivy.Shape(1, 12, 12, 768)'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 5, 5, 192)'
'one 7/20, output shape is:ivy.Shape(1, 5, 5, 768)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 1280) | done 17/27'
'input shape is:ivy.Shape(1, 5, 5, 1280)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 18/27'
'input shape is:ivy.Shape(1, 5, 5, 2048)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 19/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 20/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 5, 5) | done 21/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 1, 1) | done 22/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 27/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 24/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 25/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048) | done 26/27'
'InceptionV3 | forward | fc | done 27/27'
('test_inceptionnet | logits is: ivy.array([[ 1.92566500e+05, '
 '-9.59112500e+03,  6.58094531e+04,\n'
 '         6.85306625e+05,  4.20229438e+05,  1.49085094e+05,\n'
 '        -4.32026438e+05, -1.63061062e+05, -9.98595000e+05,\n'
 '         4.00220469e+04,  6.40054250e+05,  1.42569469e+05,\n'
 '        -1.12464625e+05, -3.69912844e+05,  1.50706516e+05,\n'
 '         2.89341688e+05, -6.44783242e+04, -2.62089734e+05,\n'
 '         9.99531250e+02,  7.10430688e+05,  6.15178250e+05,\n'
 '         6.38803875e+05, -1.87367938e+05,  3.34870438e+05,\n'
 '        -7.86615938e+04, -1.96698406e+05,  1.45634969e+05,\n'
 '        -4.01691500e+05,  2.66987875e+05, -1.39350766e+05,\n'
 '        -1.11754031e+05,  1.86253875e+05,  3.08573219e+05,\n'
 '        -7.79986500e+05, -3.27536844e+05, -3.10235750e+05,\n'
 '         9.78704062e+04,  1.48310734e+05,  2.83778125e+04,\n'
 '        -6.69100562e+05, -1.88782422e+05,  1.43427688e+05,\n'
 '         9.67521250e+04,  2.66689031e+05,  2.93091625e+05,\n'
 '        -6.10509000e+05,  1.91312344e+04,  2.73363125e+05,\n'
 '        -3.58579688e+05, -9.10246406e+04,  1.45958719e+05,\n'
 '        -4.15010000e+05,  2.97104125e+05, -6.09350062e+05,\n'
 '         3.69151188e+05,  2.47301406e+05, -2.16347000e+05,\n'
 '        -8.58432375e+05, -1.08661406e+04,  2.01865594e+05,\n'
 '        -6.29002625e+05, -6.27123750e+05,  4.23598906e+05,\n'
 '         2.88850844e+05, -3.86415938e+04,  6.60180062e+05,\n'
 '         7.52730469e+03,  5.65666680e+04, -3.38522531e+05,\n'
 '        -3.30147750e+05,  4.84562969e+04, -9.47787656e+04,\n'
 '         6.87107000e+05,  1.50695016e+05, -2.44859734e+05,\n'
 '        -3.44629000e+05, -2.59392219e+05, -1.74048281e+05,\n'
 '        -1.96581250e+05, -7.05489688e+04,  1.66257828e+05,\n'
 '        -7.17047500e+04, -6.29252812e+04,  3.99344094e+05,\n'
 '        -2.39080469e+04, -4.05938125e+05, -1.21752898e+05,\n'
 '        -8.23951500e+05,  4.45739500e+05, -1.30433117e+05,\n'
 '        -3.79131781e+05,  4.08804844e+04,  2.79635625e+05,\n'
 '         5.01107031e+04,  4.92853438e+04,  7.21034688e+04,\n'
 '        -1.76936031e+05,  2.54181500e+05, -4.05120781e+04,\n'
 '         9.71238125e+04, -3.60378406e+05, -4.51203125e+04,\n'
 '        -1.39698188e+05, -2.40613328e+05,  2.31521375e+05,\n'
 '         9.29580938e+04, -1.14210338e+06, -2.25788188e+05,\n'
 '         7.46781250e+05, -3.35568906e+04, -2.43906938e+05,\n'
 '         7.46512375e+05,  1.99979750e+05,  2.25460391e+05,\n'
 '        -1.88416594e+05,  6.93168906e+04,  2.10330578e+05,\n'
 '        -5.43994812e+05,  1.33764125e+05,  3.34488719e+05,\n'
 '         1.42236219e+05, -2.62996344e+05,  5.19146656e+05,\n'
 '         1.31025117e+04,  8.96542031e+04,  1.48742234e+05,\n'
 '        -2.38354422e+05,  1.32058125e+05,  5.89702188e+04,\n'
 '         7.95149438e+05, -4.87597969e+04,  2.54150047e+05,\n'
 '        -9.09741250e+04,  2.25091859e+05, -3.14123781e+05,\n'
 '        -1.95722281e+05, -4.05558125e+05,  4.09262031e+04,\n'
 '        -1.23766562e+04,  1.21246406e+04,  4.07326562e+05,\n'
 '         3.92566844e+05, -2.61963312e+05,  2.09457500e+04,\n'
 '         1.09929062e+05, -5.01328125e+04,  1.12173172e+05,\n'
 '        -2.24606844e+05, -4.44175344e+05, -1.42838000e+05,\n'
 '         4.86615094e+05,  1.22714828e+05, -1.71396750e+05,\n'
 '         7.75615625e+04,  4.51842281e+05,  2.74573938e+05,\n'
 '        -2.63650000e+04, -2.56895125e+05,  2.80895250e+05,\n'
 '         3.29939562e+05, -5.98273438e+04, -5.01234719e+05,\n'
 '        -6.41719062e+05,  3.73454250e+05, -1.90750844e+05,\n'
 '        -4.03453188e+05,  4.31684250e+05,  5.88130125e+05,\n'
 '        -4.57000000e+02,  5.56629250e+05,  1.03242000e+05,\n'
 '         4.01950188e+05,  2.49763625e+05,  8.85348125e+04,\n'
 '         2.76756625e+05,  1.48154000e+05,  7.18754500e+05,\n'
 '         1.31099578e+05, -1.50032875e+05, -5.31710438e+05,\n'
 '         8.75613438e+04, -8.83895312e+04,  3.24071953e+04,\n'
 '         3.79460375e+05, -2.25868781e+05,  3.88031688e+05,\n'
 '        -1.71712219e+05,  3.19956781e+05,  3.09736500e+05,\n'
 '         1.34548828e+05, -8.99904750e+05,  2.57545328e+05,\n'
 '        -3.36855906e+05,  1.27428031e+05, -1.87353562e+05,\n'
 '         6.18643750e+04, -1.62479031e+05,  1.98519812e+05,\n'
 '         3.40545562e+05, -6.60058125e+04, -1.05714945e+05,\n'
 '         1.09775953e+05, -2.32664828e+05,  1.48936375e+05,\n'
 '         1.17731500e+05, -2.30525875e+05, -2.34581938e+05,\n'
 '        -5.30208500e+05,  1.19413188e+05,  8.50909062e+04,\n'
 '        -7.35743875e+05,  4.02623031e+05,  5.80723000e+05,\n'
 '         4.09413875e+05,  3.62531250e+04, -3.61039719e+05,\n'
 '        -1.83980656e+05,  1.59784500e+05,  1.97296625e+05,\n'
 '         4.56232625e+05,  3.09735312e+05,  9.07946000e+05,\n'
 '        -2.45330141e+05,  2.63008438e+05, -5.16847656e+04,\n'
 '        -5.61112000e+05,  2.65762500e+04,  3.56891375e+05,\n'
 '        -4.52482656e+04,  1.00287312e+05, -3.66530562e+05,\n'
 '         6.76957500e+04, -5.05492688e+05,  4.09033594e+05,\n'
 '         6.19368000e+05,  3.84861031e+05, -2.39965594e+05,\n'
 '        -3.97436188e+05, -6.26858500e+05,  2.34166406e+05,\n'
 '        -2.72230938e+05,  1.71425891e+05, -5.57305500e+05,\n'
 '         6.93170812e+05,  7.09600688e+05,  1.83072609e+05,\n'
 '         5.91819750e+05, -7.54061000e+05,  3.10628594e+05,\n'
 '        -4.09818375e+05, -2.61674328e+05, -1.87230645e+04,\n'
 '         6.61098188e+05, -2.07102406e+05,  1.56188422e+05,\n'
 '         1.24962719e+05,  3.98373438e+04, -3.36730094e+05,\n'
 '        -5.17782875e+05, -1.93472500e+04,  1.37478406e+05,\n'
 '        -3.33763188e+05,  5.34630938e+05, -2.10569156e+05,\n'
 '         3.90001000e+05,  1.78208422e+05, -1.83308203e+05,\n'
 '        -4.12720547e+04,  2.11339125e+05,  8.22636406e+04,\n'
 '        -3.10136781e+05,  5.55410625e+04,  1.71313750e+05,\n'
 '        -1.90914156e+05, -2.75337500e+04,  2.73697188e+05,\n'
 '        -5.99195859e+04,  3.60092156e+05,  9.86395469e+04,\n'
 '         3.12184844e+04,  8.68062109e+04, -1.71180078e+05,\n'
 '         2.86071938e+05,  7.27012375e+05, -2.54051219e+05,\n'
 '         5.46601000e+05,  3.43303719e+05,  2.03815344e+05,\n'
 '         1.11632344e+05, -3.08873188e+05, -5.09440250e+05,\n'
 '         2.78901562e+04, -6.10680875e+05, -3.33954156e+05,\n'
 '        -5.97911688e+05, -6.16749000e+05, -3.16614375e+04,\n'
 '         1.66166906e+05,  2.16620938e+04,  1.25984922e+04,\n'
 '        -1.57757531e+05, -4.19804031e+05, -4.06779375e+05,\n'
 '        -1.73656781e+05,  1.72861531e+05, -2.43384172e+05,\n'
 '         7.08899844e+04, -2.30281750e+05, -5.81341758e+04,\n'
 '         3.89775406e+05,  3.52574562e+05,  9.29700312e+04,\n'
 '         5.90119062e+05,  9.98837500e+03, -4.05944656e+05,\n'
 '        -4.46541688e+05,  1.30969367e+05, -1.28995383e+05,\n'
 '        -4.58784000e+05, -3.24027719e+05, -3.18141562e+05,\n'
 '        -7.14937188e+05,  1.84042172e+05,  7.44768594e+04,\n'
 '        -2.21746094e+04, -2.96229844e+05, -1.22062070e+05,\n'
 '        -9.94073125e+04,  1.69827656e+04,  3.03468656e+05,\n'
 '        -3.40220438e+05, -1.10524000e+05, -3.94543906e+04,\n'
 '        -5.21847375e+05, -1.32758406e+05,  2.25587812e+04,\n'
 '         6.41287500e+03,  1.99189484e+05, -7.53908750e+04,\n'
 '        -7.33722656e+04,  2.31972016e+05,  1.20997949e+04,\n'
 '         1.13597938e+05, -4.49770875e+05, -6.39670250e+05,\n'
 '        -2.81207375e+05, -2.72272500e+05, -3.64198500e+05,\n'
 '        -6.75493594e+04,  1.44944688e+05, -4.50652281e+05,\n'
 '         3.05291250e+05,  2.49105312e+04,  5.30089961e+04,\n'
 '        -3.33855594e+05,  1.94974562e+05,  5.81432250e+05,\n'
 '         2.97312938e+05, -3.22865312e+05,  1.81132031e+05,\n'
 '         5.56995000e+04,  4.73596062e+05,  9.98046719e+04,\n'
 '        -6.83410250e+05, -1.33797703e+05,  4.29414688e+04,\n'
 '        -1.90496250e+04, -7.40859219e+04,  2.21000734e+05,\n'
 '         4.32215250e+05,  4.26498719e+05, -2.98043156e+05,\n'
 '         3.55305078e+04,  3.20972531e+05, -4.85167812e+04,\n'
 '        -2.97586750e+05, -6.79462125e+05,  1.53391438e+05,\n'
 '         6.44875500e+05,  3.94407281e+05,  7.45736875e+04,\n'
 '        -2.00967891e+04,  4.73486250e+05, -5.30926750e+05,\n'
 '         8.52372031e+04, -3.80767109e+04,  3.03325000e+04,\n'
 '         5.17891188e+05,  3.01658250e+05,  6.46374102e+04,\n'
 '         2.34444203e+05,  1.97211859e+05, -1.45671734e+05,\n'
 '        -2.27811547e+05,  4.82100000e+05,  5.78777969e+04,\n'
 '         5.16207875e+05,  2.81975000e+03,  3.15361875e+05,\n'
 '        -2.68960156e+05,  3.28231344e+05,  2.59185406e+05,\n'
 '         4.54810250e+05,  2.36542125e+05,  6.20542375e+05,\n'
 '         4.86349156e+05,  6.77132500e+05, -1.87364984e+05,\n'
 '        -2.71212188e+05, -2.48638234e+05, -5.56892438e+05,\n'
 '         7.57753250e+05, -5.51929500e+05, -9.31686812e+05,\n'
 '        -8.74029688e+04, -1.63158594e+04,  5.06196250e+05,\n'
 '        -3.88166562e+05,  2.75665594e+05, -1.31191156e+05,\n'
 '         5.20268438e+04, -4.31737375e+05, -8.41541562e+04,\n'
 '        -1.15797281e+05,  6.27551875e+05,  2.15706375e+05,\n'
 '        -5.67844750e+05,  2.54962734e+04,  5.38048375e+05,\n'
 '         6.29255812e+05, -2.24139797e+05, -2.21667125e+05,\n'
 '        -2.64154281e+05,  1.36332344e+05,  2.17304656e+05,\n'
 '         3.06661812e+05, -1.59697000e+05,  6.77843125e+05,\n'
 '         3.07213219e+05,  4.27203719e+05,  2.19270203e+05,\n'
 '        -1.69705688e+05,  3.71562125e+05, -2.49995703e+04,\n'
 '         1.20861266e+05,  1.13329945e+05, -3.94899875e+05,\n'
 '        -9.30718359e+04,  7.29185750e+05,  6.02812125e+05,\n'
 '        -5.66082188e+05, -3.93548750e+05, -1.86763406e+05,\n'
 '        -9.34240625e+03, -3.10235250e+05,  5.16787266e+04,\n'
 '        -4.99010812e+05, -1.29998516e+04,  3.06652781e+05,\n'
 '         5.78583188e+05, -1.11114586e+05,  1.53414547e+05,\n'
 '         8.75953125e+02,  2.00903312e+05, -3.73907500e+04,\n'
 '         9.58962891e+04,  2.67457625e+05,  5.56622625e+05,\n'
 '        -5.32155312e+05,  2.12599125e+05,  3.16740000e+05,\n'
 '        -5.07178188e+05,  9.63929688e+04, -2.30025547e+04,\n'
 '         3.90604250e+05,  4.59096875e+04,  8.11111375e+05,\n'
 '         2.37956297e+05,  5.48363625e+05, -9.27197656e+04,\n'
 '         3.85918781e+05,  3.13558188e+05,  1.36941453e+05,\n'
 '         1.58156406e+05, -1.02594805e+05,  4.55631781e+05,\n'
 '        -5.97232773e+04, -7.51913438e+05, -3.45055062e+05,\n'
 '        -3.71299406e+05,  4.53508938e+05,  7.21863562e+05,\n'
 '         2.57067000e+05, -1.00408438e+05, -4.91953438e+05,\n'
 '         1.72380625e+04,  4.98415312e+04, -4.64969875e+05,\n'
 '        -2.38783469e+05, -5.05044000e+05, -1.15311016e+05,\n'
 '        -3.54621188e+05,  2.17198656e+05,  4.10012031e+05,\n'
 '         4.02659500e+05,  2.88199250e+05, -2.91191781e+05,\n'
 '         3.02072438e+05,  1.65608297e+05, -1.23861430e+05,\n'
 '        -1.27779219e+04,  6.71127312e+05, -2.45917812e+04,\n'
 '         1.29920000e+04, -5.45305500e+05,  6.62282750e+05,\n'
 '         1.31292281e+05,  6.61972750e+05,  3.19515438e+05,\n'
 '         1.12947781e+05,  5.66327125e+05, -1.31626891e+05,\n'
 '        -4.62976188e+05,  2.05647156e+05,  3.19679906e+05,\n'
 '        -4.04506094e+05, -1.72609062e+05, -5.63639688e+05,\n'
 '        -6.62129000e+05, -6.55496750e+05,  3.61094219e+05,\n'
 '        -6.05854453e+04, -1.29325719e+05, -1.85464531e+04,\n'
 '         6.90755156e+04, -4.55262500e+05,  1.34134297e+05,\n'
 '        -8.03550625e+05, -2.16154656e+05,  2.99204500e+05,\n'
 '        -1.47670578e+05, -2.17252344e+03,  8.91567500e+05,\n'
 '        -4.58617438e+05, -1.34247188e+04,  3.29388062e+05,\n'
 '        -1.14486609e+05, -3.61857688e+05,  3.95389180e+04,\n'
 '         5.55439531e+04, -7.69272562e+05, -6.01785875e+05,\n'
 '         2.01472484e+05,  1.46966031e+05, -1.14558469e+05,\n'
 '        -1.97750359e+05, -3.51684531e+05, -2.94621641e+04,\n'
 '        -3.07838156e+05, -5.20264219e+04,  2.41607625e+05,\n'
 '        -9.35644219e+04, -5.21167844e+05,  5.37008750e+05,\n'
 '        -4.13403438e+05,  3.95820156e+05, -8.63137031e+04,\n'
 '        -3.46862844e+05,  7.99032750e+05, -8.58795000e+04,\n'
 '        -4.72980875e+05, -3.38552266e+04,  7.77546500e+05,\n'
 '         8.75958750e+05, -3.95669500e+05,  1.63271656e+05,\n'
 '        -2.93975312e+04,  1.65489375e+04,  2.54360000e+04,\n'
 '         5.87150391e+04,  1.45013688e+05,  4.25203875e+05,\n'
 '        -5.44304531e+04, -3.90569531e+04,  3.73406875e+04,\n'
 '         2.09937344e+05,  3.87724531e+05,  4.26921375e+05,\n'
 '        -6.64927812e+04,  7.55404125e+05,  3.72523656e+05,\n'
 '         1.31741562e+04, -3.63730781e+05, -1.19119906e+05,\n'
 '        -6.55162812e+04, -2.23038688e+05, -4.42544219e+04,\n'
 '        -2.77623375e+05, -1.67203562e+05, -3.55647375e+05,\n'
 '        -2.77211500e+05, -4.56356312e+05,  5.68127125e+05,\n'
 '        -5.93918000e+05,  1.99401844e+05, -5.00682031e+05,\n'
 '         3.10414312e+05, -2.54204844e+04, -5.32013750e+04,\n'
 '         1.67217812e+04,  4.45685750e+05, -3.89248062e+05,\n'
 '        -1.33685094e+05,  4.64121562e+04, -1.37076406e+05,\n'
 '        -5.64058984e+04,  4.52590219e+05,  2.12432078e+05,\n'
 '         4.20851812e+05, -1.60930312e+04,  1.79143078e+05,\n'
 '         7.51853812e+05,  3.59759844e+05,  2.68468438e+05,\n'
 '         4.46799625e+05,  4.44637375e+05,  9.43509609e+04,\n'
 '         8.41274688e+04,  7.97290625e+04, -7.19703000e+05,\n'
 '         1.38848312e+05, -3.01451094e+05, -4.41504250e+05,\n'
 '         4.81539719e+05,  7.77787500e+05,  1.76580797e+05,\n'
 '         5.92901250e+05,  5.54822375e+05,  6.39568438e+04,\n'
 '        -5.97986375e+05,  5.09791562e+04,  5.12968438e+05,\n'
 '         4.56243750e+05, -3.02586188e+05, -4.22323375e+05,\n'
 '        -4.03477500e+05,  5.42631312e+05,  5.30708000e+05,\n'
 '         7.11769750e+05, -3.16271938e+05,  1.89967000e+05,\n'
 '        -1.48402500e+04, -1.67877859e+05,  9.17346719e+04,\n'
 '         6.42063062e+05, -5.85776438e+05, -2.32622219e+05,\n'
 '        -3.83784344e+05, -6.28600312e+04,  4.23896875e+03,\n'
 '        -4.44267125e+05, -1.54063359e+05,  1.29928109e+05,\n'
 '        -3.20052109e+04, -1.47154375e+05,  8.68261250e+04,\n'
 '         2.49676031e+05, -1.42404391e+05,  3.24570938e+05,\n'
 '        -3.29006125e+05,  8.08583438e+04, -1.89444766e+05,\n'
 '         4.28879219e+05, -2.69927625e+05,  6.47604812e+05,\n'
 '         6.26260688e+05,  7.62138562e+05,  2.19282594e+05,\n'
 '        -8.07003125e+04,  5.01721438e+05,  1.04053125e+05,\n'
 '         5.17428594e+04,  1.01744969e+05,  2.71379688e+04,\n'
 '        -3.37854625e+05, -6.47925156e+04, -2.45431719e+05,\n'
 '         4.23149438e+05, -3.16847938e+05,  3.44405938e+05,\n'
 '        -3.43990219e+05, -4.80633672e+04, -2.32738688e+05,\n'
 '        -8.51962344e+04, -4.74851781e+05,  2.22444219e+04,\n'
 '         1.04554500e+05,  4.67729969e+05, -1.13937547e+05,\n'
 '         1.43980000e+04,  5.47119625e+05, -1.91234828e+05,\n'
 '         1.89888219e+05,  6.35494500e+05, -3.51793875e+05,\n'
 '        -4.06514219e+04,  5.35528438e+04, -4.33182500e+04,\n'
 '         3.92885812e+05,  1.20246488e+06,  5.06886500e+05,\n'
 '         2.69962688e+05,  4.57563188e+05, -2.75253469e+05,\n'
 '        -1.28687062e+05, -8.00550375e+05,  1.40996328e+05,\n'
 '         2.60564766e+05, -5.86210812e+05, -3.53357625e+05,\n'
 '         6.13505125e+05, -4.94360406e+05, -3.38242844e+05,\n'
 '        -2.10169719e+05,  4.18200188e+05, -6.57174375e+04,\n'
 '        -1.67402875e+05,  2.96473375e+05, -3.09424219e+04,\n'
 '         3.62095312e+05, -7.14729625e+05, -5.19383000e+05,\n'
 '        -5.80376562e+05, -2.97897656e+05, -1.35899422e+05,\n'
 '        -8.43456328e+04,  3.44374000e+05,  5.22419000e+05,\n'
 '         2.67405875e+05,  2.73791344e+05, -4.92560188e+05,\n'
 '        -1.62173406e+05, -4.36325625e+05, -1.55737344e+04,\n'
 '        -4.44686125e+05, -6.59913500e+05, -1.24550688e+05,\n'
 '         5.75093688e+05,  6.38169375e+05, -3.64705438e+05,\n'
 '         9.34378125e+04, -3.80089781e+05,  2.54284562e+05,\n'
 '        -3.07361781e+05, -1.11348000e+05, -3.22959562e+05,\n'
 '        -5.05425188e+05, -6.50125750e+05, -2.77549562e+05,\n'
 '        -4.59452422e+04,  3.94492344e+04,  4.87508688e+05,\n'
 '        -2.44654688e+05, -2.01072637e+04,  8.32457656e+04,\n'
 '        -2.67083844e+05, -4.46298031e+05, -1.28750508e+05,\n'
 '         8.20310500e+05, -1.97737500e+05,  2.15968656e+05,\n'
 '         4.40123750e+04, -8.95087891e+04,  2.90365750e+05,\n'
 '        -6.62642500e+04,  1.44463125e+05,  3.36397812e+05,\n'
 '         6.60087125e+05,  3.08899031e+05, -2.28597031e+05,\n'
 '        -1.36262734e+05,  4.33105750e+05,  4.83328062e+05,\n'
 '         6.42114375e+05, -1.32266953e+05,  7.37069125e+05,\n'
 '         2.53343500e+05,  2.07127000e+05,  1.06016531e+05,\n'
 '         9.58133750e+04, -3.71627406e+05, -6.84705000e+04,\n'
 '        -5.11423875e+05, -2.74472594e+05,  2.32131656e+05,\n'
 '         2.30691250e+04, -4.91336750e+05,  7.39192344e+04,\n'
 '         1.34442531e+05,  3.13267000e+05,  3.96238438e+04,\n'
 '        -1.72350641e+05,  5.48656750e+05, -1.80714141e+05,\n'
 '        -5.80078062e+05, -1.95808203e+05, -3.46431938e+05,\n'
 '        -4.86988344e+05, -1.75303906e+05,  4.08100781e+05,\n'
 '        -1.28934688e+04,  7.07216094e+04,  1.80500438e+05,\n'
 '        -3.98936750e+05, -2.16968141e+05,  4.62779375e+04,\n'
 '        -2.30410641e+05, -1.03407031e+05,  1.04237031e+05,\n'
 '         9.39483438e+04,  3.15492219e+05, -1.48155750e+05,\n'
 '        -2.59061688e+05,  6.71449297e+04, -1.39881562e+05,\n'
 '        -2.26302156e+05,  2.55210508e+04, -1.16673750e+05,\n'
 '         1.36295938e+04, -1.83268375e+05, -2.80987875e+05,\n'
 '         1.49195406e+05, -2.29533328e+05,  3.40130812e+05,\n'
 '        -7.69678500e+05,  1.23024617e+05,  2.17118234e+05,\n'
 '        -2.19013281e+05, -3.40789562e+05, -8.07854688e+04,\n'
 '         6.37614531e+04, -4.93945312e+05, -2.47806562e+05,\n'
 '         4.46059312e+05, -3.06745500e+05,  3.22401969e+05,\n'
 '         1.10940617e+05, -1.27143375e+05,  6.48826125e+05,\n'
 '        -9.06365312e+04,  3.01953500e+05, -1.24617953e+05,\n'
 '         4.35906188e+05,  3.72026938e+05,  2.45226281e+05,\n'
 '         1.09616719e+04,  8.93654219e+04, -1.46622219e+05,\n'
 '         5.00627625e+05,  3.51631875e+05,  3.48689812e+05,\n'
 '        -2.07160812e+05,  1.23449117e+05,  4.03103500e+05,\n'
 '        -1.79043078e+05,  6.16656000e+05,  6.11315750e+05,\n'
 '         1.04138078e+05,  8.02968672e+04, -4.46485742e+04,\n'
 '        -2.10594719e+05,  3.49176656e+05,  2.66424750e+05,\n'
 '         9.72613594e+04, -3.26414375e+05,  5.31889250e+05,\n'
 '         3.42720531e+05, -3.98939219e+04, -1.04023438e+03,\n'
 '         3.79371484e+04,  5.40784188e+05,  3.32637844e+05,\n'
 '         7.05643625e+05,  5.86418562e+05, -3.27179062e+05,\n'
 '        -2.70157438e+05, -2.25868625e+05, -1.79852047e+05,\n'
 '         8.74934609e+04,  2.90454781e+05, -4.44554062e+05,\n'
 '         1.30091844e+05,  3.64032500e+04, -1.47727562e+05,\n'
 '         8.53901719e+04,  7.54823594e+04,  5.32488562e+05,\n'
 '        -3.13349312e+05, -2.30960531e+05, -5.04550000e+04,\n'
 '        -2.88196562e+05,  5.95692938e+05, -6.24161953e+04,\n'
 '        -2.10912234e+05, -3.07771500e+05,  3.68113875e+05,\n'
 '         5.64131562e+05, -2.13341781e+05,  7.01373125e+04,\n'
 '        -6.86674875e+05, -4.59425312e+05, -2.27843750e+02,\n'
 '         5.06488625e+05, -3.41598750e+05,  1.25804062e+05,\n'
 '         9.93351562e+03,  3.58278469e+05,  3.83332094e+05,\n'
 '        -4.19596281e+05,  3.03518875e+05,  3.58000000e+05,\n'
 '         4.94196797e+04,  1.26924656e+05, -3.00788750e+05,\n'
 '        -1.32826594e+05, -5.82757344e+04,  6.79772188e+05,\n'
 '         2.87692031e+05, -2.74622719e+05,  1.41628828e+05,\n'
 '        -2.11865031e+05, -3.42363828e+04, -2.81917094e+05,\n'
 '         9.12844219e+04, -2.37788109e+05, -7.34222750e+05,\n'
 '         3.26422312e+05,  9.66873438e+03,  6.07761500e+05,\n'
 '         3.89080656e+05, -1.77674250e+05, -3.88551062e+05,\n'
 '        -8.62208594e+04, -3.92242969e+05, -1.26590516e+05,\n'
 '         4.62987344e+05, -3.72028750e+05, -1.11485016e+05,\n'
 '         5.19613875e+05,  1.03659703e+05,  1.43829875e+05,\n'
 '         7.76951312e+05, -1.21379906e+05,  7.40372875e+05,\n'
 '         9.29153500e+05,  8.36765312e+04, -1.60284812e+05,\n'
 '        -3.00760527e+04,  5.62145125e+05, -8.94307344e+04,\n'
 '        -1.41331875e+05, -4.05452688e+05,  4.68016906e+05,\n'
 '         2.57651156e+05, -4.54178312e+05, -4.63057812e+05,\n'
 '         1.92863719e+05, -1.15281375e+05,  4.36384562e+05,\n'
 '         2.84935469e+05, -3.30721156e+05,  1.44411344e+05,\n'
 '         5.92843312e+05,  8.35574750e+05,  1.71681906e+05,\n'
 '        -1.23710000e+05,  5.37212938e+05, -5.52844875e+05,\n'
 '         2.55773750e+04,  1.13453094e+05, -1.84303750e+04,\n'
 '        -2.16648625e+05, -1.18788844e+05,  8.03141438e+05,\n'
 '        -1.01367850e+06, -3.51778719e+05, -2.29678797e+05,\n'
 '         1.21024344e+05, -6.49073125e+04, -9.15736125e+05,\n'
 '         7.25715750e+05,  2.57880297e+05,  8.90559062e+04,\n'
 '         1.25756031e+05,  2.96263250e+05,  4.36568281e+04,\n'
 '        -4.17223344e+05,  8.71103000e+05,  4.19404562e+05,\n'
 '        -6.91019625e+05]])')
'test_inceptionnet | batch_shape is: [1]'
'test_inceptionnet | logits.shape is: ivy.Shape(1, 1000)'
'||'
'test_inceptionnet | device is: cpu'
'test_inceptionnet | fw is: numpy'
'test_inceptionnet | load_weights is: True'
'InceptionV3 | build | layer 1/22 built'
'InceptionV3 | build | layer 2/22 built'
'layer 3/22 built'
'InceptionV3 | build | layer 4/22 built'
'InceptionV3 | build | layer 5/22 built'
'InceptionV3 | build | layer 6/22 built'
'InceptionV3 | build | layer 7/22 built'
'InceptionV3 | build | layer 8/22 built'
'InceptionV3 | build | layer 9/22 built'
'InceptionV3 | build | layer 10/22 built'
'InceptionV3 | build | layer 11/22 built'
'InceptionV3 | build | layer 12/22 built'
'InceptionV3 | build | layer 13/22 built'
'InceptionV3 | build | layer 14/22 built'
'InceptionV3 | build | layer 15/22 built'
'InceptionV3 | build | layer 17/22 built'
'InceptionV3 | build | layer 18/22 built'
'InceptionV3 | build | layer 19/22 built'
'InceptionV3 | build | layer 20/22 built'
'InceptionV3 | build | layer 21/22 built'
'InceptionV3 | build | layer 22/22 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/4 built'
'layer 2/4 built'
'layer 3/4 built'
'layer 4/4 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/6 built'
'layer 2/6 built'
'layer 3/6 built'
'layer 4/6 built'
'layer 5/6 built'
'layer 6/6 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'inceptionNet_v3 | building InceptionV3 model | done 1/3'
'inceptionNet_v3 | clearning pretrained weights | done 2/3'
'inceptionNet_v3 | loading pretrained weights | done 3/3'
'InceptionV3 | forward | input data_format is:NCHW | done 1/27'
'InceptionV3 | forward | data_format is going to be used is:NCHW | done 1/27'
'InceptionV3 | forward | input shape is:ivy.Shape(1, 224, 224, 3) | done 1/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 224, 224, 3) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 111, 111, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 111, 111, 32) | done 2/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 111, 111, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 32) | done 3/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 109, 109, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 64) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 64) | done 4/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 54, 54, 64) | done 5/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 54, 54, 80) | done 3/3'
'InceptionV3 | forward | is:ivy.Shape(1, 54, 54, 80) | done 6/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 80) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 52, 52, 192) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 52, 52, 192) | done 7/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 192) | done 8/27'
'input shape is:ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 32) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 32)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 25, 25, 256) | done 9/27'
'input shape is:ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 10/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 11/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 384) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 96) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 96)'
'one 20/20, output shape is:ivy.Shape(1, 12, 12, 288)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 12/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 12, 12, 768) | done 13/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 14/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 15/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 16/27'
'v3 16/27, output shape is:ivy.Shape(1, 12, 12, 768)'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 5, 5, 192)'
'one 7/20, output shape is:ivy.Shape(1, 5, 5, 768)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 1280) | done 17/27'
'input shape is:ivy.Shape(1, 5, 5, 1280)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 18/27'
'input shape is:ivy.Shape(1, 5, 5, 2048)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 19/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 20/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 5, 5) | done 21/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 1, 1) | done 22/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 27/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 24/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 25/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048) | done 26/27'
'InceptionV3 | forward | fc | done 27/27'
('test_inceptionnet | logits is: ivy.array([[-1.03413656e-01, '
 '-1.76818371e-02,  1.18927419e-01,\n'
 '         1.57493830e+00, -6.60298824e-01, -2.65512538e+00,\n'
 '         3.53484750e-01, -6.87717676e-01, -1.44961548e+00,\n'
 '        -3.86466837e+00, -1.35969722e+00,  6.91669345e-01,\n'
 '         8.85250568e-02,  1.32496750e+00,  2.19317484e+00,\n'
 '        -2.45705605e-01,  4.47280049e-01,  5.26010513e-01,\n'
 '        -5.68991303e-02,  1.55394793e+00,  6.42405272e-01,\n'
 '        -2.91185474e+00,  6.38330281e-02, -6.33369088e-01,\n'
 '         5.41129053e-01,  1.70744404e-01,  1.23853415e-01,\n'
 '        -8.30585957e-01, -1.40173209e+00, -5.57124078e-01,\n'
 '        -6.22627974e-01,  4.51152504e-01,  2.43971482e-01,\n'
 '        -6.21237159e-01,  2.14228869e+00, -8.32626700e-01,\n'
 '         1.23422170e+00, -1.31728721e+00, -1.06779650e-01,\n'
 '         2.16028237e+00,  2.08562803e+00,  2.20348835e+00,\n'
 '         1.49562621e+00,  1.18291342e+00,  2.83360660e-01,\n'
 '         1.47526681e+00,  2.19303370e+00,  2.42165732e+00,\n'
 '         4.30755317e-01,  1.80139482e+00,  4.87836301e-01,\n'
 '         1.32488012e-01,  2.96383834e+00, -5.48364162e-01,\n'
 '         1.01742399e+00,  2.13496447e+00, -2.59054708e+00,\n'
 '         6.96549535e-01,  1.39208841e+00,  7.63558865e-01,\n'
 '         7.18911648e-01,  1.50196326e+00, -9.08229411e-01,\n'
 '         7.97557533e-01, -3.65465581e-01,  1.73445571e+00,\n'
 '         1.34877711e-01,  2.45504713e+00,  7.67732143e-01,\n'
 '         7.44916439e-01, -1.55370593e+00,  1.64455342e+00,\n'
 '        -8.51340532e-01, -1.90648127e+00, -2.14657158e-01,\n'
 '         6.33563280e-01, -3.27946425e-01,  4.62689996e-01,\n'
 '        -7.41328001e-01,  2.87537289e+00, -1.72962570e+00,\n'
 '         3.52520198e-01,  1.33652317e+00,  1.53433037e+00,\n'
 '         8.33150625e-01, -3.81878018e-01, -1.58675826e+00,\n'
 '        -1.75039518e+00,  2.06588477e-01, -6.78928971e-01,\n'
 '         7.87867904e-02,  1.82743263e+00, -2.38534808e-01,\n'
 '         5.36557019e-01,  7.77222633e-01,  4.66179252e-01,\n'
 '         2.93356848e+00, -1.65130580e+00, -2.85163665e+00,\n'
 '        -1.59002855e-01,  2.33044696e+00,  9.21804249e-01,\n'
 '        -6.62844122e-01, -7.80558169e-01,  1.21666217e+00,\n'
 '        -1.77496910e+00, -1.00025940e+00,  1.02752399e+00,\n'
 '         2.11137319e+00,  2.01018453e+00,  6.84826076e-01,\n'
 '        -1.49425328e+00,  2.15429664e+00,  3.55734730e+00,\n'
 '         1.46601140e+00,  5.83792925e-02, -1.63375139e+00,\n'
 '         9.21310782e-01, -1.35119593e+00,  2.96446979e-01,\n'
 '         3.17716837e-01, -1.12929714e+00,  7.45735884e-01,\n'
 '         9.79243875e-01, -4.64878976e-02,  8.21678579e-01,\n'
 '        -2.14341497e+00,  9.63753939e-01, -1.32262930e-02,\n'
 '        -4.60130334e-01, -5.21724001e-02, -1.03262937e+00,\n'
 '         1.17189932e+00, -1.81316543e+00, -2.08071160e+00,\n'
 '        -4.88035321e-01,  4.60372686e-01, -4.55593079e-01,\n'
 '        -4.10948467e+00, -1.37055731e+00, -3.18151712e-02,\n'
 '         1.75564206e+00, -2.12540364e+00,  1.74668014e-01,\n'
 '         2.55780339e+00,  9.80801225e-01, -6.35840476e-01,\n'
 '        -8.96966875e-01,  5.34968264e-02, -9.76991415e-01,\n'
 '         8.94106984e-01, -4.17372078e-01,  3.92002463e+00,\n'
 '         3.36180091e-01,  1.27967036e+00, -2.02978134e+00,\n'
 '        -4.16105509e-01,  4.41691971e+00, -2.93377805e+00,\n'
 '        -2.17961454e+00,  2.63199782e+00, -1.55353427e+00,\n'
 '        -2.02182722e+00, -1.61313272e+00,  1.06001246e+00,\n'
 '         2.79050112e-01,  2.17081428e-01, -4.47188318e-02,\n'
 '        -1.65504086e+00,  1.78278446e+00,  1.15761018e+00,\n'
 '        -1.59921408e+00, -1.21109998e+00, -1.76230657e+00,\n'
 '         1.84809685e+00, -1.33111739e+00, -1.79141474e+00,\n'
 '        -1.09713054e+00, -1.76209450e+00, -5.20852745e-01,\n'
 '        -1.63135028e+00, -1.20347166e+00, -9.02262628e-01,\n'
 '        -6.44273996e-01, -1.63139772e+00,  1.17814398e+00,\n'
 '         2.77666116e+00, -6.59105659e-01, -4.32492971e-01,\n'
 '        -3.27270484e+00, -1.46522582e+00, -1.73407030e+00,\n'
 '         5.40809095e-01, -2.51533937e+00, -2.79253554e+00,\n'
 '         4.80523467e-01, -1.23334849e+00,  6.05446696e-01,\n'
 '         9.00349855e-01,  1.02321744e+00,  5.13334453e-01,\n'
 '        -3.76438975e+00, -2.23041964e+00,  4.27945900e+00,\n'
 '        -2.19145012e+00, -1.46044135e+00, -1.38202417e+00,\n'
 '         6.39947951e-01, -2.16928792e+00, -2.58920860e+00,\n'
 '        -6.75563216e-01, -1.67302203e+00, -1.58143818e+00,\n'
 '        -5.03387377e-02,  2.98973858e-01, -1.20136821e+00,\n'
 '         5.54921866e-01, -1.11692071e+00, -8.09030235e-02,\n'
 '        -4.61357069e+00, -9.15442467e-01, -1.25581980e+00,\n'
 '         4.39267111e+00,  3.23667717e+00,  7.63939667e+00,\n'
 '        -1.74588728e+00,  2.35402107e+00, -1.43949139e+00,\n'
 '         1.79694259e+00,  2.15137124e+00,  1.42025173e+00,\n'
 '         3.73794937e+00,  3.15876198e+00,  1.70438254e+00,\n'
 '         3.58059704e-01,  4.67276186e-01,  1.00507855e+00,\n'
 '        -1.06468677e+00,  6.97582126e-01,  1.00585151e+00,\n'
 '         1.04227614e+00,  3.66858780e-01, -2.06163436e-01,\n'
 '        -1.95445621e+00, -9.72471118e-01, -1.08057380e-01,\n'
 '        -5.46819687e-01,  3.33463597e+00,  8.01969147e+00,\n'
 '         6.58308983e+00,  3.70324445e+00,  5.15405297e-01,\n'
 '         3.33190262e-02, -1.67143130e+00,  1.35770762e+00,\n'
 '         4.67252195e-01,  4.77807808e+00,  8.63497543e+00,\n'
 '         2.09383755e+01,  5.79290152e+00,  7.25110102e+00,\n'
 '         8.82405281e+00, -1.40723002e+00, -8.31829310e-01,\n'
 '        -1.22904885e+00, -1.48982763e+00, -2.65274465e-01,\n'
 '         3.82489181e+00, -1.71180296e+00,  2.41986108e+00,\n'
 '         1.22132568e+01, -1.84219027e+00,  2.27136850e-01,\n'
 '         1.64951944e+00,  3.66886884e-01, -2.25726938e+00,\n'
 '        -1.22172832e+00,  9.49126542e-01, -2.30215073e+00,\n'
 '         1.07839222e+01,  6.42546266e-02,  5.49242258e-01,\n'
 '        -1.00499892e+00,  4.17248535e+00, -1.34204829e+00,\n'
 '        -5.63339889e-03, -2.17601538e+00,  2.28998995e+00,\n'
 '         4.70676482e-01,  9.03561950e-01, -9.92606640e-01,\n'
 '         3.77799004e-01, -7.65009642e-01, -8.15817297e-01,\n'
 '         1.34239823e-01, -1.18483877e+00,  2.84133267e+00,\n'
 '         4.44767475e-02, -1.20876658e+00, -1.14814973e+00,\n'
 '        -2.07645297e+00, -1.11732089e+00,  2.03007603e+00,\n'
 '        -3.54394317e-02,  5.31896234e-01,  6.24376297e-01,\n'
 '         1.27635706e+00,  1.38298178e+00, -3.40287834e-01,\n'
 '         4.79731917e-01, -1.06039262e+00,  6.42813027e-01,\n'
 '         1.09062123e+00,  4.64410722e-01,  5.80690741e-01,\n'
 '         2.32798362e+00, -2.05969787e+00,  1.77678958e-01,\n'
 '         5.82120061e-01,  6.46493912e-01,  2.45215082e+00,\n'
 '         3.48904163e-01,  4.21429992e-01,  7.09424615e-01,\n'
 '        -1.89616299e+00,  6.80472732e-01,  7.39158332e-01,\n'
 '         3.44747615e+00,  2.45994520e+00, -2.06904873e-01,\n'
 '        -3.07508254e+00,  2.46731669e-01,  2.85573316e+00,\n'
 '        -1.42551374e+00, -1.28266144e+00, -3.45053959e+00,\n'
 '        -2.18631983e+00, -1.13004255e+00,  1.79681838e-01,\n'
 '        -1.78239763e+00,  1.09480751e+00, -1.56212902e+00,\n'
 '        -4.96755034e-01, -2.01602459e+00, -2.06474137e+00,\n'
 '        -1.41423261e+00, -1.14397752e+00, -1.39827144e+00,\n'
 '        -5.93951344e-01, -1.63876844e+00,  4.90973294e-02,\n'
 '        -6.17818296e-01, -1.67933369e+00, -7.04728961e-01,\n'
 '        -2.02998066e+00,  1.52262759e+00, -2.02203378e-01,\n'
 '        -1.37630832e+00,  2.07814336e-01,  4.57547128e-01,\n'
 '        -1.83063901e+00,  9.04289484e-01,  7.45088696e-01,\n'
 '         1.42386520e+00, -9.77882147e-01, -3.01739407e+00,\n'
 '        -1.94319117e+00, -8.33288372e-01, -7.62116432e-01,\n'
 '        -2.22208810e+00,  2.17080563e-01, -2.00026941e+00,\n'
 '        -1.35952592e+00, -1.32640076e+00,  5.81208170e-02,\n'
 '        -1.69632864e+00, -2.83452320e+00,  3.70743364e-01,\n'
 '         9.53309685e-02, -1.97608292e+00, -5.90959609e-01,\n'
 '        -2.73981404e+00, -8.56663466e-01, -7.72628263e-02,\n'
 '        -1.57785261e+00,  4.33740169e-02, -2.03704572e+00,\n'
 '        -3.44007432e-01,  1.10225484e-01, -7.16490567e-01,\n'
 '         3.63104999e-01, -2.04230356e+00,  4.20985699e-01,\n'
 '         1.19816303e+00, -2.03727603e-01,  1.22302365e+00,\n'
 '         1.57645130e+00, -1.73872650e-01,  1.32231808e+00,\n'
 '         3.10715079e+00,  1.65710211e-01, -8.24681878e-01,\n'
 '         8.38302970e-02,  1.48202211e-01,  1.60684776e+00,\n'
 '        -1.59636766e-01,  3.87454659e-01, -1.33776760e+00,\n'
 '         1.56650949e+00, -3.83484870e-01, -6.71865582e-01,\n'
 '        -1.50896656e+00, -2.61868095e+00, -6.80703938e-01,\n'
 '        -4.02185976e-01, -2.55209923e-01, -1.08390272e+00,\n'
 '         6.20198906e-01, -5.88296473e-01, -8.73245239e-01,\n'
 '         3.46191883e-01, -1.66152167e+00, -1.00742137e+00,\n'
 '        -1.07168913e+00, -1.20120978e+00,  1.37701547e+00,\n'
 '         9.71532285e-01,  7.63646960e-02,  1.51080608e-01,\n'
 '         2.42572951e+00,  5.03827095e-01,  7.56089985e-01,\n'
 '        -3.30319434e-01, -3.75435442e-01, -1.29814363e+00,\n'
 '        -1.83648914e-02, -9.85660851e-02, -8.33823085e-01,\n'
 '        -2.06912208e+00, -3.22278202e-01,  2.64782453e+00,\n'
 '        -1.10881400e+00,  1.27704239e+00, -3.79138738e-01,\n'
 '        -1.85933888e+00,  2.38384962e+00, -2.36314535e-03,\n'
 '        -1.79486918e+00,  9.66246784e-01, -7.57007182e-01,\n'
 '         7.82155693e-02,  1.29026806e+00,  1.52490699e+00,\n'
 '        -2.60425597e-01, -2.58033186e-01,  7.65664697e-01,\n'
 '         2.26903021e-01, -4.36575115e-02,  1.10883689e+00,\n'
 '        -2.13070655e+00, -3.06132793e-01, -1.25505877e+00,\n'
 '         2.53807163e+00,  2.73283482e-01, -1.08386129e-02,\n'
 '        -8.48607898e-01, -8.64647746e-01, -1.27451837e+00,\n'
 '         1.42483115e+00,  7.77271390e-01,  1.39180064e+00,\n'
 '         4.51729357e-01, -1.47263169e+00,  7.01394379e-01,\n'
 '        -6.26849890e-01, -1.69044530e+00,  4.73941326e+00,\n'
 '        -2.16469407e+00, -4.57090288e-01,  1.98492899e-01,\n'
 '         4.79358941e-01,  2.98404038e-01, -2.73201752e+00,\n'
 '         7.12323487e-01, -1.33726108e+00, -9.17666614e-01,\n'
 '        -2.25811005e+00, -6.17073774e-01,  5.65178752e-01,\n'
 '         1.78996110e+00,  1.53868902e+00,  1.39851761e+00,\n'
 '        -5.63252568e-01, -1.31131554e+00,  1.79057270e-01,\n'
 '         2.21738339e+00,  1.82182837e+00, -2.42041063e+00,\n'
 '        -3.68548334e-01, -1.07512355e+00, -3.35015345e+00,\n'
 '         1.61351561e-01, -3.40598434e-01, -2.42500973e+00,\n'
 '        -1.84506321e+00, -1.45103955e+00,  6.00958228e-01,\n'
 '         8.52159262e-02,  3.57482582e-01,  6.64508939e-01,\n'
 '         5.78396022e-01,  8.82988453e-01, -1.73354888e+00,\n'
 '        -1.04118526e+00, -4.72678900e-01, -7.65129983e-01,\n'
 '        -1.36736012e+00, -3.01961005e-01, -7.05618858e-01,\n'
 '        -4.19246769e+00,  1.35544062e-01, -9.85057592e-01,\n'
 '         2.58810520e-01, -2.96612358e+00,  4.92808402e-01,\n'
 '        -4.60735679e-01, -6.28656745e-02, -2.59985519e+00,\n'
 '        -8.23426127e-01, -6.18416905e-01,  9.18546319e-03,\n'
 '        -8.88256431e-02,  9.76188064e-01, -7.59952486e-01,\n'
 '        -2.04930186e+00, -2.65944934e+00, -2.84828997e+00,\n'
 '         3.83371544e+00,  7.79626429e-01, -9.75724638e-01,\n'
 '        -1.80822313e+00,  4.25025225e-01, -4.34099168e-01,\n'
 '         1.03596354e+00, -1.64185453e+00, -1.34580111e+00,\n'
 '         1.98398411e+00,  9.41457301e-02, -1.88156545e+00,\n'
 '        -1.33308780e+00, -1.63506949e+00,  3.00560802e-01,\n'
 '        -1.44866377e-01, -1.19888365e+00,  1.57855630e+00,\n'
 '        -4.72054332e-02,  7.30409086e-01,  8.23592663e-01,\n'
 '        -9.68455553e-01,  4.20981467e-01,  1.58722115e+00,\n'
 '         6.98387742e-01,  5.37430048e+00,  6.53141022e-01,\n'
 '         1.28957868e+00, -1.29453313e+00, -5.13813555e-01,\n'
 '        -2.30052424e+00,  4.90004927e-01, -1.06881905e+00,\n'
 '        -1.12665307e+00, -2.45946598e+00,  1.58510908e-01,\n'
 '         2.70195985e+00, -7.62496948e-01, -2.73385584e-01,\n'
 '         3.92696053e-01,  2.52196312e-01,  9.13102508e-01,\n'
 '        -3.06513524e+00,  9.15177226e-01, -1.56307906e-01,\n'
 '         3.91169310e-01, -2.51578212e-01,  2.01665926e+00,\n'
 '        -1.02538988e-01, -1.60070920e+00,  5.92720807e-02,\n'
 '         2.29004026e-01, -1.44807541e+00,  4.32727873e-01,\n'
 '        -2.61825025e-01,  6.20353341e-01, -1.49029005e+00,\n'
 '         9.95224416e-01, -1.20715424e-01,  4.77720708e-01,\n'
 '         4.93069291e-02, -2.64643168e+00, -5.05598783e-01,\n'
 '        -7.58757412e-01, -1.29743123e+00, -1.40557527e+00,\n'
 '        -1.16365075e-01,  1.70056903e+00, -1.12650812e+00,\n'
 '         1.72570729e+00,  2.12224531e+00, -2.54792643e+00,\n'
 '        -1.56145787e+00, -7.83095717e-01, -3.20857763e-01,\n'
 '        -2.02556133e+00,  5.24544418e-01, -1.03970432e+00,\n'
 '        -1.62119949e+00,  6.69181883e-01,  8.16997767e-01,\n'
 '        -1.75848270e+00, -2.00165987e+00, -3.93325877e+00,\n'
 '         2.32837424e-01,  1.69638801e+00, -2.44774699e-01,\n'
 '         1.87479544e+00,  2.30147392e-02,  2.96162903e-01,\n'
 '        -1.34242177e-01,  1.94281054e+00,  5.48900127e-01,\n'
 '        -1.86077023e+00,  5.47072172e-01, -3.12218213e+00,\n'
 '        -1.28389227e+00, -1.00383711e+00, -1.87785161e+00,\n'
 '         4.39950377e-01, -1.96682453e-01,  5.73069155e-01,\n'
 '         1.17568302e+00, -1.69326067e+00,  5.11327505e-01,\n'
 '        -1.23317957e+00,  9.36651945e-01, -1.09137988e+00,\n'
 '         1.25251770e+00,  1.51562786e+00, -2.99539351e+00,\n'
 '        -2.78083086e-02,  8.17763209e-01, -1.98524392e+00,\n'
 '        -6.77984059e-01,  1.22073734e+00, -2.37723756e+00,\n'
 '        -1.59586179e+00, -2.88889623e+00,  1.25254226e+00,\n'
 '        -2.14708924e+00,  2.11108342e-01, -1.33921158e+00,\n'
 '        -1.65760303e+00, -3.31747323e-01, -3.95198137e-01,\n'
 '        -3.69046122e-01,  6.00897789e-01, -6.21238589e-01,\n'
 '         1.45760095e+00,  1.07430065e+00, -6.73102140e-01,\n'
 '         1.28726995e+00,  3.06506991e-01, -1.29213166e+00,\n'
 '         5.33635557e-01, -6.29312336e-01, -3.04971409e+00,\n'
 '        -6.42275333e-01,  2.16946721e+00, -1.78954351e+00,\n'
 '         4.52654719e-01,  9.81702924e-01, -1.62794304e+00,\n'
 '        -1.53362596e+00,  1.90902805e+00, -2.35605502e+00,\n'
 '        -6.85418963e-01, -9.84479189e-01, -3.50856209e+00,\n'
 '        -4.08785403e-01, -2.75154233e-01, -8.80138278e-02,\n'
 '        -6.95071518e-02, -1.83661485e+00, -4.45105135e-03,\n'
 '        -3.64498758e+00,  3.90456974e-01,  1.45624602e+00,\n'
 '        -2.40127713e-01,  1.26914740e+00,  1.09829116e+00,\n'
 '        -2.94613719e-01, -2.02764344e+00,  4.07506674e-01,\n'
 '        -3.84432769e+00,  2.13243842e+00, -2.23197627e+00,\n'
 '        -2.80106449e+00,  2.79114103e+00,  1.45601225e+00,\n'
 '         2.34672934e-01, -1.65310955e+00,  4.95812088e-01,\n'
 '         1.71352565e+00,  1.40460432e-02, -2.14148831e+00,\n'
 '        -1.27677500e+00,  4.64705467e-01, -5.59383631e-02,\n'
 '        -4.71037269e-01,  2.13619184e+00,  1.49489057e+00,\n'
 '         9.53432441e-01, -6.36727035e-01, -4.89394218e-01,\n'
 '         6.00006104e-01,  2.73906875e+00,  1.19358158e+00,\n'
 '        -6.15837693e-01, -1.01346457e+00, -2.31314659e+00,\n'
 '        -8.34115326e-01, -1.67200518e+00,  5.87590933e-02,\n'
 '         4.23998326e-01,  3.58501017e-01,  4.37425584e-01,\n'
 '        -4.40552831e-01, -1.65322268e+00, -5.16354203e-01,\n'
 '         1.83323824e+00, -1.64545965e+00,  7.88952529e-01,\n'
 '        -9.81675684e-01,  3.71143252e-01, -6.49739325e-01,\n'
 '        -2.30803752e+00, -2.17402244e+00,  4.89440966e+00,\n'
 '         1.12976015e+00,  2.35892952e-01,  3.60233724e-01,\n'
 '        -1.84956515e+00,  1.15642774e+00,  1.89107025e+00,\n'
 '        -2.52069473e+00, -2.84602571e+00, -1.32408762e+00,\n'
 '        -1.83132112e-01,  1.51262879e-01, -4.58801210e-01,\n'
 '         4.20012116e-01, -1.65771747e+00, -1.25664389e+00,\n'
 '        -5.84347129e-01,  9.48456287e-01,  2.53842980e-01,\n'
 '         6.24419570e-01, -3.34650230e+00,  3.11430305e-01,\n'
 '         1.30288100e+00, -4.71580148e-01,  8.50525379e-01,\n'
 '         5.00231981e-01, -9.37394977e-01, -1.22290075e+00,\n'
 '         9.40712750e-01,  5.32766998e-01, -3.70175898e-01,\n'
 '         5.70587099e-01, -1.45579469e+00, -6.39665604e-01,\n'
 '         1.09456623e+00, -1.06080607e-01,  6.67849243e-01,\n'
 '         4.28570092e-01,  8.26514840e-01, -1.37854350e+00,\n'
 '        -1.54678893e+00,  2.52623534e+00,  1.36199081e+00,\n'
 '        -1.12920106e+00,  7.05761194e-01,  6.20939136e-01,\n'
 '         2.08915448e+00, -3.93806011e-01, -5.17612338e-01,\n'
 '        -1.27646089e+00,  1.96398079e+00, -1.42562139e+00,\n'
 '        -2.60236025e-01,  5.77435255e-01,  1.80758572e+00,\n'
 '        -5.60628414e-01,  1.04840529e+00,  5.64661145e-01,\n'
 '        -1.10595703e+00,  1.10727370e+00, -2.67205739e+00,\n'
 '        -2.60482597e+00,  3.39670301e-01,  2.87303329e-02,\n'
 '         1.37783670e+00, -1.63053513e+00, -7.64201045e-01,\n'
 '        -1.73765993e+00,  9.23763752e-01,  2.13820958e+00,\n'
 '         1.29698670e+00, -5.18543005e-01, -2.80610013e+00,\n'
 '        -7.25671649e-03, -1.17898369e+00, -1.40295160e+00,\n'
 '         9.70454752e-01,  9.53273475e-01, -4.00535226e-01,\n'
 '        -1.61945820e-04,  2.02419519e+00,  5.93564630e-01,\n'
 '         1.22561669e+00, -1.51596379e+00, -6.61257431e-02,\n'
 '        -1.08760917e+00,  3.39077902e+00, -1.79323244e+00,\n'
 '        -1.58268464e+00,  2.99565375e-01,  3.06594372e-01,\n'
 '        -7.21880197e-01, -2.40925461e-01, -1.84147549e+00,\n'
 '        -6.01425767e-02,  1.08809940e-01, -1.59398168e-01,\n'
 '         2.80974555e+00,  1.67261243e+00, -1.39994383e+00,\n'
 '        -1.33972645e+00, -1.26346874e+00, -5.91311932e-01,\n'
 '         1.22144842e+00,  9.47928309e-01, -1.28484547e+00,\n'
 '         1.32191241e+00,  1.65113538e-01,  2.55633950e-01,\n'
 '         6.20018721e-01, -2.12737417e+00,  2.99999762e+00,\n'
 '         4.94850784e-01, -2.14927959e+00,  7.07983434e-01,\n'
 '         1.95912719e+00,  1.24177718e+00,  1.43983841e+00,\n'
 '        -2.21110392e+00,  4.13727313e-01,  3.66284609e-01,\n'
 '         1.78254378e+00, -2.39259362e+00, -1.38911545e+00,\n'
 '         9.18246329e-01, -7.01893687e-01,  6.95304275e-01,\n'
 '         8.89265835e-01, -5.08730769e-01, -3.08145142e+00,\n'
 '        -1.79622519e+00, -2.23208451e+00,  2.79650116e+00,\n'
 '        -1.36201039e-01, -3.50179523e-01, -2.12071514e+00,\n'
 '        -1.68845058e-02,  7.20658422e-01,  7.96921492e-01,\n'
 '        -1.51985574e+00,  1.34595454e+00,  7.12418199e-01,\n'
 '        -5.81831858e-02, -1.67085493e+00,  8.24290514e-01,\n'
 '        -5.12701869e-01, -7.94695616e-01,  2.16512752e+00,\n'
 '        -2.16954351e+00, -5.83439112e-01,  2.29276991e+00,\n'
 '        -1.93228567e+00,  2.01900387e+00, -7.54671335e-01,\n'
 '        -5.39959073e-01, -2.14058685e+00, -1.10303116e+00,\n'
 '        -2.62338638e+00, -2.42963612e-01, -3.68900800e+00,\n'
 '        -2.45772982e+00,  1.31369364e+00,  1.09350347e+00,\n'
 '        -3.50321710e-01, -1.00854373e+00,  1.10849774e+00,\n'
 '         1.67458522e+00,  2.41549420e+00, -1.14076400e+00,\n'
 '         6.36518002e-01,  5.91226220e-01, -8.50290000e-01,\n'
 '        -5.46805382e-01, -1.24796897e-01, -5.51820338e-01,\n'
 '         1.77150035e+00,  3.46419066e-02, -6.57681167e-01,\n'
 '         8.52784216e-01,  7.87491947e-02, -1.32215726e+00,\n'
 '        -8.83122861e-01,  2.63038039e-01, -8.58896613e-01,\n'
 '        -8.53905380e-02, -2.31263590e+00,  5.14917851e-01,\n'
 '        -1.85063779e+00, -3.18978620e+00, -1.72809696e+00,\n'
 '        -1.93952233e-01, -1.19648576e-01, -1.82062954e-01,\n'
 '         2.06910992e+00,  7.82197058e-01,  2.02721310e+00,\n'
 '         5.15829802e-01,  1.03245163e+00,  1.07217920e+00,\n'
 '         1.17037654e+00,  7.81244755e-01,  1.30065024e-01,\n'
 '        -8.22285473e-01, -1.38791931e+00,  8.65124941e-01,\n'
 '         1.23938131e+00,  2.04732084e+00,  9.48037982e-01,\n'
 '         2.27679038e+00,  1.40032113e+00,  2.24299717e+00,\n'
 '         1.06096923e+00,  7.75817394e-01, -2.00432277e+00,\n'
 '        -1.86881614e+00, -7.40136623e-01, -1.30499101e+00,\n'
 '        -9.96763885e-01, -4.65557277e-01, -1.21848381e+00,\n'
 '        -1.17478967e-01, -7.86636293e-01, -3.41203642e+00,\n'
 '        -1.84891987e+00, -8.45542073e-01,  1.76535809e+00,\n'
 '         1.23467994e+00, -2.78471440e-01, -7.93806791e-01,\n'
 '        -1.72928953e+00, -1.05256105e+00,  3.73179388e+00,\n'
 '         6.49587989e-01, -1.76981866e+00, -1.76637673e+00,\n'
 '         1.13034832e+00, -3.86494756e-01, -3.13711703e-01,\n'
 '        -1.06359768e+00,  3.00756454e-01,  8.10100615e-01,\n'
 '         5.30609548e-01, -6.24895573e-01,  5.05628347e-01,\n'
 '         1.17717016e+00, -1.27335250e+00, -8.37730706e-01,\n'
 '        -2.03858328e+00, -2.97644949e+00, -8.24241757e-01,\n'
 '         4.50843185e-01, -7.42829740e-02,  7.88354278e-01,\n'
 '        -6.62919640e-01]])')
'test_inceptionnet | batch_shape is: [1]'
'test_inceptionnet | logits.shape is: ivy.Shape(1, 1000)'
'||'
'test_inceptionnet | indices_test | true_indices is: [258 270 279]'
'test_inceptionnet | indices_test | calc_indices is: [258 270 279]'
'test_inceptionnet | device is: cpu'
'test_inceptionnet | fw is: jax'
'test_inceptionnet | load_weights is: False'
'InceptionV3 | build | layer 1/22 built'
'InceptionV3 | build | layer 2/22 built'
'layer 3/22 built'
'InceptionV3 | build | layer 4/22 built'
'InceptionV3 | build | layer 5/22 built'
'InceptionV3 | build | layer 6/22 built'
'InceptionV3 | build | layer 7/22 built'
'InceptionV3 | build | layer 8/22 built'
'InceptionV3 | build | layer 9/22 built'
'InceptionV3 | build | layer 10/22 built'
'InceptionV3 | build | layer 11/22 built'
'InceptionV3 | build | layer 12/22 built'
'InceptionV3 | build | layer 13/22 built'
'InceptionV3 | build | layer 14/22 built'
'InceptionV3 | build | layer 15/22 built'
'InceptionV3 | build | layer 17/22 built'
'InceptionV3 | build | layer 18/22 built'
'InceptionV3 | build | layer 19/22 built'
'InceptionV3 | build | layer 20/22 built'
'InceptionV3 | build | layer 21/22 built'
'InceptionV3 | build | layer 22/22 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/4 built'
'layer 2/4 built'
'layer 3/4 built'
'layer 4/4 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/6 built'
'layer 2/6 built'
'layer 3/6 built'
'layer 4/6 built'
'layer 5/6 built'
'layer 6/6 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'inceptionNet_v3 | building InceptionV3 model | done 1/3'
'InceptionV3 | forward | input data_format is:NHWC | done 1/27'
'InceptionV3 | forward | data_format is going to be used is:NHWC | done 1/27'
'InceptionV3 | forward | input shape is:ivy.Shape(1, 224, 224, 3) | done 1/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 224, 224, 3) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 111, 111, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 111, 111, 32) | done 2/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 111, 111, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 32) | done 3/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 109, 109, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 64) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 64) | done 4/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 54, 54, 64) | done 5/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 54, 54, 80) | done 3/3'
'InceptionV3 | forward | is:ivy.Shape(1, 54, 54, 80) | done 6/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 80) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 52, 52, 192) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 52, 52, 192) | done 7/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 192) | done 8/27'
'input shape is:ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 32) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 32)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 25, 25, 256) | done 9/27'
'input shape is:ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 10/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 11/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 384) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 96) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 96)'
'one 20/20, output shape is:ivy.Shape(1, 12, 12, 288)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 12/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 12, 12, 768) | done 13/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 14/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 15/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 16/27'
'v3 16/27, output shape is:ivy.Shape(1, 12, 12, 768)'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 5, 5, 192)'
'one 7/20, output shape is:ivy.Shape(1, 5, 5, 768)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 1280) | done 17/27'
'input shape is:ivy.Shape(1, 5, 5, 1280)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 18/27'
'input shape is:ivy.Shape(1, 5, 5, 2048)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 19/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 20/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 5, 5) | done 21/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 1, 1) | done 22/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 27/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 24/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 25/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048) | done 26/27'
'InceptionV3 | forward | fc | done 27/27'
('test_inceptionnet | logits is: ivy.array([[ 2.27084395e+04,  9.02972500e+05, '
 '-1.48047031e+05,\n'
 '         1.50825562e+06,  7.02987812e+04,  2.68975719e+05,\n'
 '         6.10630688e+05,  6.24932812e+05,  1.30753211e+05,\n'
 '        -5.68577062e+05, -3.33157781e+05, -2.83188875e+05,\n'
 '         2.90093965e+04,  1.87509625e+05,  2.02536762e+06,\n'
 '         2.20257625e+05,  4.01504375e+05,  4.65943594e+04,\n'
 '        -1.58974672e+05,  9.40858875e+05,  4.19863281e+05,\n'
 '        -2.17941516e+05,  7.28214922e+04, -1.25830800e+06,\n'
 '        -7.19036484e+04,  3.19953594e+05,  1.62201538e+06,\n'
 '         7.42074062e+04,  5.88096438e+05, -1.70515750e+05,\n'
 '         4.23096133e+04,  2.08597375e+06, -1.19681888e+06,\n'
 '        -4.84080656e+05,  5.37465438e+05,  3.94377531e+05,\n'
 '         1.37637688e+06,  1.46621175e+06, -7.28789938e+05,\n'
 '         8.54831719e+04,  2.76134062e+05,  8.09559938e+05,\n'
 '         1.98899562e+05,  1.30644971e+04,  6.01807875e+05,\n'
 '         1.45819425e+06, -4.75434344e+05, -2.17449297e+05,\n'
 '         8.89954438e+05, -2.15412141e+05, -5.15748719e+05,\n'
 '        -8.10930688e+05,  1.21651850e+06, -7.21186062e+05,\n'
 '        -8.53000312e+05,  7.15168125e+04, -1.36163438e+05,\n'
 '         1.48243750e+05, -6.57639438e+05, -1.20536297e+05,\n'
 '        -1.18773075e+06, -5.68357250e+05, -8.83685312e+04,\n'
 '        -5.18229719e+05,  7.62716328e+04, -4.06820562e+05,\n'
 '        -4.36336656e+05,  1.60518675e+06, -3.06847469e+05,\n'
 '         6.21513562e+05,  5.66296750e+05,  8.42708516e+04,\n'
 '         9.35234625e+05, -2.00088172e+05,  1.16045050e+06,\n'
 '        -1.29850712e+06, -5.21900625e+05,  1.43596699e+04,\n'
 '         4.19007812e+05,  2.19740047e+05, -7.69785812e+05,\n'
 '         2.27287297e+05,  2.99672281e+05, -1.07860200e+06,\n'
 '        -9.58209125e+05,  1.23176609e+05,  6.40560062e+05,\n'
 '        -4.32720438e+05, -1.01383356e+06,  7.69803500e+05,\n'
 '        -4.29292906e+05,  2.63589875e+05,  1.24375112e+06,\n'
 '        -2.75201938e+05,  8.32796250e+05, -1.09594350e+06,\n'
 '         1.74809422e+05,  7.53624812e+05, -9.21690812e+05,\n'
 '        -1.21390875e+06,  8.20893625e+05,  9.73333500e+05,\n'
 '        -9.29228188e+05,  4.75898094e+05, -3.18229629e+04,\n'
 '        -3.21347312e+05, -1.85609638e+06,  1.43289750e+06,\n'
 '         7.85911484e+04, -6.27003250e+05, -1.78421825e+06,\n'
 '        -1.50463438e+06, -7.72830188e+05,  6.63451000e+05,\n'
 '        -5.87725438e+05,  1.36936212e+06,  1.04382150e+06,\n'
 '        -1.46193734e+05,  8.18876648e+02, -7.63183875e+05,\n'
 '         8.05949438e+05, -1.36493266e+05, -2.79889188e+05,\n'
 '         5.30569625e+05,  3.55141250e+05,  9.71362625e+05,\n'
 '        -7.56824125e+05,  6.17819625e+05, -8.90573594e+04,\n'
 '         5.77750703e+04, -6.86414688e+05,  8.09985312e+05,\n'
 '        -5.11538188e+05,  3.88458625e+05,  3.37547375e+05,\n'
 '         2.17688781e+05, -7.35891750e+05,  1.46289638e+06,\n'
 '         1.23493500e+06,  2.48038391e+05, -2.07810098e+04,\n'
 '        -9.59415188e+05,  2.65621062e+05,  2.43146609e+05,\n'
 '         1.22876212e+06, -9.83687750e+05, -3.88731094e+05,\n'
 '        -3.95030031e+05,  6.26916250e+05,  1.15571450e+06,\n'
 '         2.41193391e+05,  1.85555838e+06, -6.50659812e+05,\n'
 '         4.59495094e+05,  2.61582484e+05,  1.72828625e+06,\n'
 '        -1.02234769e+06, -4.56392656e+05,  5.22639281e+05,\n'
 '         8.57937125e+05,  8.31108438e+05,  2.33619359e+05,\n'
 '         4.92552422e+04,  4.39586812e+05, -1.35213238e+06,\n'
 '         7.16408500e+05,  3.20125449e+04,  2.40780906e+05,\n'
 '         6.80569625e+05,  7.89717812e+05, -1.15271175e+06,\n'
 '        -7.02726438e+05, -3.81885688e+05, -1.96929375e+05,\n'
 '        -2.92472875e+05,  1.30884212e+06, -3.95611125e+05,\n'
 '        -3.74716281e+05, -7.51081812e+05,  5.76059938e+05,\n'
 '        -5.64187109e+04, -6.60568438e+05, -7.08046000e+05,\n'
 '         7.78135562e+05,  2.18974453e+05,  7.40767125e+05,\n'
 '        -1.82856172e+05,  3.12592406e+05, -5.47137125e+05,\n'
 '         7.52161406e+04,  3.62288875e+05,  2.25959578e+05,\n'
 '         1.92623612e+06,  3.07432719e+05,  6.98658750e+05,\n'
 '         7.66415391e+04, -1.33137031e+05,  2.59632188e+05,\n'
 '         7.32712688e+05, -1.45349638e+06,  1.75446488e+06,\n'
 '         8.16790781e+04,  9.09932812e+05, -1.91672725e+06,\n'
 '        -4.99043438e+05, -1.13303212e+06, -2.00186469e+05,\n'
 '        -3.28237062e+05,  4.94655969e+05, -2.03303000e+06,\n'
 '         1.03794875e+05, -1.31923100e+06, -5.64653164e+04,\n'
 '         1.21348325e+06,  9.07457500e+05,  5.37380688e+05,\n'
 '         1.40278250e+05,  3.79335750e+05,  1.25540625e+06,\n'
 '         3.75894375e+05, -2.62877109e+04,  1.95657900e+06,\n'
 '        -1.46682812e+06, -1.08184250e+06,  9.01433312e+05,\n'
 '         1.54767281e+05, -3.73943688e+05,  1.07149412e+06,\n'
 '         1.04456856e+06,  1.78476609e+05, -6.26699188e+05,\n'
 '         1.04802531e+05, -4.39842750e+05, -4.61283281e+05,\n'
 '         4.22378312e+05,  8.72257125e+05, -4.11975719e+05,\n'
 '         5.51981938e+05, -5.99553938e+05, -3.97749594e+05,\n'
 '        -1.32340812e+06,  1.20767451e+04,  1.14941812e+06,\n'
 '        -1.07244797e+05, -7.22422062e+05,  2.61445547e+05,\n'
 '         1.37003450e+06, -6.91242875e+05,  4.60995219e+05,\n'
 '        -3.92568031e+05,  2.48722141e+05,  6.71538750e+04,\n'
 '        -1.44004312e+05,  2.88087781e+05, -6.22725062e+05,\n'
 '        -8.64359688e+05, -1.60492031e+05, -6.48684375e+05,\n'
 '         1.87939500e+05,  1.98981189e+03, -8.94329812e+05,\n'
 '        -1.01909269e+06, -1.84213531e+05,  1.48209450e+06,\n'
 '         1.39470075e+06,  1.37372850e+06,  2.15668691e+04,\n'
 '         6.27385750e+05,  1.09853012e+06, -2.86074219e+05,\n'
 '         5.03453781e+05, -1.60696062e+05,  2.05210200e+06,\n'
 '         5.86930500e+05,  1.40264038e+06, -2.50633422e+05,\n'
 '        -4.92803688e+05,  4.02463000e+05,  5.33786062e+05,\n'
 '        -3.05854719e+05, -7.87882375e+05, -5.14118969e+05,\n'
 '        -2.73146156e+05, -5.01138375e+05, -1.48372859e+05,\n'
 '        -1.15602388e+06,  1.47207641e+05, -5.15511062e+05,\n'
 '        -5.70746445e+04,  1.91043672e+05,  7.57703875e+05,\n'
 '         1.05512925e+06, -9.28310750e+05, -3.12541344e+05,\n'
 '        -1.90201100e+06, -4.62225664e+04, -9.08511062e+05,\n'
 '         1.09302539e+05, -4.85479438e+05, -1.02674269e+06,\n'
 '         3.36556062e+05, -7.47929141e+04, -4.60339656e+05,\n'
 '         3.89840500e+05,  2.05095266e+05, -2.60315750e+05,\n'
 '         5.35608000e+05, -1.56728712e+06,  7.43279750e+05,\n'
 '         3.97453250e+05,  4.54822031e+04,  1.36477850e+06,\n'
 '        -1.75557938e+05, -4.16768312e+05, -7.46268438e+05,\n'
 '        -5.54310000e+05, -1.00233606e+06,  1.68918050e+06,\n'
 '         1.00425431e+06,  3.55155250e+05,  6.23095188e+05,\n'
 '         2.92622250e+05, -1.06731125e+06,  2.08332219e+05,\n'
 '        -1.07421050e+06,  5.49440750e+05,  1.07688850e+06,\n'
 '         2.59701406e+05, -7.62969188e+05, -7.74702250e+05,\n'
 '         1.04487088e+06,  1.57227788e+06, -6.96917125e+05,\n'
 '         9.38282938e+05,  1.14312662e+06,  2.09476850e+06,\n'
 '         2.29207844e+05,  7.65937000e+05, -1.64462725e+06,\n'
 '        -5.71962383e+04,  1.37637688e+05, -1.05242800e+06,\n'
 '        -1.90963703e+05,  6.35949875e+05,  1.56954800e+06,\n'
 '        -1.26616612e+06,  3.95247812e+05,  1.99192297e+05,\n'
 '        -1.86013900e+06, -5.16028672e+04,  2.83365410e+04,\n'
 '         3.82021000e+05, -9.37556938e+05, -1.07378162e+06,\n'
 '         1.19848195e+05, -8.46073812e+05,  6.38205312e+05,\n'
 '         1.22826172e+05,  4.05804281e+05, -2.86442344e+05,\n'
 '         4.83463938e+05,  4.12525500e+05,  8.38660500e+05,\n'
 '        -1.14768638e+06,  3.76596000e+05,  5.48542500e+04,\n'
 '         7.93801000e+05,  6.86907000e+05, -4.52541219e+05,\n'
 '        -8.01828438e+05,  6.98008000e+05, -7.03807312e+05,\n'
 '         4.46524156e+05,  5.03399453e+04,  1.19284400e+06,\n'
 '        -1.37792912e+06, -5.55808375e+05,  1.76651297e+05,\n'
 '        -4.96840000e+05, -1.11596538e+06,  3.82885000e+05,\n'
 '        -1.41837875e+06,  1.65940312e+06,  4.12881188e+05,\n'
 '        -1.82565225e+06, -3.70386844e+05, -3.95065594e+05,\n'
 '        -1.20748488e+06, -4.21470812e+05,  8.45168688e+05,\n'
 '         5.56933750e+05, -6.94625812e+05, -1.14152266e+05,\n'
 '        -1.33040100e+06, -3.59714812e+05, -9.90715625e+05,\n'
 '        -7.71940562e+05,  7.21533188e+05, -1.27485462e+06,\n'
 '         1.72848300e+06, -1.53974188e+06,  5.98841375e+05,\n'
 '        -9.87896312e+05, -5.52485352e+04,  6.14740250e+05,\n'
 '         9.76677875e+05, -4.18782062e+05,  7.34768375e+05,\n'
 '         4.23655438e+05, -1.35882175e+06,  8.81446312e+05,\n'
 '         3.90757938e+05, -2.80798188e+05,  5.04923438e+05,\n'
 '        -6.51337438e+05,  1.90480656e+05,  2.95388156e+05,\n'
 '        -7.26610312e+04,  4.46717594e+05,  1.17269150e+06,\n'
 '         1.15506398e+05,  1.48547078e+05, -1.39120500e+05,\n'
 '         1.14865562e+06,  3.46532000e+05,  3.26983531e+05,\n'
 '        -5.15743156e+05,  4.13009594e+05, -6.02194375e+05,\n'
 '         1.42647725e+06,  1.07936836e+05, -6.82474438e+05,\n'
 '        -1.14221188e+05,  1.36054525e+06, -1.62322351e+03,\n'
 '         1.97578828e+05,  8.84178750e+05,  2.62142891e+05,\n'
 '        -3.95521094e+05,  5.83997812e+05, -1.06751912e+06,\n'
 '         4.21863625e+05,  7.49413750e+05, -1.07173212e+06,\n'
 '         8.22961719e+04, -3.07678531e+05, -2.22025975e+06,\n'
 '         1.40206875e+05, -8.68673438e+04, -7.31904453e+04,\n'
 '        -9.29801625e+05,  2.30731150e+06, -9.21194438e+05,\n'
 '         2.30537688e+05,  5.40924500e+05,  2.81615469e+05,\n'
 '         6.15488062e+05,  8.14787688e+05, -2.64272125e+05,\n'
 '         3.32288094e+05, -5.68552750e+05,  6.84758312e+05,\n'
 '         8.62265312e+05, -6.31073000e+05, -5.40629625e+05,\n'
 '         2.48431469e+05, -1.80827475e+06,  1.38531862e+06,\n'
 '         7.99734562e+05,  2.01591750e+06, -4.40999170e+03,\n'
 '         5.14470156e+05, -1.26430912e+06, -1.39299525e+06,\n'
 '         2.61358422e+05, -1.00200438e+06, -1.36715850e+06,\n'
 '         6.88174250e+05,  4.05390281e+05,  6.75570438e+05,\n'
 '        -2.13560273e+04, -1.15000412e+06,  1.55199953e+05,\n'
 '         5.30019688e+05,  7.71797062e+05, -1.58354859e+05,\n'
 '         1.79690844e+05,  1.50209512e+06,  4.19722344e+05,\n'
 '         3.62443062e+05, -7.28148250e+05,  3.49982422e+04,\n'
 '        -1.68797625e+06,  9.42571328e+04, -1.44442025e+06,\n'
 '         1.19755312e+04,  8.98598125e+05, -8.98940859e+04,\n'
 '         1.06205712e+06,  1.08757312e+06,  5.78625156e+04,\n'
 '         8.20948125e+04,  5.70025125e+05, -2.19163531e+05,\n'
 '        -3.58901938e+05,  1.78374297e+04, -2.43691484e+05,\n'
 '         2.49889531e+05, -6.41067125e+05,  4.87933250e+05,\n'
 '        -1.70969016e+05, -1.02148819e+06,  1.52062062e+06,\n'
 '        -7.30923188e+05,  6.97791875e+05, -5.50513188e+05,\n'
 '         1.80171138e+06,  4.45116188e+05, -1.85772359e+05,\n'
 '         1.16753800e+06, -3.94404500e+05, -1.00639300e+06,\n'
 '        -3.59689375e+05, -1.64956922e+05, -1.40841362e+06,\n'
 '        -5.53734424e+03, -3.62630094e+05, -1.17618088e+06,\n'
 '        -1.40571391e+05, -1.43034038e+06, -4.50712688e+05,\n'
 '        -7.96505938e+04,  1.50337362e+06, -1.49241975e+06,\n'
 '        -2.02633531e+05,  2.15233000e+05, -3.63074406e+05,\n'
 '        -6.14222383e+04, -4.22021523e+04, -8.65703375e+05,\n'
 '         8.11547375e+05, -1.60554312e+05,  6.22248625e+05,\n'
 '        -5.31342375e+05,  6.95865625e+04, -8.20804188e+05,\n'
 '        -7.52556688e+05,  8.02795812e+05, -5.64986812e+05,\n'
 '         7.06484219e+04, -2.75366969e+05, -1.13889062e+06,\n'
 '         3.96665219e+05, -1.65347462e+06,  3.81297070e+04,\n'
 '         4.02649438e+05,  1.25365138e+06,  1.27079462e+06,\n'
 '        -4.95469656e+05, -1.82857219e+05, -1.25939212e+06,\n'
 '         9.67801688e+05, -1.88724438e+05, -1.50761175e+06,\n'
 '        -1.44138562e+05,  4.24874594e+05, -2.61173625e+05,\n'
 '         8.08446625e+05, -9.50742188e+04, -4.42479812e+05,\n'
 '         4.68949125e+05, -3.39622250e+05,  1.70392350e+06,\n'
 '        -3.12471000e+05, -9.01093812e+05, -2.24732641e+05,\n'
 '         5.97289500e+05, -1.52318150e+06,  2.98857375e+05,\n'
 '        -4.96681688e+05, -1.03513012e+06,  8.90078188e+05,\n'
 '         1.94942391e+05,  6.13725742e+04,  5.47331812e+05,\n'
 '         1.34681650e+06, -2.97997594e+05, -1.22748075e+06,\n'
 '        -1.94616016e+05,  9.84827375e+05,  3.76015844e+05,\n'
 '        -1.00222258e+05,  8.62951688e+05, -5.93963984e+04,\n'
 '        -3.56981594e+05, -1.99279125e+05,  9.49325438e+05,\n'
 '         6.69539062e+05, -4.68403719e+05, -6.74919125e+05,\n'
 '        -3.62755594e+05, -7.91146562e+05,  7.08309453e+04,\n'
 '         8.74937188e+04,  2.34538125e+05,  1.15972212e+06,\n'
 '        -5.77441000e+05,  1.67352750e+05, -5.22249312e+05,\n'
 '         7.88284312e+05,  1.02704194e+06,  4.12872094e+05,\n'
 '         5.27219500e+05, -1.58521888e+06,  9.24713125e+05,\n'
 '         2.62229344e+05,  6.39620062e+05, -1.16177539e+04,\n'
 '        -9.08113500e+05,  1.32374750e+06,  1.33267512e+06,\n'
 '        -2.38153574e+04,  6.30908375e+05, -9.73825500e+05,\n'
 '         4.62256188e+05,  2.28857266e+05, -1.97358500e+06,\n'
 '        -8.12561500e+05, -3.02644219e+05,  1.46317262e+06,\n'
 '         1.50520359e+05, -2.09811625e+05,  1.26390175e+06,\n'
 '        -1.26793800e+06,  1.15505412e+06,  2.81820000e+05,\n'
 '        -5.39160625e+05,  3.16407250e+05,  3.12545312e+05,\n'
 '         9.06577750e+05,  2.00814094e+05,  1.35920812e+06,\n'
 '        -8.27918000e+05, -1.71361612e+06,  6.30509125e+05,\n'
 '         5.83808750e+05, -3.41343531e+05, -7.81941750e+05,\n'
 '         7.64577062e+05,  8.08521125e+05, -4.34193875e+05,\n'
 '        -9.24373125e+05, -9.30527266e+04,  9.15929812e+05,\n'
 '         6.43459000e+05, -2.95738594e+05,  1.96295900e+06,\n'
 '        -5.09570281e+05, -1.09431328e+05, -7.62834000e+05,\n'
 '        -6.15095875e+05,  1.03050594e+05,  1.90998516e+04,\n'
 '         1.08343262e+06, -5.23635500e+05,  9.90537938e+05,\n'
 '         1.42688969e+05,  7.10888000e+05, -4.29831094e+05,\n'
 '        -1.56238412e+06,  4.54556969e+05, -3.73602750e+05,\n'
 '         1.10121562e+06,  4.56195688e+05, -8.19388438e+05,\n'
 '         1.15271525e+06, -5.75328500e+05, -1.43965800e+06,\n'
 '         1.10569138e+06, -1.05508450e+06, -9.13289812e+05,\n'
 '         9.42776125e+05, -3.62666594e+05, -7.96357875e+05,\n'
 '        -8.21629938e+05, -4.77761094e+05,  6.06834312e+05,\n'
 '         6.28162750e+05,  1.69995031e+05,  8.14085750e+05,\n'
 '         1.15984788e+06,  9.15983750e+05, -3.11007812e+05,\n'
 '         4.72976469e+05, -1.01461844e+06,  4.52257594e+05,\n'
 '         3.23171406e+04,  4.91196250e+04, -7.91354062e+05,\n'
 '         4.44375531e+05, -7.17157562e+05,  3.11285906e+05,\n'
 '        -7.21715188e+05,  1.04439338e+06,  1.27689867e+05,\n'
 '        -3.63900781e+05,  1.38301312e+05, -6.27084258e+04,\n'
 '         5.22813469e+05, -1.23067100e+06,  6.40323750e+05,\n'
 '        -4.85705820e+04, -1.01203750e+05, -5.10921938e+05,\n'
 '        -1.68379350e+06,  9.37163250e+05,  9.11155156e+04,\n'
 '         2.58276525e+06,  2.70809500e+05, -8.14711312e+05,\n'
 '        -9.39403625e+05, -1.19054562e+06, -6.70934750e+05,\n'
 '         5.26936125e+05, -6.49491812e+05, -4.24938719e+05,\n'
 '         2.87811531e+05, -1.59637156e+05,  3.82491719e+05,\n'
 '        -7.78327000e+05,  2.75579750e+05,  1.84554297e+05,\n'
 '        -7.05086062e+05,  9.05459180e+03,  5.19070344e+05,\n'
 '         9.90307625e+05, -2.10956300e+06, -7.79882938e+05,\n'
 '         9.78354625e+05,  6.78559375e+04, -1.23904500e+06,\n'
 '        -5.19129453e+04,  3.49646094e+05, -1.62400612e+06,\n'
 '        -1.30687862e+06, -3.71802344e+04, -3.05626938e+05,\n'
 '         2.87357562e+05,  3.63732188e+05, -2.90001688e+05,\n'
 '        -2.14320859e+05,  2.62651062e+05,  6.12501875e+05,\n'
 '        -1.15810312e+06, -7.06190938e+05, -1.35722862e+06,\n'
 '         2.85307406e+05,  3.00312188e+05, -6.41766438e+05,\n'
 '         5.37723062e+05,  3.93349219e+05,  2.55418859e+05,\n'
 '         4.43621781e+05, -1.03633275e+06,  7.47406445e+03,\n'
 '        -1.34847656e+05,  7.42764812e+05, -6.93185625e+04,\n'
 '         1.14048975e+06, -8.91111000e+05, -1.69679988e+06,\n'
 '        -1.05524212e+06, -6.32073688e+05,  2.79687969e+05,\n'
 '         8.63609938e+05,  1.52908734e+05, -4.88472094e+05,\n'
 '        -1.41315662e+06,  5.87635812e+05, -7.01594438e+05,\n'
 '         1.22973641e+05, -1.02577109e+05, -4.33570469e+05,\n'
 '        -2.58075000e+05, -7.32435812e+05,  7.20186938e+05,\n'
 '         7.23285688e+05,  1.26857700e+06,  1.87966750e+05,\n'
 '        -1.50135550e+06, -8.80149219e+03, -8.79030875e+05,\n'
 '        -1.06649844e+05, -2.60005516e+05,  1.88685406e+05,\n'
 '        -3.44751125e+05, -2.37459688e+05, -1.13153938e+06,\n'
 '        -1.21080950e+06,  2.60553812e+05,  1.19474900e+06,\n'
 '        -7.92677875e+05,  2.24565109e+05, -3.66438188e+05,\n'
 '         8.72658906e+04,  1.44445225e+06, -3.66013469e+05,\n'
 '        -1.36231088e+06,  2.07035547e+05,  3.91077979e+03,\n'
 '         6.53184312e+05,  6.14978125e+05,  9.27509750e+05,\n'
 '         1.00306644e+06, -9.52440688e+05, -9.21691250e+05,\n'
 '        -3.92921594e+05, -7.02343125e+05,  1.88907719e+05,\n'
 '        -2.70035375e+05,  1.02456150e+06, -8.77804188e+05,\n'
 '        -3.50133359e+04,  1.20166900e+06,  7.93501875e+05,\n'
 '         2.72854469e+05, -2.92181125e+05,  7.85173984e+04,\n'
 '         1.49869162e+06,  4.47160594e+05, -3.92792812e+04,\n'
 '        -2.76478789e+04,  8.07951438e+05, -9.71275625e+05,\n'
 '        -1.28009338e+06,  1.68594062e+06,  6.24214562e+05,\n'
 '         9.38662312e+05, -5.50984938e+05,  6.90251625e+05,\n'
 '        -2.76022719e+05, -2.46431250e+05, -3.78154719e+05,\n'
 '        -9.16080188e+05, -7.42604688e+05, -5.56462734e+04,\n'
 '        -4.98757688e+05, -1.42557612e+06, -7.74051688e+05,\n'
 '         3.73114219e+05,  2.33265797e+05, -9.99750062e+05,\n'
 '         1.23287325e+06,  5.41457891e+04, -2.35233234e+05,\n'
 '         6.80171062e+05,  5.55091812e+05,  5.69809062e+05,\n'
 '         5.59522688e+05,  3.94537750e+05,  1.43355525e+06,\n'
 '         7.53863750e+05,  6.07625469e+04,  1.90707094e+05,\n'
 '        -7.83863750e+05,  2.32183578e+05,  4.87705469e+05,\n'
 '        -9.46947031e+04,  1.35413300e+06, -9.26950234e+04,\n'
 '        -1.21672088e+06,  6.07823125e+05, -2.47102828e+05,\n'
 '         2.50762363e+04, -1.30039388e+06, -8.11621500e+05,\n'
 '        -3.15730977e+04,  5.31300750e+05, -2.80446312e+05,\n'
 '         4.78108281e+05, -9.10854938e+05,  4.94714938e+05,\n'
 '        -5.23183375e+05, -3.58921656e+05, -6.45320742e+04,\n'
 '         5.42101750e+05,  2.02089359e+05,  9.63581562e+05,\n'
 '         1.00533419e+06, -3.22790156e+05, -5.21668469e+05,\n'
 '         7.52662625e+05, -3.05606750e+05,  4.05685281e+05,\n'
 '        -1.46442188e+05,  4.56535078e+04,  9.13729250e+05,\n'
 '         7.58584250e+05,  1.42608375e+06,  3.12428438e+05,\n'
 '         1.37281362e+06,  7.23585938e+05, -4.44447375e+05,\n'
 '         6.82772688e+05, -9.09513938e+05,  2.46396641e+05,\n'
 '        -5.53683938e+05,  9.13081000e+05, -1.80966516e+05,\n'
 '         1.60022734e+04, -6.64700438e+05,  4.35639453e+04,\n'
 '         4.51118656e+05, -3.98245906e+05,  2.30071031e+05,\n'
 '         1.66656588e+06,  8.22070312e+05, -5.96871375e+05,\n'
 '        -8.96781625e+05,  3.68316602e+04,  4.17928062e+05,\n'
 '        -3.45903094e+05, -1.18205438e+05, -1.27579775e+06,\n'
 '         1.36796975e+06,  8.40630750e+05,  8.79737891e+03,\n'
 '         1.45047922e+05, -7.05771719e+04, -2.26442312e+05,\n'
 '        -6.96615625e+05, -9.20170688e+05,  1.99631047e+05,\n'
 '        -5.19155625e+05, -4.46190688e+05, -3.21601844e+05,\n'
 '        -6.15022562e+05, -1.55029619e+04,  9.06098688e+05,\n'
 '         1.32059000e+06, -3.10154188e+05,  8.19848938e+05,\n'
 '        -7.84361562e+04,  3.17137637e+04,  3.58130656e+05,\n'
 '         1.25313338e+06, -7.57740312e+05,  6.55118688e+05,\n'
 '        -8.03117125e+05,  9.42087562e+05, -8.47913250e+05,\n'
 '        -1.42983875e+06,  1.35585250e+05,  1.44066925e+06,\n'
 '         4.65618469e+05, -4.46187188e+04,  2.53913984e+05,\n'
 '        -1.76670734e+05, -1.01574469e+06, -2.78105750e+05,\n'
 '        -1.23381047e+05, -8.18085438e+05, -8.10626312e+05,\n'
 '        -1.58370609e+05, -1.29610175e+06,  2.61925891e+05,\n'
 '        -1.90716700e+06,  1.17159225e+06, -1.13790075e+06,\n'
 '         4.74739750e+05, -2.67889250e+05, -7.38362438e+05,\n'
 '         6.44241750e+05, -3.56749344e+05, -1.97098425e+06,\n'
 '        -4.14758633e+04,  1.27711025e+06, -8.10065812e+05,\n'
 '         1.84526938e+06, -1.30830250e+06, -1.22108662e+06,\n'
 '        -1.91218328e+05,  1.41957312e+06, -2.65781781e+05,\n'
 '         2.88492938e+05, -6.63087625e+05,  9.88722625e+05,\n'
 '        -4.27766656e+05, -7.56106125e+05, -1.67167234e+05,\n'
 '         1.23355262e+06, -3.22191375e+05,  6.43785438e+05,\n'
 '        -3.03078250e+05,  2.05577225e+06,  1.38688825e+06,\n'
 '        -5.44754258e+04,  1.21694100e+06,  2.35964656e+05,\n'
 '        -8.22704812e+05]])')
'test_inceptionnet | batch_shape is: [1]'
'test_inceptionnet | logits.shape is: ivy.Shape(1, 1000)'
'||'
'test_inceptionnet | device is: cpu'
'test_inceptionnet | fw is: jax'
'test_inceptionnet | load_weights is: True'
'InceptionV3 | build | layer 1/22 built'
'InceptionV3 | build | layer 2/22 built'
'layer 3/22 built'
'InceptionV3 | build | layer 4/22 built'
'InceptionV3 | build | layer 5/22 built'
'InceptionV3 | build | layer 6/22 built'
'InceptionV3 | build | layer 7/22 built'
'InceptionV3 | build | layer 8/22 built'
'InceptionV3 | build | layer 9/22 built'
'InceptionV3 | build | layer 10/22 built'
'InceptionV3 | build | layer 11/22 built'
'InceptionV3 | build | layer 12/22 built'
'InceptionV3 | build | layer 13/22 built'
'InceptionV3 | build | layer 14/22 built'
'InceptionV3 | build | layer 15/22 built'
'InceptionV3 | build | layer 17/22 built'
'InceptionV3 | build | layer 18/22 built'
'InceptionV3 | build | layer 19/22 built'
'InceptionV3 | build | layer 20/22 built'
'InceptionV3 | build | layer 21/22 built'
'InceptionV3 | build | layer 22/22 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/4 built'
'layer 2/4 built'
'layer 3/4 built'
'layer 4/4 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/6 built'
'layer 2/6 built'
'layer 3/6 built'
'layer 4/6 built'
'layer 5/6 built'
'layer 6/6 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'inceptionNet_v3 | building InceptionV3 model | done 1/3'
'inceptionNet_v3 | clearning pretrained weights | done 2/3'
'inceptionNet_v3 | loading pretrained weights | done 3/3'
'InceptionV3 | forward | input data_format is:NHWC | done 1/27'
'InceptionV3 | forward | data_format is going to be used is:NHWC | done 1/27'
'InceptionV3 | forward | input shape is:ivy.Shape(1, 224, 224, 3) | done 1/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 224, 224, 3) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 111, 111, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 111, 111, 32) | done 2/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 111, 111, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 32) | done 3/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 109, 109, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 64) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 64) | done 4/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 54, 54, 64) | done 5/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 54, 54, 80) | done 3/3'
'InceptionV3 | forward | is:ivy.Shape(1, 54, 54, 80) | done 6/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 80) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 52, 52, 192) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 52, 52, 192) | done 7/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 192) | done 8/27'
'input shape is:ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 32) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 32)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 25, 25, 256) | done 9/27'
'input shape is:ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 10/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 11/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 384) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 96) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 96)'
'one 20/20, output shape is:ivy.Shape(1, 12, 12, 288)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 12/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 12, 12, 768) | done 13/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 14/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 15/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 16/27'
'v3 16/27, output shape is:ivy.Shape(1, 12, 12, 768)'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 5, 5, 192)'
'one 7/20, output shape is:ivy.Shape(1, 5, 5, 768)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 1280) | done 17/27'
'input shape is:ivy.Shape(1, 5, 5, 1280)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 18/27'
'input shape is:ivy.Shape(1, 5, 5, 2048)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 19/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 20/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 5, 5) | done 21/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 1, 1) | done 22/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 27/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 24/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 25/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048) | done 26/27'
'InceptionV3 | forward | fc | done 27/27'
('test_inceptionnet | logits is: ivy.array([[ 1.31299067e+00, '
 '-9.10785675e-01,  3.29865634e-01,\n'
 '         2.95258331e+00,  8.10467839e-01, -1.74668193e-01,\n'
 '         3.33803892e+00, -4.99150723e-01,  3.54579031e-01,\n'
 '        -2.29515171e+00, -8.64671648e-01, -1.98412105e-01,\n'
 '        -3.90140653e-01,  7.65480340e-01,  1.74564564e+00,\n'
 '        -2.13141465e+00, -7.49898195e-01, -5.30144215e-01,\n'
 '        -8.65069032e-02,  7.65097320e-01,  2.37927437e+00,\n'
 '        -1.88421369e+00,  2.49732637e+00, -1.08412588e+00,\n'
 '        -4.48239707e-02, -1.80822110e+00, -1.82645321e+00,\n'
 '        -1.37985373e+00, -1.37592447e+00, -2.46960449e+00,\n'
 '         3.62911224e-01,  2.09339738e+00,  2.26349568e+00,\n'
 '         2.32192755e-01,  1.15667307e+00, -2.12245965e+00,\n'
 '         1.59595132e+00, -4.85648304e-01, -1.03329372e+00,\n'
 '         1.12369633e+00,  2.13360620e+00,  8.51906762e-02,\n'
 '        -2.22364634e-01, -8.22054446e-02, -1.68499076e+00,\n'
 '        -2.53725553e+00,  3.35364044e-01,  2.46555448e-01,\n'
 '        -6.07675493e-01, -7.94708192e-01, -6.19937956e-01,\n'
 '        -1.70803368e-01, -2.56604493e-01, -2.32648611e+00,\n'
 '        -6.46273255e-01,  1.80998161e-01, -2.00289607e+00,\n'
 '        -1.29700410e+00, -3.74266028e-01, -1.41839993e+00,\n'
 '         1.94198862e-01,  1.05324566e+00, -2.64131141e+00,\n'
 '        -2.48587108e+00, -1.18723214e+00, -1.12153977e-01,\n'
 '        -1.62936866e+00,  3.90243769e-01, -7.47307062e-01,\n'
 '        -7.88031340e-01, -3.14520538e-01, -7.76716471e-01,\n'
 '         6.24767959e-01, -3.83098424e-01,  5.94073296e-01,\n'
 '        -1.92174941e-01, -9.85341787e-01,  7.41531908e-01,\n'
 '         4.97027725e-01,  5.51002264e-01, -1.69560388e-01,\n'
 '         7.84854651e-01, -3.09239179e-02,  7.80681789e-01,\n'
 '         2.94969416e+00, -2.50253499e-01, -1.36229396e+00,\n'
 '        -9.51480746e-01, -5.76352656e-01, -1.02229804e-01,\n'
 '        -1.15596259e+00,  1.81373286e+00, -4.51190352e-01,\n'
 '         1.76809371e-01,  6.65757060e-03, -1.17695928e+00,\n'
 '         1.18426228e+00, -1.24287569e+00, -2.47133231e+00,\n'
 '         2.64641666e+00,  4.80793059e-01, -6.29718900e-02,\n'
 '        -1.69238162e+00, -3.68132055e-01,  2.51331478e-02,\n'
 '        -3.57979584e+00, -2.13572502e+00, -1.47107136e+00,\n'
 '        -3.67922246e-01,  7.73108006e-02,  7.72117734e-01,\n'
 '        -1.33344305e+00,  3.25181222e+00,  2.34909773e+00,\n'
 '         2.54470634e+00, -1.09623992e+00, -1.46703267e+00,\n'
 '         7.89947748e-01, -1.55221403e+00,  7.41268873e-01,\n'
 '         6.34541392e-01, -2.41852617e+00,  1.27628958e+00,\n'
 '         2.69252658e-01, -3.58522153e+00, -1.62909090e-01,\n'
 '         6.48843884e-01,  1.82130682e+00,  6.06242530e-02,\n'
 '        -5.22779077e-02,  1.23804069e+00,  1.93971109e+00,\n'
 '         1.81441760e+00, -2.88097322e-01,  1.18351400e+00,\n'
 '         1.01108658e+00,  2.07667398e+00,  2.81822771e-01,\n'
 '         2.80646443e-01, -1.04469299e+00,  1.24296546e-02,\n'
 '        -3.98072630e-01, -2.22682929e+00, -1.52165949e-01,\n'
 '         3.02570128e+00, -6.50846600e-01,  1.45742750e+00,\n'
 '        -1.76012969e+00,  2.83863872e-01,  8.52133572e-01,\n'
 '         2.07457352e+00, -5.65059721e-01,  2.64077449e+00,\n'
 '         3.31345797e-02,  1.51128924e+00, -3.20420456e+00,\n'
 '        -1.04575205e+00,  2.29367566e+00, -2.14352274e+00,\n'
 '        -1.43027484e-01,  1.52774191e+00, -1.16168821e+00,\n'
 '        -2.65519500e+00,  5.28248429e-01, -4.31282371e-01,\n'
 '         1.10443793e-01, -1.95469415e+00,  4.07777756e-01,\n'
 '        -3.58594283e-02,  2.39306212e+00,  1.20718598e+00,\n'
 '        -7.08570301e-01, -1.38096297e+00,  6.67411625e-01,\n'
 '         2.00255465e+00, -7.56753445e-01,  6.92432106e-01,\n'
 '         3.13523412e-02,  1.53631449e+00, -5.89829803e-01,\n'
 '        -8.13118577e-01,  8.87891769e-01, -1.78675127e+00,\n'
 '        -7.75644302e-01, -7.57714331e-01,  1.58457935e+00,\n'
 '         2.83245373e+00, -1.06754446e+00, -1.07357359e+00,\n'
 '        -3.35644245e+00, -7.28168726e-01, -2.97324002e-01,\n'
 '         6.30246818e-01, -1.64007974e+00, -1.11458659e+00,\n'
 '        -1.01202786e+00, -1.58511639e+00,  1.41391706e+00,\n'
 '        -1.13703072e+00,  4.65241894e-02, -5.28113306e-01,\n'
 '        -6.40718996e-01, -2.75182873e-01,  4.22725916e+00,\n'
 '        -1.78423560e+00, -1.76112258e+00, -2.05757666e+00,\n'
 '         1.09190285e+00, -1.29299629e+00, -9.01336670e-01,\n'
 '        -3.43763739e-01, -2.77540278e+00,  4.84750420e-01,\n'
 '         6.86079264e-01,  1.78497672e+00, -4.74998415e-01,\n'
 '         6.69976592e-01, -2.74188906e-01,  1.61644006e+00,\n'
 '        -3.11041594e+00, -3.58595073e-01,  5.54959893e-01,\n'
 '         4.12714243e+00,  1.60246134e+00,  2.92876053e+00,\n'
 '        -2.00099921e+00,  1.15416884e+00, -2.76475000e+00,\n'
 '        -2.85969615e-01,  4.27217752e-01, -8.16433489e-01,\n'
 '         1.22574461e+00,  1.16542137e+00,  1.19505251e+00,\n'
 '        -3.03234965e-01,  5.01928210e-01,  5.65953851e-01,\n'
 '        -2.18483543e+00,  5.79733491e-01,  6.46641254e-02,\n'
 '         8.06972146e-01,  5.15662193e-01,  7.23054409e-01,\n'
 '        -2.46766615e+00, -2.19184780e+00, -4.98505682e-01,\n'
 '        -7.70313322e-01,  1.89824730e-01,  7.47451925e+00,\n'
 '         5.33715677e+00,  3.57476711e+00, -5.85550487e-01,\n'
 '        -2.40829658e+00, -1.38735032e+00, -1.58301556e+00,\n'
 '         1.08667254e+00,  8.84922862e-01,  8.00869846e+00,\n'
 '         1.86811581e+01,  5.27261925e+00,  5.41108274e+00,\n'
 '         7.16846991e+00, -2.35829353e+00, -1.51112580e+00,\n'
 '        -9.16061759e-01, -3.91483307e-01, -7.69016683e-01,\n'
 '         1.72555733e+00, -7.60342300e-01,  2.46913552e+00,\n'
 '         1.30873938e+01, -1.09022427e+00,  1.53984040e-01,\n'
 '         1.07574791e-01,  5.75494409e-01, -1.79728949e+00,\n'
 '         5.41732788e-01,  2.76693296e+00,  4.58031595e-02,\n'
 '         1.14548016e+01,  4.72625434e-01, -1.26451135e+00,\n'
 '        -7.22915232e-01,  3.83806276e+00, -4.54343468e-01,\n'
 '        -1.82099319e+00, -1.46204531e+00,  1.23415029e+00,\n'
 '         4.09051090e-01,  6.75023913e-01, -5.92758417e-01,\n'
 '         9.47472453e-01,  6.45741969e-02, -1.80035740e-01,\n'
 '        -8.68863344e-01, -1.30519807e+00,  4.78442478e+00,\n'
 '        -1.01080978e+00, -1.25170791e+00, -3.40994310e+00,\n'
 '        -6.45140350e-01, -1.59595239e+00,  7.79892683e-01,\n'
 '        -3.89477611e-02,  7.37080455e-01,  7.20574141e-01,\n'
 '         1.91789538e-01,  1.95250988e+00, -2.82944798e-01,\n'
 '        -6.86722279e-01, -1.11642837e+00,  5.44559717e-01,\n'
 '         1.27283311e+00, -9.63974297e-01, -4.01734650e-01,\n'
 '        -1.21175826e-01, -7.24398911e-01,  6.01847291e-01,\n'
 '        -5.64895153e-01, -1.42287087e+00,  1.83003068e+00,\n'
 '         1.06475651e-02,  5.55099964e-01, -8.66380334e-03,\n'
 '        -2.55518651e+00, -7.32988715e-01,  9.79528248e-01,\n'
 '         6.38596356e-01,  1.58810270e+00, -5.13626337e-01,\n'
 '        -1.02179825e+00,  3.04675841e+00,  2.72728872e+00,\n'
 '        -6.01510108e-01,  2.21661493e-01, -1.81530941e+00,\n'
 '        -1.89841116e+00,  1.00948143e+00,  3.34566474e+00,\n'
 '        -1.97105551e+00,  1.10418093e+00, -5.04382849e-01,\n'
 '        -2.12546140e-01,  7.99889684e-01, -7.32955337e-01,\n'
 '        -8.72524977e-02,  1.73876002e-01,  1.90280581e+00,\n'
 '        -2.09559023e-01, -9.66729343e-01, -6.75118491e-02,\n'
 '         7.48282433e-01,  4.70520139e-01,  8.34827959e-01,\n'
 '        -1.49499810e+00,  1.20835495e+00,  1.91914117e+00,\n'
 '        -1.08129948e-01,  1.28818119e+00,  9.15043354e-01,\n'
 '        -8.54649365e-01, -4.04508650e-01, -1.37287772e+00,\n'
 '         6.25299215e-01, -1.75490856e+00, -2.63772321e+00,\n'
 '        -2.72249723e+00, -2.24484778e+00, -1.42087948e+00,\n'
 '        -2.89774680e+00, -4.41263258e-01, -1.85462749e+00,\n'
 '        -2.26076558e-01, -2.43480146e-01,  1.01193786e-03,\n'
 '        -1.52000487e+00, -1.49550355e+00,  3.14483374e-01,\n'
 '         7.26479590e-01, -2.40330315e+00,  1.92579776e-01,\n'
 '        -2.77527118e+00, -1.40981698e+00, -2.29490447e+00,\n'
 '        -1.14794582e-01,  1.32535055e-01, -1.15686202e+00,\n'
 '         9.58482802e-01,  6.36359453e-01, -4.60347116e-01,\n'
 '        -1.22729570e-01, -1.24424684e+00,  1.11992538e+00,\n'
 '         5.71606457e-01, -5.41466325e-02, -1.19493484e-01,\n'
 '         2.31377578e+00,  9.46654797e-01,  2.04292726e+00,\n'
 '         4.52802539e-01, -5.46546936e-01, -1.79551744e+00,\n'
 '        -5.34612358e-01,  3.94421578e-01,  2.10508084e+00,\n'
 '         7.37293840e-01,  3.27955753e-01,  1.18199587e+00,\n'
 '         7.41559088e-01,  6.45167410e-01, -2.10318708e+00,\n'
 '        -5.73161721e-01, -2.42679572e+00, -1.12600243e+00,\n'
 '        -3.43039012e+00, -6.08257830e-01,  3.82181972e-01,\n'
 '         1.26612282e+00, -1.76849031e+00, -1.27043378e+00,\n'
 '        -7.66261518e-01, -2.94174981e+00, -1.49211407e+00,\n'
 '        -7.64558137e-01, -5.93529105e-01,  1.88867891e+00,\n'
 '        -5.09509027e-01,  8.63235474e-01, -6.52929544e-01,\n'
 '        -3.48426029e-02, -1.08903933e+00, -2.07611006e-02,\n'
 '        -4.17091519e-01,  1.17070401e+00, -1.21371615e+00,\n'
 '        -3.49706471e-01,  3.09930325e-01,  3.45139742e-01,\n'
 '        -2.12601447e+00,  9.35607314e-01,  3.82426321e-01,\n'
 '        -1.20760131e+00,  9.27040696e-01, -4.55548585e-01,\n'
 '        -5.51223099e-01,  1.52782249e+00, -2.85784245e+00,\n'
 '        -1.59772277e+00,  1.41056967e+00,  5.26244760e-01,\n'
 '         2.21086907e+00,  6.93734050e-01,  1.02244687e+00,\n'
 '        -1.21651757e+00,  8.88054967e-01, -1.37543631e+00,\n'
 '         8.11694324e-01, -7.69364834e-02, -2.18104982e+00,\n'
 '         4.87872399e-02, -4.58546281e-01, -9.25517678e-01,\n'
 '         1.95290148e+00,  1.00871146e+00,  9.84572172e-01,\n'
 '        -1.73531139e+00, -7.47951865e-01, -8.86001587e-01,\n'
 '         2.37438607e+00,  9.70177889e-01, -8.71894777e-01,\n'
 '        -3.62190366e-01, -1.62679410e+00,  1.23366380e+00,\n'
 '         1.05515420e-02,  9.16512907e-02,  4.42933083e+00,\n'
 '        -2.01546359e+00,  4.99840707e-01,  4.22400117e-01,\n'
 '        -2.05364972e-01, -1.50577456e-01, -1.04025876e+00,\n'
 '         6.19859934e-01,  6.12926364e-01, -2.16588473e+00,\n'
 '        -1.22494757e+00, -9.42519307e-01, -1.90435350e-03,\n'
 '        -3.46736252e-01,  5.38926959e-01,  1.72458291e+00,\n'
 '        -2.77202904e-01, -1.01548994e+00, -8.93109918e-01,\n'
 '         3.51765603e-01,  4.30259526e-01, -1.58520126e+00,\n'
 '         2.35348299e-01,  2.24259257e+00, -1.96689534e+00,\n'
 '        -1.28541261e-01,  3.36222708e-01, -1.76920295e+00,\n'
 '        -2.18321145e-01,  1.23644805e+00,  2.26640773e+00,\n'
 '         5.95559359e-01,  7.05029666e-02, -2.08216011e-01,\n'
 '         1.85138428e+00,  1.08320981e-01,  8.04521024e-01,\n'
 '        -1.16623962e+00, -1.21253228e+00, -9.98358309e-01,\n'
 '        -2.16863131e+00, -2.54282951e-01, -3.33209562e+00,\n'
 '        -2.98506141e+00, -1.53341103e+00,  4.45210576e-01,\n'
 '        -8.99410784e-01, -1.88145673e+00,  1.37210679e+00,\n'
 '        -9.40194130e-01, -1.61517215e+00, -3.60559773e+00,\n'
 '        -1.03777111e+00, -1.44762313e+00,  2.38241982e+00,\n'
 '         2.44416094e+00, -2.55858958e-01, -7.51895010e-01,\n'
 '         1.45174396e+00, -1.34915328e+00, -1.14940572e+00,\n'
 '         3.80013847e+00,  1.71430957e+00, -2.47186804e+00,\n'
 '         6.39586866e-01,  1.23334205e+00, -1.57204628e-01,\n'
 '         1.53114402e+00, -8.68448764e-02,  1.88791871e-01,\n'
 '        -2.45802879e-01,  2.20388323e-02, -2.79334021e+00,\n'
 '        -1.96329206e-01,  1.29788160e+00,  2.10646331e-01,\n'
 '        -1.30698085e-01, -4.02968836e+00,  7.97784925e-01,\n'
 '        -5.22951305e-01, -1.83197951e+00,  7.25605488e-01,\n'
 '        -7.82709777e-01,  2.15402991e-01,  4.86574799e-01,\n'
 '        -1.97193336e+00,  5.20665216e+00,  2.11060691e+00,\n'
 '         9.99555051e-01, -6.38246894e-01, -1.45385697e-01,\n'
 '         5.69691658e-01,  1.96416128e+00, -4.38162595e-01,\n'
 '         1.06997383e+00,  7.67360330e-01,  3.52091193e-01,\n'
 '         1.93418050e+00, -4.68877763e-01,  6.91629589e-01,\n'
 '         1.61171091e+00, -1.33255112e+00,  5.97281754e-01,\n'
 '        -1.17914844e+00,  8.56694341e-01,  1.53494984e-01,\n'
 '         8.56296659e-01, -1.22157717e+00,  1.12803507e+00,\n'
 '         3.69907439e-01, -2.45175457e+00, -7.25715041e-01,\n'
 '        -1.35353637e+00,  1.74381733e-02, -4.47029918e-02,\n'
 '         8.11541319e-01, -1.87433943e-01,  4.35248643e-01,\n'
 '         5.52488565e-02,  8.07267129e-01,  1.13799918e+00,\n'
 '        -1.17867017e+00, -1.92569923e+00, -1.55909824e+00,\n'
 '        -2.23679805e+00, -1.10633659e+00, -1.06066585e+00,\n'
 '         1.10950172e-01,  1.78208780e+00, -2.82214850e-01,\n'
 '         3.15347481e+00,  4.59222227e-01,  1.67374444e+00,\n'
 '        -3.65418285e-01,  2.26554275e-01, -7.31410742e-01,\n'
 '         1.89347744e+00,  7.48301566e-01,  5.99203885e-01,\n'
 '        -2.41923034e-01, -1.16421258e+00,  1.38349473e-01,\n'
 '        -9.19864953e-01, -8.62855494e-01, -1.59739566e+00,\n'
 '         1.66514122e+00,  1.29912662e+00, -9.26990747e-01,\n'
 '        -3.80122691e-01,  2.17164755e+00, -3.85546803e-01,\n'
 '         1.18578517e+00,  3.80796528e+00, -6.27548993e-02,\n'
 '        -3.48472500e+00, -1.56139171e+00, -2.60830689e+00,\n'
 '         7.48721242e-01, -3.77193856e+00, -1.73276877e+00,\n'
 '        -1.14822602e+00,  6.82441473e-01, -6.29153401e-02,\n'
 '         1.75510013e+00, -1.38898528e+00, -1.09769499e+00,\n'
 '         5.44754624e-01,  5.33089042e-01, -9.76034641e-01,\n'
 '        -4.06620651e-01,  1.59488380e+00, -8.10146630e-01,\n'
 '        -6.45726740e-01, -1.75891876e-01, -2.38749742e+00,\n'
 '         8.79703462e-03,  1.00060821e+00, -1.01359093e+00,\n'
 '        -3.10292363e-01, -6.98265016e-01,  1.18437898e+00,\n'
 '        -9.25673366e-01, -1.02924514e+00, -5.15683651e-01,\n'
 '        -1.06816244e+00,  5.87226510e-01,  1.08612084e+00,\n'
 '        -1.72632694e+00, -2.29405356e+00,  4.58127916e-01,\n'
 '        -2.04894280e+00,  2.30146378e-01,  7.48086274e-01,\n'
 '         1.17469037e+00,  7.94919074e-01, -1.41706419e+00,\n'
 '         2.57762766e+00, -2.27460074e+00, -1.09097838e+00,\n'
 '         3.07076484e-01,  3.02782536e-01, -1.36510932e+00,\n'
 '         1.20123673e+00,  8.30039144e-01,  1.86558962e-01,\n'
 '        -2.26777697e+00,  2.63456607e+00,  1.64245391e+00,\n'
 '        -4.65218663e-01, -4.84273672e-01, -1.16817188e+00,\n'
 '         6.33337438e-01, -2.10849690e+00,  2.77711451e-01,\n'
 '        -6.16892219e-01, -1.38678706e+00, -1.17077434e+00,\n'
 '        -1.60248280e+00,  9.66425121e-01,  2.56386280e+00,\n'
 '         1.50455213e+00,  1.16721720e-01,  1.06051052e+00,\n'
 '         8.36043477e-01, -3.69278288e+00, -7.28323340e-01,\n'
 '        -9.62186456e-01,  2.33851477e-01, -2.36694002e+00,\n'
 '        -3.58564973e+00,  7.86804915e-01, -1.93159175e+00,\n'
 '         1.49680167e-01, -1.64785516e+00,  1.28804743e+00,\n'
 '        -1.13643333e-01, -3.11974049e+00, -2.90349746e+00,\n'
 '        -1.57857612e-02,  1.19122302e+00, -1.05485237e+00,\n'
 '        -4.04773206e-01,  1.74457049e+00,  5.37680447e-01,\n'
 '         4.06473935e-01, -1.47137070e+00, -4.30740267e-01,\n'
 '         1.91788971e+00,  2.31595564e+00, -2.16161579e-01,\n'
 '        -2.75379241e-01, -4.11452502e-01, -1.42050064e+00,\n'
 '         1.07995200e+00, -7.72465468e-01,  2.08955121e+00,\n'
 '        -6.16471656e-02, -1.86309910e+00, -7.17742443e-01,\n'
 '        -2.05390406e+00, -1.97069228e+00, -3.49157602e-01,\n'
 '         2.13319674e-01,  4.52322736e-02,  8.81628573e-01,\n'
 '         4.86824930e-01,  7.00780809e-01, -1.90915144e+00,\n'
 '        -4.48268235e-01, -2.32732320e+00,  4.72917604e+00,\n'
 '        -3.76894951e-01,  3.09840024e-01,  6.39951169e-01,\n'
 '        -5.76846898e-01,  1.15659058e+00,  2.81492639e+00,\n'
 '        -3.64059115e+00, -3.06490159e+00, -5.41360200e-01,\n'
 '        -2.37523055e+00,  3.74071836e-01,  2.58048773e+00,\n'
 '        -2.17918301e+00, -3.15875268e+00, -2.13588905e+00,\n'
 '         2.62106925e-01,  1.54182649e+00, -1.99269652e+00,\n'
 '         1.29388082e+00,  5.44114828e-01, -1.26740491e+00,\n'
 '        -1.34050155e+00,  1.34792352e+00, -1.07968235e+00,\n'
 '        -6.11343622e-01, -1.19404209e+00, -2.42637420e+00,\n'
 '        -1.17271566e+00,  1.42386103e+00,  1.41675639e+00,\n'
 '        -5.26624203e-01, -1.86013329e+00, -7.11946428e-01,\n'
 '         2.98758173e+00,  2.02285782e-01, -5.98860979e-01,\n'
 '        -9.68651652e-01, -1.68987215e+00, -2.59272516e-01,\n'
 '         7.87679553e-02, -8.43708873e-01,  1.22300279e+00,\n'
 '         3.58421773e-01,  7.46525526e-01,  1.92916191e+00,\n'
 '         9.07877088e-01, -9.94392633e-01,  1.58759579e-01,\n'
 '        -1.05808639e+00, -2.41876721e+00, -1.90979838e+00,\n'
 '        -8.94129753e-01,  9.23582554e-01,  8.67985904e-01,\n'
 '         5.15782833e-01,  2.46541405e+00,  3.13095760e+00,\n'
 '        -2.15584064e+00,  1.09284759e+00, -3.47852564e+00,\n'
 '        -2.16483545e+00,  9.58190560e-01, -6.25417531e-01,\n'
 '         4.30167317e-01, -1.25430083e+00,  2.03081465e+00,\n'
 '         2.43094587e+00,  8.21640372e-01,  2.49755406e+00,\n'
 '         6.92541122e-01, -2.45759964e-01, -6.29885793e-01,\n'
 '         7.34316349e-01, -9.19881463e-02, -1.39759970e+00,\n'
 '         1.29274368e+00, -1.01905656e+00, -5.07230163e-01,\n'
 '        -7.56654799e-01,  5.36950290e-01,  1.10946655e+00,\n'
 '         2.80049729e+00, -5.38586974e-01,  4.44006264e-01,\n'
 '        -8.83946300e-01,  2.05146694e+00,  1.04112184e+00,\n'
 '        -6.18576288e-01, -1.32607788e-01,  1.09340298e+00,\n'
 '         1.88622922e-01,  2.83685327e-02, -7.64781535e-01,\n'
 '         3.64699721e-01, -5.10282330e-02,  1.92943132e+00,\n'
 '         3.07792902e+00,  4.33655620e-01, -2.91050076e-01,\n'
 '        -1.81725287e+00, -1.18990552e+00,  1.31468844e+00,\n'
 '         3.26648980e-01,  7.34665513e-01, -7.59813547e-01,\n'
 '         1.92051828e+00,  1.43334895e-01, -6.02307796e-01,\n'
 '        -1.24796927e-02, -1.66539502e+00,  4.65485096e-01,\n'
 '         4.20420915e-01, -3.94917905e-01,  1.30495143e+00,\n'
 '         1.40560079e+00,  1.97081476e-01,  1.22592568e+00,\n'
 '        -3.61966038e+00,  2.34814429e+00,  1.02485144e+00,\n'
 '         6.58562660e-01, -2.72794581e+00, -1.97141305e-01,\n'
 '         1.84729433e+00,  6.37867689e-01,  1.36250511e-01,\n'
 '        -7.06490278e-01, -1.17657936e+00, -6.39389276e-01,\n'
 '         9.72281814e-01, -3.83395553e+00,  1.44216371e+00,\n'
 '        -4.03670222e-01, -2.34627938e+00, -1.42738128e+00,\n'
 '        -2.04205364e-02, -2.05985904e+00,  8.34638357e-01,\n'
 '        -1.93759143e-01, -2.07830250e-01,  1.45636427e+00,\n'
 '        -1.24094689e+00,  8.80069137e-02,  8.02767932e-01,\n'
 '         1.33108520e+00, -2.00015736e+00,  4.86477554e-01,\n'
 '        -3.42551899e+00, -4.95351195e-01,  1.59944892e+00,\n'
 '        -7.85257220e-01,  1.69209301e-01,  4.32604253e-01,\n'
 '         1.52945840e+00, -3.12261319e+00,  1.88201666e-04,\n'
 '        -1.96887028e+00, -1.31541944e+00, -1.74799776e+00,\n'
 '        -1.24985170e+00,  7.69946575e-01,  2.34138161e-01,\n'
 '         4.11963731e-01,  5.49046934e-01, -2.03019738e-01,\n'
 '        -7.94441760e-01,  2.79753303e+00,  8.20819139e-01,\n'
 '         5.25583804e-01,  4.10407782e-03, -1.02674544e+00,\n'
 '        -2.50772893e-01, -1.05710357e-01, -3.15211952e-01,\n'
 '        -2.51639962e-01, -7.33663857e-01,  1.60687673e+00,\n'
 '        -1.65173638e+00,  1.72040284e+00, -8.01921129e-01,\n'
 '        -1.05521095e+00,  2.49657452e-01, -3.97244364e-01,\n'
 '         1.33953166e+00, -8.48071516e-01, -1.67218184e+00,\n'
 '        -1.17528021e+00, -1.60594881e+00, -6.40400112e-01,\n'
 '         9.71419215e-01,  1.12058687e+00, -2.49036372e-01,\n'
 '         5.57493210e-01, -8.38624597e-01,  8.91080856e-01,\n'
 '         1.45268047e+00,  8.01752210e-02,  1.39021075e+00,\n'
 '         3.11084628e-01, -3.68387937e-01, -2.98150003e-01,\n'
 '         2.98545152e-01, -1.21998859e+00, -1.47188187e-01,\n'
 '         1.10657299e+00,  1.63822102e+00,  4.69196320e-01,\n'
 '         1.26743209e+00,  1.83261001e+00,  1.70370841e+00,\n'
 '         5.25117934e-01,  3.63950133e-01, -3.59097183e-01,\n'
 '        -1.98337054e+00,  2.27274513e+00, -2.50685191e+00,\n'
 '        -2.09353685e-01,  3.04510891e-01, -1.01166213e+00,\n'
 '        -6.03046715e-01,  1.84628940e+00, -3.75565767e-01,\n'
 '        -8.51219058e-01, -1.93185031e+00,  1.44500208e+00,\n'
 '         1.13336349e+00, -9.60518360e-01, -8.01165462e-01,\n'
 '        -1.58961749e+00, -3.12870145e-01,  2.16207242e+00,\n'
 '         4.43394244e-01, -1.25083160e+00, -2.31580448e+00,\n'
 '        -7.15183497e-01, -3.27821255e-01,  5.62845051e-01,\n'
 '        -9.26003456e-02, -4.27219272e-02,  1.05260801e+00,\n'
 '        -5.60662270e-01,  6.35895729e-01, -1.49478689e-01,\n'
 '        -3.31471920e-01,  3.48633915e-01, -2.98962784e+00,\n'
 '        -1.24465060e+00, -3.55747294e+00,  5.79241514e-01,\n'
 '        -6.73242435e-02, -4.90707070e-01, -6.67316675e-01,\n'
 '        -2.36328125e+00]])')
'test_inceptionnet | batch_shape is: [1]'
'test_inceptionnet | logits.shape is: ivy.Shape(1, 1000)'
'||'
'test_inceptionnet | indices_test | true_indices is: [258 270 279]'
'test_inceptionnet | indices_test | calc_indices is: [258 270 279]'
'test_inceptionnet | device is: cpu'
'test_inceptionnet | fw is: jax'
'test_inceptionnet | load_weights is: False'
'InceptionV3 | build | layer 1/22 built'
'InceptionV3 | build | layer 2/22 built'
'layer 3/22 built'
'InceptionV3 | build | layer 4/22 built'
'InceptionV3 | build | layer 5/22 built'
'InceptionV3 | build | layer 6/22 built'
'InceptionV3 | build | layer 7/22 built'
'InceptionV3 | build | layer 8/22 built'
'InceptionV3 | build | layer 9/22 built'
'InceptionV3 | build | layer 10/22 built'
'InceptionV3 | build | layer 11/22 built'
'InceptionV3 | build | layer 12/22 built'
'InceptionV3 | build | layer 13/22 built'
'InceptionV3 | build | layer 14/22 built'
'InceptionV3 | build | layer 15/22 built'
'InceptionV3 | build | layer 17/22 built'
'InceptionV3 | build | layer 18/22 built'
'InceptionV3 | build | layer 19/22 built'
'InceptionV3 | build | layer 20/22 built'
'InceptionV3 | build | layer 21/22 built'
'InceptionV3 | build | layer 22/22 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/4 built'
'layer 2/4 built'
'layer 3/4 built'
'layer 4/4 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/6 built'
'layer 2/6 built'
'layer 3/6 built'
'layer 4/6 built'
'layer 5/6 built'
'layer 6/6 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'inceptionNet_v3 | building InceptionV3 model | done 1/3'
'InceptionV3 | forward | input data_format is:NCHW | done 1/27'
'InceptionV3 | forward | data_format is going to be used is:NCHW | done 1/27'
'InceptionV3 | forward | input shape is:ivy.Shape(1, 224, 224, 3) | done 1/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 224, 224, 3) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 111, 111, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 111, 111, 32) | done 2/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 111, 111, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 32) | done 3/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 109, 109, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 64) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 64) | done 4/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 54, 54, 64) | done 5/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 54, 54, 80) | done 3/3'
'InceptionV3 | forward | is:ivy.Shape(1, 54, 54, 80) | done 6/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 80) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 52, 52, 192) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 52, 52, 192) | done 7/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 192) | done 8/27'
'input shape is:ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 32) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 32)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 25, 25, 256) | done 9/27'
'input shape is:ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 10/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 11/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 384) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 96) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 96)'
'one 20/20, output shape is:ivy.Shape(1, 12, 12, 288)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 12/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 12, 12, 768) | done 13/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 14/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 15/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 16/27'
'v3 16/27, output shape is:ivy.Shape(1, 12, 12, 768)'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 5, 5, 192)'
'one 7/20, output shape is:ivy.Shape(1, 5, 5, 768)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 1280) | done 17/27'
'input shape is:ivy.Shape(1, 5, 5, 1280)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 18/27'
'input shape is:ivy.Shape(1, 5, 5, 2048)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 19/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 20/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 5, 5) | done 21/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 1, 1) | done 22/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 27/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 24/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 25/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048) | done 26/27'
'InceptionV3 | forward | fc | done 27/27'
('test_inceptionnet | logits is: ivy.array([[ 6.91111125e+05,  '
 '6.97916562e+05,  1.00593289e+05,\n'
 '        -1.04020469e+06,  2.09222453e+05, -8.65960562e+05,\n'
 '         9.52952188e+05, -1.63872625e+05,  5.10722969e+05,\n'
 '         2.16652703e+05, -1.14759047e+05,  2.13934438e+05,\n'
 '        -1.72311203e+05,  1.22441102e+05,  2.16106531e+05,\n'
 '        -9.65645703e+04,  7.63063625e+05, -2.39239141e+05,\n'
 '         1.36962250e+05, -4.99238562e+05,  2.85963344e+05,\n'
 '        -5.39946688e+05, -3.42197906e+05, -3.46465219e+05,\n'
 '         5.11760375e+05,  2.39466547e+05, -1.61599953e+05,\n'
 '        -6.01601875e+05, -2.19410625e+05, -1.03032477e+05,\n'
 '         4.00213438e+05, -5.22400469e+05, -1.21420672e+05,\n'
 '         8.10527688e+05, -3.64317406e+05, -2.41157219e+05,\n'
 '        -7.36430625e+05,  1.40438297e+05, -3.92841156e+05,\n'
 '        -2.72358906e+05, -2.50959082e+04, -1.46741500e+05,\n'
 '        -3.08612062e+05, -7.58349125e+05, -1.68389312e+05,\n'
 '         1.49064875e+05,  2.89368812e+05, -1.04474984e+05,\n'
 '        -2.09837312e+05,  1.04539925e+06,  1.03648328e+05,\n'
 '         4.12260188e+05,  1.97076000e+05,  5.33259250e+05,\n'
 '         1.92255508e+04,  3.49268812e+05,  4.82508000e+05,\n'
 '         6.01188000e+05,  6.00840688e+05, -3.81917422e+04,\n'
 '         4.36226719e+04, -3.95942500e+05,  2.73540188e+05,\n'
 '        -1.01333219e+05,  5.58091953e+04, -2.28374172e+05,\n'
 '         2.05016156e+05, -8.08033438e+05, -9.52965500e+05,\n'
 '         2.18289492e+04, -6.11254688e+05, -3.95732406e+05,\n'
 '        -1.77364812e+05, -3.04718938e+05, -1.14263888e+06,\n'
 '         2.08783984e+05,  5.66119688e+05, -3.02483781e+05,\n'
 '        -4.65311281e+05,  2.93462734e+04,  4.75022094e+05,\n'
 '        -8.78002500e+04,  4.99897594e+05, -2.49959688e+04,\n'
 '         1.07474500e+05,  1.96696891e+05, -9.17279375e+04,\n'
 '         3.03508812e+05, -2.74975312e+05,  5.87497062e+05,\n'
 '         6.97827688e+05,  2.12908130e+03,  4.66263031e+05,\n'
 '         3.16162125e+05,  1.06751800e+06, -1.74441219e+05,\n'
 '        -1.21270227e+05, -2.21223438e+05, -4.85719281e+05,\n'
 '        -8.13200938e+05, -4.88628375e+05,  1.64464844e+05,\n'
 '        -4.31886344e+05,  3.61700156e+04, -2.37039031e+05,\n'
 '         6.22786250e+05, -6.38087375e+05, -2.37811312e+05,\n'
 '        -9.24290430e+03,  6.71951625e+05,  3.07062375e+05,\n'
 '        -7.08157188e+05,  3.22851250e+05,  2.54397688e+05,\n'
 '        -2.72882188e+05, -1.45144078e+05,  7.11682438e+05,\n'
 '        -2.29158609e+05,  2.94980250e+05,  3.48934094e+05,\n'
 '         6.66750469e+04, -1.95967109e+05, -6.61425250e+05,\n'
 '        -2.14322141e+05, -3.24274844e+05,  1.51451469e+05,\n'
 '         4.54900594e+05, -3.27037969e+05,  2.06713516e+05,\n'
 '         4.11132000e+05,  4.38470500e+05, -3.77669844e+05,\n'
 '         6.37791562e+05, -1.02829619e+06, -3.74319023e+04,\n'
 '         4.63425062e+05, -8.97691062e+05,  4.48056750e+05,\n'
 '         7.81133312e+05, -7.82965375e+05,  2.82989219e+05,\n'
 '         1.91052562e+05,  9.66953250e+05, -7.03584000e+05,\n'
 '        -8.40799938e+05,  3.87705812e+05,  2.16431828e+05,\n'
 '         3.43302094e+05,  1.82190844e+05, -3.38377281e+05,\n'
 '        -1.92044641e+05,  1.14983500e+06,  5.64262500e+05,\n'
 '        -6.69351812e+05, -4.25936992e+04,  1.97760215e+04,\n'
 '         3.98573125e+04,  5.22194312e+05,  1.12758588e+06,\n'
 '        -1.36205150e+06, -6.70110438e+05,  3.24635156e+05,\n'
 '        -8.21170000e+05,  8.70118203e+04,  6.59536625e+05,\n'
 '         2.58780906e+05, -4.83925969e+05, -4.79831000e+05,\n'
 '        -8.40101797e+04, -2.80312844e+05,  6.02533398e+04,\n'
 '         4.69315844e+05, -2.40496953e+05, -9.96466438e+05,\n'
 '        -1.15359125e+06,  3.21451969e+05, -7.85060562e+05,\n'
 '         2.62921719e+05, -3.33601312e+05,  2.96774927e+03,\n'
 '        -7.82079609e+04,  6.01216758e+04,  2.93432469e+05,\n'
 '         4.12514312e+05,  8.52346188e+05, -9.63773281e+04,\n'
 '        -4.07576641e+04,  1.23121953e+05,  1.05960662e+06,\n'
 '         9.07036188e+05,  6.20135562e+05, -3.40036406e+05,\n'
 '        -2.30355359e+05,  6.41425352e+04, -5.70522125e+05,\n'
 '        -4.24551781e+05, -5.42585000e+05, -4.98339625e+05,\n'
 '        -3.03502656e+05, -1.82919938e+05,  4.45221750e+05,\n'
 '         1.68496844e+05, -7.98816125e+05,  2.85454219e+05,\n'
 '         1.00390325e+06, -5.03073984e+04,  2.32295195e+04,\n'
 '         5.23770812e+05,  7.15508562e+05, -2.37044750e+05,\n'
 '        -6.88841000e+05,  7.69621688e+05, -5.46202188e+05,\n'
 '         4.04354844e+05, -9.23090625e+04, -2.91572375e+05,\n'
 '         1.56807625e+05,  2.99019719e+05, -8.89782500e+04,\n'
 '        -4.87451500e+05, -2.27599922e+05, -1.23864344e+05,\n'
 '         2.88934938e+05, -5.24175688e+05,  3.10165449e+04,\n'
 '         7.28041375e+05,  9.10543250e+05, -2.56576953e+05,\n'
 '        -2.51341406e+05, -2.59470516e+05,  9.29484938e+05,\n'
 '        -2.60717438e+05, -5.01381875e+04, -3.31249875e+05,\n'
 '         6.75494938e+05, -1.23492633e+05,  3.66191125e+05,\n'
 '        -3.01138812e+05, -1.46449538e+06,  2.33138125e+05,\n'
 '         5.68060500e+05, -3.60520969e+05,  1.32998375e+05,\n'
 '         1.99457844e+05,  7.56797625e+05,  2.73096500e+05,\n'
 '        -1.77503375e+05, -2.04922859e+05, -1.83681328e+05,\n'
 '        -2.54339750e+05,  2.16070938e+05,  5.06467781e+05,\n'
 '        -4.06771656e+05, -6.97845562e+05, -7.57565125e+05,\n'
 '        -7.01767750e+05, -4.03351281e+05, -1.28176412e+06,\n'
 '         3.39443406e+05, -2.78906660e+04,  2.24095125e+05,\n'
 '         5.88920938e+05, -2.90976250e+05, -1.33468938e+05,\n'
 '        -4.34027750e+05,  4.01083156e+05, -8.30775703e+04,\n'
 '        -1.06281508e+05, -7.84010812e+05,  6.99220062e+05,\n'
 '        -6.05013875e+05,  3.62283688e+05, -3.49516719e+05,\n'
 '        -7.34060375e+05,  2.63437969e+05,  6.59530062e+05,\n'
 '        -9.75368984e+04, -5.55870438e+05,  3.31055312e+05,\n'
 '         1.07438789e+05,  2.71749188e+05, -2.34556141e+05,\n'
 '        -2.38020797e+05, -1.69459953e+05,  1.75334297e+04,\n'
 '        -1.52317703e+05,  2.65562625e+05, -7.73759938e+05,\n'
 '        -5.38300188e+05, -2.90482000e+05,  5.04643516e+04,\n'
 '         2.38711484e+05,  8.55448312e+05, -3.71877383e+04,\n'
 '         7.83601125e+05, -2.56994000e+05,  2.16534531e+05,\n'
 '         2.59588172e+05,  5.02755750e+05,  2.61583730e+04,\n'
 '        -3.58474727e+04, -1.37119844e+05,  1.50099844e+05,\n'
 '         9.60059688e+05, -1.11808375e+06, -1.10153027e+04,\n'
 '         7.42269562e+05,  3.22952656e+05, -5.26158062e+05,\n'
 '        -1.51316875e+05, -6.93057250e+05, -1.17380289e+05,\n'
 '         4.51964531e+05, -3.36348094e+05, -3.84339031e+05,\n'
 '         1.08987988e+06, -8.53444812e+05,  3.11408094e+05,\n'
 '         3.77761375e+05,  3.09014668e+04,  5.82055117e+04,\n'
 '         4.17815500e+05,  4.84105438e+05, -9.52197312e+05,\n'
 '        -5.16099812e+05,  1.85913027e+04,  4.84936125e+05,\n'
 '        -8.38414922e+04, -4.95038320e+04,  6.83303375e+05,\n'
 '         1.18985638e+06,  3.97789500e+05, -2.46699453e+05,\n'
 '        -5.92818562e+05, -3.58676656e+05,  3.35121375e+05,\n'
 '         8.24449219e+04,  3.11634344e+05,  2.00962250e+05,\n'
 '        -4.21585781e+05,  2.60423938e+05,  2.87795219e+05,\n'
 '         5.97941062e+05,  1.13530375e+06,  8.94438250e+05,\n'
 '         3.44222906e+05, -5.08633188e+05,  3.64940812e+05,\n'
 '         5.30486812e+05, -7.43078750e+05, -3.16557715e+04,\n'
 '         5.85355188e+05, -6.56493000e+05,  5.46474258e+04,\n'
 '         3.65252156e+05, -7.65153625e+05, -1.26595875e+05,\n'
 '        -2.23423297e+05, -5.80201625e+05,  4.57374812e+05,\n'
 '        -8.36078125e+05,  4.77198719e+05, -5.86735125e+05,\n'
 '        -2.72221562e+05,  3.06420125e+05,  5.74085039e+04,\n'
 '        -4.76728781e+05, -3.56244344e+05, -3.57684625e+05,\n'
 '        -1.28685109e+05, -4.49433625e+05,  4.32281188e+05,\n'
 '         2.81300719e+05, -1.91685844e+05, -5.35282875e+05,\n'
 '         1.81914590e+04, -5.02855625e+05,  2.74798344e+05,\n'
 '         3.81160906e+05, -8.62521484e+04, -3.94231781e+05,\n'
 '         3.41770938e+05, -3.35433312e+05, -4.13071094e+05,\n'
 '         3.34124750e+05,  4.02680656e+05,  2.69761375e+05,\n'
 '        -5.54796688e+05, -7.72458188e+05,  7.21371500e+05,\n'
 '        -4.89357266e+04,  1.26795150e+06, -3.36237156e+05,\n'
 '         4.56120906e+05, -6.30508062e+05, -1.02454681e+06,\n'
 '        -1.18732050e+06,  1.20962562e+06, -3.82055250e+05,\n'
 '        -1.54714594e+05,  5.88838188e+05,  4.53770750e+05,\n'
 '        -4.45927588e+03,  1.57530656e+05,  2.67601750e+05,\n'
 '        -6.61657750e+05,  7.79614750e+05, -5.30982562e+05,\n'
 '         3.12245728e+03,  7.15325938e+05,  4.39785375e+05,\n'
 '         5.95582500e+05, -5.03142734e+04,  3.33386406e+05,\n'
 '        -8.43867312e+05, -3.84886438e+05, -3.53207750e+05,\n'
 '        -5.22731103e+03,  4.96843531e+05,  2.65094469e+05,\n'
 '        -9.73314875e+05,  7.38570625e+04, -2.43387266e+05,\n'
 '        -4.79870094e+05, -1.95328766e+05,  1.92529812e+05,\n'
 '         3.93366812e+05, -2.56520562e+05,  1.61081547e+05,\n'
 '         2.91747031e+05, -1.69551156e+05,  3.59306000e+05,\n'
 '        -3.88892773e+04, -6.54255938e+05, -1.86528000e+05,\n'
 '        -1.07724365e+04,  1.06281492e+05,  2.46644141e+05,\n'
 '        -4.03860562e+05,  5.65199438e+05,  5.47011836e+04,\n'
 '        -1.40812109e+05, -5.94935438e+05, -3.12208781e+05,\n'
 '        -8.53933125e+05, -1.48703775e+06,  8.42786562e+05,\n'
 '        -5.24867812e+05, -2.59227891e+05,  7.83628875e+05,\n'
 '        -1.98716281e+05, -1.34583672e+05, -2.76637000e+05,\n'
 '        -3.22616625e+05,  4.27357688e+05, -9.00460062e+05,\n'
 '         1.08992828e+05, -2.15160047e+05,  3.49051656e+05,\n'
 '        -1.39885594e+05,  4.02069344e+05,  8.80140688e+05,\n'
 '         3.60214594e+05,  2.37476594e+05, -1.62503953e+05,\n'
 '        -5.93947125e+05, -1.94964125e+05,  5.90145625e+05,\n'
 '        -3.04811594e+05, -1.36571484e+05, -2.99986562e+05,\n'
 '        -1.93459547e+05, -5.55154375e+05, -1.02933138e+06,\n'
 '        -5.25588625e+05,  4.94570531e+05,  6.41542125e+05,\n'
 '         1.78637891e+05, -2.01613281e+04, -2.13828188e+05,\n'
 '        -3.94469219e+05,  1.28913289e+05, -5.00009562e+05,\n'
 '        -1.34667578e+05,  3.23235281e+05, -1.94322375e+05,\n'
 '        -4.62075312e+05,  5.15527312e+05, -1.25484453e+05,\n'
 '         1.39218859e+05, -3.63176602e+04, -2.66473625e+05,\n'
 '         1.17297836e+05,  1.59039000e+06,  6.22684375e+05,\n'
 '         2.82784219e+04, -4.17143500e+05,  3.91838625e+05,\n'
 '        -6.71957688e+05, -1.23358914e+05, -5.62560812e+05,\n'
 '         9.97454844e+04,  3.79793156e+05, -4.90302719e+05,\n'
 '        -7.17770234e+04, -3.84384688e+04, -4.43478555e+04,\n'
 '        -3.93895156e+05,  5.84234438e+05, -5.52894062e+05,\n'
 '        -1.44661906e+05, -9.58500875e+05,  1.44265500e+05,\n'
 '         3.82804344e+05,  3.26870531e+05, -1.88794922e+05,\n'
 '         8.19725125e+05,  3.49749844e+05,  2.58505031e+05,\n'
 '         3.79118203e+04,  7.44672938e+05, -4.71233000e+05,\n'
 '        -4.50235656e+05,  6.94743938e+05,  1.52477562e+05,\n'
 '        -5.42516688e+05, -1.40665078e+05, -3.24930469e+05,\n'
 '         2.23226438e+05,  1.19040615e+04,  1.27739150e+04,\n'
 '        -3.91430031e+05,  1.30772812e+06, -4.38324406e+05,\n'
 '        -3.93393250e+05, -1.64873362e+06, -4.50188656e+05,\n'
 '         2.46929641e+05,  3.59151250e+05, -1.06868570e+05,\n'
 '        -3.55594312e+05,  3.05355293e+04,  5.22063188e+05,\n'
 '         4.57888344e+05, -9.36985312e+04, -1.43428625e+05,\n'
 '        -6.29508320e+04,  4.65436250e+05,  1.46392281e+05,\n'
 '         6.70603938e+05,  5.34882125e+05, -1.97850344e+05,\n'
 '         8.26004062e+05, -1.03120578e+05, -3.08121719e+05,\n'
 '         7.38631172e+04, -9.53044500e+05, -5.25403477e+04,\n'
 '        -5.91686500e+05, -7.25327562e+05,  7.11045625e+04,\n'
 '         2.30729609e+05, -5.82289062e+05,  3.52878500e+05,\n'
 '         2.33503781e+05,  2.36374434e+04, -5.86151438e+05,\n'
 '        -3.13507188e+05, -2.57330625e+05, -8.55889531e+04,\n'
 '        -1.33794734e+05, -2.34769547e+05, -1.04446195e+05,\n'
 '        -3.77852062e+05,  4.06205156e+05, -7.20894688e+05,\n'
 '         2.77184281e+05,  2.07382672e+05,  3.80188375e+05,\n'
 '         3.55859375e+05, -7.13890875e+05, -2.89685781e+05,\n'
 '        -4.70539502e+03,  2.51902234e+05,  3.63798438e+04,\n'
 '         9.86424938e+05, -5.21264062e+05, -6.59055562e+05,\n'
 '        -3.18718250e+05, -1.31991462e+06, -8.38304375e+05,\n'
 '        -8.23358828e+04,  2.78740062e+05,  1.15098953e+05,\n'
 '         2.02434290e+03, -2.37024609e+05, -6.77935625e+05,\n'
 '        -2.07798109e+05, -6.84734812e+05,  4.07151844e+05,\n'
 '        -1.73537070e+04, -3.66065594e+05,  2.05152266e+04,\n'
 '         4.64283344e+05,  2.78773625e+05, -4.90666875e+05,\n'
 '         2.75790594e+05,  6.21382578e+04,  4.67078344e+05,\n'
 '        -5.29213000e+05, -5.94753812e+05,  2.23709750e+05,\n'
 '         2.86455406e+05, -6.26588062e+05,  4.55774062e+04,\n'
 '        -6.50514750e+05,  6.16558500e+05, -1.05529258e+05,\n'
 '        -9.38263750e+05, -5.41155688e+05, -1.34250094e+05,\n'
 '         2.85784750e+05,  6.79012266e+04,  2.45426969e+05,\n'
 '         5.74989688e+04, -3.24179250e+05,  1.82747150e+06,\n'
 '        -2.14915734e+05, -7.13276250e+05,  3.21146688e+05,\n'
 '        -1.23424641e+05, -1.43049812e+05,  3.23138031e+05,\n'
 '        -4.80061562e+05,  6.19166312e+05,  7.19977188e+04,\n'
 '         8.21330062e+05,  1.10220742e+05, -5.92148250e+05,\n'
 '         2.64284281e+05, -3.87458906e+04,  3.96766500e+05,\n'
 '         7.71109562e+05,  2.47360484e+05,  4.35344766e+04,\n'
 '         5.88010062e+05,  8.37281125e+05,  1.84388906e+05,\n'
 '         3.58925375e+05,  6.96707500e+04,  2.52850703e+05,\n'
 '        -2.04954953e+05, -8.56673125e+05,  2.56360750e+05,\n'
 '         1.78263938e+05, -3.64680031e+05, -6.49302250e+05,\n'
 '         2.07967938e+05, -2.63213438e+05, -8.46588625e+05,\n'
 '        -1.51070953e+05, -5.54441312e+05, -4.61154625e+05,\n'
 '         2.79210969e+05,  2.61089250e+05,  1.39349266e+05,\n'
 '        -3.96328250e+05,  2.53667188e+04, -3.68630281e+05,\n'
 '         9.58219688e+05, -2.72074188e+05,  8.66387344e+04,\n'
 '        -7.24571750e+05,  7.79923906e+04,  7.77615312e+04,\n'
 '        -6.48711562e+05, -2.61920820e+04, -4.57680469e+05,\n'
 '         2.47479453e+04, -7.40612734e+04, -4.45710312e+05,\n'
 '        -1.10887432e+04, -4.54056875e+05,  9.27826250e+05,\n'
 '        -2.31966156e+05, -1.08815188e+05, -6.56767422e+04,\n'
 '         1.33131922e+05,  8.00559312e+05, -1.95410453e+05,\n'
 '        -9.57049500e+05, -3.89608555e+04,  1.96526594e+05,\n'
 '         1.72661125e+05,  1.79150250e+05, -5.43258398e+03,\n'
 '         1.39955500e+05, -2.97484812e+05,  5.80203375e+05,\n'
 '        -1.39412207e+04, -8.12491062e+05, -1.75795344e+05,\n'
 '        -6.95159875e+05,  6.62301938e+05,  5.63714188e+05,\n'
 '        -6.68388750e+05,  1.67402031e+05,  1.81414328e+05,\n'
 '        -9.17884863e+03, -2.77252844e+05,  1.87151344e+05,\n'
 '        -4.27636875e+05, -3.87707812e+05,  9.12121188e+05,\n'
 '         2.10078484e+05,  3.92350742e+04, -6.01462875e+05,\n'
 '         4.71375469e+05,  3.22675996e+04,  3.38871844e+05,\n'
 '        -6.61842125e+05,  1.63752812e+05, -1.18477945e+05,\n'
 '         1.28383875e+05,  4.99588469e+05,  3.80183938e+05,\n'
 '         1.10380703e+05,  8.50233359e+04, -2.23638422e+05,\n'
 '        -5.29376312e+05, -5.70713250e+05,  8.21777750e+05,\n'
 '        -6.47703438e+05,  8.20933938e+05,  3.24806484e+04,\n'
 '        -9.13112188e+04,  9.48883812e+05,  3.97751594e+05,\n'
 '         8.83550547e+04,  1.06369609e+05,  7.44442312e+05,\n'
 '        -3.74067422e+04, -5.25815000e+05,  1.00262086e+05,\n'
 '        -5.30286312e+05,  1.67108438e+05,  1.04308925e+06,\n'
 '         8.36778203e+04,  2.68804125e+05,  3.05935156e+05,\n'
 '         7.80784141e+04,  1.86117562e+05,  8.18356688e+05,\n'
 '         7.70493250e+05,  2.38172500e+05, -6.06623375e+05,\n'
 '        -2.37480098e+04, -7.67904000e+05, -5.18656438e+05,\n'
 '         5.09917688e+05,  4.89643562e+05,  5.45869453e+04,\n'
 '         7.79687938e+05,  5.09285812e+05, -5.74693875e+05,\n'
 '         3.07094344e+05, -6.68067250e+05,  2.78621188e+05,\n'
 '        -5.12534453e+04, -2.80576125e+05,  6.45668625e+05,\n'
 '         3.57239219e+05, -2.97244344e+05, -4.22378406e+05,\n'
 '        -7.20461312e+05, -9.78925703e+04,  7.10165438e+05,\n'
 '         6.82739219e+04,  3.63917688e+05, -6.71442656e+04,\n'
 '         4.53399125e+05,  7.76155938e+05, -5.64647438e+05,\n'
 '        -3.14059875e+05,  6.27887625e+05, -1.22566641e+05,\n'
 '         8.11144219e+04,  3.62639250e+05,  7.50813312e+05,\n'
 '         1.66388469e+05,  3.05784250e+05, -8.28695125e+05,\n'
 '         1.19338852e+05,  4.47400656e+05, -3.42914453e+04,\n'
 '         5.89032344e+04,  3.62466906e+05,  4.98188164e+04,\n'
 '         5.24995820e+04, -2.23097016e+05,  6.25927750e+05,\n'
 '         1.32674828e+05, -1.86517891e+04,  3.70881500e+05,\n'
 '        -1.78117719e+05, -2.39076109e+05,  5.67159125e+05,\n'
 '         3.63190750e+05,  1.05841852e+05, -2.58893156e+05,\n'
 '        -4.83341406e+04,  3.49477156e+05, -4.50259180e+04,\n'
 '         5.23453156e+05,  3.91312750e+05,  6.85068125e+05,\n'
 '        -1.59864062e+05,  3.78582562e+05, -5.50667625e+05,\n'
 '         8.87206312e+05, -3.94877438e+05, -1.06097225e+06,\n'
 '         4.61677375e+05, -2.61096344e+05, -1.09530625e+05,\n'
 '        -4.83575656e+05, -7.16949297e+04, -3.25141531e+05,\n'
 '        -6.78281250e+05,  4.76905273e+04, -3.81902531e+05,\n'
 '        -1.64988109e+05, -8.09887344e+04,  1.00410600e+06,\n'
 '         4.08144156e+05, -1.51591062e+05,  6.02591750e+05,\n'
 '         5.62745188e+05,  1.22502023e+05, -1.87222562e+05,\n'
 '         4.27080531e+05, -2.38158141e+05,  1.09889138e+06,\n'
 '        -1.90137531e+05, -1.12716888e+06, -3.01812094e+05,\n'
 '         5.73995688e+05,  1.38636250e+05,  3.90652375e+05,\n'
 '         2.22861984e+05,  1.14456738e+06, -3.78716219e+05,\n'
 '         1.08713242e+05, -3.07185938e+04,  3.30151062e+05,\n'
 '         3.32874562e+05, -1.53168000e+05, -8.64857562e+05,\n'
 '         1.20721734e+05,  4.48600531e+05, -6.80231438e+05,\n'
 '         2.29680094e+05,  1.47202859e+05,  2.50864000e+05,\n'
 '         3.24862719e+05,  6.81595000e+05, -4.95154156e+05,\n'
 '        -4.13514062e+04,  9.99490938e+05,  5.39348938e+05,\n'
 '         2.46723969e+05, -3.84838125e+05,  1.70307266e+05,\n'
 '        -1.60089922e+05, -4.73765688e+05,  2.57710219e+05,\n'
 '         5.33157578e+04, -2.72705375e+05,  4.02196219e+05,\n'
 '        -7.06357375e+05, -4.29995375e+05, -9.09906438e+05,\n'
 '        -1.03222913e+03, -7.01895812e+05, -5.02457852e+04,\n'
 '         2.49606516e+05, -2.54769719e+05, -1.09339512e+06,\n'
 '        -2.22914828e+05,  2.86235410e+04, -1.25676398e+05,\n'
 '        -2.91606000e+05,  1.00615112e+06, -7.23071562e+04,\n'
 '         3.27889344e+05,  1.69310430e+04, -2.95821906e+05,\n'
 '        -3.78563688e+05,  9.54532375e+05,  3.84054875e+05,\n'
 '        -2.01228953e+05, -2.96307344e+05, -1.47486709e+04,\n'
 '         1.19434016e+05,  2.08240844e+05,  3.27476719e+05,\n'
 '        -3.17631062e+05, -4.00836562e+05,  1.72435719e+05,\n'
 '        -4.11182344e+05,  4.72720906e+05, -3.97018938e+05,\n'
 '         2.30965984e+05,  4.50233312e+05, -9.10677344e+04,\n'
 '        -8.41606641e+04,  1.02375146e+04, -2.96352812e+05,\n'
 '         1.65239750e+05, -3.73026156e+05, -8.12904062e+05,\n'
 '         8.58357562e+05,  4.33756750e+05, -5.96546312e+05,\n'
 '         2.39152031e+05, -7.28657312e+05, -5.93700812e+05,\n'
 '        -1.97670938e+05, -4.71130742e+04, -2.75873500e+05,\n'
 '         1.74152188e+05,  2.57893453e+05,  7.62842891e+04,\n'
 '         1.17713875e+05, -1.33005578e+05, -3.50132250e+05,\n'
 '         1.13634992e+05,  8.94893203e+04, -9.93266188e+05,\n'
 '         2.73179812e+05, -1.40488766e+05,  3.45086906e+05,\n'
 '         7.24627295e+03, -4.09376844e+05, -3.48669492e+04,\n'
 '         1.02065188e+06,  4.90924875e+05, -8.11794250e+05,\n'
 '        -3.81638188e+05, -8.30406172e+04, -5.09952500e+05,\n'
 '        -3.94208375e+05,  9.27456812e+05, -8.60364625e+05,\n'
 '         2.63980188e+05,  6.26281172e+04,  4.27055125e+05,\n'
 '         9.51624297e+04,  1.68459297e+05, -6.89469609e+04,\n'
 '        -3.38481750e+05,  7.51912125e+05, -2.44882484e+05,\n'
 '         6.60299688e+05, -6.74445688e+05, -8.62290438e+05,\n'
 '         1.02667773e+05,  2.83779625e+05,  5.45979000e+05,\n'
 '         5.88722750e+05, -1.07847125e+06, -4.85714125e+05,\n'
 '         8.93721875e+04, -8.55656250e+04, -7.66428750e+05,\n'
 '         2.86465562e+05, -7.70293375e+05, -3.85858531e+05,\n'
 '        -8.35550781e+04,  2.80386438e+05,  2.42681812e+05,\n'
 '         3.11802844e+05, -2.84915656e+05, -2.89026062e+05,\n'
 '         2.72310219e+05,  1.35608594e+05, -1.23416662e+06,\n'
 '         2.99332637e+04,  2.78616344e+05,  2.41805266e+05,\n'
 '        -2.42771094e+05,  5.79468562e+05,  2.51325250e+05,\n'
 '        -6.25331562e+05, -2.13106656e+05,  5.59794750e+05,\n'
 '        -2.98182844e+05, -6.61834875e+05,  8.43617688e+05,\n'
 '        -1.27015688e+05]])')
'test_inceptionnet | batch_shape is: [1]'
'test_inceptionnet | logits.shape is: ivy.Shape(1, 1000)'
'||'
'test_inceptionnet | device is: cpu'
'test_inceptionnet | fw is: jax'
'test_inceptionnet | load_weights is: True'
'InceptionV3 | build | layer 1/22 built'
'InceptionV3 | build | layer 2/22 built'
'layer 3/22 built'
'InceptionV3 | build | layer 4/22 built'
'InceptionV3 | build | layer 5/22 built'
'InceptionV3 | build | layer 6/22 built'
'InceptionV3 | build | layer 7/22 built'
'InceptionV3 | build | layer 8/22 built'
'InceptionV3 | build | layer 9/22 built'
'InceptionV3 | build | layer 10/22 built'
'InceptionV3 | build | layer 11/22 built'
'InceptionV3 | build | layer 12/22 built'
'InceptionV3 | build | layer 13/22 built'
'InceptionV3 | build | layer 14/22 built'
'InceptionV3 | build | layer 15/22 built'
'InceptionV3 | build | layer 17/22 built'
'InceptionV3 | build | layer 18/22 built'
'InceptionV3 | build | layer 19/22 built'
'InceptionV3 | build | layer 20/22 built'
'InceptionV3 | build | layer 21/22 built'
'InceptionV3 | build | layer 22/22 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/4 built'
'layer 2/4 built'
'layer 3/4 built'
'layer 4/4 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/6 built'
'layer 2/6 built'
'layer 3/6 built'
'layer 4/6 built'
'layer 5/6 built'
'layer 6/6 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'inceptionNet_v3 | building InceptionV3 model | done 1/3'
'inceptionNet_v3 | clearning pretrained weights | done 2/3'
'inceptionNet_v3 | loading pretrained weights | done 3/3'
'InceptionV3 | forward | input data_format is:NCHW | done 1/27'
'InceptionV3 | forward | data_format is going to be used is:NCHW | done 1/27'
'InceptionV3 | forward | input shape is:ivy.Shape(1, 224, 224, 3) | done 1/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 224, 224, 3) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 111, 111, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 111, 111, 32) | done 2/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 111, 111, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 32) | done 3/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 109, 109, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 64) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 64) | done 4/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 54, 54, 64) | done 5/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 54, 54, 80) | done 3/3'
'InceptionV3 | forward | is:ivy.Shape(1, 54, 54, 80) | done 6/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 80) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 52, 52, 192) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 52, 52, 192) | done 7/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 192) | done 8/27'
'input shape is:ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 32) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 32)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 25, 25, 256) | done 9/27'
'input shape is:ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 10/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 11/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 384) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 96) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 96)'
'one 20/20, output shape is:ivy.Shape(1, 12, 12, 288)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 12/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 12, 12, 768) | done 13/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 14/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 15/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 16/27'
'v3 16/27, output shape is:ivy.Shape(1, 12, 12, 768)'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 5, 5, 192)'
'one 7/20, output shape is:ivy.Shape(1, 5, 5, 768)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 1280) | done 17/27'
'input shape is:ivy.Shape(1, 5, 5, 1280)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 18/27'
'input shape is:ivy.Shape(1, 5, 5, 2048)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 19/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 20/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 5, 5) | done 21/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 1, 1) | done 22/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 27/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 24/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 25/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048) | done 26/27'
'InceptionV3 | forward | fc | done 27/27'
('test_inceptionnet | logits is: ivy.array([[-1.55690461e-01, -1.34749949e+00, '
 '-2.29122728e-01,\n'
 '         1.32712638e+00, -1.75874412e-01,  8.83178353e-01,\n'
 '         2.57571626e+00, -9.02108252e-02, -4.15482611e-01,\n'
 '        -2.71436500e+00, -4.66130048e-01,  3.17997813e-01,\n'
 '        -2.53521204e-02,  1.09315550e+00,  2.44289398e+00,\n'
 '         1.04927278e+00, -2.94063401e+00, -4.62971807e-01,\n'
 '        -8.88365507e-02,  1.28523183e+00,  3.09394908e+00,\n'
 '        -2.50446606e+00,  9.20041442e-01, -2.09793186e+00,\n'
 '        -6.61274552e-01, -3.59484792e-01, -5.39409816e-02,\n'
 '        -9.46308851e-01,  6.57562614e-01, -1.29101825e+00,\n'
 '         7.82457709e-01,  1.07118130e+00,  1.77567279e+00,\n'
 '         3.30164909e-01,  1.58258212e+00, -5.55502057e-01,\n'
 '         1.77217579e+00, -5.40360749e-01, -8.25820506e-01,\n'
 '         1.90413821e+00,  1.00089443e+00,  1.51032341e+00,\n'
 '         1.27386761e+00,  1.24244869e+00,  3.48232090e-02,\n'
 '         1.01748872e+00, -8.05178165e-01,  1.04030609e+00,\n'
 '        -6.40948862e-02, -2.03059480e-01,  4.84178096e-01,\n'
 '         9.88848448e-01,  1.76331329e+00, -7.25564957e-01,\n'
 '         2.15007162e+00,  1.00783348e+00, -1.48189211e+00,\n'
 '         2.90979147e-01,  1.23690295e+00,  4.10424173e-01,\n'
 '        -1.03432953e+00,  2.24872160e+00, -3.94010484e-01,\n'
 '        -4.04884636e-01, -1.18568993e+00, -1.47191560e+00,\n'
 '         1.53627837e+00,  2.02963424e+00,  2.02145362e+00,\n'
 '        -1.43864214e+00, -4.18877691e-01, -2.11823314e-01,\n'
 '        -1.50273430e+00, -1.25624466e+00,  3.02458972e-01,\n'
 '         3.47002924e-01, -1.48169398e+00, -2.74914742e-01,\n'
 '         4.84958887e-01,  1.10505056e+00, -1.56978512e+00,\n'
 '         2.29398704e+00, -1.48685977e-01, -7.60322452e-01,\n'
 '        -3.98541749e-01, -3.35930407e-01, -8.40928078e-01,\n'
 '        -2.04742885e+00, -1.56885952e-01,  5.44519186e-01,\n'
 '        -2.56128758e-01,  1.44498634e+00, -3.79516602e-01,\n'
 '         2.69466758e-01, -1.81954050e+00, -1.63965344e+00,\n'
 '         1.14338350e+00,  6.17472529e-01, -4.08521175e-01,\n'
 '         1.32309771e+00,  1.75311804e+00,  6.47935391e-01,\n'
 '         1.05589867e-01, -8.34159493e-01,  2.35403109e+00,\n'
 '        -2.37211108e+00, -9.30327773e-01,  1.91537964e+00,\n'
 '         1.85091257e+00, -9.62257624e-01, -1.75616354e-01,\n'
 '        -2.41782761e+00,  4.05317783e+00,  3.49199057e+00,\n'
 '        -4.27045882e-01, -1.85975599e+00, -6.26547217e-01,\n'
 '        -1.55318439e+00, -1.39259839e+00,  1.17750548e-01,\n'
 '        -1.22674358e+00, -1.58035553e+00,  1.66510534e+00,\n'
 '        -6.27899170e-02, -2.64008880e+00,  5.36227643e-01,\n'
 '        -1.86392331e+00,  2.03045082e+00,  4.42157060e-01,\n'
 '         3.51360917e-01,  6.00007415e-01,  7.11022377e-01,\n'
 '         1.56178689e+00, -2.29236627e+00, -7.13864922e-01,\n'
 '         5.97521007e-01,  7.00696826e-01,  1.57659686e+00,\n'
 '        -1.28999257e+00, -1.57233691e+00, -5.94553113e-01,\n'
 '        -1.87454343e-01, -1.00100958e+00,  4.99954402e-01,\n'
 '         2.91480112e+00,  7.82355666e-01,  1.15550220e-01,\n'
 '        -7.86914051e-01,  8.64458978e-01,  6.36390388e-01,\n'
 '        -4.44640934e-01,  1.25342607e-03,  2.96652055e+00,\n'
 '        -1.46553516e-02, -5.32614052e-01, -2.25715089e+00,\n'
 '         8.68773103e-01,  4.19426155e+00, -2.83502936e+00,\n'
 '        -7.04241753e-01,  9.03651535e-01, -2.89957690e+00,\n'
 '        -1.87093043e+00,  4.41654384e-01, -1.43621266e-01,\n'
 '        -1.44805944e+00, -9.40699577e-01, -6.85455144e-01,\n'
 '        -2.38997459e+00,  2.89691186e+00,  8.66189659e-01,\n'
 '        -8.22011948e-01,  1.02412367e+00,  2.05593085e+00,\n'
 '         5.07771671e-01, -1.32701492e+00, -1.29840910e+00,\n'
 '        -9.54409316e-02,  7.23320723e-01,  1.49142659e+00,\n'
 '         1.09172940e+00,  6.20460630e-01, -1.21655655e+00,\n'
 '         1.23654902e+00,  1.19210049e-01,  1.31056440e+00,\n'
 '         2.54025006e+00, -8.51049900e-01, -1.34687281e+00,\n'
 '        -2.03535032e+00,  4.35728073e-01, -4.30508137e-01,\n'
 '        -1.61951613e+00, -6.34601593e-01, -3.42008233e+00,\n'
 '        -1.40272641e+00, -2.15741777e+00,  2.00123739e+00,\n'
 '        -2.90094465e-01,  4.29021359e-01,  1.01915824e+00,\n'
 '        -2.64845061e+00, -9.16265786e-01,  6.60368872e+00,\n'
 '        -2.35786319e+00, -2.55337262e+00, -1.64892971e+00,\n'
 '         4.42462504e-01, -2.62020445e+00, -1.28119183e+00,\n'
 '        -1.67500997e+00, -1.25733113e+00, -1.18572152e+00,\n'
 '        -3.74090344e-01,  2.28325605e+00,  2.49217823e-01,\n'
 '         1.96238124e+00,  7.31784105e-01,  5.08507609e-01,\n'
 '        -3.07913470e+00, -1.50003219e+00,  5.59717655e-01,\n'
 '         3.79429150e+00,  2.64576960e+00,  5.64156055e+00,\n'
 '        -2.83059645e+00,  2.07682347e+00, -3.19174600e+00,\n'
 '         1.40263879e+00,  9.35061038e-01,  2.18201184e+00,\n'
 '         3.63821053e+00,  3.21190500e+00,  2.22467351e+00,\n'
 '        -2.43039101e-01, -4.73717116e-02,  3.58646214e-01,\n'
 '        -1.77016282e+00, -8.30522180e-01, -9.44413662e-01,\n'
 '         3.29590112e-01, -2.02002740e+00,  2.15504313e+00,\n'
 '         3.23327780e-01, -8.71000290e-01,  2.36212879e-01,\n'
 '        -2.69963116e-01,  1.38608718e+00,  7.90899992e+00,\n'
 '         4.30811453e+00,  3.67498374e+00,  7.27693379e-01,\n'
 '        -2.30351210e+00,  5.89714468e-01, -8.62499952e-01,\n'
 '        -9.46907818e-01,  1.87682772e+00,  7.68573570e+00,\n'
 '         1.95489960e+01,  5.78779411e+00,  3.76320052e+00,\n'
 '         4.26566887e+00, -2.06913209e+00, -5.04994512e-01,\n'
 '        -1.18178010e+00, -6.20411634e-01, -1.86133838e+00,\n'
 '         2.16914868e+00,  2.62937069e-01,  1.12844276e+00,\n'
 '         1.02186174e+01, -2.46654010e+00, -1.30088997e+00,\n'
 '        -9.23619449e-01, -1.30390906e+00, -2.77049589e+00,\n'
 '         2.94787973e-01, -4.65063453e-01, -3.00087094e+00,\n'
 '         9.63316250e+00,  1.92381203e-01, -1.81962684e-01,\n'
 '        -8.50308180e-01,  2.08346939e+00, -3.13149309e+00,\n'
 '        -8.97578359e-01, -9.84556317e-01,  3.42324227e-01,\n'
 '         1.81816578e+00,  6.85901046e-01,  6.01755828e-02,\n'
 '         6.91633701e-01,  7.57953703e-01, -2.09911203e+00,\n'
 '        -1.09276116e-01, -2.23958611e-01,  4.72809792e+00,\n'
 '         3.79210413e-02, -3.61047316e+00, -1.84027553e+00,\n'
 '        -1.25795439e-01,  1.12062439e-01,  1.20316112e+00,\n'
 '         1.98727226e+00,  5.36049962e-01,  1.51048601e-02,\n'
 '         3.16786915e-01,  1.68610096e+00,  1.32323301e+00,\n'
 '         1.01806927e+00, -3.95073414e-01,  3.34124789e-02,\n'
 '        -4.50305402e-01, -2.27124524e+00, -2.13618889e-01,\n'
 '        -3.70038390e-01, -1.98508215e+00,  5.59354007e-01,\n'
 '        -7.28308320e-01, -5.37769675e-01,  4.81452435e-01,\n'
 '        -8.23228210e-02, -4.95840967e-01,  3.03514433e+00,\n'
 '        -2.77630782e+00,  1.08321559e+00,  1.47431648e+00,\n'
 '         1.30431581e+00,  4.49147254e-01, -4.55608308e-01,\n'
 '         2.16490999e-01,  2.32537222e+00,  1.43296349e+00,\n'
 '        -1.60099649e+00, -1.99959862e+00, -2.56230044e+00,\n'
 '        -2.18704748e+00, -2.36226887e-01,  9.73025441e-01,\n'
 '         1.05876178e-02, -4.74515319e-01,  2.54361772e+00,\n'
 '        -1.66842103e-01,  5.11542440e-01, -3.75320166e-01,\n'
 '         2.39049244e+00,  1.41211700e+00,  2.62213230e-01,\n'
 '         1.86515140e+00,  6.77424073e-02, -1.54334712e+00,\n'
 '        -9.91216481e-01, -2.18377876e+00, -8.47474694e-01,\n'
 '        -3.40276003e-01,  1.63825917e+00,  3.41205537e-01,\n'
 '        -5.98539770e-01,  1.55066538e+00, -1.50998938e+00,\n'
 '        -1.26681948e+00, -1.25371504e+00, -2.26692796e+00,\n'
 '         1.01829171e+00, -2.76500440e+00, -4.09727049e+00,\n'
 '        -1.89442718e+00,  5.94475865e-01, -1.87830818e+00,\n'
 '        -3.41062760e+00, -1.20861685e+00, -1.91311502e+00,\n'
 '        -1.01732636e+00,  1.78923666e-01, -9.62748051e-01,\n'
 '        -2.72869587e+00, -1.40412808e+00, -2.12281299e+00,\n'
 '        -3.18119430e+00, -3.20257950e+00, -3.21349597e+00,\n'
 '        -2.33127356e+00, -3.16365075e+00, -2.31568742e+00,\n'
 '        -3.16668534e+00,  3.95886272e-01, -4.25716400e-01,\n'
 '        -6.47887587e-01, -6.15427375e-01,  8.22816610e-01,\n'
 '        -7.89180577e-01, -2.98597813e-01,  4.84454632e-03,\n'
 '         6.56776130e-01,  1.48626232e+00, -1.43677795e+00,\n'
 '         1.94620276e+00, -9.57698703e-01,  1.55498838e+00,\n'
 '         1.22989941e+00, -2.78439546e+00,  4.41262811e-01,\n'
 '         1.54485774e+00,  2.69894695e+00,  1.57762849e+00,\n'
 '         1.50775218e+00, -2.57656455e-01, -1.96914554e+00,\n'
 '        -7.24841654e-02, -1.45338273e+00, -1.48837364e+00,\n'
 '        -3.41987801e+00, -3.78314209e+00, -2.31231189e+00,\n'
 '        -8.51143122e-01,  6.88358367e-01, -2.00367856e+00,\n'
 '         3.09602439e-01, -5.91362298e-01, -9.63716507e-01,\n'
 '         2.58202553e-01, -3.13608336e+00, -7.24562049e-01,\n'
 '         1.31144774e+00,  3.05701065e+00,  3.72355700e+00,\n'
 '        -3.40120971e-01, -7.12665796e-01,  1.17753387e+00,\n'
 '        -2.05744147e-01,  9.81129885e-01, -3.46721262e-01,\n'
 '         9.31122303e-01, -9.39743757e-01, -1.39242959e+00,\n'
 '        -1.80533603e-01, -4.91996616e-01, -8.13870072e-01,\n'
 '        -4.27271068e-01, -1.03467500e+00,  7.28947639e-01,\n'
 '        -7.00390339e-01, -2.08405018e+00, -1.98671961e+00,\n'
 '        -1.00968718e+00,  1.24759173e+00, -1.46670055e+00,\n'
 '        -1.60079026e+00,  4.07704711e-01, -1.43521667e-01,\n'
 '        -8.74258995e-01,  1.01703393e+00, -2.21395469e+00,\n'
 '        -9.24805105e-02,  7.06991315e-01,  2.46617421e-01,\n'
 '        -3.96257818e-01,  1.35719895e+00,  7.54067481e-01,\n'
 '        -1.44191122e+00, -1.16390228e+00, -1.98292208e+00,\n'
 '         6.79522514e-01, -6.80368841e-01,  1.00719380e+00,\n'
 '        -3.40731311e+00,  1.54411864e+00,  6.80826783e-01,\n'
 '         4.62212682e-01,  1.07596791e+00,  1.49213600e+00,\n'
 '        -2.85292983e+00, -1.03081358e+00,  2.43530989e+00,\n'
 '        -2.17429519e-01, -3.42431426e+00,  3.18943834e+00,\n'
 '        -3.04495752e-01,  3.80071282e+00, -7.65214443e-01,\n'
 '        -1.27274013e+00, -1.75114080e-01,  2.63639569e-01,\n'
 '        -5.71413934e-01,  9.37602520e-01, -1.34805751e+00,\n'
 '         2.57172287e-01,  2.33730465e-01,  2.62023497e+00,\n'
 '         2.61384416e+00,  1.23096275e+00,  2.71241021e+00,\n'
 '        -1.19882774e+00, -7.86568522e-01, -2.07373047e+00,\n'
 '         3.87128234e-01, -1.98279524e+00, -2.79346824e+00,\n'
 '         1.00978064e+00, -8.50936696e-02, -1.84849477e+00,\n'
 '        -1.05712509e+00, -7.53391027e-01, -6.59563780e-01,\n'
 '        -1.60158360e+00,  7.80439377e-01, -1.86700356e+00,\n'
 '         4.07612175e-02,  1.29148197e+00, -1.34350336e+00,\n'
 '         6.14990234e-01,  1.39013529e-02,  1.80820778e-01,\n'
 '         6.60944700e-01,  9.28133786e-01,  5.55834293e-01,\n'
 '        -8.72404456e-01,  1.26794970e+00, -3.47319722e+00,\n'
 '        -4.78054464e-01,  4.31086659e-01,  1.65635765e-01,\n'
 '         1.08887427e-01, -5.94040871e-01, -1.44530487e+00,\n'
 '        -2.15777159e-02, -3.68749678e-01, -2.36998129e+00,\n'
 '        -7.51074254e-01, -1.88555324e+00,  4.39608634e-01,\n'
 '         3.58324111e-01,  2.10942611e-01, -9.64421451e-01,\n'
 '        -1.58969307e+00, -5.95203400e-01, -1.06678367e+00,\n'
 '         1.93636072e+00, -1.62456715e+00,  1.86980796e+00,\n'
 '        -3.89579773e-01, -3.75549376e-01, -7.14078426e-01,\n'
 '         9.06935632e-01,  1.32448113e+00, -5.96781731e-01,\n'
 '         3.35896349e+00,  2.15624884e-01, -1.31897378e+00,\n'
 '        -3.81023556e-01, -3.79433811e-01, -1.32786202e+00,\n'
 '        -1.19901395e+00, -1.40154684e+00, -3.71968806e-01,\n'
 '        -1.58724976e+00,  9.56450105e-02, -2.88746893e-01,\n'
 '        -6.15669191e-01, -3.92640650e-01, -1.05631709e+00,\n'
 '        -4.12028938e-01,  3.78069520e+00,  1.42555952e+00,\n'
 '         5.44037938e-01, -9.19098377e-01,  9.76515532e-01,\n'
 '        -2.49850631e+00, -1.76468387e-01, -1.60944462e+00,\n'
 '        -1.23403990e+00,  1.73711062e-01,  5.83981931e-01,\n'
 '         2.21329141e+00, -1.13369751e+00, -8.07337880e-01,\n'
 '         4.47293848e-01, -1.37685549e+00, -7.42877424e-02,\n'
 '        -1.43828440e+00,  2.44322920e+00,  2.30714321e-01,\n'
 '         2.68762851e+00, -4.09757853e-01,  1.43022358e+00,\n'
 '         6.70477331e-01, -3.41152549e+00, -5.65106511e-01,\n'
 '        -1.16220903e+00,  6.68446422e-01,  9.45520461e-01,\n'
 '        -6.99756384e-01,  2.05701923e+00,  1.16161275e+00,\n'
 '         2.38984513e+00,  2.20290884e-01,  9.74937081e-01,\n'
 '         1.73018098e-01, -2.36248660e+00, -5.25720716e-02,\n'
 '        -7.54700899e-01, -1.71240628e+00, -1.90575147e+00,\n'
 '         8.08175683e-01,  2.00760484e+00, -1.52074587e+00,\n'
 '         4.25806236e+00,  8.11961293e-01,  1.34986150e+00,\n'
 '        -5.23151338e-01, -1.54518688e+00,  2.54418445e+00,\n'
 '         1.08452618e+00,  2.55256176e-01, -5.90255678e-01,\n'
 '        -4.12076092e+00, -2.30382979e-01, -9.52136278e-01,\n'
 '        -1.70390630e+00, -9.11825716e-01, -1.03573918e+00,\n'
 '         1.02513254e+00,  5.27280688e-01, -3.14616382e-01,\n'
 '         9.56770062e-01,  1.77596939e+00,  1.05133224e+00,\n'
 '        -1.11331391e+00,  2.98325992e+00, -1.00259751e-01,\n'
 '        -9.19739902e-01, -2.12366867e+00, -1.89166522e+00,\n'
 '        -2.72811413e+00, -1.42025387e+00, -2.07952428e+00,\n'
 '         5.07039964e-01, -3.88683766e-01, -8.86802673e-01,\n'
 '        -6.14159882e-01,  3.52865756e-01, -8.90391767e-01,\n'
 '        -6.22681528e-02,  5.56643605e-01, -2.25764900e-01,\n'
 '        -3.25918108e-01,  3.68192673e-01, -1.10081220e+00,\n'
 '         4.39622402e-02,  2.43921638e-01, -4.81998324e-02,\n'
 '        -2.85028148e+00, -1.02032647e-01, -2.34630394e+00,\n'
 '        -7.31400847e-01, -3.43023848e+00,  9.13357616e-01,\n'
 '        -3.46161914e+00,  1.66708380e-02, -1.71665204e+00,\n'
 '        -1.11007965e+00,  6.51731908e-01,  2.78090692e+00,\n'
 '        -2.96796083e+00,  6.12292886e-01,  6.33430362e-01,\n'
 '        -1.61078548e+00, -1.72219682e+00, -2.65268183e+00,\n'
 '         1.66099012e+00,  1.09689689e+00, -1.37936044e+00,\n'
 '         2.18875468e-01, -2.61322439e-01,  8.45392346e-01,\n'
 '        -1.46878445e+00,  1.05476677e+00, -1.74721062e-01,\n'
 '         1.19118381e+00, -1.60379231e-01, -9.26069021e-02,\n'
 '        -3.92814684e+00,  2.65476870e+00,  1.32832623e+00,\n'
 '         1.65311313e+00,  1.01579860e-01, -1.06426036e+00,\n'
 '         2.66438901e-01, -5.17610669e-01, -3.03424336e-02,\n'
 '         5.47456741e-01, -1.08623993e+00, -4.83728886e-01,\n'
 '        -3.60781383e+00, -6.09067500e-01,  2.49455428e+00,\n'
 '         6.49657011e-01, -5.23370326e-01,  1.42945015e+00,\n'
 '        -3.38666767e-01, -6.09259069e-01, -5.16079187e-01,\n'
 '        -3.93927789e+00, -1.97660044e-01, -2.74061203e+00,\n'
 '        -3.69574189e+00,  9.60658371e-01,  2.69750953e+00,\n'
 '        -1.49507701e+00, -1.73025286e+00,  4.55238134e-01,\n'
 '         9.03205037e-01, -1.70440924e+00, -3.12844706e+00,\n'
 '         2.24356628e+00, -1.28061891e-01, -5.54203749e-01,\n'
 '         1.38507500e-01,  1.46957803e+00,  1.12630582e+00,\n'
 '        -1.76694393e+00, -2.07893610e+00, -1.07859123e+00,\n'
 '        -8.58241439e-01,  2.41948462e+00,  6.75721243e-02,\n'
 '         4.21703219e-01, -1.81593388e-01,  2.73982501e+00,\n'
 '        -4.17822599e-01,  4.29186314e-01, -1.42118156e-01,\n'
 '        -1.92798460e+00, -2.67598689e-01, -1.15798855e+00,\n'
 '        -7.56928205e-01, -1.25063455e+00, -4.94182676e-01,\n'
 '         3.51388097e-01,  5.75810850e-01,  2.23860335e+00,\n'
 '         6.11863196e-01, -1.42103410e+00, -8.18053246e-01,\n'
 '        -1.38980460e+00, -2.47237921e+00,  2.56332064e+00,\n'
 '        -2.25593018e+00,  3.08616161e-02, -1.31671512e+00,\n'
 '        -1.53279030e+00,  2.44906202e-01, -1.68078974e-01,\n'
 '        -4.85572591e-02, -1.72003937e+00,  1.36598265e+00,\n'
 '        -1.29999447e+00,  4.56296802e-02,  8.08907747e-01,\n'
 '        -1.82670331e+00, -2.53185844e+00, -3.97090912e-02,\n'
 '         9.68993604e-02, -3.23041201e-01, -2.97157931e+00,\n'
 '         9.07546639e-01, -3.93778294e-01,  1.74622130e+00,\n'
 '         1.14614248e-01,  1.14306092e+00,  1.02980614e+00,\n'
 '        -8.41693640e-01, -9.78214979e-01, -1.84291041e+00,\n'
 '         9.51609075e-01, -3.12264889e-01,  2.06993341e+00,\n'
 '         1.69098723e+00, -1.34645665e+00, -7.77048886e-01,\n'
 '         3.28800130e+00,  1.27575362e+00,  6.44402087e-01,\n'
 '        -1.46532393e+00, -2.13571572e+00, -1.05452895e+00,\n'
 '         1.38603878e+00,  6.94946349e-01,  1.39833689e+00,\n'
 '        -7.66764045e-01,  1.43920541e+00,  1.86765230e+00,\n'
 '         2.74494600e+00,  5.51329851e-01, -9.49951053e-01,\n'
 '        -5.40592849e-01, -1.69732600e-01, -3.43809032e+00,\n'
 '         8.71499419e-01,  1.55860972e+00,  4.39164817e-01,\n'
 '         9.33746338e-01,  3.22923708e+00,  9.45041657e-01,\n'
 '        -2.37353039e+00, -3.38634580e-01, -2.69999242e+00,\n'
 '         1.68948069e-01,  5.91681242e-01, -4.96268272e-01,\n'
 '         1.86996520e+00,  1.75178516e+00,  1.47251666e+00,\n'
 '        -6.64904237e-01,  1.31802797e+00,  1.28579426e+00,\n'
 '         8.77466440e-01, -8.60124111e-01, -1.90422428e+00,\n'
 '         4.51957017e-01, -5.93046248e-01, -2.20820713e+00,\n'
 '         1.06064534e+00, -2.38721311e-01, -3.86187136e-01,\n'
 '         2.44910121e-02,  1.41889191e+00,  2.78206676e-01,\n'
 '         1.59040523e+00, -1.05946338e+00, -2.78129458e-01,\n'
 '         5.90336174e-02,  8.70527506e-01,  8.63460660e-01,\n'
 '        -8.59676242e-01, -1.11567485e+00,  1.32257426e+00,\n'
 '        -1.11651945e+00,  1.76647091e+00, -3.30788463e-01,\n'
 '        -3.21054280e-01, -7.05313802e-01, -6.27530217e-01,\n'
 '         2.44509125e+00,  2.51754522e+00, -1.61750841e+00,\n'
 '        -1.30769992e+00, -2.12887406e+00,  1.47295308e+00,\n'
 '         3.15493673e-01, -4.82030779e-01, -2.90556699e-02,\n'
 '         1.18366194e+00,  5.36060691e-01, -1.07455218e+00,\n'
 '        -7.87571371e-01, -3.06211293e-01,  1.99166584e+00,\n'
 '         1.49495113e+00,  1.20158708e+00,  2.15443921e+00,\n'
 '         3.65256429e-01, -6.27708435e-01, -9.11599040e-01,\n'
 '        -1.92245817e+00, -1.22757947e+00,  3.32443476e-01,\n'
 '         1.35693061e+00, -1.87586009e+00, -1.54457331e+00,\n'
 '         3.98792386e-01,  2.66971558e-01,  3.56329620e-01,\n'
 '        -7.78558314e-01, -1.77457750e+00, -6.06437385e-01,\n'
 '         6.90107644e-01, -2.44554114e+00,  2.44047141e+00,\n'
 '        -2.91465372e-01, -3.35316777e+00, -1.72140288e+00,\n'
 '         2.01139998e+00, -1.17475939e+00, -1.69899130e+00,\n'
 '        -1.83821011e+00,  1.81918228e+00, -5.24143696e-01,\n'
 '        -1.09083950e+00,  5.06289840e-01, -8.12597930e-01,\n'
 '         2.78618753e-01, -1.51498330e+00,  1.65994084e+00,\n'
 '        -5.65867066e-01, -8.93425584e-01,  2.04470396e+00,\n'
 '        -2.66922426e+00,  9.58201349e-01,  1.99640727e+00,\n'
 '        -3.29829186e-01,  6.47778869e-01,  3.06030095e-01,\n'
 '        -2.37959290e+00, -8.09842765e-01,  4.70839232e-01,\n'
 '        -2.07179815e-01,  8.61163974e-01,  1.16905308e+00,\n'
 '         4.39831883e-01, -4.66402441e-01, -6.38777018e-02,\n'
 '         5.66368341e-01,  2.65078473e+00, -5.42195439e-01,\n'
 '         1.38700283e+00, -5.17255306e-01, -6.16508841e-01,\n'
 '         1.46953329e-01,  4.11149949e-01, -2.01759648e+00,\n'
 '         3.32998872e-01,  2.40370393e+00,  1.37558997e+00,\n'
 '        -1.56275690e+00, -1.29140839e-01, -1.32636285e+00,\n'
 '        -2.54887152e+00,  1.28765082e+00, -9.95887160e-01,\n'
 '         1.38675451e+00, -1.10216475e+00, -1.77493012e+00,\n'
 '        -1.95359564e+00, -1.75644743e+00, -1.50208902e+00,\n'
 '         4.15880531e-01,  4.76945341e-01,  2.63124168e-01,\n'
 '         1.39474422e-01,  3.55637670e-01,  1.30753040e+00,\n'
 '         1.89863372e+00,  2.86276484e+00,  8.29124272e-01,\n'
 '         1.06025112e+00,  9.68182862e-01, -3.38979125e-01,\n'
 '        -1.44085634e+00, -6.04110658e-02,  1.83592606e+00,\n'
 '         1.72915816e+00,  2.34097123e+00,  8.26344788e-02,\n'
 '         1.28770506e+00,  2.45842314e+00,  2.57669330e+00,\n'
 '         2.95367241e+00, -2.16753900e-01, -7.95834303e-01,\n'
 '        -3.44852149e-01,  1.03267098e+00, -1.01094603e+00,\n'
 '        -8.36148202e-01, -1.58683682e+00, -1.69613123e+00,\n'
 '         1.44474602e+00,  1.10909176e+00, -1.58744132e+00,\n'
 '        -5.99977970e-01,  1.29846370e+00,  1.41766000e+00,\n'
 '        -8.69199634e-02, -1.46985006e+00,  1.24610603e-01,\n'
 '        -4.04729783e-01, -1.94686794e+00,  2.92417193e+00,\n'
 '         1.54665041e+00, -5.14898658e-01, -7.76035607e-01,\n'
 '        -2.06747341e+00, -1.41792929e+00,  1.28920197e+00,\n'
 '        -7.36820698e-02, -2.11389661e-02, -1.86054945e-01,\n'
 '         8.01777124e-01,  1.09913123e+00,  1.04084289e+00,\n'
 '        -5.78327417e-01, -1.62814450e+00, -1.46645784e+00,\n'
 '        -1.86250448e+00, -1.41805696e+00,  1.21591508e+00,\n'
 '        -1.45819283e+00, -1.13771474e+00,  4.21664089e-01,\n'
 '         1.11385018e-01]])')
'test_inceptionnet | batch_shape is: [1]'
'test_inceptionnet | logits.shape is: ivy.Shape(1, 1000)'
'||'
'test_inceptionnet | indices_test | true_indices is: [258 270 279]'
'test_inceptionnet | indices_test | calc_indices is: [258 270 279]'
'test_inceptionnet | device is: cpu'
'test_inceptionnet | fw is: tensorflow'
'test_inceptionnet | load_weights is: False'
'InceptionV3 | build | layer 1/22 built'
'InceptionV3 | build | layer 2/22 built'
'layer 3/22 built'
'InceptionV3 | build | layer 4/22 built'
'InceptionV3 | build | layer 5/22 built'
'InceptionV3 | build | layer 6/22 built'
'InceptionV3 | build | layer 7/22 built'
'InceptionV3 | build | layer 8/22 built'
'InceptionV3 | build | layer 9/22 built'
'InceptionV3 | build | layer 10/22 built'
'InceptionV3 | build | layer 11/22 built'
'InceptionV3 | build | layer 12/22 built'
'InceptionV3 | build | layer 13/22 built'
'InceptionV3 | build | layer 14/22 built'
'InceptionV3 | build | layer 15/22 built'
'InceptionV3 | build | layer 17/22 built'
'InceptionV3 | build | layer 18/22 built'
'InceptionV3 | build | layer 19/22 built'
'InceptionV3 | build | layer 20/22 built'
'InceptionV3 | build | layer 21/22 built'
'InceptionV3 | build | layer 22/22 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/4 built'
'layer 2/4 built'
'layer 3/4 built'
'layer 4/4 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/6 built'
'layer 2/6 built'
'layer 3/6 built'
'layer 4/6 built'
'layer 5/6 built'
'layer 6/6 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'inceptionNet_v3 | building InceptionV3 model | done 1/3'
'InceptionV3 | forward | input data_format is:NHWC | done 1/27'
'InceptionV3 | forward | data_format is going to be used is:NHWC | done 1/27'
'InceptionV3 | forward | input shape is:ivy.Shape(1, 224, 224, 3) | done 1/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 224, 224, 3) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 111, 111, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 111, 111, 32) | done 2/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 111, 111, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 32) | done 3/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 109, 109, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 64) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 64) | done 4/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 54, 54, 64) | done 5/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 54, 54, 80) | done 3/3'
'InceptionV3 | forward | is:ivy.Shape(1, 54, 54, 80) | done 6/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 80) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 52, 52, 192) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 52, 52, 192) | done 7/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 192) | done 8/27'
'input shape is:ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 32) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 32)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 25, 25, 256) | done 9/27'
'input shape is:ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 10/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 11/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 384) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 96) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 96)'
'one 20/20, output shape is:ivy.Shape(1, 12, 12, 288)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 12/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 12, 12, 768) | done 13/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 14/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 15/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 16/27'
'v3 16/27, output shape is:ivy.Shape(1, 12, 12, 768)'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 5, 5, 192)'
'one 7/20, output shape is:ivy.Shape(1, 5, 5, 768)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 1280) | done 17/27'
'input shape is:ivy.Shape(1, 5, 5, 1280)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 18/27'
'input shape is:ivy.Shape(1, 5, 5, 2048)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 19/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 20/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 5, 5) | done 21/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 1, 1) | done 22/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 27/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 24/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 25/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048) | done 26/27'
'InceptionV3 | forward | fc | done 27/27'
('test_inceptionnet | logits is: ivy.array([[ 2.74547000e+06, '
 '-1.32738888e+06,  3.07107300e+06,\n'
 '        -1.30415914e+05, -5.49148812e+05,  2.58688850e+06,\n'
 '        -1.70843600e+06, -3.60650875e+05,  3.98916375e+06,\n'
 '         2.49630125e+06,  2.04659525e+06,  1.40906638e+06,\n'
 '        -2.17457850e+06,  2.77191850e+06, -1.43357162e+06,\n'
 '         1.47841700e+06, -2.55004425e+06, -2.38061100e+06,\n'
 '         2.93190250e+06, -1.46628350e+06,  9.58084625e+05,\n'
 '         8.31350875e+05, -7.49036062e+05,  1.03249375e+06,\n'
 '        -1.22265775e+06, -7.92997938e+05, -2.03408200e+06,\n'
 '        -2.64135656e+05, -1.33042000e+06,  1.73652612e+06,\n'
 '        -1.77824025e+06,  5.97460812e+05, -3.45150188e+05,\n'
 '         4.55499969e+05, -3.10070938e+05, -1.50836512e+06,\n'
 '        -9.99517250e+05, -7.85823500e+05,  1.16044575e+06,\n'
 '        -1.12589025e+06,  3.06463812e+05,  6.71540688e+05,\n'
 '        -4.38639000e+06,  1.46974588e+06,  1.26945462e+06,\n'
 '         3.09640875e+06,  3.65943438e+05, -2.48928100e+06,\n'
 '         1.68441112e+06,  1.30104025e+06,  1.78380850e+06,\n'
 '        -8.21397375e+05,  7.77064062e+05,  3.62854875e+06,\n'
 '        -6.81880250e+05, -6.09503188e+05, -7.25252750e+05,\n'
 '        -1.48319675e+06, -1.32870112e+06, -1.21446227e+05,\n'
 '         3.71195750e+06,  2.80545450e+06, -1.92114588e+06,\n'
 '        -1.49711875e+06,  1.45464875e+06, -1.40996400e+06,\n'
 '        -2.22753750e+05,  2.39297975e+06,  5.40841375e+05,\n'
 '         2.33676050e+06, -1.45390297e+05,  9.95904500e+05,\n'
 '         3.62647950e+06, -4.19843219e+05, -1.28603350e+06,\n'
 '         3.16491625e+05, -1.23144362e+06, -4.62788438e+05,\n'
 '         6.06469562e+05,  3.78157175e+06,  1.38846762e+06,\n'
 '         4.07573062e+05,  1.20781250e+06, -6.08869938e+05,\n'
 '         2.26357675e+06, -2.91009125e+05, -1.35908212e+06,\n'
 '        -2.45533350e+06,  7.19603594e+04,  2.60333275e+06,\n'
 '         2.85073175e+06,  6.36206375e+05,  8.92917750e+05,\n'
 '         1.61233012e+06, -2.08205525e+06,  1.11002062e+06,\n'
 '        -6.04732125e+05,  6.48297562e+05,  2.02183475e+06,\n'
 '         2.37273125e+06, -8.11894562e+05, -1.66447406e+05,\n'
 '         8.72663125e+04,  3.41489875e+05, -2.03431075e+06,\n'
 '        -1.21335338e+06, -2.17140475e+06,  2.04008075e+06,\n'
 '         3.37189719e+05, -1.03841056e+06, -1.65862212e+06,\n'
 '        -1.10716450e+06, -1.40110375e+06,  3.60780750e+05,\n'
 '        -3.58813875e+05,  1.08040238e+06,  2.63343344e+05,\n'
 '         4.92275250e+06, -8.26106375e+05,  7.34055500e+05,\n'
 '        -1.51138138e+06,  3.32300719e+05, -4.47074938e+05,\n'
 '        -1.22340788e+06,  3.82130275e+06,  1.90459875e+06,\n'
 '        -1.04759738e+06, -1.07462450e+06, -7.38720562e+05,\n'
 '        -1.58313575e+06,  4.39723906e+05,  2.26005225e+06,\n'
 '         8.44994812e+05, -2.60385281e+05, -2.22860000e+06,\n'
 '        -1.14819725e+06, -1.90528212e+06,  1.54462375e+06,\n'
 '         2.28249100e+06, -3.26069100e+06,  2.57866775e+06,\n'
 '        -1.71662225e+06,  8.59097312e+05, -1.77674912e+06,\n'
 '         1.24850712e+06,  3.16787400e+06, -1.45986562e+04,\n'
 '         2.67552550e+06, -1.27193712e+06, -3.10674469e+05,\n'
 '        -1.00087531e+06,  2.99835938e+05,  1.61437988e+06,\n'
 '         2.07477150e+06,  7.96443438e+04,  2.04868000e+05,\n'
 '         1.31731875e+06, -2.53724062e+05,  1.27444555e+05,\n'
 '         3.73306031e+05,  3.12289219e+05, -2.48294016e+05,\n'
 '        -2.28392000e+06,  2.55238250e+06, -5.02123656e+05,\n'
 '        -1.30055838e+06, -1.00004350e+06,  1.11825438e+06,\n'
 '         4.16533675e+06, -6.16435812e+05, -5.46351375e+05,\n'
 '        -2.11007203e+05, -5.36666938e+05,  1.30832525e+06,\n'
 '         2.24241925e+06,  1.42553275e+06, -7.39514375e+05,\n'
 '         1.96456738e+06,  1.65846012e+06,  2.63159750e+06,\n'
 '         1.13217812e+06, -2.18260575e+06,  4.11634406e+05,\n'
 '        -1.95427925e+06, -1.14538862e+06,  2.61372350e+06,\n'
 '         3.46171000e+06,  1.58018438e+05,  2.61322650e+06,\n'
 '         1.83899162e+06,  6.45840125e+05,  1.66559638e+06,\n'
 '        -5.67904812e+05, -2.50249775e+06,  1.95358325e+06,\n'
 '        -2.73563906e+04, -4.34281700e+06,  1.41269492e+04,\n'
 '        -6.09997500e+05,  4.17744250e+05, -1.09311675e+06,\n'
 '        -2.14262550e+06, -1.14155312e+05, -2.29584344e+05,\n'
 '        -9.45816750e+05, -1.34239138e+06, -1.79357238e+06,\n'
 '        -9.50553250e+05,  2.69069675e+06, -2.59990719e+05,\n'
 '         9.85817125e+05, -2.06688988e+06,  2.00046388e+06,\n'
 '        -2.49766775e+06, -4.72322375e+05, -1.29886191e+04,\n'
 '         6.85303125e+05, -5.48440750e+05, -1.58053562e+05,\n'
 '        -1.86030188e+06, -1.62825375e+06, -2.22901100e+06,\n'
 '         1.35737700e+06, -2.15131450e+06,  1.65349766e+05,\n'
 '        -3.64582875e+05,  1.13615775e+06, -4.95320875e+05,\n'
 '         2.20900938e+05,  1.77524672e+05, -2.48600250e+06,\n'
 '        -3.75993688e+05,  4.89286719e+03, -3.93706000e+05,\n'
 '         1.43530703e+05, -2.21871775e+06,  3.14246400e+06,\n'
 '         2.24443050e+06,  2.58626575e+06, -1.96142812e+06,\n'
 '         2.44551350e+06,  3.33043400e+06,  6.52671312e+05,\n'
 '         5.08549531e+05, -8.32245750e+05, -7.12154688e+05,\n'
 '        -1.54021125e+06,  1.61526962e+06, -2.09754525e+06,\n'
 '        -8.88439062e+05,  3.96157969e+05,  5.83739938e+05,\n'
 '         2.19777938e+05,  9.12971750e+05, -2.04181367e+04,\n'
 '         1.02042569e+06, -8.32252125e+05, -5.87387688e+05,\n'
 '        -1.50513600e+06, -4.21823242e+04,  5.38472938e+05,\n'
 '        -1.17165938e+06, -7.75065625e+05, -1.77948375e+06,\n'
 '        -1.07519350e+06, -2.56827300e+06, -8.10761312e+05,\n'
 '        -2.43235750e+06, -2.44277700e+06,  2.20687675e+06,\n'
 '         1.66082562e+06,  1.96864425e+06, -6.61947625e+05,\n'
 '        -1.04052512e+06, -1.83237925e+06, -2.24435150e+06,\n'
 '        -1.58016375e+06,  1.80850412e+06, -1.49156012e+06,\n'
 '        -1.46659250e+05, -3.89203825e+06,  1.12253538e+06,\n'
 '         7.93669000e+05, -9.87060375e+05,  1.17378425e+06,\n'
 '        -9.40631625e+05,  9.66711500e+05, -3.99754025e+06,\n'
 '         5.07828938e+05, -3.27920875e+05, -1.95787925e+06,\n'
 '        -2.77477375e+06, -1.88867075e+06, -1.03478344e+06,\n'
 '         1.85920788e+06, -5.91112250e+05, -2.03054338e+06,\n'
 '         9.29904188e+05,  2.89646800e+06,  1.62434125e+06,\n'
 '        -2.37425200e+06,  1.25361912e+06,  7.26699625e+05,\n'
 '         5.70908938e+05, -2.11233100e+06,  4.90036531e+05,\n'
 '        -1.00752648e+05, -6.29705688e+05, -2.38365600e+06,\n'
 '         2.06269950e+06,  1.75050088e+06, -1.06809212e+06,\n'
 '         9.63996312e+05,  1.44896075e+06,  7.94497938e+05,\n'
 '         7.02575312e+05, -6.59257000e+05,  3.23249300e+06,\n'
 '         7.84471719e+04, -1.61547938e+05, -1.27007325e+06,\n'
 '        -1.32987612e+06, -1.21891100e+06, -2.18433725e+06,\n'
 '        -2.50331150e+06,  6.44929625e+05,  4.37048531e+05,\n'
 '        -9.13300312e+05, -2.98131719e+05, -1.08898275e+06,\n'
 '        -1.26921025e+06, -8.93375625e+05, -1.64269750e+06,\n'
 '         1.03283069e+06,  3.08416725e+06, -8.77818125e+04,\n'
 '         2.03700359e+05, -2.67866600e+06, -1.01016586e+05,\n'
 '         7.33908500e+05, -7.90328062e+05,  1.43023469e+05,\n'
 '        -9.90363188e+05, -1.10935200e+06,  2.06716100e+06,\n'
 '         5.43881438e+05, -1.34908047e+05, -1.10573200e+06,\n'
 '        -4.71633900e+06,  1.04884925e+06,  3.31793875e+05,\n'
 '        -3.34510188e+05,  9.28924375e+04,  2.08887812e+06,\n'
 '        -1.43966100e+06,  7.43951250e+05, -2.32140825e+06,\n'
 '        -3.21329650e+06,  2.80092150e+06,  1.11707688e+06,\n'
 '        -3.97813344e+05, -1.53790025e+06, -1.65105712e+06,\n'
 '        -2.37323453e+05, -1.44904925e+06, -3.47680675e+06,\n'
 '        -2.60569100e+06, -1.44516750e+06, -1.22612962e+06,\n'
 '         2.11780850e+06,  5.46827312e+05, -3.74273562e+05,\n'
 '        -3.39644500e+06,  3.37376750e+06,  6.86169875e+05,\n'
 '        -2.24123950e+06, -5.83425438e+05,  1.16317750e+06,\n'
 '         7.84391406e+04,  2.45847700e+06,  2.83828000e+06,\n'
 '        -1.50181238e+06,  1.35061575e+06, -1.33658500e+06,\n'
 '         5.89136938e+05,  7.54961125e+05, -1.86348125e+06,\n'
 '         1.52404300e+06,  5.15011438e+05, -6.37454125e+05,\n'
 '        -1.80105825e+06,  6.16409938e+05, -7.35539688e+05,\n'
 '        -9.56446875e+05, -4.46074188e+05,  1.97194950e+06,\n'
 '         1.69806100e+06, -2.71203625e+06, -2.19058725e+06,\n'
 '         2.31229969e+05,  2.45935575e+06, -2.88574475e+06,\n'
 '         5.38836562e+05,  2.38286650e+06,  3.54731125e+06,\n'
 '        -9.58257875e+05, -1.46762962e+06,  2.74943275e+06,\n'
 '         4.03218688e+05, -1.52066738e+06, -1.16607562e+06,\n'
 '         6.15238312e+05,  2.03328625e+06, -5.01314125e+05,\n'
 '        -1.22533300e+06,  1.06283825e+06,  3.03328969e+05,\n'
 '        -1.55417625e+06, -9.75900156e+04,  1.62618588e+06,\n'
 '        -3.82334000e+06,  3.20928300e+06,  1.18313788e+06,\n'
 '         7.71895812e+05,  2.06015219e+05,  8.10150875e+05,\n'
 '        -1.51517250e+06, -1.40308288e+06, -2.23105650e+06,\n'
 '        -4.36852375e+05,  1.13581075e+06,  1.04536638e+06,\n'
 '        -5.30769850e+06,  3.02194375e+05, -2.23622950e+06,\n'
 '         3.45829725e+06,  1.12400450e+06, -2.67372188e+05,\n'
 '        -4.42850850e+06,  2.04809094e+05, -2.63084938e+05,\n'
 '         1.00884544e+06, -1.21746562e+06, -2.65819100e+06,\n'
 '         1.61732412e+06,  2.60250675e+06, -1.18855475e+06,\n'
 '        -1.82883375e+06, -2.37271775e+06, -5.95520188e+05,\n'
 '         2.22605225e+06, -1.71773656e+05, -1.08596172e+05,\n'
 '        -2.68638325e+06,  2.12257550e+06, -3.04002000e+06,\n'
 '         9.10847461e+03, -5.21994453e+04, -2.16626675e+06,\n'
 '        -3.59694719e+05,  1.66132975e+06,  1.11062175e+06,\n'
 '         1.05109375e+05,  1.12775825e+06, -1.85836547e+05,\n'
 '         2.85406875e+06,  1.60152612e+06,  9.84599438e+05,\n'
 '        -2.80615500e+06, -1.45545203e+05,  4.45734000e+05,\n'
 '        -2.39380500e+06, -7.95065688e+05, -1.12971797e+04,\n'
 '         1.35980788e+06,  6.97641625e+05,  9.82628000e+05,\n'
 '        -5.94860188e+05,  1.00728181e+06, -3.21859844e+05,\n'
 '         2.21175800e+06,  1.06590488e+06,  2.62856075e+06,\n'
 '         2.29719350e+06, -8.81183000e+05,  2.91039425e+06,\n'
 '         1.34526588e+06,  3.86496350e+06,  1.22819438e+06,\n'
 '        -6.04903312e+05, -1.88424188e+06, -3.94110375e+05,\n'
 '        -6.23785438e+05,  1.68484025e+06,  5.49957375e+05,\n'
 '         3.74283600e+06,  1.65239075e+06, -1.24913212e+06,\n'
 '        -5.50514750e+05, -1.08636050e+06, -1.58467350e+06,\n'
 '         1.51917575e+06, -5.13169188e+05, -3.38890925e+06,\n'
 '         6.92524250e+05,  1.25082912e+06, -6.10763875e+05,\n'
 '        -2.68592200e+06,  5.76302000e+05, -4.72681875e+05,\n'
 '        -3.92679850e+06,  2.85070975e+06,  7.60835188e+05,\n'
 '         4.74742875e+05,  4.53387500e+04, -4.41100406e+05,\n'
 '         1.59107425e+06,  3.15617925e+06, -8.16664375e+04,\n'
 '        -4.06710531e+05,  4.18672275e+06,  2.02592050e+06,\n'
 '        -5.51213562e+05, -4.54716400e+06,  4.94429031e+05,\n'
 '         2.05674062e+06,  6.33693750e+05,  6.68485812e+05,\n'
 '         3.40933500e+06, -6.65026562e+05,  1.31344500e+06,\n'
 '         1.76558600e+06, -1.32698250e+06, -2.45618775e+06,\n'
 '         8.07802562e+05, -3.27798075e+06, -8.25390625e+05,\n'
 '         1.41716388e+06, -2.05284825e+06, -4.07070000e+05,\n'
 '         6.57724750e+05,  2.02108200e+06,  1.76973859e+05,\n'
 '        -2.58871575e+06,  2.94478525e+06,  1.33652450e+06,\n'
 '        -1.00773588e+06, -4.20703719e+05,  1.01023338e+06,\n'
 '         1.99157012e+06, -1.81844488e+06, -3.15450531e+05,\n'
 '         2.54613600e+06,  6.22405688e+05,  1.23817312e+06,\n'
 '        -1.58987288e+06, -9.36655500e+05, -1.99502162e+06,\n'
 '         4.74341625e+05, -6.86630812e+05, -6.85577422e+04,\n'
 '         3.67892775e+06, -3.32078325e+06, -9.78461641e+04,\n'
 '         1.77103138e+06, -7.41707062e+05,  1.55972775e+06,\n'
 '         7.00247562e+05, -2.83951775e+06, -2.53368100e+06,\n'
 '         9.41262750e+05,  1.42488988e+06, -1.07422475e+06,\n'
 '         3.50192156e+05, -1.14324547e+05, -3.71314250e+06,\n'
 '        -4.19968156e+05, -2.60406325e+06,  2.24697025e+06,\n'
 '         1.03498742e+05, -1.44616362e+06, -1.08458398e+05,\n'
 '        -9.70229188e+05,  1.76514906e+05, -5.18312031e+04,\n'
 '        -5.38467188e+05, -2.71195025e+06,  2.53442969e+04,\n'
 '         9.67221125e+05,  7.12765875e+05, -1.77548812e+06,\n'
 '        -1.53764438e+06,  1.74718225e+06, -2.56629225e+06,\n'
 '         1.37240075e+06, -1.57018125e+06, -2.98753050e+06,\n'
 '        -9.86355312e+05,  2.53084625e+06, -8.93093562e+05,\n'
 '        -1.30318588e+06, -4.77318250e+05,  2.65291825e+06,\n'
 '        -1.09321612e+06, -1.22249238e+06, -1.49907412e+06,\n'
 '         1.42544288e+06, -6.20509922e+04,  3.17095375e+05,\n'
 '        -2.95205550e+06,  6.91083438e+05, -1.52713300e+06,\n'
 '        -9.61675438e+05,  4.59945094e+05, -2.09409500e+05,\n'
 '        -9.43981250e+05,  1.38704938e+06, -2.09492662e+06,\n'
 '        -1.49995575e+06,  7.67229312e+05,  1.15081859e+05,\n'
 '        -1.26816900e+06, -1.68250538e+06,  4.43664312e+05,\n'
 '         3.56768219e+05, -2.46930125e+05, -4.61071450e+06,\n'
 '         4.51766594e+05, -6.28442250e+05,  4.90598438e+05,\n'
 '        -1.67787275e+06,  2.70954875e+05, -2.52492200e+06,\n'
 '        -9.74308000e+05, -4.08208219e+05, -7.94482438e+05,\n'
 '         1.46120088e+06,  5.21489375e+04, -1.92245031e+05,\n'
 '        -3.25888438e+05,  1.51225000e+06, -2.01813950e+06,\n'
 '        -1.43038312e+06,  7.48080875e+05,  2.05308025e+06,\n'
 '         4.83571950e+06, -2.43776850e+06,  1.10236538e+06,\n'
 '        -2.55495500e+06,  1.15682344e+05, -2.61335525e+06,\n'
 '         1.04015831e+06,  5.82274531e+04,  1.12042262e+06,\n'
 '         6.17259688e+05, -1.52900062e+05, -5.65017562e+05,\n'
 '        -1.08532912e+06, -2.65667750e+06,  3.12452200e+06,\n'
 '         1.01927962e+06,  9.45475625e+05,  3.18887094e+05,\n'
 '         2.06484900e+06,  4.73551094e+05,  1.49239088e+06,\n'
 '         4.31267469e+05, -2.97822675e+06, -1.62854225e+06,\n'
 '         1.70450450e+06,  1.53078125e+06, -1.28293375e+06,\n'
 '         2.76417000e+06, -2.04515438e+06,  1.30924075e+06,\n'
 '         7.37918188e+05, -2.24185525e+06, -1.45001912e+06,\n'
 '        -2.72669625e+06,  1.64220450e+06, -4.53112344e+04,\n'
 '        -9.59172438e+05, -3.66307525e+06,  3.25454500e+05,\n'
 '        -6.44547188e+05,  7.00234562e+05,  7.87972938e+05,\n'
 '        -1.21864100e+06, -2.77976225e+06, -2.01168175e+06,\n'
 '         9.99358125e+05, -2.71120900e+06,  2.30270075e+06,\n'
 '        -2.18835375e+06, -1.53001438e+06,  8.32374062e+05,\n'
 '        -2.31195950e+06, -3.91593812e+05,  6.25144312e+05,\n'
 '         1.12717862e+06, -1.26556462e+06, -2.97761281e+05,\n'
 '        -4.56324188e+05, -1.80889000e+06,  1.60306000e+06,\n'
 '        -2.65715906e+05, -5.44045312e+05, -1.04901500e+06,\n'
 '         1.08863250e+06, -4.01527812e+05,  1.60624800e+06,\n'
 '         2.14336100e+06,  7.45333062e+05,  2.46103516e+05,\n'
 '        -5.32895625e+05,  3.41317800e+06, -7.56541250e+05,\n'
 '         2.92551625e+06,  8.50570000e+05, -1.23171862e+06,\n'
 '         2.32926400e+06,  1.41090600e+06,  1.51828906e+05,\n'
 '        -5.30670375e+05,  7.35847875e+05,  1.89728088e+06,\n'
 '        -1.24679450e+06,  6.89317812e+04,  1.10891484e+05,\n'
 '        -1.29539838e+06, -1.99482650e+06,  1.47663612e+06,\n'
 '         9.22500688e+05, -3.74486500e+06,  2.33427281e+05,\n'
 '        -5.25818938e+05, -2.04153112e+06,  2.65719200e+06,\n'
 '         1.23916925e+06,  2.17773875e+06, -2.34759406e+05,\n'
 '        -2.98233438e+05, -2.20614562e+05, -4.18239325e+06,\n'
 '         1.16085750e+06, -2.82521688e+05,  1.34024662e+06,\n'
 '         1.28919725e+06, -3.83247469e+05,  9.29543562e+05,\n'
 '        -2.65059400e+06, -5.49404125e+05, -4.40015156e+04,\n'
 '        -1.97099388e+06, -2.58026075e+06, -2.56532250e+06,\n'
 '         1.76986400e+06, -3.30740625e+05, -2.51878625e+06,\n'
 '         1.20042025e+06, -6.04675500e+05, -2.21731562e+05,\n'
 '        -2.26727609e+05, -5.53084500e+05,  1.97224950e+06,\n'
 '         1.18323812e+06, -1.01816625e+06, -2.33012275e+06,\n'
 '        -9.92743562e+05,  1.89385562e+06,  8.76729688e+05,\n'
 '         2.72575250e+05,  1.45531562e+06,  7.72094062e+04,\n'
 '         7.47529438e+05, -2.04971656e+05,  8.24831250e+05,\n'
 '        -1.70472750e+06,  7.75402062e+05,  3.23916688e+05,\n'
 '        -1.60672125e+06,  9.08876125e+05, -1.37664922e+05,\n'
 '        -2.36041350e+06,  5.95630000e+05, -2.64669725e+06,\n'
 '         1.84428212e+06, -2.05285612e+06,  1.89814288e+06,\n'
 '         1.05849675e+06, -1.00337388e+06,  1.65388612e+06,\n'
 '        -3.74305000e+05,  5.09987844e+05, -1.14477078e+05,\n'
 '         2.42451800e+06,  7.02814188e+05, -3.00799725e+06,\n'
 '        -1.06389450e+06,  2.50379375e+06, -1.98418000e+06,\n'
 '         1.91443912e+06, -6.59269562e+05,  2.03010425e+06,\n'
 '         5.83827250e+05, -3.35549883e+04, -4.55128250e+06,\n'
 '         7.01737438e+05, -2.16687450e+06,  3.88649225e+06,\n'
 '        -9.62871688e+05, -3.18843555e+04, -1.21207575e+06,\n'
 '        -1.02739450e+06, -1.18258938e+06, -7.11999562e+05,\n'
 '         1.23076175e+06,  1.22997350e+06, -3.81739925e+06,\n'
 '        -1.93293800e+06, -1.46369712e+06,  8.39781500e+05,\n'
 '        -3.56728075e+06,  2.25561100e+06, -1.30945700e+06,\n'
 '         1.95120288e+06,  1.17706088e+06, -1.22884025e+06,\n'
 '         2.61418900e+06, -3.42432575e+06, -1.56612350e+06,\n'
 '         1.97567625e+06, -2.36482141e+05, -1.87901975e+06,\n'
 '         6.90832500e+05, -3.33720469e+05,  2.83544750e+06,\n'
 '         2.23423600e+06,  7.94529875e+05, -5.45776000e+05,\n'
 '         1.20480988e+06,  2.54896225e+06, -1.15484891e+05,\n'
 '         1.02903612e+06, -1.21921075e+06, -1.35271462e+06,\n'
 '         2.51236150e+06,  7.45465938e+05, -6.54096750e+05,\n'
 '         8.11824875e+05,  2.22372600e+06, -1.97171062e+06,\n'
 '        -2.08528825e+06,  9.86177188e+05,  6.28762500e+05,\n'
 '         1.48192812e+06,  1.31337838e+06, -2.95747075e+06,\n'
 '         1.11041275e+06, -2.38621938e+05, -1.36098175e+06,\n'
 '         7.20894688e+05, -1.51173975e+06, -4.18938500e+06,\n'
 '        -1.05735820e+04, -3.41312050e+06, -1.14710812e+06,\n'
 '        -4.41118350e+06, -1.19938312e+06,  7.45962125e+05,\n'
 '        -5.78444750e+05,  3.86644200e+06, -3.29788800e+06,\n'
 '         1.96798750e+05, -1.84253212e+06,  2.88646725e+06,\n'
 '         2.00709925e+06, -9.65905000e+05,  1.02702850e+06,\n'
 '         1.25970488e+06, -2.66303375e+06, -2.04492900e+06,\n'
 '         6.99066625e+05, -4.53048469e+05,  5.11886016e+04,\n'
 '         1.88869688e+06, -2.77669750e+06, -1.59156012e+06,\n'
 '         9.79054312e+05, -2.00471838e+06,  1.12751094e+05,\n'
 '         1.21087725e+06,  1.12538050e+06, -3.73027281e+05,\n'
 '         4.07123406e+05,  3.30176125e+05, -2.43426734e+05,\n'
 '         4.70836016e+04,  3.90688477e+04, -2.80972625e+05,\n'
 '        -5.80168984e+04, -2.70648969e+05,  2.31806078e+05,\n'
 '         3.72657094e+05,  1.06743962e+06,  2.90707725e+06,\n'
 '        -1.45423438e+06,  1.37327988e+06, -4.68340688e+05,\n'
 '         1.88239922e+05, -1.70044800e+06, -1.64180406e+05,\n'
 '        -1.77746825e+06,  3.65557300e+06,  2.77083425e+06,\n'
 '        -7.71769531e+04,  5.34915438e+05, -3.08405281e+05,\n'
 '         1.48347075e+06,  3.51785125e+05,  1.50451950e+06,\n'
 '         3.12620175e+06,  6.35798562e+05, -1.51462188e+04,\n'
 '         1.13718375e+06, -2.94324200e+06,  1.20519117e+05,\n'
 '         1.02209356e+06, -2.95205188e+05,  3.75926950e+06,\n'
 '        -1.08060175e+06,  7.50416688e+05,  1.85418888e+06,\n'
 '         5.24273656e+05,  2.09335562e+05,  2.12969375e+06,\n'
 '        -1.72093388e+06,  2.19135325e+06,  2.12376969e+05,\n'
 '         3.60380175e+06,  1.87468838e+06, -4.78747062e+05,\n'
 '        -1.77911250e+06, -4.06213250e+05,  1.53500109e+05,\n'
 '         4.00823188e+05, -1.43294800e+06,  9.05581812e+05,\n'
 '        -1.88795906e+05,  1.25814575e+06,  3.02996375e+06,\n'
 '        -1.04428719e+06, -4.12519812e+05,  1.94154984e+05,\n'
 '        -3.45583188e+05, -4.15054344e+05,  1.05771412e+06,\n'
 '        -2.85092075e+06, -1.46775734e+05,  1.69262375e+05,\n'
 '         1.05621138e+06, -3.78226525e+06,  6.80659750e+05,\n'
 '        -5.03213750e+05, -2.97429000e+06, -1.97256900e+06,\n'
 '         3.20695150e+06,  3.51949400e+06, -1.84617650e+06,\n'
 '        -1.24384075e+06, -2.26350675e+06,  1.22782000e+05,\n'
 '        -9.40866688e+05,  1.15648462e+06, -3.30892275e+06,\n'
 '         7.20767625e+05, -2.23812675e+06,  1.50406800e+06,\n'
 '        -9.42426750e+05,  6.06687188e+05,  2.53655500e+06,\n'
 '         1.51483350e+06, -2.80013525e+06,  4.39950875e+05,\n'
 '         2.95767875e+06, -3.58118050e+06, -2.66667719e+05,\n'
 '         2.04449550e+06,  1.56169138e+06,  3.13898925e+06,\n'
 '         4.60927578e+04,  1.22736125e+06,  1.22043225e+06,\n'
 '         2.96805850e+06, -1.21123650e+06, -1.81864075e+06,\n'
 '        -1.02310862e+06,  1.55823350e+06,  3.04936950e+06,\n'
 '        -1.12468950e+06]])')
'test_inceptionnet | batch_shape is: [1]'
'test_inceptionnet | logits.shape is: ivy.Shape(1, 1000)'
'||'
'test_inceptionnet | device is: cpu'
'test_inceptionnet | fw is: tensorflow'
'test_inceptionnet | load_weights is: True'
'InceptionV3 | build | layer 1/22 built'
'InceptionV3 | build | layer 2/22 built'
'layer 3/22 built'
'InceptionV3 | build | layer 4/22 built'
'InceptionV3 | build | layer 5/22 built'
'InceptionV3 | build | layer 6/22 built'
'InceptionV3 | build | layer 7/22 built'
'InceptionV3 | build | layer 8/22 built'
'InceptionV3 | build | layer 9/22 built'
'InceptionV3 | build | layer 10/22 built'
'InceptionV3 | build | layer 11/22 built'
'InceptionV3 | build | layer 12/22 built'
'InceptionV3 | build | layer 13/22 built'
'InceptionV3 | build | layer 14/22 built'
'InceptionV3 | build | layer 15/22 built'
'InceptionV3 | build | layer 17/22 built'
'InceptionV3 | build | layer 18/22 built'
'InceptionV3 | build | layer 19/22 built'
'InceptionV3 | build | layer 20/22 built'
'InceptionV3 | build | layer 21/22 built'
'InceptionV3 | build | layer 22/22 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/4 built'
'layer 2/4 built'
'layer 3/4 built'
'layer 4/4 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/6 built'
'layer 2/6 built'
'layer 3/6 built'
'layer 4/6 built'
'layer 5/6 built'
'layer 6/6 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'inceptionNet_v3 | building InceptionV3 model | done 1/3'
'inceptionNet_v3 | clearning pretrained weights | done 2/3'
'inceptionNet_v3 | loading pretrained weights | done 3/3'
'InceptionV3 | forward | input data_format is:NHWC | done 1/27'
'InceptionV3 | forward | data_format is going to be used is:NHWC | done 1/27'
'InceptionV3 | forward | input shape is:ivy.Shape(1, 224, 224, 3) | done 1/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 224, 224, 3) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 111, 111, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 111, 111, 32) | done 2/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 111, 111, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 32) | done 3/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 109, 109, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 64) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 64) | done 4/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 54, 54, 64) | done 5/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 54, 54, 80) | done 3/3'
'InceptionV3 | forward | is:ivy.Shape(1, 54, 54, 80) | done 6/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 80) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 52, 52, 192) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 52, 52, 192) | done 7/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 192) | done 8/27'
'input shape is:ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 32) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 32)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 25, 25, 256) | done 9/27'
'input shape is:ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 10/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 11/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 384) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 96) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 96)'
'one 20/20, output shape is:ivy.Shape(1, 12, 12, 288)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 12/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 12, 12, 768) | done 13/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 14/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 15/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 16/27'
'v3 16/27, output shape is:ivy.Shape(1, 12, 12, 768)'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 5, 5, 192)'
'one 7/20, output shape is:ivy.Shape(1, 5, 5, 768)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 1280) | done 17/27'
'input shape is:ivy.Shape(1, 5, 5, 1280)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 18/27'
'input shape is:ivy.Shape(1, 5, 5, 2048)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 19/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 20/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 5, 5) | done 21/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 1, 1) | done 22/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 27/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 24/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 25/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048) | done 26/27'
'InceptionV3 | forward | fc | done 27/27'
('test_inceptionnet | logits is: ivy.array([[ 1.85415041e+00,  '
 '7.40400851e-02,  1.29706121e+00,\n'
 '         9.59664166e-01,  7.97130764e-01, -9.53783631e-01,\n'
 '         1.37069857e+00,  5.50743699e-01, -4.59326625e-01,\n'
 '        -2.77655542e-01, -9.18570638e-01, -1.15564549e+00,\n'
 '        -2.98427999e-01, -5.14134169e-02,  2.55896497e+00,\n'
 '        -4.98068109e-02, -1.20596766e+00,  8.66277814e-01,\n'
 '         3.63394141e-01,  2.32431769e+00,  2.56967306e+00,\n'
 '        -2.47848058e+00, -6.46226168e-01, -1.21133924e-01,\n'
 '         6.89877033e-01, -2.29960275e+00, -1.53770292e+00,\n'
 '        -5.72410941e-01, -2.71357012e+00,  6.44011676e-01,\n'
 '         1.30306423e+00,  9.28613663e-01,  7.35238195e-01,\n'
 '         8.05714726e-02,  1.94852877e+00, -1.65486574e+00,\n'
 '        -1.04050636e+00, -2.01058483e+00, -1.68864679e+00,\n'
 '         6.03061676e-01,  7.76291132e-01, -1.24050885e-01,\n'
 '         1.10774016e+00,  4.61082816e-01, -3.71941835e-01,\n'
 '        -4.01306301e-01, -2.02228308e+00,  1.83327031e+00,\n'
 '         3.96982998e-01,  1.44177032e+00,  1.00882459e+00,\n'
 '         7.88230896e-01,  7.75958538e-01, -1.65916467e+00,\n'
 '         1.26170075e+00,  6.56162262e-01, -1.91699910e+00,\n'
 '        -8.82686377e-01,  1.00858402e+00, -1.18943787e+00,\n'
 '        -9.98933911e-01,  1.76976132e+00, -1.67823625e+00,\n'
 '         3.02463621e-02, -1.47721410e+00, -4.07788485e-01,\n'
 '        -1.83984846e-01,  1.41204286e+00, -7.12535143e-01,\n'
 '        -4.65360880e-01, -1.45298982e+00, -8.28375578e-01,\n'
 '        -3.46098185e+00, -1.60366940e+00, -1.19791889e+00,\n'
 '        -1.97965229e+00, -2.48270094e-01,  1.25039548e-01,\n'
 '        -1.66258800e+00,  2.74625987e-01, -1.60344064e+00,\n'
 '         9.64179158e-01,  2.38526791e-01,  1.30337429e+00,\n'
 '         2.61788273e+00, -5.91867566e-01, -1.16853630e+00,\n'
 '        -1.46881509e+00,  1.27541065e+00,  4.77363199e-01,\n'
 '         3.51436883e-01,  2.51943922e+00, -1.48242557e+00,\n'
 '         1.82690889e-01,  1.64109135e+00, -1.44582719e-01,\n'
 '         1.32566452e+00, -5.36775529e-01, -2.62219214e+00,\n'
 '         2.58645201e+00,  1.74341810e+00,  9.33647096e-01,\n'
 '        -1.26111531e+00, -1.08340609e+00,  3.23369670e+00,\n'
 '        -2.65996385e+00, -1.64467955e+00,  1.56207800e+00,\n'
 '         2.83269739e+00,  3.07388455e-01,  5.93315423e-01,\n'
 '        -5.20649433e-01,  3.42548227e+00,  3.10327482e+00,\n'
 '         2.23769262e-01, -1.62285519e+00, -7.79001236e-01,\n'
 '        -3.29444468e-01, -3.14262009e+00,  9.30281103e-01,\n'
 '        -9.39115107e-01, -3.60454416e+00,  1.59407467e-01,\n'
 '        -8.23297620e-01, -1.96843076e+00,  6.42118037e-01,\n'
 '        -1.14779949e+00,  6.24604940e-01,  9.15771902e-01,\n'
 '         2.03793693e+00, -6.08110607e-01,  3.18958163e-02,\n'
 '         6.37428760e-01, -2.13204670e+00,  3.59991133e-01,\n'
 '         4.09498453e-01,  3.95497903e-02,  9.81125534e-01,\n'
 '         1.31611124e-01, -1.01663768e+00, -5.18459082e-03,\n'
 '        -3.13891918e-01, -4.70156789e-01,  1.25008917e+00,\n'
 '         3.91107965e+00,  5.75714827e-01,  3.74605477e-01,\n'
 '        -6.47083044e-01, -7.91240454e-01,  1.65686533e-01,\n'
 '         6.92723513e-01, -2.06614494e-01,  3.69362474e+00,\n'
 '         1.09879923e+00,  5.03492653e-01, -2.19945502e+00,\n'
 '         1.04883052e-01,  6.43778753e+00, -1.96393693e+00,\n'
 '        -1.49142492e+00,  1.16280293e+00, -8.74140322e-01,\n'
 '        -1.74814796e+00,  3.11323941e-01, -7.80564547e-01,\n'
 '        -1.32017660e+00, -1.23987925e+00,  8.98168206e-01,\n'
 '        -1.69636607e+00,  2.45439601e+00,  1.47770524e+00,\n'
 '         1.33658958e+00, -8.09043825e-01, -1.70796216e-02,\n'
 '         6.01309955e-01, -1.49096227e+00, -2.01540089e+00,\n'
 '        -1.09230876e+00, -9.33597744e-01,  7.41738200e-01,\n'
 '        -2.04876590e+00,  2.52897352e-01, -1.04186916e+00,\n'
 '         8.19217116e-02, -3.93473953e-01,  2.21672344e+00,\n'
 '         3.45144177e+00, -1.88381541e+00, -8.70316982e-01,\n'
 '        -3.19916868e+00, -7.41289735e-01, -1.14202034e+00,\n'
 '         8.05950463e-01, -1.76205516e+00, -1.87504268e+00,\n'
 '        -5.36960483e-01, -3.28321123e+00, -2.37200737e-01,\n'
 '        -2.23425889e+00,  1.49097037e+00, -3.88830841e-01,\n'
 '        -3.37988090e+00, -6.08960092e-01,  5.15846539e+00,\n'
 '        -9.80017185e-01, -1.20263243e+00, -1.45841694e+00,\n'
 '         9.39558968e-02, -2.24482608e+00, -1.85927105e+00,\n'
 '        -1.12722111e+00, -2.67590022e+00, -1.63241136e+00,\n'
 '        -1.28557622e+00,  1.02307868e+00, -6.60977721e-01,\n'
 '         1.98801720e+00,  4.09563601e-01,  1.00097358e-02,\n'
 '        -4.01038122e+00, -4.42433879e-02,  1.18643761e-01,\n'
 '         3.85033202e+00,  3.36742401e+00,  4.76086617e+00,\n'
 '        -9.50507581e-01,  2.11009622e+00, -3.83136177e+00,\n'
 '         2.60046387e+00,  2.73284912e+00,  1.78495967e+00,\n'
 '         5.07942629e+00,  3.64048314e+00,  1.71322858e+00,\n'
 '        -8.65731537e-01,  1.09644294e+00,  1.10384718e-01,\n'
 '        -4.05213356e-01, -1.00367367e+00, -7.42322206e-02,\n'
 '         3.04444075e-01, -8.29759240e-02,  7.82084167e-01,\n'
 '        -7.78210163e-03, -1.41114283e+00, -7.85849214e-01,\n'
 '        -1.53939277e-01,  3.27687025e+00,  7.57170916e+00,\n'
 '         4.98226404e+00,  2.38089490e+00, -8.86751562e-02,\n'
 '        -2.60778809e+00, -5.42691231e-01,  5.74167371e-01,\n'
 '         9.62683797e-01,  2.53836870e+00,  7.61024761e+00,\n'
 '         1.97320385e+01,  7.19674015e+00,  5.25468445e+00,\n'
 '         5.43917274e+00, -2.17127752e+00, -3.99360150e-01,\n'
 '         9.41504836e-01, -7.56420970e-01, -1.32438302e+00,\n'
 '         2.05329108e+00,  2.63653576e-01,  2.73447299e+00,\n'
 '         1.29128552e+01, -6.61511242e-01, -1.65473580e+00,\n'
 '        -6.38429344e-01,  8.01678002e-03, -1.91717517e+00,\n'
 '        -3.40431631e-02,  2.68148470e+00, -3.30674648e-01,\n'
 '         1.30784922e+01,  1.84921408e+00,  7.70395756e-01,\n'
 '        -3.34506959e-01,  3.85330391e+00, -7.71316528e-01,\n'
 '        -1.43013704e+00, -1.13628006e+00,  2.61670280e+00,\n'
 '         1.00121796e-01,  2.10722518e+00, -1.45313680e+00,\n'
 '        -4.16999131e-01,  3.79675806e-01, -1.82909942e+00,\n'
 '        -1.02308690e+00, -2.25945616e+00,  2.51635599e+00,\n'
 '        -1.96577096e+00, -3.78402352e-01, -8.60446811e-01,\n'
 '        -1.35571456e+00, -2.61975646e-01, -6.05602741e-01,\n'
 '        -3.11741114e-01,  1.59144968e-01,  3.04876327e-01,\n'
 '        -9.53014970e-01,  3.34298194e-01,  8.73549640e-01,\n'
 '        -5.82450628e-03, -1.50632656e+00, -7.53330767e-01,\n'
 '         5.33960462e-01, -1.22425246e+00, -6.13861263e-01,\n'
 '        -4.43834305e-01, -2.90853357e+00, -2.55112350e-01,\n'
 '         6.81012750e-01, -1.75623620e+00,  1.70119405e-01,\n'
 '        -5.69262505e-01, -2.76765823e-01, -2.03924328e-01,\n'
 '        -1.41115928e+00,  5.78666329e-01,  1.80984184e-01,\n'
 '         2.57542133e+00,  1.47949517e+00,  4.85767499e-02,\n'
 '        -1.86377978e+00,  2.88883543e+00,  3.00288534e+00,\n'
 '        -1.52338433e+00, -1.64735341e+00, -3.09679651e+00,\n'
 '        -2.01754093e+00, -1.30114913e+00,  6.22359633e-01,\n'
 '        -1.69775677e+00,  5.43848157e-01,  9.59851861e-01,\n'
 '         2.58956462e-01,  1.32999170e+00, -1.21647346e+00,\n'
 '        -8.00889134e-01,  1.26791120e+00, -1.12770230e-01,\n'
 '         2.89438987e+00, -3.25407118e-01,  1.07520014e-01,\n'
 '        -6.41450226e-01, -1.27403569e+00,  1.34974456e+00,\n'
 '        -6.06400073e-01,  3.93157148e+00, -4.61013615e-01,\n'
 '         9.85664487e-01,  7.66090333e-01, -6.63732886e-02,\n'
 '        -1.49603808e+00,  2.37756878e-01, -1.84044194e+00,\n'
 '         2.40887117e+00, -1.88725030e+00, -2.64004183e+00,\n'
 '        -2.42856193e+00, -1.58112371e+00, -2.94376671e-01,\n'
 '        -1.75988174e+00,  1.54193008e+00,  4.09399688e-01,\n'
 '        -5.98143280e-01, -5.73327541e-01, -8.64274979e-01,\n'
 '        -1.05742514e+00, -9.07769561e-01, -1.43691421e-01,\n'
 '         8.08956265e-01, -1.72569036e+00,  4.14764062e-02,\n'
 '        -2.59898973e+00, -6.13448799e-01, -6.45463288e-01,\n'
 '        -1.27949500e+00,  1.86748028e+00, -1.63882840e+00,\n'
 '        -2.39686966e-01, -1.15242493e+00,  8.45480144e-01,\n'
 '        -1.72856975e+00,  1.81252897e-01, -1.02883387e+00,\n'
 '         2.19578791e+00, -7.82642961e-01, -1.04808819e+00,\n'
 '         6.46899760e-01, -4.07969475e-01, -3.70524764e-01,\n'
 '         1.78385317e+00, -1.43572724e+00, -1.49963403e+00,\n'
 '         1.20346844e+00,  3.54375631e-01,  2.56683588e+00,\n'
 '         1.04481530e+00,  4.37293142e-01, -4.66092378e-01,\n'
 '        -1.68265343e-01, -1.44970381e+00, -1.94518954e-01,\n'
 '        -3.04312420e+00, -7.04415679e-01, -1.38848460e+00,\n'
 '         9.44555581e-01, -1.62387657e+00, -2.40709806e+00,\n'
 '         7.48222291e-01, -1.85165477e+00, -7.93102741e-01,\n'
 '        -3.94725502e-01, -3.00801444e+00, -4.56689686e-01,\n'
 '         4.87471521e-01,  1.03701293e-01,  1.12691724e+00,\n'
 '         1.37577665e+00,  2.67203361e-01,  2.33382106e-01,\n'
 '         9.51312125e-01,  1.20584273e+00, -3.75287719e-02,\n'
 '        -1.23520017e-01, -6.93010807e-01, -1.54430485e+00,\n'
 '         9.04647291e-01, -1.48763168e+00, -5.31147540e-01,\n'
 '        -1.11241269e+00,  4.92406100e-01,  1.67947161e+00,\n'
 '        -1.73809922e+00,  1.00140071e+00, -8.88500512e-01,\n'
 '        -8.76256943e-01,  2.37814665e+00,  5.82074046e-01,\n'
 '         5.02442539e-01,  4.70592081e-02, -1.01343691e+00,\n'
 '         7.78135538e-01,  2.10644054e+00, -1.79093087e+00,\n'
 '        -1.76875389e+00,  9.29257631e-01, -1.41914159e-01,\n'
 '         2.17494631e+00, -4.06689137e-01,  2.28017122e-01,\n'
 '         6.03858948e-01,  1.54504442e+00, -1.09415186e+00,\n'
 '         3.83556390e+00,  1.11018336e+00, -7.34947860e-01,\n'
 '        -9.13272739e-01, -9.00715470e-01, -2.49386311e+00,\n'
 '         4.70631182e-01,  5.93329072e-01,  9.02918160e-01,\n'
 '        -1.12894797e+00, -1.12521541e+00, -5.02444685e-01,\n'
 '        -7.54938304e-01, -2.60691524e+00,  2.30293536e+00,\n'
 '        -8.58748615e-01,  1.76084721e+00,  5.71283549e-02,\n'
 '        -2.70534962e-01, -3.91355723e-01, -2.92873812e+00,\n'
 '         1.46059275e-01, -8.03359032e-01, -2.20825577e+00,\n'
 '        -4.41920400e-01, -2.86009878e-01,  1.55210650e+00,\n'
 '        -3.80271047e-01,  7.70525634e-01, -8.69073093e-01,\n'
 '        -9.09065306e-01, -1.64854205e+00,  9.48664188e-01,\n'
 '         2.54569530e-01,  1.77065074e-01, -1.75143480e+00,\n'
 '        -1.07013893e+00, -1.73573995e+00, -1.54227090e+00,\n'
 '         2.11494491e-02,  1.02680743e-01, -3.43206835e+00,\n'
 '        -1.05667531e+00,  1.09615266e+00,  4.62006628e-02,\n'
 '        -1.59767315e-01,  5.90169251e-01, -1.72797191e+00,\n'
 '         8.89126718e-01, -2.95381546e-02, -1.49313176e+00,\n'
 '        -1.83980370e+00,  8.79362047e-01,  2.42508483e+00,\n'
 '        -4.95586693e-02,  4.80306983e-01, -2.17852783e+00,\n'
 '        -2.05174851e+00, -8.27618063e-01, -2.59080410e+00,\n'
 '         1.77229404e+00, -4.24607903e-01, -1.25886679e-01,\n'
 '        -7.98030317e-01, -6.41762734e-01, -9.99678910e-01,\n'
 '        -1.63259849e-01, -1.02472436e+00, -1.01987135e+00,\n'
 '         3.45464945e-02,  1.16048343e-01, -1.46847773e+00,\n'
 '        -1.15935646e-01, -1.58656144e+00, -2.17544556e+00,\n'
 '         1.38766933e+00, -3.32333147e-01, -9.59491789e-01,\n'
 '        -1.38520920e+00, -8.40953887e-01, -8.28711748e-01,\n'
 '         2.31017017e+00,  5.11938095e-01, -6.42263651e-01,\n'
 '         2.94263792e+00,  4.16675150e-01, -7.38653898e-01,\n'
 '         1.74733531e+00, -3.94195378e-01, -3.42830777e-01,\n'
 '        -1.42645132e+00, -1.11456561e+00, -4.89858568e-01,\n'
 '        -8.21681619e-01, -1.11780405e-01,  2.25186840e-01,\n'
 '         1.34950221e-01,  1.32431328e+00, -1.62539566e+00,\n'
 '         2.76795775e-02,  2.52092457e+00,  1.20450541e-01,\n'
 '         1.40322900e+00, -1.25254846e+00, -1.30336666e+00,\n'
 '        -2.22231126e+00, -7.25963771e-01, -1.09151185e+00,\n'
 '         7.10627973e-01, -9.67380643e-01,  1.11776662e+00,\n'
 '         4.53545153e-01, -2.25387424e-01, -1.30326843e+00,\n'
 '        -4.97589976e-01, -7.53167749e-01,  1.48274326e+00,\n'
 '        -1.74000943e+00,  1.24239850e+00, -5.38859785e-01,\n'
 '        -4.75658536e-01,  1.21144319e+00,  6.15569390e-02,\n'
 '        -5.34088194e-01, -3.65035391e+00,  1.22013175e+00,\n'
 '        -4.61371601e-01, -6.56925440e-02,  6.06479466e-01,\n'
 '        -1.82966900e+00,  4.05257702e+00, -2.05496520e-01,\n'
 '         1.19131970e+00, -1.58258569e+00,  5.50730303e-02,\n'
 '         3.73777390e-01, -3.23864937e+00,  5.53376019e-01,\n'
 '        -4.65907276e-01, -1.28366923e+00, -8.26681912e-01,\n'
 '        -1.11152935e+00,  2.45279336e+00,  1.70016432e+00,\n'
 '         3.96382403e+00,  1.53358424e+00,  1.04854560e+00,\n'
 '        -1.12032163e+00, -3.52209479e-01,  1.92154407e+00,\n'
 '        -1.96897733e+00,  9.50892031e-01,  1.71698988e-01,\n'
 '        -7.90266395e-01,  1.60536385e+00, -4.43441421e-01,\n'
 '        -2.32522011e+00, -2.07885003e+00, -1.29813349e+00,\n'
 '        -2.79417127e-01,  1.91039848e+00, -8.58384252e-01,\n'
 '         3.79717618e-01,  7.80140340e-01, -9.46907043e-01,\n'
 '        -7.72227526e-01,  6.94649577e-01,  6.07041240e-01,\n'
 '        -1.36379314e+00,  3.36831033e-01, -9.40244794e-01,\n'
 '        -5.78661561e-01, -1.06660688e+00, -2.38684750e+00,\n'
 '         2.22787094e+00,  4.88115132e-01, -9.36679393e-02,\n'
 '         1.54189861e+00, -1.68702292e+00, -1.26701474e+00,\n'
 '        -1.91529244e-01, -1.41446114e+00, -2.64110714e-01,\n'
 '         6.40370548e-01,  6.88515425e-01, -2.14060378e+00,\n'
 '        -9.05014932e-01,  5.55692434e-01, -1.34082115e+00,\n'
 '        -2.47358346e+00,  1.03107905e+00, -7.19387472e-01,\n'
 '        -5.49692512e-01, -3.57056451e+00,  4.52507347e-01,\n'
 '        -2.25281072e+00,  9.71519411e-01, -3.84770155e-01,\n'
 '        -2.55110550e+00, -1.52160215e+00,  2.08130670e+00,\n'
 '        -2.07192635e+00, -1.14970714e-01, -1.33613813e+00,\n'
 '         1.85902071e+00, -4.59487408e-01, -1.99623358e+00,\n'
 '         7.40529716e-01,  1.12836146e+00, -2.49646711e+00,\n'
 '         6.85050368e-01, -1.74806863e-01, -5.62528491e-01,\n'
 '         1.39570653e-01, -4.00050580e-01,  5.39830565e-01,\n'
 '        -5.15914202e-01,  2.42087913e+00,  9.53822076e-01,\n'
 '        -2.99663114e+00,  1.46856284e+00, -1.04781246e+00,\n'
 '        -5.63820243e-01,  4.66219723e-01, -2.40550423e+00,\n'
 '        -8.46028507e-01,  7.34876841e-02, -7.74170160e-01,\n'
 '         4.39921319e-02, -6.19646668e-01,  1.23622492e-01,\n'
 '        -3.60062742e+00, -1.96666765e+00,  7.76350975e-01,\n'
 '        -1.44650412e+00, -1.07345879e-02,  5.28272867e-01,\n'
 '         1.16796744e+00, -2.15269947e+00,  5.04810929e-01,\n'
 '        -2.72559142e+00, -1.57060251e-01, -1.98888254e+00,\n'
 '        -2.23185229e+00, -4.96747226e-01,  9.89452898e-01,\n'
 '        -9.42106009e-01, -1.81682241e+00, -1.02291405e-01,\n'
 '         9.52647209e-01,  1.39990747e+00, -2.42404795e+00,\n'
 '        -4.96789068e-02,  6.18300438e-01, -1.97303319e+00,\n'
 '        -1.40430045e+00, -4.60205793e-01,  2.24601746e+00,\n'
 '         2.24105024e+00, -1.95278004e-01, -7.76677012e-01,\n'
 '         1.66285098e+00,  3.06229979e-01, -5.89474916e-01,\n'
 '         1.12796271e+00, -1.80199862e+00, -1.75024107e-01,\n'
 '         3.11155021e-02, -9.33737397e-01,  3.02595615e+00,\n'
 '         1.05234086e+00,  4.56028670e-01,  3.02715540e-01,\n'
 '        -1.71502006e+00, -1.75066972e+00, -9.45289969e-01,\n'
 '         7.07377911e-01, -1.61760420e-01,  1.74736762e+00,\n'
 '        -8.86255056e-02, -3.76898468e-01,  1.07680082e+00,\n'
 '        -2.54643750e+00, -1.87145948e+00,  4.46821403e+00,\n'
 '         8.62444997e-01,  2.09625125e-01,  1.92892742e+00,\n'
 '        -1.98240340e+00, -9.09323215e-01, -1.32758403e+00,\n'
 '         8.55147690e-02, -2.62098122e+00, -3.64655644e-01,\n'
 '         9.82479274e-01,  1.41984940e-01,  1.11010432e-01,\n'
 '        -3.19809794e-01, -2.17811274e+00, -1.48024738e+00,\n'
 '        -1.85394955e+00,  4.28610921e-01, -8.96628976e-01,\n'
 '        -8.98834467e-01, -3.20369196e+00,  2.29797602e+00,\n'
 '        -1.74875760e+00,  2.64369011e+00, -4.38938797e-01,\n'
 '         2.20612705e-01, -6.78738356e-01, -5.00891626e-01,\n'
 '         6.84984148e-01,  2.11283755e+00,  6.89424396e-01,\n'
 '         8.44811916e-01, -3.91103089e-01, -3.06150526e-01,\n'
 '         1.08965552e+00,  3.77765715e-01,  1.86712885e+00,\n'
 '         1.39796627e+00, -1.02413607e+00, -1.01133323e+00,\n'
 '        -9.96322513e-01,  3.24790180e-01,  1.47477388e+00,\n'
 '        -1.37759924e+00,  1.57416224e+00, -7.02158928e-01,\n'
 '         2.21907854e+00, -8.91361117e-01, -5.53117573e-01,\n'
 '        -5.56690097e-01, -6.00888789e-01, -2.59806037e+00,\n'
 '        -6.31136298e-01,  1.72654033e+00, -1.62866688e+00,\n'
 '        -9.88773257e-02, -4.76609990e-02,  1.31151068e+00,\n'
 '        -8.58927727e-01,  8.61603379e-01, -2.01793480e+00,\n'
 '        -1.68622267e+00,  2.99819946e-01, -9.73541737e-02,\n'
 '         1.42627132e+00, -4.79227006e-01,  2.48574591e+00,\n'
 '        -1.13236391e+00,  9.17246699e-01,  1.13446653e+00,\n'
 '         2.68299818e+00, -1.60516250e+00, -1.89588499e+00,\n'
 '         1.61259502e-01,  4.24180687e-01, -3.06742430e+00,\n'
 '         1.40442753e+00,  1.59288621e+00, -5.48206747e-01,\n'
 '         5.56313336e-01,  1.51896083e+00,  3.19186956e-01,\n'
 '         2.62828541e+00, -1.48252356e+00,  8.33181813e-02,\n'
 '        -7.37715423e-01,  4.45605576e-01, -3.34037244e-02,\n'
 '        -1.07743847e+00,  5.34108102e-01, -9.76977944e-01,\n'
 '        -1.28740263e+00,  4.52340484e-01, -1.14489245e+00,\n'
 '         2.44950843e+00,  1.25962794e+00,  9.16419923e-02,\n'
 '         1.77364993e+00,  1.82022262e+00, -1.05117941e+00,\n'
 '        -1.58275711e+00, -3.29408050e+00, -7.82988965e-01,\n'
 '        -4.19448882e-01,  1.60960090e+00, -9.61514592e-01,\n'
 '         2.25865006e+00,  2.02294874e+00,  3.84038091e-01,\n'
 '         1.83284223e+00, -3.00205159e+00,  1.80655527e+00,\n'
 '         3.05325240e-01, -9.81900096e-01, -3.32049429e-01,\n'
 '         1.25273883e+00,  5.31917214e-01,  8.59125316e-01,\n'
 '        -1.43090105e+00, -3.27883220e+00, -4.64684725e-01,\n'
 '         5.52470207e-01, -2.16118383e+00, -1.96119773e+00,\n'
 '         1.12741135e-01, -7.11253703e-01,  2.17577672e+00,\n'
 '        -1.16353548e+00, -6.02336049e-01, -1.89836311e+00,\n'
 '        -1.97255865e-01, -1.59567034e+00,  3.00362396e+00,\n'
 '         1.85142681e-01, -1.59168673e+00, -1.62181187e+00,\n'
 '         6.16286635e-01, -2.06688806e-01,  9.08333421e-01,\n'
 '         2.69677311e-01,  1.47939563e+00,  9.18758273e-01,\n'
 '        -4.69574779e-01,  1.73148298e+00, -1.09005213e+00,\n'
 '        -2.79108643e+00,  4.87657726e-01,  3.10985541e+00,\n'
 '        -1.34825361e+00, -3.86095643e-02,  2.59685493e+00,\n'
 '         1.47102666e+00,  3.17153359e+00, -9.95781273e-03,\n'
 '        -5.82906008e-01, -1.63272667e+00,  5.65977693e-01,\n'
 '        -2.96288443e+00, -6.09160244e-01, -2.77566624e+00,\n'
 '         7.09002852e-01,  2.35951352e+00,  2.11806774e+00,\n'
 '        -1.28319788e+00, -1.77075833e-01,  1.16874385e+00,\n'
 '        -3.26883555e-01,  1.04595220e+00,  3.02386507e-02,\n'
 '         1.39572895e+00, -4.11330849e-01, -1.50173187e+00,\n'
 '         5.30857183e-02, -1.12735057e+00,  1.49785951e-01,\n'
 '         1.49050093e+00,  3.19380224e-01,  3.11625689e-01,\n'
 '        -1.07096958e+00,  5.09815454e-01, -2.62312221e+00,\n'
 '        -1.66228759e+00, -1.80153370e+00, -5.62621236e-01,\n'
 '         4.27513421e-01, -1.08180141e+00, -1.55203223e+00,\n'
 '        -1.51572502e+00, -1.97722673e+00, -3.62817526e-01,\n'
 '         5.26539087e-01, -8.06999803e-01, -6.30824447e-01,\n'
 '         1.85025990e+00,  1.92383379e-01,  4.38075483e-01,\n'
 '         1.71086323e+00,  1.96955991e+00,  7.59658158e-01,\n'
 '         1.58574712e+00, -7.26522386e-01,  3.71569395e-01,\n'
 '         2.71642447e-01,  1.82853863e-01,  5.85840285e-01,\n'
 '        -7.20196545e-01,  2.28764319e+00,  4.49337721e-01,\n'
 '         1.60086811e+00,  1.12459874e+00,  1.77283978e+00,\n'
 '         1.24521762e-01, -1.03384388e+00, -1.33642995e+00,\n'
 '        -2.18237901e+00,  3.40595066e-01, -1.17577946e+00,\n'
 '        -1.62560678e+00, -2.36757994e+00, -1.85198474e+00,\n'
 '         1.48560190e+00,  9.39020991e-01, -1.78465879e+00,\n'
 '         1.03810266e-01, -6.69750810e-01, -2.36851633e-01,\n'
 '         6.91359639e-01, -1.66091180e+00, -1.18407011e-01,\n'
 '        -1.75370955e+00, -7.08863378e-01,  3.10379600e+00,\n'
 '         1.21493602e+00, -7.75711656e-01, -4.01833236e-01,\n'
 '         9.35288146e-02, -1.00148928e+00,  3.37250605e-02,\n'
 '        -4.81680811e-01, -1.75426781e-01, -7.83817708e-01,\n'
 '         2.93364018e-01,  1.78464019e+00,  5.79382002e-01,\n'
 '         4.64606613e-01, -9.74968851e-01, -2.49369025e-01,\n'
 '        -2.22236013e+00, -2.60810327e+00,  1.38993335e+00,\n'
 '         6.18542910e-01, -1.46255899e+00,  9.37530398e-03,\n'
 '         9.05717015e-01]])')
'test_inceptionnet | batch_shape is: [1]'
'test_inceptionnet | logits.shape is: ivy.Shape(1, 1000)'
'||'
'test_inceptionnet | indices_test | true_indices is: [258 270 279]'
'test_inceptionnet | indices_test | calc_indices is: [258 279 270]'
'test_inceptionnet | device is: cpu'
'test_inceptionnet | fw is: tensorflow'
'test_inceptionnet | load_weights is: False'
'InceptionV3 | build | layer 1/22 built'
'InceptionV3 | build | layer 2/22 built'
'layer 3/22 built'
'InceptionV3 | build | layer 4/22 built'
'InceptionV3 | build | layer 5/22 built'
'InceptionV3 | build | layer 6/22 built'
'InceptionV3 | build | layer 7/22 built'
'InceptionV3 | build | layer 8/22 built'
'InceptionV3 | build | layer 9/22 built'
'InceptionV3 | build | layer 10/22 built'
'InceptionV3 | build | layer 11/22 built'
'InceptionV3 | build | layer 12/22 built'
'InceptionV3 | build | layer 13/22 built'
'InceptionV3 | build | layer 14/22 built'
'InceptionV3 | build | layer 15/22 built'
'InceptionV3 | build | layer 17/22 built'
'InceptionV3 | build | layer 18/22 built'
'InceptionV3 | build | layer 19/22 built'
'InceptionV3 | build | layer 20/22 built'
'InceptionV3 | build | layer 21/22 built'
'InceptionV3 | build | layer 22/22 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/4 built'
'layer 2/4 built'
'layer 3/4 built'
'layer 4/4 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/6 built'
'layer 2/6 built'
'layer 3/6 built'
'layer 4/6 built'
'layer 5/6 built'
'layer 6/6 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'inceptionNet_v3 | building InceptionV3 model | done 1/3'
'InceptionV3 | forward | input data_format is:NCHW | done 1/27'
'InceptionV3 | forward | data_format is going to be used is:NCHW | done 1/27'
'InceptionV3 | forward | input shape is:ivy.Shape(1, 224, 224, 3) | done 1/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 224, 224, 3) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 111, 111, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 111, 111, 32) | done 2/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 111, 111, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 32) | done 3/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 109, 109, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 64) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 64) | done 4/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 54, 54, 64) | done 5/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 54, 54, 80) | done 3/3'
'InceptionV3 | forward | is:ivy.Shape(1, 54, 54, 80) | done 6/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 80) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 52, 52, 192) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 52, 52, 192) | done 7/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 192) | done 8/27'
'input shape is:ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 32) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 32)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 25, 25, 256) | done 9/27'
'input shape is:ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 10/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 11/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 384) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 96) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 96)'
'one 20/20, output shape is:ivy.Shape(1, 12, 12, 288)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 12/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 12, 12, 768) | done 13/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 14/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 15/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 16/27'
'v3 16/27, output shape is:ivy.Shape(1, 12, 12, 768)'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 5, 5, 192)'
'one 7/20, output shape is:ivy.Shape(1, 5, 5, 768)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 1280) | done 17/27'
'input shape is:ivy.Shape(1, 5, 5, 1280)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 18/27'
'input shape is:ivy.Shape(1, 5, 5, 2048)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 19/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 20/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 5, 5) | done 21/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 1, 1) | done 22/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 27/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 24/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 25/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048) | done 26/27'
'InceptionV3 | forward | fc | done 27/27'
('test_inceptionnet | logits is: ivy.array([[-5.44954000e+05,  '
 '7.85051250e+05,  2.09781391e+05,\n'
 '         7.01377750e+05,  4.70345750e+05,  1.25353288e+06,\n'
 '         6.73020250e+05, -3.70022719e+05, -1.02486625e+06,\n'
 '         6.66022812e+05, -4.95935406e+05, -9.72517688e+05,\n'
 '        -4.68711969e+05,  1.05152600e+06,  5.60794750e+05,\n'
 '        -3.31682812e+05,  6.99098875e+05,  1.03903044e+06,\n'
 '        -1.40824062e+06, -1.26175164e+05, -2.26189672e+05,\n'
 '         6.50334812e+05, -8.87992500e+05, -5.25813594e+04,\n'
 '         1.01525012e+06, -2.92386750e+05,  3.44337219e+05,\n'
 '         1.24060500e+06,  5.06379938e+05,  1.36049025e+06,\n'
 '         3.01298477e+04,  5.90565688e+05, -6.78619375e+05,\n'
 '        -1.04699000e+06, -6.86481500e+05, -2.10862938e+05,\n'
 '        -1.12098047e+05, -3.16202562e+05,  2.38950000e+05,\n'
 '        -1.78676125e+05,  1.01089062e+06, -2.11440391e+05,\n'
 '         4.36078672e+04, -5.58282875e+05,  3.67807938e+05,\n'
 '        -1.15252594e+05,  4.20981656e+05,  5.96266375e+05,\n'
 '        -1.96022250e+05, -8.65193812e+05, -2.83665469e+05,\n'
 '        -1.22031312e+06, -1.64755484e+05,  1.64521725e+06,\n'
 '         4.93880281e+05, -7.01856250e+05, -6.20546812e+05,\n'
 '        -8.65897688e+05,  2.15072250e+05, -7.20678625e+05,\n'
 '        -4.86392344e+05, -6.24346562e+05,  1.00399625e+06,\n'
 '        -1.61588612e+06, -5.39279188e+05, -2.63215812e+05,\n'
 '        -1.21004238e+06, -9.55747250e+05, -1.46175462e+06,\n'
 '         4.30899805e+04, -1.72662406e+05, -4.01123688e+05,\n'
 '         8.11005062e+05,  1.36917141e+05,  1.22135138e+06,\n'
 '         1.36065723e+04,  7.80932000e+05, -1.16870262e+06,\n'
 '        -9.24535688e+05, -1.17920050e+06,  2.63714406e+05,\n'
 '         8.49826250e+05, -6.09413875e+05, -4.58535219e+05,\n'
 '         9.30636812e+05, -1.79192906e+05,  6.41541094e+04,\n'
 '         3.14158312e+05,  1.85597650e+06, -2.57617031e+05,\n'
 '        -6.61407000e+05, -4.04773906e+05,  9.99748438e+04,\n'
 '        -3.19664625e+05, -1.39267984e+05,  1.16618969e+05,\n'
 '        -3.57113375e+05, -3.98076938e+05, -4.37145375e+05,\n'
 '        -4.47297750e+05,  2.97316375e+05,  1.51125075e+06,\n'
 '         2.08764281e+05, -3.65669438e+05, -7.06262312e+05,\n'
 '         4.97215500e+05,  9.15211625e+05,  2.29085750e+05,\n'
 '         1.09008825e+06,  9.62862875e+05, -1.29835362e+06,\n'
 '        -3.82926000e+05, -9.33471250e+05,  5.64005938e+05,\n'
 '        -8.08242250e+05, -7.62235625e+04, -4.97918156e+05,\n'
 '         5.44965625e+03, -4.14513031e+05,  9.25226062e+05,\n'
 '         5.74019648e+04, -1.00300125e+06, -6.27692062e+05,\n'
 '         8.08329312e+05, -3.26213344e+05,  6.48989500e+05,\n'
 '        -3.82718438e+05,  4.92560188e+05,  2.23074781e+05,\n'
 '         4.47215234e+04, -1.75136656e+05, -2.03195719e+05,\n'
 '        -3.37956953e+04, -4.55198031e+05, -7.98977312e+05,\n'
 '         1.34000938e+06,  8.04519312e+05,  3.95102688e+05,\n'
 '         5.65389000e+05, -3.09180750e+05, -1.03549144e+06,\n'
 '         5.05782344e+05, -2.08825094e+05,  2.17481469e+05,\n'
 '        -1.34926719e+05,  1.47281075e+06, -1.39663891e+05,\n'
 '        -6.41482062e+05, -1.11231797e+05, -6.26430250e+05,\n'
 '         1.53331344e+05,  6.96500000e+02,  4.99914250e+05,\n'
 '         9.01252375e+05,  8.38359688e+05, -3.79428250e+05,\n'
 '        -7.37423062e+05, -8.28101125e+05,  1.73330391e+04,\n'
 '        -4.16807438e+05,  4.65048438e+05,  6.93175781e+03,\n'
 '         1.14730038e+06, -1.13548850e+06, -7.30969219e+04,\n'
 '         9.84473375e+05,  5.77665688e+05,  3.45611172e+04,\n'
 '         3.14734406e+05,  1.14774938e+05, -8.58205250e+05,\n'
 '         2.44254812e+05, -2.22327281e+05,  4.04359969e+05,\n'
 '         1.14688088e+06, -8.51459375e+04,  2.97919312e+05,\n'
 '         1.73391969e+05, -9.41714625e+05, -9.42614875e+05,\n'
 '        -1.41509312e+05,  5.57665430e+04,  3.48364141e+04,\n'
 '         1.12936367e+05,  4.90071094e+05, -1.02639406e+06,\n'
 '         2.37238496e+04,  5.48345062e+05,  1.57982125e+05,\n'
 '        -1.46822512e+06, -2.53848703e+05,  1.12627325e+06,\n'
 '        -1.88872969e+05,  1.04920175e+06, -1.61912375e+05,\n'
 '        -1.42406250e+05,  5.23839531e+04, -1.23860450e+06,\n'
 '        -6.90549688e+04,  8.78313250e+05,  8.66294750e+05,\n'
 '         3.30479531e+05,  5.55299297e+04, -3.82133750e+05,\n'
 '        -5.02176625e+05,  3.92776781e+05, -1.82422312e+06,\n'
 '        -2.73706875e+05,  1.03912069e+06,  2.97222375e+05,\n'
 '         1.33236400e+06, -6.66081172e+04,  2.75743844e+05,\n'
 '        -8.13213375e+05, -1.46887203e+05, -9.66051875e+05,\n'
 '        -2.04259425e+06,  1.24797650e+06,  1.42373797e+05,\n'
 '        -7.26335688e+05, -7.34206484e+04, -3.83924469e+05,\n'
 '         9.46098438e+03, -1.54345188e+06,  4.59141844e+05,\n'
 '        -4.66702906e+05,  6.69398438e+04,  1.41766750e+05,\n'
 '        -1.14144938e+06,  5.73764625e+05,  4.13271750e+05,\n'
 '         9.73700750e+05,  1.66713375e+05, -9.53842250e+05,\n'
 '        -3.48866469e+05, -8.45287125e+05,  9.54212938e+05,\n'
 '         4.59700000e+05, -3.49159469e+05,  7.79735438e+05,\n'
 '         9.53463062e+05, -1.24352638e+06, -7.78328750e+05,\n'
 '        -1.18763525e+06, -3.06391797e+04,  8.75167562e+05,\n'
 '         7.68924000e+05, -1.30408219e+05, -1.22937109e+05,\n'
 '        -1.42664953e+05, -4.89794500e+05,  2.24820812e+05,\n'
 '         1.07305738e+06, -1.01293672e+04, -6.27642773e+04,\n'
 '         4.54074406e+05, -5.10100906e+05,  4.03101219e+05,\n'
 '        -1.10718650e+06,  3.24380938e+05, -5.21120352e+04,\n'
 '         1.46359900e+06, -1.60714641e+05, -6.97726812e+05,\n'
 '         1.06180900e+06, -4.84688688e+05,  4.38464875e+05,\n'
 '        -1.59076219e+05,  9.52048125e+05, -2.06762406e+05,\n'
 '        -1.05950992e+05, -3.13569156e+05,  1.02102838e+06,\n'
 '         1.25714422e+05, -1.52702406e+05,  4.64614727e+04,\n'
 '        -1.72288475e+06, -6.04519062e+05, -1.85008422e+05,\n'
 '         2.63343375e+05, -3.06020137e+04, -4.28007438e+05,\n'
 '        -2.67709625e+05, -3.92012844e+05, -7.74651688e+05,\n'
 '        -3.06170500e+05, -5.60538000e+05, -9.18675562e+05,\n'
 '        -1.27888891e+05, -3.07008125e+05,  1.37491038e+06,\n'
 '        -1.29225781e+05,  7.09514500e+05,  8.58461688e+05,\n'
 '         5.59477812e+05,  1.00905055e+05,  3.33582656e+04,\n'
 '        -2.95459609e+04,  9.19544812e+05,  2.63833719e+05,\n'
 '        -2.85064062e+05,  1.50043062e+05, -4.90228812e+05,\n'
 '         1.74122984e+05, -9.19717938e+05,  6.46727109e+04,\n'
 '         2.78626156e+05, -1.03321325e+06,  2.93679160e+04,\n'
 '        -4.72057500e+04,  4.63990906e+05,  4.09533219e+05,\n'
 '        -9.72606375e+05, -1.32198453e+05, -9.31307062e+05,\n'
 '        -1.40663712e+06, -1.25711031e+05,  3.92307188e+05,\n'
 '         9.33899562e+05,  5.61319062e+04,  9.43028062e+05,\n'
 '        -9.95570312e+02, -3.46916438e+05, -1.54520531e+05,\n'
 '        -2.64790188e+05,  1.19815050e+06,  4.53963344e+05,\n'
 '        -4.10358438e+05,  6.11905750e+05, -4.73240469e+05,\n'
 '         7.54810250e+05, -1.41923281e+05, -5.75746750e+05,\n'
 '        -1.17367600e+06,  1.36100797e+05, -3.38591219e+05,\n'
 '         2.65883094e+05,  5.41181000e+05,  4.02400703e+04,\n'
 '         3.56352406e+05,  1.29313500e+06, -4.63722875e+05,\n'
 '         1.58463000e+06, -1.65857812e+05, -4.22446312e+05,\n'
 '        -9.86406125e+05, -5.78134812e+05,  3.02199125e+05,\n'
 '         5.07053750e+04, -3.31310469e+05, -4.81314844e+04,\n'
 '         5.71959375e+05,  2.62339531e+04,  4.19045469e+05,\n'
 '         3.50907062e+05,  1.44472238e+06, -5.85233250e+05,\n'
 '        -3.41735938e+03,  2.01350500e+05,  3.73824719e+05,\n'
 '        -1.53137838e+06, -2.01781188e+05,  6.72353250e+05,\n'
 '        -4.43866523e+04, -1.31623488e+06,  2.41631219e+05,\n'
 '         2.32567156e+05,  6.59284766e+04, -4.06407469e+05,\n'
 '        -6.64620750e+05,  4.84708906e+05, -1.00037431e+06,\n'
 '         1.47698500e+06, -1.00963206e+06, -1.28250010e+04,\n'
 '         6.09200125e+05, -7.87669562e+05, -6.17961062e+05,\n'
 '         1.74060609e+05, -5.88733438e+04, -8.66871812e+05,\n'
 '         2.14924219e+05,  1.54729719e+05, -1.48142038e+06,\n'
 '         2.25959906e+05,  1.30927977e+05, -5.61155000e+05,\n'
 '         5.05937578e+04, -2.17433750e+06,  2.57080703e+05,\n'
 '         3.84531219e+05, -6.81939250e+05,  7.32594250e+05,\n'
 '        -6.48012266e+04,  5.32429375e+05, -7.38753062e+05,\n'
 '         3.00608094e+05,  1.25976838e+06, -1.15452362e+06,\n'
 '        -3.44484938e+05,  6.50351875e+05,  5.20946438e+05,\n'
 '         7.09975125e+05, -6.91751562e+05, -1.96341289e+04,\n'
 '         1.53055888e+06, -2.59383156e+05, -6.61756375e+05,\n'
 '        -6.02932562e+05, -3.15440312e+05, -1.52599688e+05,\n'
 '         4.25607250e+05, -6.53870938e+05, -1.28514711e+05,\n'
 '        -5.20790656e+05, -1.55973234e+05,  3.66211914e+03,\n'
 '         2.37018266e+05,  2.25282275e+06,  5.93456688e+05,\n'
 '        -2.70958312e+05, -6.33119219e+04, -3.45252344e+04,\n'
 '         5.54387688e+05,  2.97146688e+05, -1.04908375e+05,\n'
 '        -3.79837000e+05, -5.41459250e+05,  9.16659688e+04,\n'
 '         1.94075625e+04,  6.00573375e+05, -9.53790625e+05,\n'
 '        -4.66482188e+05,  4.35415844e+05,  5.91691875e+05,\n'
 '         8.18922688e+05, -4.10440938e+05, -7.28368250e+05,\n'
 '        -5.24489062e+05, -1.37285725e+06,  8.16388672e+04,\n'
 '        -1.92338453e+05, -5.66731688e+05,  2.88125605e+04,\n'
 '        -4.61884656e+05,  2.47894594e+05, -1.07570088e+06,\n'
 '        -5.35109188e+05, -5.85899875e+05,  4.13280562e+05,\n'
 '         2.18979031e+05,  2.36671562e+05, -3.72241500e+05,\n'
 '        -5.53369609e+04,  2.75460812e+05, -3.18403625e+05,\n'
 '         4.41308188e+05,  7.05031719e+04, -5.62157688e+05,\n'
 '        -1.04083106e+06, -6.75095750e+05, -1.61743656e+05,\n'
 '        -3.78787188e+05, -1.70141094e+05, -1.48736662e+06,\n'
 '        -1.00938044e+06, -2.94180996e+04, -3.88473688e+05,\n'
 '        -5.88805547e+04, -6.27227562e+05,  1.52286125e+05,\n'
 '         1.03734000e+05,  9.24874438e+05,  2.36361156e+05,\n'
 '        -1.21636262e+06,  4.16362531e+05, -1.50777391e+05,\n'
 '        -1.01779250e+06, -4.93630969e+05, -6.35590125e+05,\n'
 '        -9.06680875e+05,  4.75137812e+04,  3.80486531e+05,\n'
 '         5.03643688e+05, -3.36708438e+05, -1.15068305e+05,\n'
 '        -7.78831000e+05, -1.58347266e+05, -2.70638500e+05,\n'
 '        -2.00146828e+05, -8.77327578e+04,  9.13318562e+05,\n'
 '        -9.16970703e+03, -7.71325938e+04, -9.86931875e+05,\n'
 '        -1.51139750e+06,  1.06289238e+06, -5.16366016e+04,\n'
 '        -6.46662656e+04, -9.43804750e+05,  4.29028250e+05,\n'
 '        -2.48710375e+05,  1.34435400e+06, -3.24940562e+05,\n'
 '        -5.62874938e+05, -5.83168938e+05, -9.14507422e+04,\n'
 '         3.47768969e+05, -3.15314000e+05, -3.21636594e+05,\n'
 '        -7.59496812e+05, -1.52628262e+06,  8.57588062e+05,\n'
 '         3.31594156e+05,  3.07027562e+05,  8.48248062e+05,\n'
 '         1.64261031e+05,  9.59457750e+05, -1.02116125e+05,\n'
 '         5.74413125e+05, -1.31537094e+05, -2.57681922e+05,\n'
 '        -9.80462812e+05, -2.70960781e+05, -1.22331148e+05,\n'
 '         9.61247562e+05, -1.20449400e+06, -7.41172812e+05,\n'
 '        -9.75675312e+05, -1.21453516e+05, -2.98819156e+05,\n'
 '        -5.80333812e+05, -1.96263538e+06, -3.82850781e+05,\n'
 '         6.74006250e+04, -4.92706562e+05, -9.15830625e+05,\n'
 '         2.56022672e+05, -6.83258625e+05,  2.31139109e+05,\n'
 '         7.22537688e+05,  2.30686281e+05, -5.43740078e+04,\n'
 '        -5.68932938e+05,  9.95441125e+05,  7.75780625e+04,\n'
 '        -4.09120234e+04,  5.35796250e+05, -1.80107234e+05,\n'
 '         1.85095039e+04, -5.33665312e+05,  4.72421031e+05,\n'
 '        -2.85199844e+05,  1.47487016e+05,  1.20843906e+04,\n'
 '        -4.28875742e+04,  7.33498000e+05,  6.05863047e+04,\n'
 '         1.10925925e+06,  4.98960875e+05, -1.04795412e+06,\n'
 '         1.75509450e+06,  1.08531238e+06,  1.94708516e+05,\n'
 '         3.65951469e+05,  2.21652875e+05, -9.54757938e+05,\n'
 '         3.72796219e+05, -4.79360938e+05, -8.24050562e+05,\n'
 '         1.05175775e+06,  4.97538531e+05, -6.82278875e+05,\n'
 '         2.41808078e+05, -7.93882266e+04,  4.84554875e+05,\n'
 '        -3.00720844e+05, -5.43644312e+05, -1.60257828e+05,\n'
 '        -1.13014938e+06, -9.60649750e+05, -5.13690312e+05,\n'
 '         5.21183188e+05, -4.40823672e+04,  9.55345688e+05,\n'
 '         1.20490406e+05,  5.45352500e+05,  1.87282734e+05,\n'
 '         1.48191762e+06,  6.87351125e+05,  4.34328555e+04,\n'
 '        -3.91222227e+04, -7.95453812e+05,  3.52632469e+05,\n'
 '        -1.01308750e+06, -3.60152500e+05,  4.30963938e+05,\n'
 '         1.22687450e+06,  5.91106438e+05, -8.47613062e+05,\n'
 '        -6.27589961e+04, -3.85188812e+05,  8.48577656e+04,\n'
 '        -6.84328438e+05, -3.17311660e+04, -9.44105312e+04,\n'
 '         3.25886875e+05,  6.17299938e+05, -7.49573688e+05,\n'
 '         3.65034062e+05,  5.31974312e+05, -9.08025750e+05,\n'
 '         1.25258875e+06, -2.70926500e+05,  9.01598906e+04,\n'
 '        -4.14179938e+05, -3.25482312e+05,  1.23444788e+06,\n'
 '        -5.87161562e+05, -5.48661125e+05,  6.97883750e+05,\n'
 '        -3.14801125e+05,  7.19554688e+05,  6.79767125e+05,\n'
 '         6.50910688e+05, -4.24481719e+04, -4.53230375e+05,\n'
 '         7.79154531e+04,  5.87914562e+05,  7.48990039e+03,\n'
 '         7.56199219e+04, -5.36085000e+05, -8.40526312e+05,\n'
 '         5.52905312e+05,  1.64413906e+05, -9.34104375e+04,\n'
 '         1.15664000e+06,  9.27623750e+05, -3.05237406e+05,\n'
 '        -9.69588312e+05,  5.65490312e+05, -3.60312695e+03,\n'
 '         3.22497281e+05,  5.74064062e+05, -1.05813539e+05,\n'
 '        -1.11805700e+06,  6.14680000e+05, -1.76591525e+06,\n'
 '        -7.54144750e+05, -2.40501672e+05, -8.67903984e+04,\n'
 '         3.38196031e+05, -3.02378062e+05, -2.80709883e+04,\n'
 '        -8.18900500e+05,  8.20478938e+05,  3.39452625e+05,\n'
 '        -1.15125112e+06,  6.44397938e+05, -2.22264188e+05,\n'
 '         1.12264336e+05, -9.66429125e+05, -1.98981266e+05,\n'
 '        -1.66431062e+05,  6.37547750e+05,  7.86259438e+05,\n'
 '         5.04246656e+05,  4.65526312e+05, -1.05249359e+05,\n'
 '        -9.52137750e+05,  1.70552162e+06, -5.96602656e+04,\n'
 '        -1.84007612e+06, -2.46189359e+05,  2.28556031e+05,\n'
 '        -3.39258281e+05, -6.51189438e+05, -8.54531000e+05,\n'
 '        -1.58530344e+05,  5.12187406e+05, -1.07233912e+06,\n'
 '         6.35716375e+05,  1.09801950e+06, -8.46455438e+05,\n'
 '        -3.85987844e+05,  1.67414746e+03, -9.90352250e+05,\n'
 '        -5.53643750e+05,  1.63269375e+05, -2.22425359e+05,\n'
 '        -3.64083008e+03,  7.20200469e+04, -9.49901250e+05,\n'
 '         8.35419453e+04, -4.18755625e+05, -5.82157438e+05,\n'
 '        -5.37505703e+04, -2.84726875e+05, -7.25052812e+04,\n'
 '        -5.48663750e+05,  2.59125742e+04,  4.33788656e+05,\n'
 '        -1.83415094e+05, -1.20846075e+06, -2.09294906e+05,\n'
 '        -4.88457969e+04,  4.95613562e+05, -5.29507875e+05,\n'
 '        -1.25285625e+05,  3.46818812e+05,  6.26598320e+04,\n'
 '         3.56671438e+05, -8.55953750e+04, -6.89726094e+04,\n'
 '         1.47210594e+05, -1.22843262e+06, -3.56333164e+04,\n'
 '        -5.38948875e+05, -4.62669250e+05,  7.29300125e+05,\n'
 '         7.45509750e+05, -1.91889781e+05,  1.37824750e+05,\n'
 '         1.00571900e+06,  1.37329200e+06,  8.83469531e+04,\n'
 '        -7.90398312e+05,  3.38854875e+05,  1.47400000e+06,\n'
 '        -2.22530254e+04, -4.04417219e+05,  4.41382031e+05,\n'
 '        -2.14303574e+04, -1.47650547e+05,  7.29150156e+04,\n'
 '         7.72659500e+05, -1.22938742e+05, -3.95395406e+05,\n'
 '         1.29751062e+06, -4.18942531e+05,  3.13751328e+04,\n'
 '         7.54898625e+05, -7.10401750e+05, -1.44419775e+06,\n'
 '         4.32315688e+05,  1.61849844e+05, -8.35672188e+05,\n'
 '         5.91415438e+05, -2.77454438e+05,  4.54848031e+05,\n'
 '        -5.08326250e+05,  1.88868375e+05,  4.44357531e+05,\n'
 '         1.72813812e+06, -1.38486891e+05, -7.69421812e+05,\n'
 '         8.96181562e+05,  8.59914688e+04,  1.08999712e+06,\n'
 '        -5.80960000e+05, -4.30167250e+05, -6.27426938e+05,\n'
 '        -1.57226750e+06,  3.60769375e+04, -1.21281969e+05,\n'
 '         1.27138300e+06,  1.98768297e+05,  6.80775156e+04,\n'
 '         3.95168812e+05,  3.53902438e+05,  1.52558250e+05,\n'
 '         1.50490898e+04,  3.50096094e+05, -9.60920875e+05,\n'
 '         5.16392375e+05, -1.79709925e+06,  3.97595812e+05,\n'
 '         3.53957438e+05,  1.77361550e+06,  1.78312984e+05,\n'
 '        -7.35922812e+05, -1.41294925e+06, -9.27052250e+05,\n'
 '         4.44273375e+05, -1.17448828e+05, -1.57065812e+05,\n'
 '        -2.46486141e+05, -5.40302812e+05,  2.92294531e+05,\n'
 '         5.30960000e+05, -2.74589594e+05,  7.56596375e+05,\n'
 '        -1.15454477e+05, -3.09020000e+05,  6.61351375e+05,\n'
 '         8.15947875e+05, -5.06733750e+05, -7.35239062e+05,\n'
 '         1.45321762e+06, -1.37397156e+05, -5.81661188e+05,\n'
 '        -5.30169688e+05,  4.67847531e+05,  5.81827125e+05,\n'
 '         1.68257125e+06, -6.11491750e+05,  3.64184438e+05,\n'
 '         5.12676250e+05, -6.04790938e+05, -7.26260000e+05,\n'
 '        -1.65906938e+05,  4.48477578e+04, -6.86321797e+04,\n'
 '         4.05379250e+05, -2.43909500e+05,  1.06804100e+06,\n'
 '        -2.67382188e+05,  2.21649312e+05, -5.94882500e+05,\n'
 '        -9.25790250e+05, -6.29186875e+05,  4.92659312e+05,\n'
 '        -1.13012350e+06,  8.94102438e+05,  1.18668338e+06,\n'
 '         2.22145938e+05, -1.01418312e+06, -5.64926375e+05,\n'
 '         8.91058812e+05,  1.00063362e+06, -6.38753250e+05,\n'
 '         1.81412000e+05, -6.73593688e+05,  3.90429812e+05,\n'
 '        -6.25350688e+05, -2.99529188e+05,  8.57857031e+04,\n'
 '        -3.20095406e+05, -2.97632188e+04,  1.94471422e+05,\n'
 '        -6.98445938e+05,  2.04659891e+05,  6.45633625e+05,\n'
 '         3.61874609e+04,  3.75340375e+05,  5.80873062e+05,\n'
 '         1.27461225e+06,  7.43222812e+05,  3.23165195e+04,\n'
 '         1.17093906e+05,  4.09653906e+05, -3.38578750e+04,\n'
 '        -1.61581875e+05,  1.08402012e+06,  1.32326875e+05,\n'
 '        -6.49839492e+04, -2.53762891e+05,  4.10929875e+05,\n'
 '        -1.14198769e+04, -4.21395000e+05,  5.42971875e+05,\n'
 '         9.05636375e+05, -6.99068000e+05,  1.07673725e+06,\n'
 '        -2.17107484e+05, -4.70576344e+05,  6.38258875e+05,\n'
 '        -7.02277438e+05,  7.26531938e+05,  4.81605781e+05,\n'
 '        -4.46541656e+05, -5.04495625e+05,  2.40676109e+05,\n'
 '        -7.58504188e+05, -5.89141000e+05,  3.12462344e+05,\n'
 '        -2.28011641e+05, -2.38858359e+04, -2.68324906e+05,\n'
 '        -2.36014797e+05,  2.88884000e+05, -7.10736562e+04,\n'
 '        -9.25112500e+05,  6.31621500e+05, -1.61688781e+05,\n'
 '        -9.49686953e+04,  1.29485562e+06, -5.16841906e+05,\n'
 '        -6.54768312e+05, -1.16259438e+06,  2.84233781e+05,\n'
 '        -3.25617844e+05, -1.71616516e+05, -3.40093500e+05,\n'
 '         5.54517125e+05,  8.67880250e+05, -5.19362875e+05,\n'
 '        -2.93778625e+05,  2.64336031e+05,  1.88563531e+05,\n'
 '         7.92649625e+05, -1.05356262e+06,  1.09997088e+06,\n'
 '         1.29298088e+06, -7.89359000e+05, -3.88316781e+05,\n'
 '        -1.80096500e+05,  7.52642188e+05,  1.32644362e+06,\n'
 '         6.98671438e+05,  3.84194766e+04,  5.42756188e+05,\n'
 '        -2.37944250e+05,  4.84616000e+05,  3.25266531e+05,\n'
 '        -6.02801523e+04,  2.45409844e+04, -3.73383906e+05,\n'
 '        -9.15538500e+05,  6.12407312e+05,  4.26354875e+05,\n'
 '        -3.26466562e+05, -2.71313562e+05,  8.28667250e+05,\n'
 '         9.37546375e+05,  1.42334050e+06,  2.66975938e+05,\n'
 '        -2.06552031e+05,  8.96954250e+05, -6.49943125e+04,\n'
 '        -3.61228844e+05, -3.15187844e+05, -3.43391750e+05,\n'
 '         1.06471325e+06,  2.91676953e+03, -1.37768359e+05,\n'
 '        -4.74860500e+05,  3.10757250e+05, -8.89971094e+04,\n'
 '        -8.61698281e+04,  9.01614125e+05, -1.51791000e+06,\n'
 '         1.17843281e+05,  9.73719125e+05,  1.10231825e+06,\n'
 '        -4.72312422e+04,  5.59931500e+05, -3.91022688e+05,\n'
 '        -1.29513925e+06,  1.01812462e+06, -5.81083312e+05,\n'
 '        -7.98570875e+05, -9.54057875e+05, -2.81454312e+05,\n'
 '        -1.26415801e+04, -3.06929250e+05,  6.62207312e+05,\n'
 '         3.06536500e+05,  1.30688075e+06, -6.79961172e+04,\n'
 '         4.60834844e+04,  4.85914812e+05, -2.62153688e+05,\n'
 '        -6.54370750e+05,  4.72511188e+05,  4.43553164e+04,\n'
 '         3.84019648e+04,  2.29580516e+05,  1.77892750e+06,\n'
 '         5.02327875e+05, -5.03714125e+05, -6.25086688e+05,\n'
 '         7.24799922e+04, -4.19604125e+05, -6.11855375e+05,\n'
 '        -8.82255188e+05,  2.26560734e+05, -4.24616344e+05,\n'
 '        -1.41896112e+06,  2.11993925e+06, -3.02547969e+05,\n'
 '         3.27931031e+05, -1.20581175e+06,  8.56883875e+05,\n'
 '        -2.86478312e+05, -5.26428875e+05, -1.34421638e+06,\n'
 '        -4.09842250e+05,  4.49506797e+04,  4.42826750e+05,\n'
 '        -8.34355234e+04, -5.12684766e+03, -1.69953906e+04,\n'
 '         7.82875250e+05,  2.03272875e+05, -3.51348469e+05,\n'
 '         9.79185812e+05, -1.98178656e+05, -1.88146453e+05,\n'
 '         4.27057375e+05]])')
'test_inceptionnet | batch_shape is: [1]'
'test_inceptionnet | logits.shape is: ivy.Shape(1, 1000)'
'||'
'test_inceptionnet | device is: cpu'
'test_inceptionnet | fw is: tensorflow'
'test_inceptionnet | load_weights is: True'
'InceptionV3 | build | layer 1/22 built'
'InceptionV3 | build | layer 2/22 built'
'layer 3/22 built'
'InceptionV3 | build | layer 4/22 built'
'InceptionV3 | build | layer 5/22 built'
'InceptionV3 | build | layer 6/22 built'
'InceptionV3 | build | layer 7/22 built'
'InceptionV3 | build | layer 8/22 built'
'InceptionV3 | build | layer 9/22 built'
'InceptionV3 | build | layer 10/22 built'
'InceptionV3 | build | layer 11/22 built'
'InceptionV3 | build | layer 12/22 built'
'InceptionV3 | build | layer 13/22 built'
'InceptionV3 | build | layer 14/22 built'
'InceptionV3 | build | layer 15/22 built'
'InceptionV3 | build | layer 17/22 built'
'InceptionV3 | build | layer 18/22 built'
'InceptionV3 | build | layer 19/22 built'
'InceptionV3 | build | layer 20/22 built'
'InceptionV3 | build | layer 21/22 built'
'InceptionV3 | build | layer 22/22 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/4 built'
'layer 2/4 built'
'layer 3/4 built'
'layer 4/4 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/6 built'
'layer 2/6 built'
'layer 3/6 built'
'layer 4/6 built'
'layer 5/6 built'
'layer 6/6 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'inceptionNet_v3 | building InceptionV3 model | done 1/3'
'inceptionNet_v3 | clearning pretrained weights | done 2/3'
'inceptionNet_v3 | loading pretrained weights | done 3/3'
'InceptionV3 | forward | input data_format is:NCHW | done 1/27'
'InceptionV3 | forward | data_format is going to be used is:NCHW | done 1/27'
'InceptionV3 | forward | input shape is:ivy.Shape(1, 224, 224, 3) | done 1/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 224, 224, 3) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 111, 111, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 111, 111, 32) | done 2/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 111, 111, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 32) | done 3/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 109, 109, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 64) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 64) | done 4/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 54, 54, 64) | done 5/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 54, 54, 80) | done 3/3'
'InceptionV3 | forward | is:ivy.Shape(1, 54, 54, 80) | done 6/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 80) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 52, 52, 192) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 52, 52, 192) | done 7/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 192) | done 8/27'
'input shape is:ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 32) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 32)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 25, 25, 256) | done 9/27'
'input shape is:ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 10/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 11/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 384) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 96) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 96)'
'one 20/20, output shape is:ivy.Shape(1, 12, 12, 288)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 12/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 12, 12, 768) | done 13/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 14/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 15/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 16/27'
'v3 16/27, output shape is:ivy.Shape(1, 12, 12, 768)'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 5, 5, 192)'
'one 7/20, output shape is:ivy.Shape(1, 5, 5, 768)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 1280) | done 17/27'
'input shape is:ivy.Shape(1, 5, 5, 1280)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 18/27'
'input shape is:ivy.Shape(1, 5, 5, 2048)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 19/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 20/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 5, 5) | done 21/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 1, 1) | done 22/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 27/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 24/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 25/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048) | done 26/27'
'InceptionV3 | forward | fc | done 27/27'
('test_inceptionnet | logits is: ivy.array([[ 6.82874441e-01, '
 '-1.38411909e-01,  1.46973038e+00,\n'
 '         1.50739825e+00,  1.19474876e+00,  1.08265626e+00,\n'
 '         1.57455039e+00, -2.67555070e+00, -2.57501912e+00,\n'
 '        -2.88509512e+00, -1.19262362e+00, -3.93852174e-01,\n'
 '        -3.81153136e-01, -6.19493186e-01,  1.36721361e+00,\n'
 '        -1.85728896e+00, -2.57584882e+00, -4.66274262e-01,\n'
 '        -1.45952511e+00,  2.33128965e-01, -2.25402504e-01,\n'
 '        -1.92131996e+00, -9.86518264e-01, -2.06548119e+00,\n'
 '        -4.32341933e-01, -1.73606813e+00,  1.39401293e+00,\n'
 '        -5.48084021e-01, -5.60174346e-01, -4.70860869e-01,\n'
 '         6.99402213e-01,  2.64070153e-01,  2.09239125e+00,\n'
 '         7.10426629e-01,  2.23439908e+00,  8.92865658e-02,\n'
 '         1.01240993e+00,  2.62207478e-01,  7.14649379e-01,\n'
 '         2.89050847e-01,  9.53804493e-01,  2.04775930e+00,\n'
 '        -3.07532281e-01,  1.70119166e-01, -4.41505313e-02,\n'
 '        -8.78138185e-01, -8.10125828e-01,  2.57126308e+00,\n'
 '        -3.89572769e-01, -9.35304522e-01, -1.77793694e+00,\n'
 '         8.38720560e-01,  2.65469313e+00, -1.65525949e+00,\n'
 '        -3.39331746e-01,  9.66812491e-01, -1.87578082e+00,\n'
 '        -1.29530799e+00,  1.61377758e-01, -3.53426784e-01,\n'
 '        -1.35789323e+00,  1.13035929e+00, -8.20698082e-01,\n'
 '        -1.20038986e+00, -3.23441207e-01, -1.53891861e+00,\n'
 '         1.21820641e+00,  8.59749317e-03,  8.30373168e-02,\n'
 '        -6.72637045e-01, -2.49022722e+00, -1.33752453e+00,\n'
 '        -2.02874255e+00, -1.26213419e+00, -9.79397059e-01,\n'
 '        -1.23996484e+00, -8.74197602e-01, -1.31264353e+00,\n'
 '        -7.79613376e-01,  4.65750962e-01, -4.29510027e-02,\n'
 '         1.76005149e+00, -2.48285741e-01,  1.07239747e+00,\n'
 '         3.43576670e-01, -1.69883633e+00, -1.19867337e+00,\n'
 '        -1.80111361e+00,  3.26669604e-01,  8.38175416e-03,\n'
 '        -3.13151598e-01, -1.95323274e-01, -1.50932133e+00,\n'
 '        -1.12462592e+00, -7.53937483e-01, -1.83548546e+00,\n'
 '        -1.30364740e+00, -1.20750499e+00, -2.18653274e+00,\n'
 '         1.31075191e+00,  6.20266557e-01, -5.11067748e-01,\n'
 '        -1.15550399e+00,  6.31875247e-02,  1.92694616e+00,\n'
 '        -1.65045237e+00, -5.76895595e-01,  6.93109512e-01,\n'
 '         3.16641033e-01,  2.50563398e-02,  4.06731486e-01,\n'
 '        -3.68962109e-01,  4.44931030e+00,  4.56413031e+00,\n'
 '         6.93887174e-01, -1.33582067e+00, -2.66002625e-01,\n'
 '         3.33701789e-01,  3.44923437e-02,  1.20798886e+00,\n'
 '         1.75984561e-01, -1.48605794e-01, -2.61521339e-02,\n'
 '         7.04407215e-01, -9.59007084e-01,  1.05246973e+00,\n'
 '        -1.24276984e+00, -1.53572035e+00, -2.06924510e+00,\n'
 '        -1.75341737e+00, -2.35163164e+00, -1.05628300e+00,\n'
 '        -1.03976703e+00, -2.01592922e+00, -1.44066215e+00,\n'
 '        -6.16014004e-03, -1.41527820e+00, -6.87505081e-02,\n'
 '        -5.43883383e-01, -1.13137400e+00, -1.06855488e+00,\n'
 '         4.92975265e-02, -1.90327334e+00, -3.74219418e-01,\n'
 '         9.23779309e-01, -1.45886934e+00,  5.43893814e-01,\n'
 '         3.91581237e-01,  1.34533584e+00, -8.11374545e-01,\n'
 '        -1.53380978e+00,  2.14256763e+00,  4.77564955e+00,\n'
 '        -6.66682839e-01,  1.87736344e+00, -2.46079445e+00,\n'
 '         8.62247229e-01,  4.04856491e+00, -5.79360962e-01,\n'
 '        -2.67056286e-01,  1.66163898e+00, -9.22463775e-01,\n'
 '        -1.31676698e+00,  7.31834173e-02, -5.70384383e-01,\n'
 '        -1.02617526e+00, -7.58479714e-01, -1.09961462e+00,\n'
 '        -1.46238041e+00,  1.73358250e+00,  2.22102427e+00,\n'
 '        -1.46477178e-01,  4.09697831e-01,  2.94166982e-01,\n'
 '         2.43455028e+00, -2.72282457e+00, -3.05870414e-01,\n'
 '         1.10017288e+00,  1.83564544e+00,  6.60320222e-01,\n'
 '        -3.20965767e-01, -2.93703675e-02, -2.69852072e-01,\n'
 '        -6.81811035e-01, -6.48599029e-01,  1.68083394e+00,\n'
 '         3.56291723e+00, -3.10743570e-01, -3.54493439e-01,\n'
 '        -1.81295240e+00, -2.45578504e+00, -7.14368820e-01,\n'
 '         9.75409746e-01, -1.45923042e+00, -3.11138821e+00,\n'
 '        -7.50103712e-01, -2.39995813e+00,  1.29753458e+00,\n'
 '        -1.69414461e+00,  2.51291394e+00, -2.46865988e-01,\n'
 '        -1.62650001e+00, -4.55243170e-01,  5.35104418e+00,\n'
 '        -2.66080308e+00, -1.86958921e+00, -1.78089046e+00,\n'
 '         4.14428472e-01, -2.78057194e+00, -1.92101169e+00,\n'
 '        -1.17154205e+00, -2.18508744e+00, -3.01463634e-01,\n'
 '        -2.30362698e-01,  2.44640517e+00,  1.28368700e+00,\n'
 '        -1.62159726e-01,  1.56332031e-01,  1.02308989e+00,\n'
 '        -3.32559061e+00, -1.60411048e+00,  1.70860004e+00,\n'
 '         5.08248568e+00,  4.29578447e+00,  6.36985302e+00,\n'
 '        -8.47748458e-01,  1.91119742e+00, -1.40235019e+00,\n'
 '         1.18879044e+00,  1.19895804e+00,  2.05951858e+00,\n'
 '         3.63116622e+00,  4.32240391e+00,  1.21812844e+00,\n'
 '         8.16429630e-02,  3.81083035e+00,  1.46777558e+00,\n'
 '        -1.12118974e-01,  1.44004667e+00,  5.65376043e-01,\n'
 '         1.35442913e+00,  1.59618258e+00,  1.55048191e+00,\n'
 '        -7.62254357e-01,  2.44995445e-01,  5.79031825e-01,\n'
 '         1.10790455e+00,  3.82946301e+00,  9.81355190e+00,\n'
 '         6.96164608e+00,  6.00901079e+00,  3.13873321e-01,\n'
 '         2.68443853e-01, -7.36679673e-01,  1.27561495e-01,\n'
 '         1.96647036e+00,  3.80016136e+00,  8.61729336e+00,\n'
 '         2.04568577e+01,  8.24797440e+00,  6.04376125e+00,\n'
 '         8.47206307e+00, -1.19641686e+00,  2.33094722e-01,\n'
 '        -3.01853239e-01,  1.39386445e-01, -1.86181593e+00,\n'
 '         2.46682859e+00, -1.68197393e-01,  3.62544131e+00,\n'
 '         1.55684242e+01, -5.38554192e-01,  2.43653965e+00,\n'
 '         1.58642030e+00,  1.38748193e+00, -7.92202234e-01,\n'
 '         1.59491265e+00,  2.22800541e+00,  8.97141278e-01,\n'
 '         1.12868109e+01,  1.56991172e+00, -2.02413186e-01,\n'
 '        -1.55091894e+00,  4.20579577e+00, -1.43036819e+00,\n'
 '         2.08049998e-01, -2.00907659e+00,  1.81951809e+00,\n'
 '         7.81056166e-01,  1.74077261e+00, -9.11893368e-01,\n'
 '         9.77923989e-01,  1.47554767e+00, -1.67563891e+00,\n'
 '        -1.75598049e+00, -2.19036436e+00,  2.51487899e+00,\n'
 '        -9.55644846e-01, -2.50342345e+00, -5.87379217e-01,\n'
 '        -6.00818992e-01, -1.72842944e+00,  4.67771530e-01,\n'
 '        -9.01444793e-01, -4.98902589e-01,  3.23359132e-01,\n'
 '         3.81402150e-02,  1.19593525e+00,  9.52684700e-01,\n'
 '         2.27437228e-01, -1.24366593e+00, -1.00035882e+00,\n'
 '        -5.66012502e-01, -1.78416204e+00, -1.58450589e-01,\n'
 '         1.27901232e+00, -1.52100492e+00, -2.21895456e-01,\n'
 '        -1.83828640e+00, -3.15823722e+00, -5.46460628e-01,\n'
 '        -1.41839933e+00,  1.66515756e+00,  1.25119507e+00,\n'
 '        -2.31416035e+00,  8.24851751e-01,  1.95462930e+00,\n'
 '         1.82284737e+00,  2.16052103e+00,  3.79054159e-01,\n'
 '        -3.49345028e-01,  3.21016765e+00,  3.07615948e+00,\n'
 '         9.13014114e-02, -4.35518086e-01, -2.69333410e+00,\n'
 '        -2.96692467e+00, -2.10487080e+00,  6.27315998e-01,\n'
 '        -3.04086661e+00,  5.22232652e-01, -1.24549568e-01,\n'
 '        -1.46265459e+00, -1.57096356e-01, -1.63704038e+00,\n'
 '        -6.65684342e-01, -3.85196745e-01,  2.38259524e-01,\n'
 '        -6.35989428e-01, -7.66439855e-01, -2.47282982e+00,\n'
 '        -7.53814399e-01, -1.67764854e+00, -1.26100731e+00,\n'
 '        -1.19554818e+00,  2.05757976e+00,  2.03746867e+00,\n'
 '        -7.28110790e-01,  1.87294292e+00,  1.18695378e+00,\n'
 '        -4.28471327e+00,  1.73863202e-01, -8.01596403e-01,\n'
 '         2.89464742e-01, -3.16042399e+00, -1.98018873e+00,\n'
 '        -2.26573205e+00, -3.96915376e-01, -4.39106047e-01,\n'
 '        -1.66559160e+00, -3.23037714e-01, -1.73452079e+00,\n'
 '        -3.09053123e-01, -8.30986917e-01, -1.51813909e-01,\n'
 '        -1.19840789e+00, -2.66890550e+00, -1.48647106e+00,\n'
 '        -1.18901944e+00, -1.99854386e+00, -4.43590701e-01,\n'
 '        -1.43021858e+00, -3.37124497e-01, -8.09414268e-01,\n'
 '        -5.75895965e-01,  4.29781824e-01, -2.37908030e+00,\n'
 '         1.60025632e+00, -9.57127273e-01,  3.56376231e-01,\n'
 '        -8.21345449e-02,  1.37994683e+00,  5.84584475e-01,\n'
 '         3.95922422e-01,  1.71524227e+00, -1.44397545e+00,\n'
 '         4.97399390e-01,  1.21512556e+00,  9.48105335e-01,\n'
 '         3.49529773e-01, -6.60709321e-01, -1.46784711e+00,\n'
 '         5.83184123e-01,  1.12262654e+00,  4.70727980e-01,\n'
 '        -1.55379450e+00, -1.24001229e+00, -7.15215206e-01,\n'
 '        -2.52895951e-01, -1.41735256e+00, -1.93378103e+00,\n'
 '        -3.15594983e+00, -2.56891704e+00, -1.57271886e+00,\n'
 '        -1.19883442e+00, -1.01451218e+00, -2.00978375e+00,\n'
 '         9.09335315e-01, -6.44643128e-01, -1.36940479e+00,\n'
 '        -3.26957464e-01, -1.55679297e+00, -1.42913806e+00,\n'
 '        -1.48780727e+00, -1.47724378e+00,  1.09444118e+00,\n'
 '         8.98401797e-01,  6.19840860e-01, -3.31403673e-01,\n'
 '         3.38521898e-01,  8.34988952e-02, -2.56121695e-01,\n'
 '         1.33348003e-01, -8.76476288e-01, -2.27671409e+00,\n'
 '         1.70635247e+00, -1.24040961e+00,  1.26068622e-01,\n'
 '        -1.94684431e-01, -7.56705165e-01,  1.36816621e+00,\n'
 '        -3.87212932e-01,  8.57218742e-01, -8.98065209e-01,\n'
 '         5.63249588e-01,  1.34220529e+00, -8.10968578e-01,\n'
 '        -7.27747679e-02,  1.88176489e+00, -1.05818045e+00,\n'
 '         8.78647208e-01,  3.50784510e-01, -1.57509756e+00,\n'
 '        -9.43553925e-01,  1.77891254e-02, -1.40456212e+00,\n'
 '        -4.08622891e-01, -4.67287809e-01,  1.61929697e-01,\n'
 '        -6.80158377e-01, -1.11475349e-01, -1.39487714e-01,\n'
 '         4.29792106e-02,  3.49727154e-01,  1.81133163e+00,\n'
 '        -1.46914029e+00, -1.08826268e+00, -9.00782526e-01,\n'
 '         1.77707940e-01,  9.07764077e-01,  2.38569856e+00,\n'
 '         5.86173475e-01, -2.53089094e+00, -6.64083183e-01,\n'
 '        -1.86863184e+00, -1.03914916e+00,  3.74404383e+00,\n'
 '        -2.77142620e+00,  9.69394028e-01, -1.97354883e-01,\n'
 '        -9.27902162e-02,  1.06600690e+00, -1.44508791e+00,\n'
 '         2.69334018e-01,  1.69585490e+00, -2.33112836e+00,\n'
 '        -3.66549790e-01,  4.95634735e-01,  3.07555109e-01,\n'
 '         4.38275039e-01,  5.04533172e-01,  2.90422976e-01,\n'
 '        -2.05746126e+00,  1.65894508e-01, -1.04615080e+00,\n'
 '         6.04856014e-01, -1.63735414e+00, -1.92276919e+00,\n'
 '         1.30588636e-01, -1.02737594e+00, -1.54865539e+00,\n'
 '         2.62076437e-01, -2.20818663e+00,  6.04590297e-01,\n'
 '         5.85026383e-01,  9.76282358e-01,  1.43304193e+00,\n'
 '        -1.61902010e-01,  4.76322293e-01,  5.45397043e-01,\n'
 '         1.35889220e+00,  2.08912611e-01, -8.02427173e-01,\n'
 '         9.39282239e-01, -1.06678414e+00, -3.15993786e-01,\n'
 '        -5.24848282e-01, -1.05493891e+00, -1.44923341e+00,\n'
 '        -3.44547439e+00, -7.20843077e-01, -3.33616465e-01,\n'
 '        -4.63803142e-01, -3.30300140e+00, -6.29699945e-01,\n'
 '        -1.02893281e+00, -9.10759330e-01, -1.07793546e+00,\n'
 '         9.10159945e-03, -4.78293508e-01,  4.73441482e-01,\n'
 '         8.09392452e-01,  1.66391993e+00, -1.26826048e+00,\n'
 '        -5.54693997e-01, -1.56935072e+00, -6.16252422e-02,\n'
 '         5.10937452e+00,  1.68945122e+00, -5.20158947e-01,\n'
 '        -6.28779948e-01, -1.87302172e+00, -1.06745338e+00,\n'
 '         1.95989513e+00,  1.56497788e-02, -7.92827189e-01,\n'
 '        -3.38854223e-01, -8.22993577e-01, -2.15128946e+00,\n'
 '        -3.46030742e-01,  1.10403463e-01, -4.85932589e-01,\n'
 '        -1.41482925e+00, -1.86547792e+00,  7.63047457e-01,\n'
 '        -2.75708705e-01, -3.78369957e-01,  5.69744229e-01,\n'
 '        -7.70213127e-01,  5.73257208e-01, -3.61718774e-01,\n'
 '        -2.45709360e-01,  3.43224263e+00,  2.01464748e+00,\n'
 '         9.38480675e-01, -2.64121294e+00,  5.58477402e-01,\n'
 '         1.31228745e-01,  1.24656606e+00, -2.59709954e+00,\n'
 '         1.70558238e+00, -3.74969006e-01,  1.44615129e-01,\n'
 '         2.99387622e+00, -3.28002840e-01,  9.18621495e-02,\n'
 '         4.15431589e-01, -2.28430510e-01,  1.56278408e+00,\n'
 '        -2.05238581e-01,  4.74644691e-01, -2.09459275e-01,\n'
 '         7.85958409e-01, -1.29568613e+00,  3.78153384e-01,\n'
 '         1.37864664e-01, -2.82796740e+00,  2.83672571e-01,\n'
 '        -1.96161985e+00, -7.82115161e-01,  1.93221235e+00,\n'
 '        -1.05959225e+00,  3.32547188e+00,  1.33422047e-01,\n'
 '         2.18054151e+00, -1.28494239e+00, -1.24603105e+00,\n'
 '        -1.92386603e+00, -7.22746074e-01, -7.12990105e-01,\n'
 '        -1.53439307e+00, -3.87799478e+00, -1.10598612e+00,\n'
 '         1.62110031e-01,  2.61804509e+00,  1.32412970e+00,\n'
 '         5.28838873e-01,  1.98454928e+00, -2.79542446e-01,\n'
 '        -4.61335093e-01,  3.88030380e-01,  3.59884441e-01,\n'
 '         5.38658857e-01, -1.38100362e+00, -2.93675303e-01,\n'
 '        -3.42342401e+00, -7.66989410e-01,  4.65130210e-02,\n'
 '        -3.13011503e+00, -1.37624681e+00, -2.39050198e+00,\n'
 '         1.60081595e-01, -3.10882330e-01, -1.13714063e+00,\n'
 '         2.12388110e+00,  4.62644637e-01, -8.83971453e-01,\n'
 '        -8.26173902e-01,  2.98988604e+00, -7.19191313e-01,\n'
 '        -1.57556981e-01, -9.50117230e-01, -2.85237461e-01,\n'
 '         9.47862625e-01, -1.97589016e+00, -1.67795944e+00,\n'
 '        -5.96387945e-02, -9.62173104e-01,  1.40306687e+00,\n'
 '         1.81912804e+00, -4.81043160e-02, -8.43916655e-01,\n'
 '         2.81470358e-01, -1.80335033e+00,  4.68857437e-01,\n'
 '         7.02603757e-01,  1.43609476e+00, -4.61669028e-01,\n'
 '        -7.25510657e-01,  1.46755457e-01, -1.96826088e+00,\n'
 '         5.84677577e-01,  2.18418404e-01, -7.26447105e-01,\n'
 '        -8.22005987e-01, -3.25215936e+00,  1.05304494e-01,\n'
 '        -2.90282822e+00, -1.18180501e+00, -1.18629396e-01,\n'
 '        -2.25710225e+00,  9.45668444e-02, -5.43224454e-01,\n'
 '        -1.48304904e+00, -7.56065846e-01, -1.38340115e-01,\n'
 '         8.68463933e-01,  7.95864984e-02, -1.88489378e+00,\n'
 '         9.13405299e-01,  1.57289457e+00, -1.39061761e+00,\n'
 '         5.10879517e-01, -1.50646949e+00, -6.80663049e-01,\n'
 '        -6.72504187e-01,  1.58851099e+00, -4.88634974e-01,\n'
 '        -1.74339563e-01, -1.64662015e+00,  1.32974291e+00,\n'
 '        -2.63573122e+00,  1.86182070e+00, -8.31129253e-01,\n'
 '        -2.74779290e-01,  2.07583889e-01, -1.40980184e+00,\n'
 '         6.71861350e-01, -7.11144805e-01, -1.82504737e+00,\n'
 '         8.30862820e-02, -4.35124934e-01,  7.38212407e-01,\n'
 '        -3.79805946e+00,  2.11446345e-01,  3.63451749e-01,\n'
 '        -1.74747801e+00,  9.48597908e-01,  1.49782848e+00,\n'
 '        -3.02766710e-01, -1.33362699e+00, -1.69505215e+00,\n'
 '        -2.30651474e+00,  1.25947773e-01, -2.13796735e+00,\n'
 '        -3.16677523e+00,  2.54731685e-01,  1.32847953e+00,\n'
 '         9.06826377e-01, -2.66377783e+00, -1.46210909e+00,\n'
 '         1.46748221e+00,  9.46580172e-01, -3.70734835e+00,\n'
 '         1.06742241e-01,  5.42571187e-01, -2.16288328e+00,\n'
 '        -4.43388432e-01,  9.73123848e-01,  1.64796794e+00,\n'
 '         6.20634675e-01,  2.08634920e-02, -1.50260007e+00,\n'
 '        -3.63011777e-01,  2.40163040e+00,  2.47949481e+00,\n'
 '        -4.59975839e-01, -1.21121526e-01, -9.75434899e-01,\n'
 '        -7.56824493e-01, -1.70871496e+00,  1.40716183e+00,\n'
 '        -5.94885111e-01, -4.02231038e-01, -3.63748169e+00,\n'
 '        -9.41014171e-01,  3.44067544e-01, -1.30767667e+00,\n'
 '         1.05111599e+00, -7.21376717e-01,  1.48346305e-01,\n'
 '         2.60221064e-02, -5.92492938e-01, -8.99809718e-01,\n'
 '        -9.48813140e-01, -2.39586949e+00,  4.09696293e+00,\n'
 '        -2.50620103e+00, -3.24332058e-01, -6.34999156e-01,\n'
 '        -1.04632437e+00, -2.49728784e-01, -2.53460693e+00,\n'
 '        -1.50225151e+00, -1.97937369e+00,  7.28463113e-01,\n'
 '        -1.67359376e+00, -5.05182147e-02,  1.33945644e-01,\n'
 '        -3.94205451e-01, -2.64269495e+00, -2.12061119e+00,\n'
 '         7.89921641e-01,  1.36286950e+00, -9.13587928e-01,\n'
 '         4.70255881e-01, -4.41354662e-01, -2.24441707e-01,\n'
 '        -6.64716303e-01, -1.78062320e-01, -4.38958466e-01,\n'
 '        -1.15669966e-01, -3.60706449e-02, -7.38913059e-01,\n'
 '        -3.22962952e+00,  1.54889619e+00,  9.15181398e-01,\n'
 '        -1.19274771e+00, -1.54967093e+00, -1.65811920e+00,\n'
 '         1.32624400e+00,  3.16864490e-01,  2.59204793e+00,\n'
 '        -1.66364980e+00, -1.69755244e+00, -9.16589499e-01,\n'
 '        -1.34700346e+00,  1.85286462e-01,  3.42716992e-01,\n'
 '         3.55947018e-02, -5.00503421e-01,  9.04621184e-02,\n'
 '         9.61450577e-01, -7.50706673e-01, -4.66860771e-01,\n'
 '        -9.47742581e-01,  3.07529867e-01, -1.97218716e+00,\n'
 '         4.68754433e-02, -1.31507218e-01,  1.69068479e+00,\n'
 '        -1.17473170e-01,  2.32773089e+00, -2.67685264e-01,\n'
 '         9.40986276e-02, -9.31208372e-01, -4.16845655e+00,\n'
 '        -1.19990075e+00,  1.18023109e+00,  7.09588051e-01,\n'
 '         1.74194884e+00, -3.95906746e-01, -3.37663353e-01,\n'
 '        -1.41915128e-01,  4.99178469e-02, -3.54208291e-01,\n'
 '         5.83741546e-01,  5.08538544e-01, -9.46990848e-02,\n'
 '         9.07773256e-01, -5.43480933e-01, -2.41597915e+00,\n'
 '         7.55678713e-01,  1.11038351e+00, -7.30061978e-02,\n'
 '        -1.87190116e-01, -2.64398962e-01, -2.76987284e-01,\n'
 '         1.47872746e+00, -5.16569197e-01,  8.71997416e-01,\n'
 '         9.92325187e-01,  1.61806500e+00, -1.19493194e-01,\n'
 '        -5.47998548e-01, -4.03351426e-01, -4.71092999e-01,\n'
 '        -2.87307382e-01,  1.12676120e+00, -1.09446812e+00,\n'
 '        -1.69550180e-02,  1.62904787e+00,  7.42923498e-01,\n'
 '         2.26923370e+00,  1.99415326e+00, -8.31765234e-01,\n'
 '        -2.77365148e-01, -2.29991579e+00,  1.69389868e+00,\n'
 '         3.93153548e-01,  3.85623813e-01, -3.08463424e-01,\n'
 '         8.90976191e-01, -6.07595861e-01,  1.27438355e+00,\n'
 '         1.61022961e+00, -2.31802607e+00,  1.73520351e+00,\n'
 '         2.24851876e-01, -3.68385374e-01,  4.07531261e-01,\n'
 '         2.02412412e-01, -2.23215962e+00, -1.38180658e-01,\n'
 '        -1.81380177e+00, -3.01249623e-01, -1.15921032e+00,\n'
 '         3.24487418e-01, -2.25970292e+00, -5.76451838e-01,\n'
 '         1.02308917e+00, -4.38975930e-01,  1.06300843e+00,\n'
 '        -1.71039760e-01, -5.06690502e-01, -9.97767925e-01,\n'
 '         1.11504629e-01, -3.44834495e+00,  1.60252833e+00,\n'
 '        -1.21578968e+00, -3.43719339e+00,  4.54775572e-01,\n'
 '        -8.12004864e-01, -3.98257315e-01,  6.31976843e-01,\n'
 '        -1.68155718e+00,  9.59993243e-01, -1.46828377e+00,\n'
 '        -1.00634479e+00,  2.21717000e-01, -7.72223115e-01,\n'
 '        -8.00444484e-01, -1.15244949e+00,  1.02113986e+00,\n'
 '        -1.69448900e+00, -7.64970183e-01,  2.24931622e+00,\n'
 '         2.40809724e-01,  1.47934580e+00,  1.03224158e+00,\n'
 '        -3.37868720e-01, -5.77497363e-01, -5.94669700e-01,\n'
 '        -3.06843328e+00, -3.86369646e-01, -2.65924573e+00,\n'
 '        -8.60120177e-01,  9.71235514e-01,  1.14099169e+00,\n'
 '        -1.24645150e+00,  1.13141167e+00, -3.10909510e-01,\n'
 '        -2.66091490e+00,  8.77116382e-01, -4.79781866e-01,\n'
 '         1.36154795e+00, -2.99474746e-01, -1.31668758e+00,\n'
 '         1.32432795e+00, -7.48174548e-01,  2.89922595e-01,\n'
 '         6.05104566e-01,  2.12659979e+00,  2.83854783e-01,\n'
 '        -2.48804748e-01,  1.95933640e+00, -1.41078198e+00,\n'
 '        -1.00478232e+00,  1.40372336e+00,  1.14222288e-01,\n'
 '         5.01906872e-02, -1.52768076e+00,  1.15598750e+00,\n'
 '        -1.47188473e+00, -1.64689422e+00, -6.10954583e-01,\n'
 '         6.11938909e-02,  1.27061927e+00,  1.16181493e-01,\n'
 '         1.72022426e+00,  5.96831381e-01,  3.01923800e+00,\n'
 '         1.47346258e-01,  1.57776093e+00,  2.77587581e+00,\n'
 '         2.01818800e+00,  1.71022940e+00,  9.24126446e-01,\n'
 '         3.57893556e-01,  5.24472594e-01,  1.48802924e+00,\n'
 '         1.49655461e+00,  3.41181111e+00,  7.03373432e-01,\n'
 '         7.25889087e-01,  3.03669840e-01,  2.00199890e+00,\n'
 '         1.90489078e+00,  1.01015389e-01,  3.84813935e-01,\n'
 '         2.54158258e-01,  2.25165486e+00, -6.84126556e-01,\n'
 '         1.32206965e+00,  7.57554080e-03,  1.53542340e+00,\n'
 '         7.98058569e-01, -5.60107231e-02, -2.46374250e-01,\n'
 '        -1.44177461e+00, -6.98922276e-02, -1.26730830e-01,\n'
 '         1.20404244e+00, -1.78795671e+00,  1.56275988e+00,\n'
 '        -1.62906647e+00, -1.60086536e+00,  3.59427810e+00,\n'
 '         3.81231427e-01, -7.39643097e-01, -4.73028004e-01,\n'
 '        -1.48310506e+00, -9.85438705e-01,  2.01231971e-01,\n'
 '        -6.38375819e-01, -3.39157999e-01, -3.08602959e-01,\n'
 '        -3.16814661e-01,  1.63969576e+00,  1.42751718e+00,\n'
 '         2.37270999e+00,  5.75082660e-01, -1.41242847e-01,\n'
 '        -1.37775826e+00, -1.28101301e+00,  1.46123147e+00,\n'
 '         1.09964371e+00,  5.93774617e-01, -6.93794608e-01,\n'
 '        -3.13644290e-01]])')
'test_inceptionnet | batch_shape is: [1]'
'test_inceptionnet | logits.shape is: ivy.Shape(1, 1000)'
'||'
'test_inceptionnet | indices_test | true_indices is: [258 270 279]'
'test_inceptionnet | indices_test | calc_indices is: [258 270 279]'
'test_inceptionnet | device is: cpu'
'test_inceptionnet | fw is: torch'
'test_inceptionnet | load_weights is: False'
'InceptionV3 | build | layer 1/22 built'
'InceptionV3 | build | layer 2/22 built'
'layer 3/22 built'
'InceptionV3 | build | layer 4/22 built'
'InceptionV3 | build | layer 5/22 built'
'InceptionV3 | build | layer 6/22 built'
'InceptionV3 | build | layer 7/22 built'
'InceptionV3 | build | layer 8/22 built'
'InceptionV3 | build | layer 9/22 built'
'InceptionV3 | build | layer 10/22 built'
'InceptionV3 | build | layer 11/22 built'
'InceptionV3 | build | layer 12/22 built'
'InceptionV3 | build | layer 13/22 built'
'InceptionV3 | build | layer 14/22 built'
'InceptionV3 | build | layer 15/22 built'
'InceptionV3 | build | layer 17/22 built'
'InceptionV3 | build | layer 18/22 built'
'InceptionV3 | build | layer 19/22 built'
'InceptionV3 | build | layer 20/22 built'
'InceptionV3 | build | layer 21/22 built'
'InceptionV3 | build | layer 22/22 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/4 built'
'layer 2/4 built'
'layer 3/4 built'
'layer 4/4 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/6 built'
'layer 2/6 built'
'layer 3/6 built'
'layer 4/6 built'
'layer 5/6 built'
'layer 6/6 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'inceptionNet_v3 | building InceptionV3 model | done 1/3'
'InceptionV3 | forward | input data_format is:NHWC | done 1/27'
'InceptionV3 | forward | data_format is going to be used is:NHWC | done 1/27'
'InceptionV3 | forward | input shape is:ivy.Shape(1, 224, 224, 3) | done 1/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 224, 224, 3) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 111, 111, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 111, 111, 32) | done 2/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 111, 111, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 32) | done 3/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 109, 109, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 64) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 64) | done 4/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 54, 54, 64) | done 5/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 54, 54, 80) | done 3/3'
'InceptionV3 | forward | is:ivy.Shape(1, 54, 54, 80) | done 6/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 80) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 52, 52, 192) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 52, 52, 192) | done 7/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 192) | done 8/27'
'input shape is:ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 32) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 32)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 25, 25, 256) | done 9/27'
'input shape is:ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 10/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 11/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 384) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 96) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 96)'
'one 20/20, output shape is:ivy.Shape(1, 12, 12, 288)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 12/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 12, 12, 768) | done 13/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 14/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 15/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 16/27'
'v3 16/27, output shape is:ivy.Shape(1, 12, 12, 768)'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 5, 5, 192)'
'one 7/20, output shape is:ivy.Shape(1, 5, 5, 768)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 1280) | done 17/27'
'input shape is:ivy.Shape(1, 5, 5, 1280)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 18/27'
'input shape is:ivy.Shape(1, 5, 5, 2048)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 19/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 20/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 5, 5) | done 21/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 1, 1) | done 22/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 27/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 24/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 25/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048) | done 26/27'
'InceptionV3 | forward | fc | done 27/27'
('test_inceptionnet | logits is: ivy.array([[ 7.83688625e+05,  9.52409688e+04, '
 '-3.00626062e+05,\n'
 '        -4.71413938e+05, -5.94130750e+05,  1.48621719e+04,\n'
 '         7.62103812e+05, -1.59635312e+05, -4.96487312e+05,\n'
 '        -1.18697125e+06,  7.06287500e+05,  4.54552062e+05,\n'
 '         3.19543250e+05,  7.32851250e+05,  3.81951469e+05,\n'
 '        -8.70341641e+04,  4.30570844e+05,  5.51345500e+05,\n'
 '         5.11281562e+04, -1.59556250e+05, -2.48306469e+05,\n'
 '         1.08787562e+06, -2.60504688e+04, -1.17633200e+06,\n'
 '        -1.43886125e+05, -5.37212500e+05,  1.03836094e+05,\n'
 '         2.77304969e+05, -2.58940000e+05,  7.53910000e+05,\n'
 '         5.13379125e+05, -4.89920000e+04,  5.68453125e+04,\n'
 '         4.42012500e+04, -1.82428734e+05,  1.04928500e+05,\n'
 '         7.29425188e+05, -9.24923750e+05, -1.82913719e+05,\n'
 '        -2.46569312e+05, -1.14851859e+05,  4.34252469e+05,\n'
 '         9.03519000e+05,  6.32500000e+02,  2.75945188e+05,\n'
 '         1.44337125e+05, -6.81823281e+04, -6.77992812e+05,\n'
 '         1.00617888e+06, -8.07309938e+05,  2.91901438e+05,\n'
 '        -4.71309500e+05,  2.97371219e+05, -7.09950938e+04,\n'
 '         4.27883906e+04,  3.11483406e+05, -4.10553125e+04,\n'
 '        -2.37730938e+04, -3.33099094e+05, -8.09386719e+04,\n'
 '        -4.70280375e+05,  5.88786625e+05,  3.86954438e+05,\n'
 '        -4.01723000e+05,  3.99220688e+05, -2.29601812e+05,\n'
 '         1.07702219e+05,  1.09032812e+04,  1.06370938e+04,\n'
 '        -3.72631250e+05,  7.81949938e+05,  1.10373500e+05,\n'
 '         9.99689875e+05, -4.08261875e+05, -2.47265219e+05,\n'
 '        -3.86159812e+05,  2.44729719e+05, -2.07469156e+05,\n'
 '        -3.27828312e+05, -1.32816594e+05, -1.51947031e+05,\n'
 '         2.75792000e+05,  4.08912000e+05, -6.61922125e+05,\n'
 '         7.04262500e+05,  3.05179250e+05, -5.03915156e+05,\n'
 '        -7.84286875e+05, -1.79544000e+05, -2.79668938e+05,\n'
 '         6.08812500e+05, -4.69882875e+05, -3.09738562e+05,\n'
 '        -1.91581938e+05, -3.16973312e+05,  4.67069125e+05,\n'
 '         8.35006094e+04, -1.73486547e+05,  1.15238688e+05,\n'
 '         4.23016875e+05, -2.02114047e+05,  2.04731359e+05,\n'
 '        -4.77659875e+05, -2.96678188e+05,  1.37499406e+05,\n'
 '        -6.09416875e+05,  5.73323250e+05, -1.52244781e+05,\n'
 '        -1.77628906e+04, -4.01399125e+05, -2.03109344e+05,\n'
 '         8.59940625e+04,  1.86594797e+05, -1.17559328e+05,\n'
 '        -9.41751312e+05,  3.03647906e+05,  5.33756625e+05,\n'
 '        -5.73626250e+05, -1.25519562e+05,  2.52067375e+05,\n'
 '         8.39663125e+05,  3.32613812e+05,  3.48631531e+05,\n'
 '        -2.52292906e+05,  1.29908125e+05,  1.68700469e+05,\n'
 '        -4.27947594e+05, -1.13613900e+06, -4.32179438e+05,\n'
 '         5.53346438e+05,  4.12754625e+05, -5.00679000e+05,\n'
 '         3.65665844e+05, -4.42833875e+05,  2.07365281e+05,\n'
 '        -6.55004875e+05,  2.11469875e+05, -2.50599375e+05,\n'
 '        -4.38603312e+05,  2.53713750e+05, -7.98284500e+05,\n'
 '        -1.92978938e+05,  1.73485156e+05,  8.47513125e+05,\n'
 '        -5.18645719e+05,  1.12303359e+05, -8.02521500e+05,\n'
 '         1.26914391e+05, -8.60221375e+05, -4.23344719e+05,\n'
 '         6.40573750e+05,  2.46175625e+04,  8.81644375e+05,\n'
 '        -4.32865281e+05,  6.22163625e+05, -2.91465688e+05,\n'
 '         7.85471406e+04, -7.82780062e+05,  1.12571531e+05,\n'
 '         5.34407438e+05, -5.36805375e+05,  9.93175547e+04,\n'
 '         1.27659875e+05, -6.99589750e+05, -2.82702344e+05,\n'
 '         4.37005625e+05,  1.40300156e+05, -2.90089000e+05,\n'
 '         8.37224188e+05,  4.22607188e+04, -6.74441875e+04,\n'
 '         8.72878812e+05,  6.51647500e+05,  6.99894938e+05,\n'
 '        -9.22781250e+03, -3.27485312e+05, -4.48090781e+05,\n'
 '         3.42242719e+05, -6.62810875e+05, -5.84753906e+04,\n'
 '        -3.53688828e+04,  6.62892250e+05, -3.19934219e+05,\n'
 '         4.17698781e+05, -1.24175094e+05, -8.31169938e+05,\n'
 '         1.39034547e+05,  1.69483594e+04,  4.51003875e+05,\n'
 '         3.24133625e+05, -9.81358750e+04, -5.20282344e+05,\n'
 '        -8.47009844e+04, -9.98259375e+03, -2.16644344e+05,\n'
 '        -4.52382031e+04,  4.74068188e+05, -4.72653000e+05,\n'
 '         1.73921875e+03, -9.87899375e+04, -5.72977422e+04,\n'
 '         3.57956172e+04, -1.01269258e+05,  2.46983750e+05,\n'
 '        -5.90762250e+05,  1.99260453e+05,  7.69681875e+04,\n'
 '         2.61358922e+05,  3.58869000e+05, -1.21206375e+05,\n'
 '         7.48368312e+05, -8.10851016e+04,  3.39041156e+05,\n'
 '        -1.34190531e+05,  3.00627000e+05, -4.22596438e+05,\n'
 '         3.98727688e+05, -1.17929406e+05, -2.98209469e+05,\n'
 '         4.55833438e+05,  1.07128891e+05,  1.73679594e+05,\n'
 '        -4.32027156e+05, -1.04307125e+06, -1.95107094e+05,\n'
 '         2.97202781e+05,  5.76601812e+05,  8.07485625e+05,\n'
 '         1.34737047e+05,  4.09896875e+04, -3.08294656e+05,\n'
 '         2.83598688e+05,  1.27093156e+05,  3.85572500e+05,\n'
 '         3.71848906e+04, -6.89695000e+05, -5.59233594e+04,\n'
 '        -3.21173031e+05, -1.92052750e+05, -1.05017100e+06,\n'
 '        -7.08680312e+04, -1.25948281e+05, -5.64106875e+05,\n'
 '        -3.37810281e+05,  2.06212500e+04,  9.96426375e+05,\n'
 '        -2.36466172e+04,  1.61625734e+05, -2.75445469e+05,\n'
 '         5.52412500e+05,  8.61426438e+05,  4.17778625e+05,\n'
 '        -3.83487406e+05, -3.98444062e+05, -2.60225562e+05,\n'
 '         1.40816062e+05, -1.33193953e+05, -1.80234781e+05,\n'
 '        -7.43148375e+05,  3.96636219e+05,  1.72496875e+05,\n'
 '        -2.08918656e+05,  6.40133312e+05, -1.62262625e+05,\n'
 '        -1.30692062e+05,  6.67290938e+05,  5.83797375e+05,\n'
 '        -1.82954297e+05,  6.51585000e+05, -5.02544125e+05,\n'
 '        -2.95274094e+05,  1.34738391e+05, -5.15465062e+05,\n'
 '         6.83284250e+05,  9.55366625e+05,  7.96533375e+05,\n'
 '         2.91595250e+05, -1.39571781e+05,  3.22091406e+04,\n'
 '        -1.49047469e+05, -1.30125825e+06, -6.26128250e+05,\n'
 '        -3.62090625e+03, -5.25409750e+05, -5.87676750e+05,\n'
 '         5.69265562e+05, -9.67480391e+04, -9.59658812e+05,\n'
 '        -4.34132594e+05,  3.72622062e+05, -1.85931438e+05,\n'
 '        -2.44895859e+05, -6.42248500e+05, -5.65300000e+05,\n'
 '        -5.38275000e+05, -3.67479750e+05, -6.94839250e+05,\n'
 '        -4.43517062e+05, -2.96233875e+05, -7.77343500e+05,\n'
 '        -4.14414406e+05,  6.49142500e+04,  9.41209688e+04,\n'
 '        -1.41706750e+05,  9.33823625e+05,  9.00244812e+05,\n'
 '        -4.73606875e+05,  5.43865250e+05, -8.15945812e+05,\n'
 '        -9.92648906e+04, -5.66151875e+05, -1.88816562e+04,\n'
 '        -5.34625500e+05, -3.21505969e+05, -1.03943148e+05,\n'
 '         1.39247469e+05, -1.91502500e+05, -1.02147206e+06,\n'
 '         6.86816000e+05, -4.41877812e+04,  7.07917125e+05,\n'
 '        -9.43932344e+04, -2.72698812e+05,  1.67908406e+05,\n'
 '        -2.75287219e+05, -1.14622297e+05, -7.23613875e+05,\n'
 '        -9.40366250e+05, -7.42337375e+05, -6.11715312e+05,\n'
 '        -1.15728719e+05,  2.08067141e+05, -4.20766750e+05,\n'
 '         2.29637703e+05,  4.21330219e+05, -5.37779750e+05,\n'
 '         7.29608500e+05,  4.14606625e+05,  1.85570500e+05,\n'
 '         8.82807625e+05,  1.93845094e+05, -5.46718250e+05,\n'
 '        -6.14912625e+05, -3.38886000e+05, -1.07814633e+05,\n'
 '        -1.02137775e+06,  1.90653969e+05, -8.64129250e+05,\n'
 '         7.07324250e+05, -1.13786562e+05,  2.23714125e+05,\n'
 '        -2.14008844e+05, -1.23258945e+05,  5.61689938e+05,\n'
 '         5.08424562e+05, -4.16652312e+05,  1.80711906e+05,\n'
 '        -3.24096000e+05, -2.68215562e+05,  7.61707125e+05,\n'
 '         1.05128836e+05, -4.49957125e+05, -4.61983812e+05,\n'
 '        -8.28337750e+05, -7.49957500e+04, -4.38554125e+05,\n'
 '         4.21090469e+05,  2.37301844e+05, -3.75850406e+05,\n'
 '         1.62939688e+04,  9.23459375e+04,  5.07870281e+05,\n'
 '         1.79363188e+05,  9.62884688e+05,  1.36029391e+05,\n'
 '        -4.96947875e+05, -3.06740062e+05, -6.40883750e+05,\n'
 '        -3.99379125e+05,  2.68459906e+05,  7.92133438e+05,\n'
 '         7.16322125e+05, -1.95301469e+05,  4.16328781e+05,\n'
 '         1.62609531e+05, -8.79330500e+05,  5.15826375e+05,\n'
 '        -5.20326281e+05,  4.32801594e+05, -8.67325000e+03,\n'
 '         5.85167188e+04, -7.98455688e+05, -2.43077562e+05,\n'
 '        -4.26687875e+05,  1.77948250e+05, -5.31994414e+04,\n'
 '        -2.88896812e+05, -4.08210125e+05,  1.81249859e+05,\n'
 '         6.74152188e+05, -1.66371297e+05,  8.80333312e+05,\n'
 '         4.64356156e+05,  3.85779875e+05,  2.11437625e+05,\n'
 '         5.48567125e+05, -6.64104250e+05, -1.44382400e+06,\n'
 '         6.87266250e+05,  2.26215953e+05,  1.25506850e+06,\n'
 '        -2.45036500e+05, -1.13993625e+06, -5.09903438e+05,\n'
 '        -6.04405500e+05,  2.07099406e+05, -5.86873250e+05,\n'
 '        -4.14778125e+04, -6.52506875e+05, -3.66594938e+05,\n'
 '         7.13715312e+05,  3.52867562e+05,  1.80770422e+05,\n'
 '         6.33370000e+05, -1.53057438e+05,  6.34572562e+05,\n'
 '        -1.66141750e+05,  2.91946656e+05, -4.86798031e+05,\n'
 '         3.48198406e+05,  2.90237188e+05, -4.05867250e+05,\n'
 '        -1.70383750e+04,  5.93247000e+05,  3.69215906e+05,\n'
 '         3.39288125e+05,  3.70874750e+05, -8.43383500e+05,\n'
 '        -5.18977812e+05, -8.90901125e+05,  5.35913938e+05,\n'
 '         4.84065875e+05, -1.52982406e+05,  4.19405531e+05,\n'
 '         6.06242500e+05, -1.10770200e+06,  9.42081375e+05,\n'
 '        -4.00397062e+05, -3.73510281e+05, -4.13467125e+05,\n'
 '         3.22719375e+04, -4.97040906e+05, -7.03462750e+05,\n'
 '         8.08306875e+05, -7.75725859e+04,  1.42100469e+04,\n'
 '        -7.95011250e+04,  2.08289609e+05, -3.02067250e+05,\n'
 '        -1.08660688e+06, -3.64897000e+05,  3.89447250e+05,\n'
 '        -9.58066250e+05,  1.29546875e+02,  1.76428594e+05,\n'
 '        -1.93394469e+05, -1.18898516e+05,  6.54934531e+04,\n'
 '         8.17403875e+05, -5.43165625e+03,  2.19436844e+05,\n'
 '         3.11708375e+05,  2.40444688e+05,  6.90206188e+05,\n'
 '         1.90396172e+05, -2.07797141e+05,  1.23081094e+05,\n'
 '         9.74241719e+04, -1.64847750e+05, -7.61855500e+05,\n'
 '         2.24672906e+05, -2.50242875e+05,  8.75264125e+05,\n'
 '         6.77339625e+05,  3.04147188e+05,  3.27961625e+05,\n'
 '        -3.89933500e+05, -2.72763625e+05, -8.68774625e+05,\n'
 '        -8.48306000e+05,  3.33435625e+04,  2.01959812e+05,\n'
 '         4.02593094e+05,  2.46925094e+05,  5.93703000e+05,\n'
 '        -6.20537188e+05, -4.38242344e+04,  1.43849125e+05,\n'
 '         1.20420031e+05, -4.00212750e+05, -3.33849031e+05,\n'
 '         2.93194844e+04, -3.45054344e+05,  8.56246062e+05,\n'
 '         3.24728188e+05, -2.48815781e+05, -8.96787031e+04,\n'
 '        -4.13822688e+05, -1.03434562e+05, -3.15205938e+05,\n'
 '        -7.32578375e+05, -6.40038438e+05,  2.81095688e+05,\n'
 '        -6.38558750e+05, -1.24939078e+05,  7.86952875e+05,\n'
 '         5.75532625e+05,  1.30083438e+04,  7.26540078e+04,\n'
 '        -5.29963125e+05, -1.85504375e+04,  1.27931344e+05,\n'
 '         1.51484325e+06,  1.98241281e+05,  8.57435781e+04,\n'
 '         6.67119375e+05, -2.13154812e+05, -5.93570375e+05,\n'
 '         4.45919031e+05, -6.44703062e+05, -6.44531250e+02,\n'
 '         1.58237344e+05, -6.55246750e+05,  9.12507500e+04,\n'
 '        -2.65600688e+05,  1.41205688e+05, -4.01466188e+05,\n'
 '        -2.22430953e+05, -3.39419500e+05,  1.28310969e+05,\n'
 '         4.74098500e+05, -2.57352344e+04, -2.90337969e+05,\n'
 '        -1.47595422e+05,  3.71891625e+05, -6.26149000e+05,\n'
 '         6.93060250e+05, -4.43123938e+05,  6.17325375e+05,\n'
 '        -2.95713125e+04,  6.56213938e+05,  4.50680750e+05,\n'
 '        -5.73855500e+05, -1.89039172e+05, -1.13502300e+06,\n'
 '        -6.98131375e+05,  3.46757906e+05, -2.89675125e+05,\n'
 '        -8.41357031e+04, -1.14945594e+05, -8.35307188e+04,\n'
 '         3.86355375e+05, -3.82380875e+05, -3.69619531e+04,\n'
 '         2.65888938e+05,  2.61416406e+05, -3.03182500e+05,\n'
 '         2.91133562e+05, -9.08102422e+04, -1.68815469e+05,\n'
 '        -1.15897719e+05, -1.34264156e+05,  2.27381469e+05,\n'
 '        -5.48902344e+04, -3.84227500e+04, -6.91637625e+05,\n'
 '         1.60185281e+05, -6.48361562e+04,  5.69368750e+05,\n'
 '         3.11437188e+04, -1.11363850e+06, -7.19631016e+04,\n'
 '        -2.13743656e+05, -1.29518062e+05,  2.50218562e+05,\n'
 '        -1.08933039e+05, -4.01501531e+05,  5.87651375e+05,\n'
 '        -1.10533422e+05,  3.06526406e+04,  4.16373406e+05,\n'
 '         3.77636844e+05, -1.51489984e+05, -4.54937406e+05,\n'
 '        -3.71775438e+05, -3.95375250e+05,  2.70412688e+05,\n'
 '         3.49353312e+05, -2.03318562e+05,  5.49116750e+05,\n'
 '        -7.36300938e+05,  1.85045469e+05,  5.36139375e+04,\n'
 '         2.79382531e+05,  9.78978125e+03,  1.77105812e+05,\n'
 '        -1.46450281e+05, -3.14719781e+05,  3.10618812e+05,\n'
 '        -4.69194688e+04, -9.94004688e+04,  1.39323578e+05,\n'
 '        -3.36615531e+05,  1.54199859e+05, -9.91532031e+04,\n'
 '         5.34572688e+05, -5.30293562e+05,  3.43722812e+04,\n'
 '        -1.24187844e+05,  7.91318375e+05,  4.81682750e+05,\n'
 '         1.81978469e+05,  2.08775094e+05, -1.88144500e+05,\n'
 '         1.12128305e+05,  2.35905812e+05,  1.32159688e+05,\n'
 '         4.91359438e+05,  3.20236562e+05,  1.34691309e+03,\n'
 '        -1.23776812e+05,  6.99597875e+05, -3.68941000e+05,\n'
 '         1.29485680e+05,  2.61256344e+05, -1.26928888e+06,\n'
 '        -8.83307812e+04,  2.33676969e+05, -3.77805938e+05,\n'
 '         5.59146375e+05, -6.57689375e+05,  4.72197344e+04,\n'
 '        -7.05079500e+05,  4.34070031e+05, -3.45650625e+05,\n'
 '         1.97098297e+05, -1.11236850e+06,  3.08257875e+05,\n'
 '         3.64476781e+05,  1.05458675e+06, -3.32675656e+05,\n'
 '         3.92421250e+05,  7.31584562e+05, -2.50539219e+05,\n'
 '         2.14144953e+05,  5.37647062e+05, -1.67603031e+05,\n'
 '        -7.55481625e+05,  7.24792750e+05, -5.94077875e+05,\n'
 '        -2.11571547e+05, -1.36008406e+05, -5.26275250e+05,\n'
 '        -2.54443750e+05, -3.55427906e+05, -1.68381422e+05,\n'
 '         3.16873562e+05,  5.04418906e+04,  5.02992688e+05,\n'
 '         6.13152500e+05,  1.25849148e+05, -9.59325375e+05,\n'
 '        -7.32082750e+05, -8.99028938e+05, -6.39297312e+05,\n'
 '         8.81891812e+05,  6.24903812e+05, -1.77710781e+05,\n'
 '        -5.58320156e+04,  3.31889062e+05,  3.96686000e+05,\n'
 '         1.73289719e+05, -2.86572500e+05, -2.27170812e+05,\n'
 '         4.27952031e+05, -7.09218750e+01, -4.34725969e+05,\n'
 '        -3.84445500e+05, -1.04355250e+05, -5.95919812e+05,\n'
 '         6.14884375e+03, -8.05773125e+04,  3.33197312e+05,\n'
 '         3.63585656e+05, -1.77196500e+05, -5.92265469e+04,\n'
 '        -6.93043500e+05,  5.47927125e+05,  3.04992750e+05,\n'
 '        -1.45983281e+05,  3.33943219e+05,  7.43737875e+05,\n'
 '         8.86137344e+04, -2.26977484e+05, -1.73157031e+05,\n'
 '        -6.16221688e+05, -1.99551188e+05,  7.25942250e+05,\n'
 '         3.48871969e+05, -9.92262109e+04,  7.93711875e+04,\n'
 '        -5.33814000e+05, -3.40477500e+05, -1.18350025e+06,\n'
 '        -2.36375844e+05,  4.73633562e+05,  7.21027750e+05,\n'
 '        -5.79436438e+05, -2.12198125e+05, -8.02310312e+04,\n'
 '        -6.99754125e+05, -2.42823391e+05,  2.75389281e+05,\n'
 '        -1.62650781e+05,  3.07756000e+05, -2.50847250e+05,\n'
 '         2.81237266e+04, -3.07185906e+05, -4.31118250e+05,\n'
 '         3.18800094e+05,  3.34693500e+05,  8.30075625e+04,\n'
 '        -3.90988000e+05,  8.16570156e+04,  8.57394062e+05,\n'
 '         3.29906750e+05,  4.51244562e+05, -3.02438188e+05,\n'
 '         3.98957125e+05,  5.02784656e+05,  3.62054250e+05,\n'
 '         6.15771438e+05,  3.77997875e+05, -1.77283875e+05,\n'
 '        -1.76813688e+05,  5.46229625e+05,  6.77921750e+05,\n'
 '         4.82197750e+05,  2.37998047e+04, -1.87916109e+05,\n'
 '        -5.44124750e+05, -9.78165156e+04, -1.28608219e+05,\n'
 '        -2.84623812e+05, -5.66525375e+05, -1.91057375e+05,\n'
 '        -1.33912672e+05, -2.18554500e+05, -1.35916297e+05,\n'
 '        -4.60916125e+05, -8.60597938e+05,  1.00309838e+06,\n'
 '         5.23406875e+04, -2.62103094e+05,  2.42704375e+05,\n'
 '         2.17296062e+05, -3.21470656e+05, -4.40438562e+05,\n'
 '         2.31258312e+05,  4.33309906e+05, -4.78201688e+05,\n'
 '         5.23188938e+05, -5.08106875e+04, -2.34671188e+05,\n'
 '         6.55738625e+05,  7.24962875e+05, -1.10807883e+05,\n'
 '        -2.37077406e+05,  4.34710875e+05, -9.32513062e+05,\n'
 '        -6.35736312e+05,  3.73348812e+05,  5.84400625e+04,\n'
 '         7.44194766e+04,  4.81545625e+04,  9.47650000e+05,\n'
 '        -3.94912656e+05, -2.70458875e+05, -6.79619188e+05,\n'
 '         1.26268188e+05,  4.14824219e+05, -2.29642250e+05,\n'
 '        -8.34221719e+04, -2.94148250e+05, -1.64740719e+05,\n'
 '         5.72349312e+05, -1.19056578e+05, -2.38959266e+05,\n'
 '        -9.60740000e+04, -9.56739062e+04, -1.04958969e+05,\n'
 '         2.51639250e+05,  2.61908125e+05, -5.11633875e+05,\n'
 '        -1.11522391e+05,  2.33077359e+05, -1.78863469e+05,\n'
 '        -3.96904469e+05, -6.68083125e+05, -1.22572656e+05,\n'
 '        -3.66898125e+05,  1.01435775e+06, -5.01131719e+05,\n'
 '        -5.60753500e+05, -6.86065562e+05,  4.85280625e+05,\n'
 '        -3.63473469e+05,  9.49929500e+05,  7.10301188e+05,\n'
 '         3.15107219e+05, -3.12934156e+05, -5.74253312e+05,\n'
 '        -3.58803031e+05, -3.45062500e+05, -4.27290688e+05,\n'
 '        -2.53391000e+05, -4.29384344e+05,  2.66872438e+05,\n'
 '        -4.74328000e+05, -1.38630094e+05, -3.69514625e+05,\n'
 '        -8.20619375e+05, -1.22683016e+05, -7.32894312e+05,\n'
 '        -8.45440625e+05,  5.40295250e+05,  7.69020562e+05,\n'
 '         6.25988062e+05, -3.40912125e+05, -2.81150938e+05,\n'
 '        -2.80739125e+05,  5.82224688e+04, -3.37809531e+05,\n'
 '        -3.10373562e+05,  6.26386812e+05, -1.07268250e+05,\n'
 '         1.11611922e+05,  4.09426375e+05,  4.77545500e+05,\n'
 '        -2.45499688e+05, -1.42302062e+05, -2.07171422e+05,\n'
 '         4.78296469e+05,  3.27735031e+05, -2.80180219e+05,\n'
 '        -1.00742719e+06, -4.47705000e+05, -3.51142812e+05,\n'
 '        -6.25763750e+04,  1.71052781e+05,  3.17080375e+05,\n'
 '         5.83737250e+05,  4.32272281e+05, -6.71343750e+04,\n'
 '         2.54721516e+05,  6.31393562e+05, -3.64304812e+05,\n'
 '        -1.27482938e+05, -6.32385188e+05,  5.07416531e+05,\n'
 '        -8.14583594e+04,  1.14815078e+05,  2.28591156e+05,\n'
 '         1.01472750e+05,  9.72468438e+04,  6.50307438e+05,\n'
 '         4.50864188e+05, -5.62185875e+05, -4.43826969e+05,\n'
 '        -1.55347516e+05,  2.43634375e+03,  3.99318844e+05,\n'
 '        -4.47546250e+05, -1.43823062e+05,  2.66287000e+05,\n'
 '         4.55015281e+05, -2.87474125e+05, -5.64913594e+04,\n'
 '         6.04800250e+05, -5.98765812e+05, -5.46446375e+05,\n'
 '         6.22283188e+05,  3.67100312e+05,  4.69239375e+05,\n'
 '        -9.64156250e+04,  2.17563078e+05,  3.30656250e+05,\n'
 '         6.64290469e+04, -2.97421969e+05,  1.56077547e+05,\n'
 '         1.05189400e+06,  7.22189875e+05, -5.85925312e+05,\n'
 '         3.02683594e+04, -3.33103750e+04, -1.93134859e+05,\n'
 '        -7.44233938e+05, -1.27544922e+05, -2.12606875e+04,\n'
 '         4.12952812e+04,  2.63932422e+04, -1.13828031e+05,\n'
 '         1.27148016e+05,  4.87370188e+05, -3.57563188e+05,\n'
 '         2.67891625e+05,  3.68821812e+05,  7.51309688e+04,\n'
 '         2.90430812e+05,  1.45963125e+04, -4.73516641e+04,\n'
 '        -4.69166500e+05,  1.70380188e+05, -9.50376625e+05,\n'
 '         2.98025781e+04,  7.75222250e+05, -4.87148375e+05,\n'
 '         2.13371344e+05,  4.34436812e+05,  6.46706375e+05,\n'
 '        -2.77730031e+05,  3.72114312e+05, -1.63006891e+05,\n'
 '         1.87157875e+05, -1.41509781e+05, -1.40728078e+05,\n'
 '        -7.40897500e+04, -2.08986500e+05,  3.20826625e+05,\n'
 '         4.57246812e+05, -7.34400438e+05, -3.19647750e+05,\n'
 '         9.33379812e+05, -1.85899547e+05, -2.72098750e+05,\n'
 '         5.91307000e+05, -1.07767109e+04,  1.78035250e+05,\n'
 '         2.57565344e+05,  2.29737875e+05,  6.74595078e+04,\n'
 '        -9.19491953e+04,  1.82096594e+05,  8.14223594e+04,\n'
 '         7.49445500e+05, -4.32318219e+05,  1.53755859e+05,\n'
 '        -4.46335250e+05,  5.20766531e+05,  1.22269680e+05,\n'
 '        -1.77684453e+05, -9.07165000e+04, -9.76614609e+04,\n'
 '        -1.06612555e+05, -7.28784375e+05,  3.26710000e+04,\n'
 '         1.96987875e+05,  1.09975250e+06,  3.01642344e+05,\n'
 '         2.66814438e+05,  2.81728500e+05,  3.38887031e+04,\n'
 '         1.03462562e+05, -2.18980750e+05,  4.80497562e+05,\n'
 '        -3.08791781e+05, -1.20501400e+06,  8.45327562e+05,\n'
 '         3.56683000e+05,  3.35163188e+05,  2.56447656e+05,\n'
 '         3.62076250e+05, -8.12563062e+05,  1.02570023e+05,\n'
 '        -7.18476688e+05, -3.54020000e+04,  1.45701250e+05,\n'
 '        -2.56107328e+05,  6.37544875e+05,  5.93680312e+05,\n'
 '         3.75293688e+05,  1.39775594e+05,  1.18794156e+05,\n'
 '        -2.16687812e+04,  9.21065938e+04, -2.84539875e+05,\n'
 '        -5.29134000e+05, -6.03742562e+05, -2.95007031e+05,\n'
 '         8.15464062e+04]])')
'test_inceptionnet | batch_shape is: [1]'
'test_inceptionnet | logits.shape is: ivy.Shape(1, 1000)'
'||'
'test_inceptionnet | device is: cpu'
'test_inceptionnet | fw is: torch'
'test_inceptionnet | load_weights is: True'
'InceptionV3 | build | layer 1/22 built'
'InceptionV3 | build | layer 2/22 built'
'layer 3/22 built'
'InceptionV3 | build | layer 4/22 built'
'InceptionV3 | build | layer 5/22 built'
'InceptionV3 | build | layer 6/22 built'
'InceptionV3 | build | layer 7/22 built'
'InceptionV3 | build | layer 8/22 built'
'InceptionV3 | build | layer 9/22 built'
'InceptionV3 | build | layer 10/22 built'
'InceptionV3 | build | layer 11/22 built'
'InceptionV3 | build | layer 12/22 built'
'InceptionV3 | build | layer 13/22 built'
'InceptionV3 | build | layer 14/22 built'
'InceptionV3 | build | layer 15/22 built'
'InceptionV3 | build | layer 17/22 built'
'InceptionV3 | build | layer 18/22 built'
'InceptionV3 | build | layer 19/22 built'
'InceptionV3 | build | layer 20/22 built'
'InceptionV3 | build | layer 21/22 built'
'InceptionV3 | build | layer 22/22 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/4 built'
'layer 2/4 built'
'layer 3/4 built'
'layer 4/4 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/6 built'
'layer 2/6 built'
'layer 3/6 built'
'layer 4/6 built'
'layer 5/6 built'
'layer 6/6 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'inceptionNet_v3 | building InceptionV3 model | done 1/3'
'inceptionNet_v3 | clearning pretrained weights | done 2/3'
'inceptionNet_v3 | loading pretrained weights | done 3/3'
'InceptionV3 | forward | input data_format is:NHWC | done 1/27'
'InceptionV3 | forward | data_format is going to be used is:NHWC | done 1/27'
'InceptionV3 | forward | input shape is:ivy.Shape(1, 224, 224, 3) | done 1/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 224, 224, 3) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 111, 111, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 111, 111, 32) | done 2/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 111, 111, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 32) | done 3/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 109, 109, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 64) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 64) | done 4/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 54, 54, 64) | done 5/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 54, 54, 80) | done 3/3'
'InceptionV3 | forward | is:ivy.Shape(1, 54, 54, 80) | done 6/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 80) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 52, 52, 192) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 52, 52, 192) | done 7/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 192) | done 8/27'
'input shape is:ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 32) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 32)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 25, 25, 256) | done 9/27'
'input shape is:ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 10/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 11/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 384) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 96) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 96)'
'one 20/20, output shape is:ivy.Shape(1, 12, 12, 288)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 12/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 12, 12, 768) | done 13/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 14/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 15/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 16/27'
'v3 16/27, output shape is:ivy.Shape(1, 12, 12, 768)'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 5, 5, 192)'
'one 7/20, output shape is:ivy.Shape(1, 5, 5, 768)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 1280) | done 17/27'
'input shape is:ivy.Shape(1, 5, 5, 1280)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 18/27'
'input shape is:ivy.Shape(1, 5, 5, 2048)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 19/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 20/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 5, 5) | done 21/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 1, 1) | done 22/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 27/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 24/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 25/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048) | done 26/27'
'InceptionV3 | forward | fc | done 27/27'
('test_inceptionnet | logits is: ivy.array([[ 1.40903485e+00,  1.04813433e+00, '
 '-7.60311425e-01,\n'
 '         7.45760679e-01, -6.56218767e-01,  4.03225899e-01,\n'
 '         2.90032959e+00,  6.21154904e-01, -1.73731148e-01,\n'
 '        -3.49291039e+00, -1.70128429e+00, -1.55554223e+00,\n'
 '         5.62636018e-01, -3.82209122e-01,  9.43736970e-01,\n'
 '         9.61444557e-01, -1.98619759e+00, -5.36304116e-01,\n'
 '        -8.87598872e-01,  1.82317996e+00,  9.11109090e-01,\n'
 '        -8.43849242e-01, -2.56537229e-01, -2.44823909e+00,\n'
 '         1.64350450e-01, -1.67061496e+00, -1.51043272e+00,\n'
 '        -2.29663324e+00, -1.43223822e+00,  5.32954037e-01,\n'
 '        -4.51707870e-01, -5.74839711e-01,  8.17423403e-01,\n'
 '         7.57696748e-01,  1.75929809e+00, -7.03574359e-01,\n'
 '         6.07133925e-01, -7.03543901e-01, -7.08942950e-01,\n'
 '         1.97535425e-01,  1.43503702e+00, -7.58865774e-02,\n'
 '        -1.05472159e+00,  5.15005588e-01, -3.02732140e-01,\n'
 '        -1.84417516e-01, -1.17953968e+00,  6.18385851e-01,\n'
 '        -9.04899299e-01, -1.80019867e+00, -5.69207132e-01,\n'
 '        -6.29803836e-01,  1.49868393e+00, -1.80806315e+00,\n'
 '         2.28211999e+00,  6.09915257e-01, -1.08698988e+00,\n'
 '        -3.38595241e-01, -8.49780977e-01, -3.33081573e-01,\n'
 '        -5.98165274e-01,  1.00344562e+00, -3.99103045e-01,\n'
 '         6.44523680e-01, -5.62521398e-01, -6.49827838e-01,\n'
 '         6.11571670e-01,  2.47093749e+00,  1.69540703e+00,\n'
 '        -1.24868907e-01, -2.18862820e+00,  8.84989977e-01,\n'
 '        -1.85250688e+00,  1.23751395e-01, -2.62827426e-01,\n'
 '         8.01642835e-02, -1.70534563e+00, -9.84959125e-01,\n'
 '         1.84265554e-01,  7.96023965e-01, -1.68271613e+00,\n'
 '        -1.58652276e-01, -3.70160133e-01,  2.67419934e+00,\n'
 '         2.07486177e+00, -7.02626646e-01, -1.09010553e+00,\n'
 '        -3.57646525e-01,  3.37157041e-01, -5.07606924e-01,\n'
 '         1.18338144e+00,  1.11798954e+00, -2.76692033e-01,\n'
 '         1.06382680e+00,  1.48081446e+00,  1.08984336e-01,\n'
 '         2.41303563e+00, -2.13814378e+00, -1.94811165e+00,\n'
 '         2.47682071e+00,  8.80587578e-01,  7.77770653e-02,\n'
 '        -3.20935082e+00, -7.56122589e-01,  2.00050926e+00,\n'
 '        -2.79961968e+00, -8.97286415e-01,  2.55337775e-01,\n'
 '         4.48433459e-01, -1.18760681e+00, -1.57409096e+00,\n'
 '        -1.06284881e+00,  2.09517431e+00,  2.33332586e+00,\n'
 '        -1.19364336e-01, -2.74097943e+00, -1.52254140e+00,\n'
 '         1.81783378e+00, -3.31595755e+00,  2.54493475e-01,\n'
 '        -3.44953239e-01, -2.73993397e+00,  1.42984939e+00,\n'
 '        -7.97706664e-01, -2.55817383e-01,  1.35433078e+00,\n'
 '        -1.88287568e+00,  1.88653672e+00,  9.98830855e-01,\n'
 '        -6.49519563e-01, -4.05091524e-01, -5.35343289e-01,\n'
 '         6.23298168e-01, -2.74721241e+00, -1.43820286e+00,\n'
 '         3.23956907e-01, -8.16448331e-01, -7.46659219e-01,\n'
 '        -1.37820649e+00, -2.84528017e+00, -1.45403957e+00,\n'
 '         9.62613702e-01, -3.10122395e+00,  6.40527070e-01,\n'
 '         3.97969747e+00, -1.18626809e+00,  1.77747870e+00,\n'
 '         5.23387671e-01,  2.23527655e-01, -1.06929123e+00,\n'
 '        -3.73684198e-01, -5.85792065e-01,  3.96484303e+00,\n'
 '        -2.30185938e+00, -4.28719491e-01, -4.20263147e+00,\n'
 '         1.26730132e+00,  5.32279491e+00, -2.61430693e+00,\n'
 '        -9.27206159e-01,  1.86060262e+00, -2.32743573e+00,\n'
 '        -7.14288056e-01,  7.41001844e-01, -1.93673229e+00,\n'
 '        -1.44604242e+00, -1.20403242e+00, -1.08718383e+00,\n'
 '        -9.87372816e-01,  2.07974434e-01,  2.31195402e+00,\n'
 '        -1.70500791e+00, -9.96624649e-01,  8.18751872e-01,\n'
 '         3.35749316e+00,  4.58719939e-01, -2.10581970e+00,\n'
 '         1.08120084e+00,  4.46225643e-01,  1.18952341e-01,\n'
 '        -1.27683949e+00,  1.18180245e-01,  2.24898398e-01,\n'
 '        -1.15655863e+00, -6.38512254e-01,  1.17781878e-01,\n'
 '         5.27758264e+00, -1.44220960e+00, -2.24303532e+00,\n'
 '        -2.76766372e+00, -1.69412947e+00, -6.41909599e-01,\n'
 '         1.21147752e+00, -1.78984690e+00, -2.09861422e+00,\n'
 '        -1.17719579e+00, -2.34818602e+00,  1.39123976e+00,\n'
 '        -7.95476139e-02,  1.79050922e+00, -9.76731598e-01,\n'
 '        -3.91186094e+00, -7.66582191e-01,  4.61743450e+00,\n'
 '        -3.72061896e+00, -7.28157997e-01, -1.71589327e+00,\n'
 '         1.31311786e+00, -1.60285294e+00, -1.63818312e+00,\n'
 '        -1.46007693e+00, -5.35501421e-01, -2.13444996e+00,\n'
 '         6.70709550e-01,  3.00196672e+00,  1.20145798e+00,\n'
 '         1.27207184e+00,  1.87613130e+00,  9.51141894e-01,\n'
 '        -2.71196890e+00, -6.52746677e-01, -7.81890511e-01,\n'
 '         3.29075360e+00,  4.58672571e+00,  6.60978222e+00,\n'
 '        -5.02278209e-01,  3.05023193e+00, -4.53327513e+00,\n'
 '         1.72663188e+00,  1.87056899e+00,  2.79623795e+00,\n'
 '         3.64273333e+00,  3.44062328e+00, -1.97832316e-01,\n'
 '         4.76340056e-01,  1.97663093e+00, -8.28177929e-02,\n'
 '        -8.82655084e-01, -4.82634008e-01, -1.34113610e+00,\n'
 '         2.89966732e-01,  4.84448999e-01, -5.63315228e-02,\n'
 '        -9.59771037e-01, -1.64365661e+00, -1.44890976e+00,\n'
 '        -1.37169123e-01,  2.14267731e+00,  9.64205551e+00,\n'
 '         7.56922913e+00,  5.70476246e+00, -9.32026148e-01,\n'
 '        -6.56586409e-01,  7.03703165e-02, -5.84501565e-01,\n'
 '         1.66901910e+00,  2.28042865e+00,  7.73759079e+00,\n'
 '         2.22671318e+01,  8.20457172e+00,  6.23172140e+00,\n'
 '         7.23038292e+00, -9.89102125e-01,  2.90522784e-01,\n'
 '        -9.98603940e-01, -1.22516453e-01, -2.21817231e+00,\n'
 '         1.91172302e+00,  1.98250472e-01,  3.59033418e+00,\n'
 '         1.34727612e+01, -1.74128205e-01, -4.37225938e-01,\n'
 '        -1.05750144e-01,  1.63266897e+00, -1.83415961e+00,\n'
 '        -6.90834403e-01,  1.82843018e+00, -1.18544817e+00,\n'
 '         1.28110542e+01,  3.51318598e+00, -5.33618808e-01,\n'
 '        -1.43086088e+00,  2.79076910e+00, -2.61057377e+00,\n'
 '        -1.03669628e-01, -3.39245886e-01,  1.07780564e+00,\n'
 '        -1.48006034e+00,  1.45530140e+00, -1.90811729e+00,\n'
 '         5.46500921e-01, -5.24781644e-03, -2.17373085e+00,\n'
 '        -3.44415712e+00, -3.12141442e+00,  4.17566395e+00,\n'
 '        -2.13875651e+00, -2.11512709e+00, -1.38721061e+00,\n'
 '        -7.38701463e-01, -9.11093473e-01,  1.55851543e+00,\n'
 '        -5.74050844e-02,  1.53846228e+00, -3.85533124e-01,\n'
 '         1.49722826e+00,  5.74269772e-01,  2.38932467e+00,\n'
 '         1.35766089e+00, -6.64561242e-02, -8.56098682e-02,\n'
 '         1.30017161e+00, -1.21465611e+00,  1.80521524e+00,\n'
 '         1.20811248e+00, -2.16097474e-01, -6.97942972e-02,\n'
 '         4.03799772e-01, -2.00575888e-02,  1.62929177e-01,\n'
 '        -5.84142208e-01,  1.60108495e+00,  1.25976622e+00,\n'
 '        -2.63274050e+00, -1.54528320e-02,  1.72247374e+00,\n'
 '         1.65256476e+00,  2.62713981e+00, -1.19423389e+00,\n'
 '        -6.91923499e-03,  4.15710115e+00,  1.99381101e+00,\n'
 '        -1.52687490e+00,  5.22526018e-02, -1.69818187e+00,\n'
 '        -3.52462196e+00, -1.22580588e+00,  3.17529488e+00,\n'
 '        -1.53680730e+00,  1.47902027e-01,  2.02518511e+00,\n'
 '        -3.10774773e-01, -4.17535365e-01, -1.26401782e+00,\n'
 '        -1.13645065e+00,  1.09108901e+00, -5.18162310e-01,\n'
 '         6.42515838e-01, -2.26091194e+00, -2.04567719e+00,\n'
 '         2.85916626e-01, -1.97264671e+00,  9.06425118e-01,\n'
 '        -1.42888701e+00,  2.28926229e+00,  1.07126725e+00,\n'
 '        -6.17604375e-01,  2.31413007e+00, -6.62328780e-01,\n'
 '        -1.82861102e+00,  5.50059080e-01, -1.66145325e+00,\n'
 '         7.70693004e-01, -1.06622982e+00, -2.50696135e+00,\n'
 '        -2.26570010e+00, -2.66789103e+00, -4.59747016e-03,\n'
 '        -1.32783806e+00, -1.70728564e-03, -1.19120967e+00,\n'
 '        -8.97001863e-01, -1.02666211e+00, -7.63902068e-02,\n'
 '        -1.40798795e+00, -1.08187032e+00, -1.48301125e+00,\n'
 '        -1.01519752e+00, -2.19539642e+00, -2.97832918e+00,\n'
 '        -1.48503435e+00, -1.67026925e+00, -8.59952927e-01,\n'
 '        -6.06857538e-01, -4.22415316e-01, -2.60157681e+00,\n'
 '        -8.77858922e-02,  1.38687491e-02, -9.69690085e-01,\n'
 '        -1.14517832e+00, -1.16485882e+00,  4.06931758e-01,\n'
 '         2.31768870e+00, -5.71512103e-01,  1.48186398e+00,\n'
 '         6.94383442e-01, -7.31461585e-01,  2.50238490e+00,\n'
 '         1.23199010e+00, -8.13622177e-01, -1.88280606e+00,\n'
 '         2.71226597e+00,  1.60868764e+00,  1.02098036e+00,\n'
 '         7.47885704e-01,  4.71245140e-01, -6.92508936e-01,\n'
 '        -1.03679872e+00, -2.04728675e+00, -1.08032441e+00,\n'
 '        -3.21152449e+00, -2.60724926e+00, -2.83790088e+00,\n'
 '        -2.02256608e+00, -1.47839809e+00,  2.79715434e-02,\n'
 '         1.83192420e+00, -2.64564896e+00, -5.60989976e-02,\n'
 '        -1.19180131e+00, -2.28126216e+00, -5.71719408e-02,\n'
 '        -6.94882095e-01,  1.65541172e-01,  1.16642177e+00,\n'
 '        -6.72416270e-01, -2.15190023e-01, -8.82841885e-01,\n'
 '        -4.91550475e-01, -9.06830430e-01, -8.70721459e-01,\n'
 '        -1.02369940e+00,  3.15243512e-01,  5.46998143e-01,\n'
 '         9.81581390e-01, -1.64382970e+00, -4.31555569e-01,\n'
 '         2.40747228e-01, -1.00644338e+00,  1.07322264e+00,\n'
 '        -7.10597396e-01,  8.14074278e-01, -1.09413743e+00,\n'
 '        -1.59771538e+00,  1.64985585e+00, -1.81282139e+00,\n'
 '        -3.19048285e-01,  2.66088009e+00, -5.48883915e-01,\n'
 '        -7.68522024e-01, -4.61533368e-01,  1.01907641e-01,\n'
 '        -1.01130831e+00,  6.06449485e-01, -5.35458624e-02,\n'
 '         5.69989979e-01, -1.03444666e-01, -1.00542128e+00,\n'
 '        -3.90704602e-01, -1.16584051e+00, -1.88044334e+00,\n'
 '         3.67511541e-01,  2.17005193e-01, -4.85390782e-01,\n'
 '        -2.38061714e+00,  3.96229833e-01, -6.73363864e-01,\n'
 '         1.85567841e-01, -4.30302769e-01,  2.04757571e+00,\n'
 '         3.54482591e-01, -1.49993324e+00,  1.27032518e+00,\n'
 '        -1.51906872e+00, -4.91808921e-01,  3.28069353e+00,\n'
 '        -8.52784753e-01,  1.66503638e-01, -1.11127555e-01,\n'
 '        -2.85147041e-01,  1.56992722e+00, -2.44237804e+00,\n'
 '         1.33268285e+00,  8.95508885e-01, -2.49885869e+00,\n'
 '         9.21907872e-02, -1.17669320e+00,  1.38825223e-01,\n'
 '         3.06437492e-01,  1.23006380e+00,  9.34458196e-01,\n'
 '        -9.56010521e-01, -1.97369170e+00, -2.03504992e+00,\n'
 '        -1.21630240e+00,  1.46606386e-01,  1.48803383e-01,\n'
 '         9.91056263e-01, -6.76434457e-01, -1.23032475e+00,\n'
 '         2.84401417e+00, -1.01038551e+00, -7.41762817e-02,\n'
 '        -1.44814360e+00,  1.39617038e+00,  5.70541739e-01,\n'
 '         1.09389520e+00, -1.79009891e+00,  1.54371536e+00,\n'
 '         4.84972179e-01, -1.86729217e+00,  1.58148217e+00,\n'
 '        -6.53967917e-01, -5.00009716e-01, -9.57431018e-01,\n'
 '        -1.55735183e+00, -5.67645550e-01, -4.35590744e+00,\n'
 '        -3.30210042e+00, -1.05046439e+00, -9.50884283e-01,\n'
 '         1.62755108e+00, -3.85365105e+00, -4.91428614e-01,\n'
 '        -1.09023857e+00, -3.01403999e+00, -2.04875469e+00,\n'
 '         5.24480283e-01, -1.26762593e+00,  5.96562922e-01,\n'
 '         1.16013372e+00,  4.11169052e-01, -2.50178075e+00,\n'
 '        -2.62184572e+00, -1.50682878e+00, -2.85550737e+00,\n'
 '         4.33045000e-01,  2.25202584e+00, -1.94763839e-01,\n'
 '         4.41161096e-01, -1.73608482e+00,  3.82065088e-01,\n'
 '         4.08878994e+00,  2.27244943e-01, -9.53600526e-01,\n'
 '         1.86513174e+00,  1.62268615e+00, -1.34529233e+00,\n'
 '         3.11269254e-01, -6.20639503e-01,  2.12839293e+00,\n'
 '        -6.30776882e-01, -4.81538105e+00,  7.42812634e-01,\n'
 '        -1.20804489e+00, -8.79254162e-01,  1.05410230e+00,\n'
 '        -7.09995508e-01,  1.44429460e-01, -4.73767966e-01,\n'
 '         1.03431448e-01,  2.58396316e+00,  2.05215263e+00,\n'
 '         9.29304063e-02, -1.60578132e+00,  3.04947615e-01,\n'
 '         2.11194247e-01,  1.02736974e+00, -1.83545959e+00,\n'
 '         4.28087294e-01,  2.58649290e-02,  4.67717886e-01,\n'
 '         9.68327939e-01, -4.86228138e-01, -1.73381531e+00,\n'
 '         1.93047494e-01, -8.94346714e-01,  1.90673530e+00,\n'
 '        -1.42287445e+00,  2.53095716e-01, -4.57128495e-01,\n'
 '         4.80607867e-01,  1.54649961e+00,  5.49094498e-01,\n'
 '         9.90116417e-01, -2.92310810e+00,  1.82920218e+00,\n'
 '        -1.72403216e-01, -1.45733750e+00,  9.21001554e-01,\n'
 '        -1.48095474e-01,  1.72134864e+00,  9.34784055e-01,\n'
 '         1.61609006e+00, -2.64868450e+00,  1.31731641e+00,\n'
 '        -1.27710080e+00, -8.05634797e-01, -9.90456402e-01,\n'
 '        -5.66459417e-01, -5.13476431e-01, -1.50691056e+00,\n'
 '        -2.10770822e+00,  2.88326549e+00,  3.50334466e-01,\n'
 '         2.24441505e+00,  6.87858939e-01, -1.92048347e+00,\n'
 '        -1.17944352e-01, -1.82995856e+00,  1.54536438e+00,\n'
 '         5.26951790e-01,  8.58148038e-01,  2.50615537e-01,\n'
 '        -1.59664202e+00, -2.04668999e+00, -2.08666712e-01,\n'
 '        -9.69741285e-01, -5.21234751e-01, -1.86592162e+00,\n'
 '        -2.39051893e-01,  2.60603309e+00, -8.71335268e-02,\n'
 '         6.55358136e-01,  1.10600114e+00, -4.54029083e-01,\n'
 '        -1.15920830e+00,  2.63551760e+00,  1.04142368e+00,\n'
 '        -4.07051372e+00, -1.34498990e+00, -9.17982936e-01,\n'
 '         9.28684592e-01, -2.16703868e+00, -3.70009780e-01,\n'
 '        -1.00574839e+00,  7.13825226e-03, -5.23962259e-01,\n'
 '        -4.49009299e-01, -4.38045889e-01,  5.11627495e-01,\n'
 '        -2.04445124e+00, -1.11814880e+00, -1.87294078e+00,\n'
 '         3.45538783e+00,  4.79828775e-01,  9.55686986e-01,\n'
 '         6.27585649e-01,  9.43622351e-01, -1.04517090e+00,\n'
 '         8.73359144e-01, -6.23710602e-02, -1.57832825e+00,\n'
 '         6.18345976e-01, -2.88846421e+00,  7.63525605e-01,\n'
 '        -2.88967276e+00,  5.79456270e-01, -1.06306523e-01,\n'
 '        -1.70936656e+00, -4.35483307e-01,  2.61792809e-01,\n'
 '        -1.48897648e+00, -1.75885588e-01, -3.99229169e-01,\n'
 '         2.01296425e+00,  5.52287221e-01, -2.78725684e-01,\n'
 '         2.69671154e+00, -5.56457877e-01, -2.01488876e+00,\n'
 '         2.02422094e+00, -1.69719827e+00,  1.59238517e+00,\n'
 '         6.40979588e-01, -1.79612577e-01, -1.37812644e-01,\n'
 '         3.44688818e-02,  6.43438578e-01,  3.54217625e+00,\n'
 '        -4.18937826e+00,  4.09575224e+00, -9.31482971e-01,\n'
 '         7.31441021e-01,  4.14047390e-02, -1.70734227e+00,\n'
 '        -6.80228710e-01,  3.29152763e-01,  1.33820045e+00,\n'
 '        -1.01441413e-01, -2.07699108e+00,  7.71075070e-01,\n'
 '        -3.73770642e+00, -9.54073489e-01,  5.40675282e-01,\n'
 '        -8.16073775e-01, -2.83905864e-02,  6.75825715e-01,\n'
 '         4.89974886e-01, -1.75570989e+00,  1.50814211e+00,\n'
 '        -2.15668321e+00,  1.90994009e-01, -2.56398344e+00,\n'
 '        -3.26139188e+00,  9.92182136e-01,  7.47615278e-01,\n'
 '         1.75573736e-01, -3.00948834e+00, -1.11906439e-01,\n'
 '         1.72388196e+00,  1.08571553e+00, -3.11852169e+00,\n'
 '         2.20665360e+00, -6.98258102e-01, -2.22450399e+00,\n'
 '        -5.74696720e-01,  1.60545897e+00,  2.32315731e+00,\n'
 '         3.09388566e+00, -2.08130288e+00, -1.12219381e+00,\n'
 '         2.02899718e+00,  2.29303646e+00,  5.79268277e-01,\n'
 '        -8.51995230e-01,  5.85995317e-02, -7.18564630e-01,\n'
 '         1.98732555e-01, -1.45804977e+00,  5.17530298e+00,\n'
 '        -5.21140099e-01, -8.16731989e-01, -1.45735657e+00,\n'
 '        -1.91840440e-01, -4.80133504e-01, -1.31416053e-01,\n'
 '         1.85867047e+00,  2.60461152e-01,  1.55143189e+00,\n'
 '         1.14904475e+00, -2.45878649e+00, -6.18247986e-01,\n'
 '        -1.55122066e+00, -4.41662312e+00,  4.01055050e+00,\n'
 '         1.37579441e-03, -1.75067103e+00,  7.64576137e-01,\n'
 '        -3.83527875e+00, -3.45327675e-01, -1.62843749e-01,\n'
 '        -3.41806531e+00, -8.25179279e-01,  6.44510806e-01,\n'
 '        -1.23683298e+00,  7.83514142e-01,  1.81698596e+00,\n'
 '        -9.86791968e-01, -2.78595233e+00, -1.49619138e+00,\n'
 '         6.11662626e-01, -4.98010963e-02, -1.95471263e+00,\n'
 '         4.92910653e-01, -1.62916982e+00,  4.24863386e+00,\n'
 '        -1.88680387e+00,  1.88324869e+00, -1.75092328e+00,\n'
 '        -2.04003191e+00, -9.35885429e-01,  1.78926909e+00,\n'
 '        -1.96236348e+00,  2.93566203e+00,  4.98453081e-02,\n'
 '        -3.70351136e-01,  1.83963925e-01,  8.05713773e-01,\n'
 '         1.40636074e+00,  1.60038972e+00,  1.64142740e+00,\n'
 '         1.17910421e+00, -3.04123104e-01, -1.10231805e+00,\n'
 '        -1.95959997e+00, -5.88484049e-01, -7.93726891e-02,\n'
 '        -1.09330869e+00,  1.33530331e+00, -4.15280372e-01,\n'
 '         4.69520874e-02,  1.04695901e-01, -1.21402845e-01,\n'
 '        -1.98299182e+00, -5.84478676e-01, -7.95477152e-01,\n'
 '        -6.07568622e-01,  1.85402763e+00,  5.60561240e-01,\n'
 '        -1.25846362e+00,  5.10036826e-01, -2.01419175e-01,\n'
 '        -2.32930875e+00,  1.78757995e-01, -2.98732543e+00,\n'
 '        -3.92387056e+00,  7.29195416e-01,  1.69437313e+00,\n'
 '        -4.00796145e-01, -3.75265646e+00,  1.34673786e+00,\n'
 '         6.51271820e-01, -1.02268589e+00,  1.21398091e+00,\n'
 '         2.73924112e+00, -2.23245716e+00, -1.64173305e+00,\n'
 '         1.72415286e-01, -7.36406922e-01, -2.58986735e+00,\n'
 '         7.50927985e-01, -7.00412691e-01,  4.13456798e-01,\n'
 '        -7.86113441e-01,  4.29027289e-01, -2.48023319e+00,\n'
 '         3.71981358e+00, -5.99444509e-01, -3.08156550e-01,\n'
 '        -6.94655299e-01,  3.25588322e+00,  1.51386476e+00,\n'
 '        -3.68368244e+00, -1.56010270e+00,  1.55541635e+00,\n'
 '        -7.28821039e-01,  8.98183584e-01, -7.38049686e-01,\n'
 '        -3.55451763e-01,  1.15391843e-01,  9.41999078e-01,\n'
 '         3.92239761e+00,  2.16268396e+00, -2.22193480e+00,\n'
 '        -1.41899180e+00, -2.65302539e+00,  1.51783943e-01,\n'
 '        -2.47737706e-01,  1.71894419e+00, -1.75756919e+00,\n'
 '         1.98553693e+00,  2.07248759e+00,  5.95144570e-01,\n'
 '         1.81885317e-01, -2.27078247e+00,  2.12936640e+00,\n'
 '        -2.90136784e-01, -1.32900178e+00,  5.96052647e-01,\n'
 '         1.71129191e+00,  6.02471232e-01,  1.63571644e+00,\n'
 '        -2.46818185e+00, -7.06978798e-01, -1.49599779e+00,\n'
 '         8.74616802e-02, -1.87608278e+00, -2.22554660e+00,\n'
 '         1.32875192e+00, -1.27097035e+00, -9.34141755e-01,\n'
 '        -1.38617611e+00, -2.42973417e-01, -1.36383510e+00,\n'
 '         5.48277319e-01, -1.98131859e+00,  8.49093318e-01,\n'
 '         5.55097997e-01, -3.44379425e+00, -7.83640563e-01,\n'
 '        -1.13906407e+00, -7.19575286e-01,  2.47389483e+00,\n'
 '        -5.59110820e-01,  1.22303998e+00,  3.06764317e+00,\n'
 '         2.08700150e-01,  1.61138260e+00,  5.78931346e-02,\n'
 '        -1.94569039e+00, -1.73669636e+00,  3.32072330e+00,\n'
 '        -2.01654410e+00, -3.29630494e-01,  3.16147995e+00,\n'
 '        -1.17286921e+00,  2.05131245e+00,  2.28475380e+00,\n'
 '         5.85032701e-01, -1.47919571e+00,  1.81389463e+00,\n'
 '        -1.31808960e+00,  1.42236924e+00, -3.23241305e+00,\n'
 '         2.49324933e-01, -3.07026654e-01,  1.63112855e+00,\n'
 '        -3.01014686e+00,  2.77021694e+00, -4.69793439e-01,\n'
 '        -3.35470557e-01, -2.46554181e-01, -7.84098059e-02,\n'
 '         2.69826937e+00, -1.33314192e+00, -3.19034743e+00,\n'
 '         3.44553471e-01,  3.13915908e-02,  6.09044790e-01,\n'
 '        -4.49129939e-02,  2.22030187e+00,  2.01854038e+00,\n'
 '        -2.54068589e+00,  2.05853176e+00, -1.43631029e+00,\n'
 '        -2.44137287e+00, -7.09053755e-01,  1.05644953e+00,\n'
 '         2.14036369e+00,  5.11574596e-02, -1.12355590e+00,\n'
 '        -1.74421036e+00, -5.88661850e-01, -9.57295477e-01,\n'
 '        -1.26490057e+00,  1.04716241e+00, -8.67593527e-01,\n'
 '         9.96595025e-01,  5.75228751e-01,  2.03360176e+00,\n'
 '         2.93223453e+00,  2.52332020e+00,  1.43737519e+00,\n'
 '         3.52994180e+00, -1.43503994e-02,  8.03007305e-01,\n'
 '         1.79709196e-01,  1.40042448e+00,  3.43155074e+00,\n'
 '         1.52979398e+00,  3.54110765e+00,  5.10431826e-01,\n'
 '         1.01574755e+00,  2.22849441e+00,  1.38950086e+00,\n'
 '         1.13265932e+00,  5.65609217e-01,  8.30860972e-01,\n'
 '        -2.28830290e+00,  1.46374273e+00, -1.08671069e+00,\n'
 '        -7.48806417e-01, -9.83714223e-01, -1.24024749e+00,\n'
 '         1.60129833e+00,  1.83708847e-01, -1.33041000e+00,\n'
 '        -1.76503921e+00, -1.18600368e+00,  8.30130458e-01,\n'
 '         1.81949377e-01, -1.56738424e+00, -1.84895802e+00,\n'
 '        -2.03401422e+00, -1.43640923e+00,  2.30154514e+00,\n'
 '         4.45220411e-01, -1.77928531e+00, -1.53167129e+00,\n'
 '        -4.62742984e-01, -1.19774473e+00, -1.11588442e+00,\n'
 '        -5.01736462e-01, -5.33833623e-01,  1.86035252e+00,\n'
 '         2.61307669e+00,  2.33082652e+00,  1.64012885e+00,\n'
 '        -5.64917445e-01, -9.38052774e-01, -1.45550489e+00,\n'
 '        -1.79583335e+00, -3.11633396e+00,  2.97225803e-01,\n'
 '        -1.53704917e+00, -1.74565506e+00, -2.84342557e-01,\n'
 '        -4.20474291e-01]])')
'test_inceptionnet | batch_shape is: [1]'
'test_inceptionnet | logits.shape is: ivy.Shape(1, 1000)'
'||'
'test_inceptionnet | indices_test | true_indices is: [258 270 279]'
'test_inceptionnet | indices_test | calc_indices is: [258 270 279]'
'test_inceptionnet | device is: cpu'
'test_inceptionnet | fw is: torch'
'test_inceptionnet | load_weights is: False'
'InceptionV3 | build | layer 1/22 built'
'InceptionV3 | build | layer 2/22 built'
'layer 3/22 built'
'InceptionV3 | build | layer 4/22 built'
'InceptionV3 | build | layer 5/22 built'
'InceptionV3 | build | layer 6/22 built'
'InceptionV3 | build | layer 7/22 built'
'InceptionV3 | build | layer 8/22 built'
'InceptionV3 | build | layer 9/22 built'
'InceptionV3 | build | layer 10/22 built'
'InceptionV3 | build | layer 11/22 built'
'InceptionV3 | build | layer 12/22 built'
'InceptionV3 | build | layer 13/22 built'
'InceptionV3 | build | layer 14/22 built'
'InceptionV3 | build | layer 15/22 built'
'InceptionV3 | build | layer 17/22 built'
'InceptionV3 | build | layer 18/22 built'
'InceptionV3 | build | layer 19/22 built'
'InceptionV3 | build | layer 20/22 built'
'InceptionV3 | build | layer 21/22 built'
'InceptionV3 | build | layer 22/22 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/4 built'
'layer 2/4 built'
'layer 3/4 built'
'layer 4/4 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/6 built'
'layer 2/6 built'
'layer 3/6 built'
'layer 4/6 built'
'layer 5/6 built'
'layer 6/6 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'inceptionNet_v3 | building InceptionV3 model | done 1/3'
'InceptionV3 | forward | input data_format is:NCHW | done 1/27'
'InceptionV3 | forward | data_format is going to be used is:NCHW | done 1/27'
'InceptionV3 | forward | input shape is:ivy.Shape(1, 224, 224, 3) | done 1/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 224, 224, 3) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 111, 111, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 111, 111, 32) | done 2/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 111, 111, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 32) | done 3/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 109, 109, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 64) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 64) | done 4/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 54, 54, 64) | done 5/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 54, 54, 80) | done 3/3'
'InceptionV3 | forward | is:ivy.Shape(1, 54, 54, 80) | done 6/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 80) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 52, 52, 192) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 52, 52, 192) | done 7/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 192) | done 8/27'
'input shape is:ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 32) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 32)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 25, 25, 256) | done 9/27'
'input shape is:ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 10/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 11/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 384) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 96) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 96)'
'one 20/20, output shape is:ivy.Shape(1, 12, 12, 288)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 12/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 12, 12, 768) | done 13/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 14/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 15/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 16/27'
'v3 16/27, output shape is:ivy.Shape(1, 12, 12, 768)'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 5, 5, 192)'
'one 7/20, output shape is:ivy.Shape(1, 5, 5, 768)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 1280) | done 17/27'
'input shape is:ivy.Shape(1, 5, 5, 1280)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 18/27'
'input shape is:ivy.Shape(1, 5, 5, 2048)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 19/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 20/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 5, 5) | done 21/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 1, 1) | done 22/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 27/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 24/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 25/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048) | done 26/27'
'InceptionV3 | forward | fc | done 27/27'
('test_inceptionnet | logits is: ivy.array([[ 1.39571938e+06, -1.00919975e+06, '
 '-1.39269175e+06,\n'
 '         2.96380406e+05,  4.50996500e+05, -3.62626625e+05,\n'
 '         1.95205688e+06,  1.23071925e+06, -7.76419750e+05,\n'
 '         4.54348656e+05,  4.08815438e+05,  1.31831538e+06,\n'
 '         5.44972125e+05, -7.29989750e+05, -3.99278500e+05,\n'
 '         1.11373100e+06,  1.54870100e+06,  3.79740250e+05,\n'
 '         3.30025594e+05, -5.33626250e+04,  1.54922325e+06,\n'
 '        -1.42524112e+06,  1.67924525e+06,  1.52388750e+04,\n'
 '        -8.92498000e+05, -6.55430750e+05, -6.18203875e+05,\n'
 '         9.70614938e+05,  2.25023875e+06, -5.27738875e+05,\n'
 '         7.30802000e+05, -9.99067375e+05,  5.20338594e+05,\n'
 '        -1.21529612e+06,  5.56170250e+05, -4.31648750e+05,\n'
 '         2.70934475e+06,  2.74369250e+05,  7.96899062e+05,\n'
 '         1.18661200e+06,  4.26451156e+05,  1.71212750e+05,\n'
 '         1.08495275e+06,  1.33605838e+06, -1.57921550e+06,\n'
 '         7.01548938e+05, -5.15293219e+05,  6.15314000e+05,\n'
 '        -1.88727062e+05,  1.95340775e+06,  8.32755250e+05,\n'
 '         4.33613906e+05,  3.13928375e+05, -1.40942875e+06,\n'
 '        -3.13310688e+05,  1.38778788e+06, -2.92736750e+05,\n'
 '        -9.84054938e+05,  1.18662225e+06,  9.99865125e+05,\n'
 '         2.26369188e+05,  1.57756562e+05, -5.84352375e+05,\n'
 '         1.98524650e+06,  1.84358075e+06, -1.17476100e+06,\n'
 '         6.55896250e+04,  1.23107625e+06,  6.06521625e+05,\n'
 '         1.75500025e+06,  1.60043025e+06, -2.19765525e+06,\n'
 '        -5.75642125e+05,  2.02752050e+06,  6.03006938e+05,\n'
 '         2.66716062e+05,  1.25810412e+06,  5.52617375e+05,\n'
 '         3.00012531e+05,  5.96715375e+05, -1.94925388e+06,\n'
 '         8.69634188e+05, -5.80589125e+05, -2.04920500e+06,\n'
 '         8.12882750e+05,  4.53413688e+05,  5.01287125e+05,\n'
 '         9.63717500e+05, -2.62862650e+06,  5.85338438e+05,\n'
 '        -4.19669688e+04, -7.61426562e+05,  1.39490800e+06,\n'
 '         6.95294688e+04, -8.16423250e+05,  2.37002100e+06,\n'
 '        -3.14731875e+05,  4.34425688e+05,  1.38635525e+06,\n'
 '         6.02837875e+05, -6.87921375e+05, -1.29441212e+06,\n'
 '         1.32311275e+06,  9.10636750e+05,  9.39576750e+05,\n'
 '        -2.02383975e+06,  2.04012312e+06,  2.75042825e+06,\n'
 '         3.85122500e+04, -1.16054062e+06, -7.77612500e+04,\n'
 '        -1.59346762e+06, -8.57094250e+05,  1.47910950e+06,\n'
 '         8.10239250e+05,  1.55406112e+06, -3.57086797e+04,\n'
 '        -5.22679625e+05, -7.48374875e+05, -2.05735412e+06,\n'
 '         2.05698488e+06, -6.64969312e+05,  1.58097781e+05,\n'
 '        -8.96487125e+05, -2.69583500e+05,  1.04305312e+05,\n'
 '        -2.24356375e+06,  1.12827800e+06,  2.53489766e+05,\n'
 '        -1.44364600e+06, -8.07298875e+05,  8.65294000e+05,\n'
 '        -2.52944125e+05, -6.94828250e+05,  1.16262250e+06,\n'
 '         1.33071188e+05,  1.40812300e+06,  3.47046250e+04,\n'
 '         2.65543906e+05,  7.67755625e+05, -4.83187344e+05,\n'
 '        -2.96690438e+05,  1.28311325e+06, -3.24766688e+05,\n'
 '         4.54189312e+05, -2.30784425e+06, -5.68901938e+05,\n'
 '        -1.74404362e+06,  4.09102375e+05,  1.75341375e+05,\n'
 '         1.29059125e+05, -3.21764125e+05, -1.10251325e+06,\n'
 '        -7.06568000e+05, -2.12631200e+06, -7.66698750e+05,\n'
 '        -1.22592862e+06, -1.94197175e+06, -1.39164750e+06,\n'
 '        -3.28393375e+05, -4.23821000e+05, -3.80311750e+05,\n'
 '         9.89605312e+05, -2.95237156e+05, -2.11558225e+06,\n'
 '        -1.55870450e+06,  7.39514188e+05, -1.09336700e+06,\n'
 '        -1.18294500e+06,  6.92114875e+05,  1.34546838e+06,\n'
 '         1.24854625e+06,  2.18776500e+06, -8.94488000e+05,\n'
 '        -1.59133500e+06, -2.34943100e+06, -6.60210000e+05,\n'
 '         2.31065575e+06,  2.24283344e+05,  4.60991406e+05,\n'
 '        -1.56162500e+06,  1.08828025e+06, -3.43145062e+05,\n'
 '        -1.96685400e+06, -5.75266375e+05,  1.05239492e+05,\n'
 '         1.55935000e+04,  1.13007150e+06, -7.83758062e+05,\n'
 '        -4.15009656e+05,  8.10319750e+05,  3.41973656e+05,\n'
 '        -5.47592750e+05,  4.81060312e+05,  8.25210062e+05,\n'
 '        -1.47173650e+06, -5.48913938e+05,  1.07755762e+06,\n'
 '        -3.37134375e+04,  1.24756075e+06, -7.20671250e+05,\n'
 '        -3.08659350e+06, -7.15755688e+05,  1.28366825e+06,\n'
 '         2.86207500e+04, -1.07620484e+05,  1.10931925e+06,\n'
 '        -2.86304175e+06,  3.49789375e+05, -1.14723125e+05,\n'
 '         2.69539375e+04, -9.04156875e+04,  6.78130000e+05,\n'
 '         7.45417312e+05,  9.31317750e+05,  1.29099125e+06,\n'
 '         1.69445000e+04,  8.97545375e+05, -4.83886594e+05,\n'
 '        -5.36930250e+05, -5.45762312e+05,  1.75879775e+06,\n'
 '        -5.07005781e+05,  9.23568750e+05, -1.64484888e+06,\n'
 '        -1.81863825e+06,  9.88814000e+05,  7.74831375e+05,\n'
 '        -1.81984812e+05, -9.50293750e+03,  3.26004312e+05,\n'
 '         1.84296150e+06, -2.52732562e+05,  6.05687500e+05,\n'
 '         4.64659312e+05, -1.21814094e+05,  2.04743975e+06,\n'
 '        -1.98609125e+06,  3.42326969e+05,  9.25009125e+05,\n'
 '        -1.58317912e+06, -4.28540000e+04,  1.72940050e+06,\n'
 '         6.46066562e+04,  6.42963625e+05, -1.86268300e+06,\n'
 '        -4.49312031e+05,  1.90157800e+06, -2.33806875e+06,\n'
 '        -1.44349050e+06, -1.62544375e+06,  1.88735575e+06,\n'
 '         3.56652938e+05,  3.66860719e+05, -5.49322062e+05,\n'
 '         2.17226300e+06,  7.72581062e+05,  4.91435219e+05,\n'
 '        -8.92704062e+05, -1.15732525e+06,  5.74973438e+05,\n'
 '         5.74671250e+05,  4.25290375e+05,  1.72450938e+06,\n'
 '         1.20806700e+06, -8.83827875e+05, -4.88805250e+05,\n'
 '        -8.97735250e+05, -3.73586719e+05, -1.60036638e+06,\n'
 '        -1.22762912e+06,  1.12660525e+06,  1.01128612e+06,\n'
 '        -2.76133500e+05, -1.31959488e+06, -7.12353812e+05,\n'
 '        -7.47686375e+05, -1.25996406e+05, -7.06581562e+05,\n'
 '        -7.01041062e+05, -9.66483562e+05, -1.62196300e+06,\n'
 '         1.33632312e+05,  1.39096700e+06, -3.07623062e+05,\n'
 '         2.47038562e+05,  4.52955312e+05, -1.36893300e+06,\n'
 '         2.67041562e+05,  4.08905875e+05,  1.00813475e+06,\n'
 '         1.56751700e+06, -8.35156688e+05, -2.65545625e+05,\n'
 '         8.19227000e+05, -7.14051875e+04, -1.34551525e+06,\n'
 '         4.14837969e+05,  1.18083688e+05,  6.55024688e+04,\n'
 '         5.23797938e+05,  7.47428750e+04, -3.87280969e+05,\n'
 '         1.04717094e+06, -7.80166375e+05,  1.37751688e+06,\n'
 '         7.25775375e+05, -1.24014938e+05,  2.57589844e+05,\n'
 '        -4.76045344e+05, -4.29288125e+04,  8.48232938e+05,\n'
 '        -1.37447562e+06, -1.33082025e+06,  3.14856875e+05,\n'
 '        -1.50947031e+05, -2.96279550e+06, -9.06087500e+05,\n'
 '         1.23656150e+06,  2.23072000e+05, -7.47412688e+05,\n'
 '         6.24048688e+05,  7.08529875e+05, -8.89603875e+05,\n'
 '         1.30018375e+05, -9.05841812e+05,  1.19592975e+06,\n'
 '         8.94825312e+05,  3.59726750e+05, -1.41956150e+06,\n'
 '         2.78910938e+05,  8.79497188e+05,  1.91142950e+06,\n'
 '        -5.99487500e+05, -1.96929156e+05, -5.45099625e+05,\n'
 '        -1.35606125e+05, -3.17423750e+05,  1.25163238e+06,\n'
 '         1.02498250e+05, -1.94084375e+05, -4.54315344e+05,\n'
 '         3.17145062e+05, -2.95865688e+05, -5.41488062e+05,\n'
 '         2.10786050e+06,  4.78682438e+05,  2.40583000e+05,\n'
 '         1.07559100e+06,  7.31203688e+05,  4.67197781e+05,\n'
 '        -2.44682500e+04, -7.73202500e+04, -1.12991075e+06,\n'
 '         9.40576250e+04,  7.47853062e+05,  8.13877500e+05,\n'
 '        -3.23220312e+04,  1.13127025e+06, -1.13372350e+06,\n'
 '        -7.53255938e+05,  1.53709025e+06, -5.08338344e+05,\n'
 '        -4.09454062e+04,  6.95685500e+05,  1.19968388e+06,\n'
 '        -1.05974238e+06, -8.45723750e+04,  3.70689750e+05,\n'
 '         3.26663438e+05, -6.55321000e+05, -1.61358962e+06,\n'
 '         6.67346250e+05,  2.59751312e+05,  1.82075219e+05,\n'
 '         7.97312812e+05,  1.38808725e+06,  1.83060900e+06,\n'
 '         5.57972750e+05,  6.65475375e+05, -1.97728500e+05,\n'
 '         6.38011438e+05,  1.91994300e+06, -3.56979594e+05,\n'
 '         5.59043250e+05,  2.76875000e+05, -1.01236375e+05,\n'
 '        -7.90371125e+05, -4.06102750e+05,  6.61714562e+05,\n'
 '         1.83931700e+06, -1.03525362e+06,  4.25654250e+05,\n'
 '         1.10886425e+06, -5.67080375e+05, -1.82693125e+06,\n'
 '        -3.81784750e+05,  9.91360438e+05, -4.50363375e+05,\n'
 '         7.83157188e+04, -4.65525312e+05,  9.43848000e+05,\n'
 '        -5.79085125e+05,  1.87955412e+06, -1.24871988e+06,\n'
 '         6.66590812e+05, -2.51548641e+05,  5.11176312e+05,\n'
 '         2.75819500e+06, -8.26857875e+05, -1.26074300e+06,\n'
 '        -7.35252750e+05, -9.27974125e+05, -2.19412500e+03,\n'
 '         1.08914562e+05,  2.23653950e+06,  4.65039406e+05,\n'
 '         1.58503375e+05, -5.91685438e+05,  1.32663688e+06,\n'
 '        -9.22710562e+05,  5.44461875e+04,  6.13224500e+05,\n'
 '        -6.51554625e+05, -7.81003125e+04,  1.15484138e+06,\n'
 '        -9.30132062e+05, -1.08525225e+06, -7.79021375e+05,\n'
 '         1.01803338e+06, -1.12693680e+05, -1.31735450e+06,\n'
 '        -2.86329500e+05,  1.53661125e+05,  2.13172609e+05,\n'
 '         8.67236250e+05,  1.59698275e+06,  5.19987562e+05,\n'
 '        -1.43575875e+05,  1.04070488e+06, -2.06303906e+05,\n'
 '        -1.37192050e+06,  5.01337531e+05,  1.60291475e+06,\n'
 '        -2.45464750e+05, -7.53521750e+05,  1.04302238e+06,\n'
 '        -2.97900250e+05, -5.76401125e+05, -1.04207012e+06,\n'
 '        -6.33491875e+05, -3.81819219e+05,  2.64137200e+06,\n'
 '         7.36358750e+05, -1.32449862e+06,  1.66984788e+06,\n'
 '        -4.09998562e+05, -1.99393562e+06,  2.50798425e+06,\n'
 '        -9.69467938e+05,  2.97563000e+05, -8.46949375e+05,\n'
 '        -2.32960906e+05,  1.94334453e+05, -5.30114000e+05,\n'
 '        -6.58972500e+05, -2.05133562e+05, -6.39468938e+05,\n'
 '        -1.28500362e+06,  2.35703375e+06, -2.31182575e+06,\n'
 '         1.88055575e+06,  8.18461062e+05,  5.12281250e+05,\n'
 '        -2.73792625e+05,  1.40361925e+06,  6.97774125e+05,\n'
 '        -8.76145000e+05, -1.25355025e+06,  1.01397088e+06,\n'
 '        -6.03766250e+05,  7.98283062e+05, -1.21562538e+06,\n'
 '         9.18951500e+05, -3.09975875e+05, -6.11719875e+05,\n'
 '        -1.72245550e+06,  8.33980500e+05,  4.20035875e+05,\n'
 '        -7.22561375e+05, -1.76291025e+06,  2.93535094e+05,\n'
 '        -1.04864900e+06,  1.60492625e+06,  1.63694875e+05,\n'
 '         1.55228650e+06,  4.38474938e+05, -3.94003438e+04,\n'
 '        -9.02093625e+05, -1.53608112e+06,  8.98118188e+05,\n'
 '        -9.12576250e+05, -1.44898891e+05,  3.74858281e+05,\n'
 '        -6.05386375e+05,  3.00776550e+06, -8.63997125e+05,\n'
 '        -1.38019788e+06,  4.95015969e+05, -1.41044525e+06,\n'
 '        -1.29468700e+06, -3.41888281e+05,  1.00562519e+06,\n'
 '        -5.35296250e+04,  5.88300250e+05, -5.66911438e+05,\n'
 '         6.60498750e+05, -6.17632062e+05, -1.54785375e+05,\n'
 '         4.52918188e+05,  3.55975500e+05, -2.19717188e+04,\n'
 '        -6.27017875e+05,  2.38955703e+05, -1.75947625e+06,\n'
 '         6.20895250e+05, -4.21693094e+05, -1.79920688e+06,\n'
 '         1.26118750e+06, -6.43210500e+05,  2.98731844e+05,\n'
 '        -5.94213750e+05, -3.96361094e+05, -1.21811328e+05,\n'
 '         1.76788725e+06, -1.73626312e+06, -6.43247375e+05,\n'
 '         2.93368750e+05, -7.95492500e+05,  6.21881625e+05,\n'
 '         3.20325531e+05,  2.43273300e+06,  9.27261125e+05,\n'
 '         8.89958625e+05,  1.93907031e+04, -5.47523375e+05,\n'
 '         2.32791688e+05, -1.32703588e+06,  5.88341188e+05,\n'
 '        -2.48061525e+06, -8.21705875e+05,  4.90074500e+05,\n'
 '        -7.29284938e+05, -1.48026700e+06,  3.94090875e+05,\n'
 '         3.11353875e+05,  1.08066625e+06, -1.47064750e+06,\n'
 '         2.78364350e+06, -1.10494406e+05, -1.80561875e+05,\n'
 '         5.99044000e+05, -5.45585625e+04,  6.05894062e+05,\n'
 '         1.74049900e+06, -8.90640125e+05, -3.68580219e+05,\n'
 '         1.27046000e+06, -7.91785625e+05,  1.04052369e+06,\n'
 '         1.00834700e+06,  1.78212988e+06, -1.22064912e+06,\n'
 '         7.68964312e+05, -6.13868438e+05,  7.42952250e+05,\n'
 '         1.62206638e+06, -1.40463575e+06,  7.90073500e+05,\n'
 '         1.18283988e+06, -6.85210250e+05, -5.14539000e+05,\n'
 '        -1.50334812e+06, -3.39787500e+04,  1.15560594e+05,\n'
 '        -1.00321850e+06,  2.69767625e+05, -2.28402725e+06,\n'
 '        -1.16011031e+05,  9.42881750e+05, -8.32001125e+05,\n'
 '         9.49257250e+05, -1.37686350e+06, -4.80637969e+04,\n'
 '         9.93304875e+05, -2.42102812e+05,  6.59399125e+05,\n'
 '         6.35118375e+05, -7.70320688e+05,  3.05455875e+05,\n'
 '        -7.49566375e+05,  9.49728188e+05, -2.33605250e+05,\n'
 '         1.09725100e+06,  7.00981000e+05, -5.38100000e+05,\n'
 '        -1.71129962e+06,  1.03732938e+05, -6.33249125e+05,\n'
 '         2.15894350e+06, -4.51938688e+05,  2.70433550e+06,\n'
 '        -3.11055625e+05, -6.32585875e+05,  1.52111750e+06,\n'
 '         1.22689012e+06,  3.35771656e+05,  9.32362500e+04,\n'
 '        -8.38151062e+05,  5.44344938e+05, -8.79047625e+05,\n'
 '        -1.07121938e+06,  1.71269156e+05, -2.20384750e+05,\n'
 '        -6.87330938e+04,  6.05540125e+05, -3.73880750e+05,\n'
 '         1.66628188e+05, -1.08907138e+06,  1.01434438e+05,\n'
 '         7.56122625e+05, -8.72100000e+05,  1.24629975e+06,\n'
 '         1.52096325e+06,  1.78446925e+06,  5.97637375e+05,\n'
 '         3.07161250e+05,  5.64479000e+05, -1.46322938e+06,\n'
 '         1.69136062e+06,  7.33026562e+05, -4.68966375e+05,\n'
 '        -3.29381328e+04, -1.57631338e+06,  4.10445281e+05,\n'
 '        -8.22252938e+05, -3.19375062e+05, -3.97882125e+05,\n'
 '         1.04232125e+06,  1.14932906e+05,  1.85011950e+06,\n'
 '        -1.32337525e+06, -4.35627281e+05, -5.72545312e+05,\n'
 '        -1.18010562e+05,  2.96965625e+05,  1.73832750e+05,\n'
 '        -1.32412138e+06, -7.13505500e+05, -2.26224125e+05,\n'
 '         1.91230425e+06, -4.94708438e+05,  5.46544438e+05,\n'
 '         1.88986012e+06, -3.62001375e+05,  1.08756625e+06,\n'
 '        -7.01466375e+05, -1.78544688e+05,  1.49709375e+06,\n'
 '        -5.22723938e+05, -8.54219250e+05, -2.75755594e+05,\n'
 '        -6.26072250e+05,  7.11548812e+05,  1.90419016e+05,\n'
 '         7.18013750e+05,  2.81226250e+04, -1.85341469e+05,\n'
 '        -4.10599438e+05, -1.03447138e+06,  1.15123781e+05,\n'
 '        -1.38556219e+05,  8.34288500e+05,  1.87965638e+06,\n'
 '         7.36396125e+05, -1.14455488e+06, -1.75172225e+06,\n'
 '         1.29651175e+06, -2.87067938e+05,  1.14876450e+06,\n'
 '        -1.27298050e+06, -1.89880700e+06, -1.02478125e+06,\n'
 '         1.38469375e+05,  1.40147575e+06, -9.92786250e+04,\n'
 '        -8.86078125e+05,  6.65360000e+05, -8.45145859e+04,\n'
 '        -1.10961625e+06,  9.81906250e+02, -2.43169750e+06,\n'
 '        -6.07323750e+04,  7.41744625e+05,  6.27162875e+05,\n'
 '         6.90426875e+05, -6.65065500e+05, -1.25744227e+05,\n'
 '        -4.63279875e+05, -1.77754900e+06, -1.14409725e+06,\n'
 '         2.83884350e+06, -8.80532250e+05, -1.79509062e+04,\n'
 '         1.42623100e+06,  9.63179750e+05, -1.49789281e+05,\n'
 '         2.58699625e+05,  7.41122438e+05, -1.00780406e+05,\n'
 '         9.43751562e+05,  2.78712219e+05, -5.66384500e+05,\n'
 '         8.51607000e+05, -4.17939281e+05,  2.04964812e+06,\n'
 '        -1.27530225e+06, -1.51796766e+05,  8.81106438e+05,\n'
 '        -1.85589062e+06, -4.97040000e+04,  1.10640550e+06,\n'
 '        -3.45326000e+05,  9.22209938e+05, -5.92255625e+05,\n'
 '        -9.55250156e+04, -4.20828875e+05,  4.09085625e+05,\n'
 '        -2.51167312e+05, -2.06946900e+06, -5.04767656e+05,\n'
 '         1.64198300e+06, -4.41844438e+05, -1.33539862e+06,\n'
 '         6.86155375e+05,  2.58668281e+05,  5.54683875e+05,\n'
 '        -1.97989906e+05,  2.08384062e+05,  6.54425500e+05,\n'
 '         9.87235750e+05, -1.60004625e+06,  2.89886875e+05,\n'
 '        -2.58430188e+05, -2.94082719e+05, -3.41500625e+05,\n'
 '         1.15640109e+05, -1.89664656e+05,  2.60423750e+04,\n'
 '         1.12970600e+06,  9.44190750e+05, -8.03229375e+04,\n'
 '         2.60295200e+06, -5.91631688e+05, -1.75817531e+05,\n'
 '         4.82103031e+05,  8.09116250e+05,  5.03824000e+05,\n'
 '        -4.90722969e+04, -4.65868156e+05,  5.95284625e+05,\n'
 '         1.53564575e+06, -1.21619925e+06, -8.69501500e+05,\n'
 '        -3.59375000e+02, -8.46608000e+05, -2.79417312e+05,\n'
 '        -2.45593781e+05, -1.80836325e+06,  1.68405078e+05,\n'
 '        -2.22588375e+05, -2.05475000e+06,  1.36970750e+06,\n'
 '        -1.58228844e+05,  2.67517375e+05,  1.14470719e+05,\n'
 '         7.42186250e+04, -1.81706425e+06,  3.91238875e+05,\n'
 '         2.81112625e+05, -8.32407750e+05,  3.69332000e+05,\n'
 '         3.23586656e+05, -2.80490344e+05, -6.94508000e+05,\n'
 '         4.83826344e+05, -2.57957188e+04,  1.74150750e+06,\n'
 '         1.35422012e+06, -1.50275700e+06,  4.88439500e+05,\n'
 '         6.16506250e+03, -1.30266594e+05, -5.09530219e+05,\n'
 '         7.15355438e+05, -3.98390938e+05,  7.93547062e+05,\n'
 '        -1.80751250e+06,  8.78250125e+05,  4.69777688e+05,\n'
 '        -1.83360406e+05,  7.08120812e+05, -4.84203625e+05,\n'
 '         4.92976438e+05, -3.28051500e+05, -8.09442625e+05,\n'
 '         7.27692250e+05, -3.23854375e+05,  7.63650562e+05,\n'
 '        -1.59683312e+05, -1.10037150e+06,  1.44733875e+05,\n'
 '         5.46945000e+05,  3.79491938e+05,  4.44419375e+05,\n'
 '        -5.58450500e+05, -3.57176312e+05,  1.06404588e+06,\n'
 '        -2.43882688e+05,  3.88621938e+05,  4.63772656e+05,\n'
 '         9.35984938e+05,  1.48560050e+06,  6.91350750e+05,\n'
 '        -7.83550688e+05, -8.19669500e+05,  2.05209969e+05,\n'
 '        -1.60627450e+06, -1.04092825e+06, -6.89926062e+05,\n'
 '        -1.41397500e+05,  1.53248850e+06,  1.08181900e+06,\n'
 '         3.11664250e+05,  9.08805562e+05, -2.73078531e+05,\n'
 '         1.18030350e+06,  8.31276562e+05, -8.64831125e+05,\n'
 '         1.09099600e+06,  1.28692500e+04, -1.97078406e+05,\n'
 '         1.10279288e+06, -2.69902844e+05,  3.96835375e+05,\n'
 '         5.63026250e+04, -4.85499531e+05,  6.32211125e+05,\n'
 '        -4.70814750e+05,  3.86932625e+05, -3.82325844e+05,\n'
 '         8.37522438e+05,  5.83447812e+05, -5.57265750e+05,\n'
 '        -8.22703938e+05, -1.65165325e+06,  6.42328750e+05,\n'
 '         4.49685469e+05, -1.08129400e+06, -7.24248625e+05,\n'
 '        -2.42825438e+05,  9.91919062e+05, -6.29329125e+05,\n'
 '         7.92562375e+05, -9.85575812e+05, -1.31923775e+06,\n'
 '         3.28005000e+05,  2.70969188e+05, -1.32554512e+06,\n'
 '         7.39811625e+05, -1.23694800e+06, -1.34481138e+06,\n'
 '         9.24570250e+05, -5.13490688e+05, -9.10105312e+04,\n'
 '        -3.27271175e+06, -2.15588438e+05,  2.94406812e+05,\n'
 '        -7.63287750e+05,  1.31082688e+05, -6.79548500e+05,\n'
 '         2.41269125e+05, -3.86016875e+05,  1.66771025e+06,\n'
 '         1.25187450e+06, -1.91548712e+06,  1.33564925e+06,\n'
 '         3.74095188e+05, -7.45523750e+04,  7.16595000e+05,\n'
 '         1.47184800e+06, -1.39638262e+06, -2.33887200e+06,\n'
 '         9.71574375e+04, -6.13551375e+05,  1.31981525e+06,\n'
 '         5.00512500e+04, -1.60239062e+06,  4.79536844e+05,\n'
 '         1.79718312e+05,  1.32735250e+06, -3.05874625e+05,\n'
 '        -7.23177500e+04,  2.24126875e+05, -8.31605438e+05,\n'
 '        -5.46312312e+05,  6.34321250e+05, -6.27620875e+05,\n'
 '         5.48924750e+05,  3.45383938e+05, -7.46963188e+05,\n'
 '        -1.71722562e+05, -8.72640250e+05, -2.26451000e+05,\n'
 '        -1.60534275e+06,  4.82576906e+05, -1.32952750e+06,\n'
 '        -3.75886844e+05,  1.61469025e+06,  4.33128062e+05,\n'
 '        -2.97359812e+05, -1.28369425e+06,  1.32077969e+05,\n'
 '        -2.92991062e+05, -3.96946625e+05, -2.06103888e+06,\n'
 '         4.78384062e+05, -5.51025000e+03, -8.89984062e+05,\n'
 '        -1.36765150e+06, -1.11349225e+06, -1.61812609e+05,\n'
 '        -5.63377250e+05, -3.45013312e+05, -9.94385812e+05,\n'
 '        -9.97758062e+05,  3.91571219e+05, -2.89840703e+04,\n'
 '        -1.62468125e+06, -1.44332375e+06,  3.50700312e+05,\n'
 '        -2.72825625e+05, -2.09916625e+06,  9.68122000e+05,\n'
 '         3.23634500e+05,  6.52658750e+05, -1.60741100e+06,\n'
 '         1.38845300e+06, -4.00895812e+05,  9.43430375e+05,\n'
 '        -8.26248250e+05, -1.08385625e+05,  2.40802375e+05,\n'
 '         2.36581850e+06,  8.84457000e+05, -1.69188338e+06,\n'
 '        -8.63442750e+05, -9.87869438e+05,  4.88718125e+05,\n'
 '         1.67908734e+05,  9.27882750e+05,  5.31553375e+05,\n'
 '        -6.42792625e+05,  1.52400612e+06,  1.73610562e+05,\n'
 '        -6.85748750e+04,  1.42205275e+06, -4.81696500e+05,\n'
 '         6.42449125e+05,  2.70133000e+06,  1.21511900e+06,\n'
 '         1.71668438e+06,  3.54246219e+05, -7.74263375e+05,\n'
 '         5.44432938e+05,  7.39089625e+05,  1.97503925e+06,\n'
 '        -1.26119312e+05,  2.81289344e+05, -7.90381312e+05,\n'
 '         9.18298625e+05,  2.64789000e+05, -1.11664438e+05,\n'
 '        -9.17235250e+05, -1.57839550e+06,  1.55367375e+05,\n'
 '         1.66539844e+05,  5.48101125e+05, -2.40148850e+06,\n'
 '         1.35856175e+06]])')
'test_inceptionnet | batch_shape is: [1]'
'test_inceptionnet | logits.shape is: ivy.Shape(1, 1000)'
'||'
'test_inceptionnet | device is: cpu'
'test_inceptionnet | fw is: torch'
'test_inceptionnet | load_weights is: True'
'InceptionV3 | build | layer 1/22 built'
'InceptionV3 | build | layer 2/22 built'
'layer 3/22 built'
'InceptionV3 | build | layer 4/22 built'
'InceptionV3 | build | layer 5/22 built'
'InceptionV3 | build | layer 6/22 built'
'InceptionV3 | build | layer 7/22 built'
'InceptionV3 | build | layer 8/22 built'
'InceptionV3 | build | layer 9/22 built'
'InceptionV3 | build | layer 10/22 built'
'InceptionV3 | build | layer 11/22 built'
'InceptionV3 | build | layer 12/22 built'
'InceptionV3 | build | layer 13/22 built'
'InceptionV3 | build | layer 14/22 built'
'InceptionV3 | build | layer 15/22 built'
'InceptionV3 | build | layer 17/22 built'
'InceptionV3 | build | layer 18/22 built'
'InceptionV3 | build | layer 19/22 built'
'InceptionV3 | build | layer 20/22 built'
'InceptionV3 | build | layer 21/22 built'
'InceptionV3 | build | layer 22/22 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/4 built'
'layer 2/4 built'
'layer 3/4 built'
'layer 4/4 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/6 built'
'layer 2/6 built'
'layer 3/6 built'
'layer 4/6 built'
'layer 5/6 built'
'layer 6/6 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'inceptionNet_v3 | building InceptionV3 model | done 1/3'
'inceptionNet_v3 | clearning pretrained weights | done 2/3'
'inceptionNet_v3 | loading pretrained weights | done 3/3'
'InceptionV3 | forward | input data_format is:NCHW | done 1/27'
'InceptionV3 | forward | data_format is going to be used is:NCHW | done 1/27'
'InceptionV3 | forward | input shape is:ivy.Shape(1, 224, 224, 3) | done 1/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 224, 224, 3) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 111, 111, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 111, 111, 32) | done 2/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 111, 111, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 32) | done 3/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 109, 109, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 64) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 64) | done 4/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 54, 54, 64) | done 5/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 54, 54, 80) | done 3/3'
'InceptionV3 | forward | is:ivy.Shape(1, 54, 54, 80) | done 6/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 80) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 52, 52, 192) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 52, 52, 192) | done 7/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 192) | done 8/27'
'input shape is:ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 32) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 32)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 25, 25, 256) | done 9/27'
'input shape is:ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 10/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 11/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 384) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 96) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 96)'
'one 20/20, output shape is:ivy.Shape(1, 12, 12, 288)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 12/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 12, 12, 768) | done 13/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 14/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 15/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 16/27'
'v3 16/27, output shape is:ivy.Shape(1, 12, 12, 768)'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 5, 5, 192)'
'one 7/20, output shape is:ivy.Shape(1, 5, 5, 768)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 1280) | done 17/27'
'input shape is:ivy.Shape(1, 5, 5, 1280)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 18/27'
'input shape is:ivy.Shape(1, 5, 5, 2048)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 19/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 20/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 5, 5) | done 21/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 1, 1) | done 22/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 27/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 24/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 25/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048) | done 26/27'
'InceptionV3 | forward | fc | done 27/27'
('test_inceptionnet | logits is: ivy.array([[ 1.10079837e+00,  '
 '5.82810640e-01,  6.35860860e-02,\n'
 '         1.38589096e+00,  1.18092453e+00,  1.95910585e+00,\n'
 '         3.18808985e+00, -4.92748588e-01, -1.08493066e+00,\n'
 '        -2.17689300e+00, -2.11969614e+00, -5.61547637e-01,\n'
 '        -1.26153541e+00, -8.14655304e-01,  2.04840446e+00,\n'
 '         8.94948021e-02, -1.11840761e+00, -7.77897000e-01,\n'
 '        -3.72537255e-01, -6.30318403e-01, -7.98870921e-01,\n'
 '        -1.90385389e+00,  6.37630582e-01, -3.78376752e-01,\n'
 '        -8.54370534e-01, -1.06604564e+00, -1.95924997e+00,\n'
 '        -1.30104709e+00, -7.76799500e-01, -2.97492653e-01,\n'
 '         1.09308994e+00,  1.57658029e+00,  2.39470267e+00,\n'
 '        -2.58787036e-01,  3.73520851e-01, -3.75136614e-01,\n'
 '        -2.44621813e-01, -1.10067701e+00, -2.11079001e+00,\n'
 '         1.07408166e+00,  4.41958845e-01,  1.89741969e+00,\n'
 '         4.85191345e-02,  2.65856552e+00, -1.11544287e+00,\n'
 '        -2.78646558e-01, -8.54338646e-01, -1.09383255e-01,\n'
 '         8.66264701e-02,  8.31600279e-02, -9.25755203e-01,\n'
 '         1.07813096e+00, -8.20488572e-01, -2.28381777e+00,\n'
 '         6.50176048e-01,  1.24104977e+00, -1.48914242e+00,\n'
 '        -1.28443253e+00, -1.88989490e-02,  4.76905406e-02,\n'
 '         4.71644700e-02,  1.76648557e+00, -1.45270336e+00,\n'
 '        -1.75949073e+00, -1.10784042e+00, -8.01924467e-01,\n'
 '         2.75000274e-01,  1.56986237e+00,  1.84477687e-01,\n'
 '        -2.99120933e-01, -2.05065823e+00, -1.91070759e+00,\n'
 '        -1.89690101e+00, -1.26521814e+00,  2.24493146e-01,\n'
 '        -1.14875817e+00, -5.22896647e-01, -1.00125223e-02,\n'
 '        -1.38115180e+00,  3.70859534e-01, -2.04293394e+00,\n'
 '         1.10568190e+00, -3.61681849e-01, -6.49860263e-01,\n'
 '         2.70498633e+00, -2.77762198e+00, -1.40526915e+00,\n'
 '        -2.24966168e+00,  5.34365892e-01,  2.11036324e+00,\n'
 '         9.04120207e-02,  8.09936464e-01,  6.41345382e-01,\n'
 '        -6.02116585e-02, -1.38092542e+00, -6.97194755e-01,\n'
 '         1.09617621e-01, -1.04473972e+00, -2.30182695e+00,\n'
 '         3.54441643e-01, -6.47449940e-02,  8.63010958e-02,\n'
 '        -1.09240317e+00,  5.09093761e-01,  2.38480258e+00,\n'
 '        -1.12901688e+00, -1.83770513e+00, -1.52342808e+00,\n'
 '         1.15063167e+00,  1.29400873e+00, -7.40512550e-01,\n'
 '        -1.44029665e+00,  9.86519456e-01,  2.32879543e+00,\n'
 '        -7.53108859e-01, -1.61166763e+00, -2.17853212e+00,\n'
 '         1.23923778e-01, -2.64544487e+00, -3.01255017e-01,\n'
 '         5.08047342e-02, -2.30144358e+00, -7.95475364e-01,\n'
 '        -9.20547485e-01, -2.54545665e+00,  5.76740444e-01,\n'
 '         1.19795054e-01,  2.13112903e+00, -1.69913083e-01,\n'
 '        -4.66926754e-01,  3.52263972e-02, -1.33121699e-01,\n'
 '         2.78053141e+00, -1.88096333e+00, -5.05493700e-01,\n'
 '        -7.26589680e-01,  4.76938188e-01, -1.04807031e+00,\n'
 '        -1.62202787e+00, -1.77959335e+00, -3.55087042e+00,\n'
 '        -3.70178908e-01, -3.82300854e+00, -2.94559002e-01,\n'
 '         2.10064530e+00, -1.66506678e-01,  3.84781927e-01,\n'
 '         5.61319292e-01,  8.56359065e-01, -2.87158191e-01,\n'
 '        -2.90144539e+00,  1.34758759e+00,  3.29090548e+00,\n'
 '        -4.61361408e-01,  3.61609071e-01, -3.59665322e+00,\n'
 '        -1.35650969e+00,  4.38124275e+00, -1.71526647e+00,\n'
 '        -1.66656852e+00,  6.81495130e-01, -1.71194184e+00,\n'
 '        -1.90078163e+00, -3.97193223e-01, -2.10390836e-01,\n'
 '         1.07651241e-01, -8.35238814e-01, -5.78999579e-01,\n'
 '        -2.29351193e-01,  2.45479035e+00,  5.95144033e-01,\n'
 '        -6.15873337e-02, -1.68490136e+00,  2.74209678e-01,\n'
 '        -2.83805668e-01, -7.27290928e-01, -4.47735190e-01,\n'
 '         5.61212748e-03,  7.32492447e-01, -6.25224039e-02,\n'
 '        -5.98090053e-01,  9.93153810e-01,  7.87216961e-01,\n'
 '        -5.11707812e-02,  9.18597221e-01,  2.70549536e-01,\n'
 '         3.24193984e-01, -5.46670109e-02, -1.39694047e+00,\n'
 '        -2.46599746e+00, -8.02958488e-01, -2.74589300e-01,\n'
 '        -1.13379192e+00, -2.28160405e+00, -2.99452305e+00,\n'
 '         3.53640094e-02, -1.88002694e+00,  5.94747662e-01,\n'
 '        -3.41135323e-01,  1.41938674e+00, -2.20216775e+00,\n'
 '        -3.62313962e+00, -1.14516449e+00,  5.33101845e+00,\n'
 '        -4.66270208e+00, -1.89794004e+00, -1.27004743e+00,\n'
 '        -5.15351832e-01, -2.24983048e+00,  7.69403100e-01,\n'
 '         5.65729022e-01, -1.75405323e-01, -8.46040726e-01,\n'
 '         4.73525613e-01,  1.41606128e+00, -1.81770527e+00,\n'
 '         2.36960030e+00,  5.57868361e-01,  8.81153226e-01,\n'
 '        -4.62945128e+00, -6.10727668e-01,  8.36280823e-01,\n'
 '         3.86260057e+00,  2.90700293e+00,  4.79460144e+00,\n'
 '        -1.22080684e+00, -3.52782935e-01, -3.74909854e+00,\n'
 '        -1.33961350e-01,  1.02786732e+00,  1.48959827e+00,\n'
 '         2.13382196e+00,  3.12046576e+00,  1.48001325e+00,\n'
 '        -6.72897220e-01, -7.32329845e-01, -1.55631483e-01,\n'
 '         8.78765285e-01, -3.40525103e+00, -7.67973304e-01,\n'
 '        -6.05808377e-01, -3.59404981e-02,  1.05588985e+00,\n'
 '        -2.00711489e+00, -8.15069556e-01, -2.82921881e-01,\n'
 '         1.21739924e+00,  4.25306141e-01,  6.80540228e+00,\n'
 '         5.40561819e+00,  3.94473648e+00,  9.92656291e-01,\n'
 '         5.84970713e-01, -1.62814116e+00, -1.64084780e+00,\n'
 '        -1.51508927e-01,  1.50397479e+00,  8.03037262e+00,\n'
 '         2.01120358e+01,  6.27968407e+00,  4.44560814e+00,\n'
 '         5.54391956e+00, -6.13156915e-01, -2.71343756e+00,\n'
 '        -5.72985411e-01,  5.85789979e-01, -5.85628569e-01,\n'
 '         2.05459571e+00, -1.20516181e+00,  2.19039845e+00,\n'
 '         1.18867950e+01, -2.64917564e+00,  2.00480104e-01,\n'
 '         6.24827743e-02,  7.00120449e-01, -2.75432110e+00,\n'
 '        -4.38287050e-01,  1.14294398e+00, -1.36358249e+00,\n'
 '         1.11404877e+01,  1.39677823e+00,  5.05468488e-01,\n'
 '         4.34355348e-01,  4.17906189e+00, -8.11078429e-01,\n'
 '        -3.51353168e-01, -2.65562892e+00,  2.61202478e+00,\n'
 '        -1.93660140e-01, -1.30652338e-01, -2.61623526e+00,\n'
 '         6.01027012e-01, -3.65756452e-01, -1.61317456e+00,\n'
 '        -2.42200661e+00, -2.75899434e+00,  2.18365049e+00,\n'
 '         6.12375975e-01, -2.90255785e-01, -6.45487606e-02,\n'
 '        -2.21917257e-01,  6.78231359e-01,  1.07452929e+00,\n'
 '        -1.03825283e+00,  1.11160052e+00,  2.47036427e-01,\n'
 '         7.30825782e-01,  9.49857891e-01, -2.28392720e-01,\n'
 '         6.59163535e-01, -8.49203646e-01,  6.75728559e-01,\n'
 '        -4.28149581e-01, -7.53053844e-01,  3.05675864e-01,\n'
 '         2.32736254e+00, -5.77129602e-01,  1.59229040e+00,\n'
 '        -2.44801909e-01, -1.10644472e+00,  1.25565135e+00,\n'
 '        -6.62736654e-01,  5.02985358e-01,  1.48558676e+00,\n'
 '        -2.36905384e+00,  4.76135015e-02,  1.38168311e+00,\n'
 '         1.81297421e+00,  5.25083244e-02, -2.02520514e+00,\n'
 '        -1.09242356e+00,  2.92473865e+00,  2.99676561e+00,\n'
 '        -2.06347156e+00, -7.57832825e-01, -2.15779090e+00,\n'
 '        -2.46296072e+00, -2.40381777e-01,  1.31891751e+00,\n'
 '        -1.28791714e+00,  4.27050650e-01, -1.32521129e+00,\n'
 '        -1.48477054e+00,  1.26621783e-01, -1.95450902e+00,\n'
 '         6.84813857e-01,  1.10245490e+00,  1.24213111e+00,\n'
 '         7.03808427e-01, -3.99421751e-01, -8.70938480e-01,\n'
 '        -5.85948169e-01, -1.39786458e+00,  1.55096203e-02,\n'
 '        -7.61395395e-01,  2.68439245e+00,  2.33549738e+00,\n'
 '         3.87053311e-01,  8.29642713e-01,  3.40423167e-01,\n'
 '        -2.52062416e+00,  2.86344349e-01, -8.76046181e-01,\n'
 '         1.46228445e+00, -1.84491241e+00, -2.99308300e+00,\n'
 '        -3.61477232e+00, -1.84800017e+00, -1.34776103e+00,\n'
 '        -1.50774074e+00, -1.79778427e-01, -1.26325381e+00,\n'
 '        -1.12465548e+00, -9.11033332e-01, -7.29988933e-01,\n'
 '        -1.47072029e+00, -2.04258633e+00, -6.99455500e-01,\n'
 '        -1.42820966e+00, -1.77307284e+00, -2.39899969e+00,\n'
 '        -2.47921205e+00, -2.15382624e+00, -1.13109183e+00,\n'
 '        -1.61186785e-01, -1.09455597e+00, -1.47532976e+00,\n'
 '        -1.08163011e+00, -1.21352816e+00, -3.62896323e-01,\n'
 '        -1.79100275e+00,  1.10436350e-01,  1.25226700e+00,\n'
 '         2.40276694e+00,  1.60103345e+00,  7.09900379e-01,\n'
 '         1.97601366e+00, -5.38638473e-01,  1.66016471e+00,\n'
 '         2.78936535e-01,  4.41969693e-01,  9.61387157e-01,\n'
 '         1.65925741e+00,  8.26887637e-02,  1.14076662e+00,\n'
 '        -4.01441306e-01, -9.72746611e-01,  1.56452671e-01,\n'
 '         1.33729363e+00, -1.22759461e+00, -6.94466710e-01,\n'
 '        -4.29171681e-01, -4.64606094e+00, -4.92052361e-02,\n'
 '         3.59477520e-01, -1.34476924e+00, -5.65722883e-01,\n'
 '        -5.28094053e-01, -1.51046085e+00,  4.84704375e-02,\n'
 '         1.36155054e-01, -3.12947059e+00, -2.27901888e+00,\n'
 '        -3.61316681e-01,  5.57900906e-01,  2.48298311e+00,\n'
 '         1.10946596e+00, -1.90021133e+00, -4.82108831e-01,\n'
 '        -3.00130749e+00, -7.74858475e-01,  5.71005344e-01,\n'
 '         2.37959003e+00, -1.02101564e+00, -1.01785672e+00,\n'
 '        -9.92900193e-01, -5.09303570e-01, -1.65629947e+00,\n'
 '        -5.66403091e-01,  1.36042058e+00,  1.08406258e+00,\n'
 '         2.92712241e-01,  6.76672399e-01, -5.41553855e-01,\n'
 '         3.21060181e-01,  7.37130404e-01,  4.73676384e-01,\n'
 '        -1.99481905e-01,  1.40889549e+00,  6.47410214e-01,\n'
 '         7.56222606e-01,  1.92982602e+00,  1.11925924e+00,\n'
 '        -5.13196945e-01,  2.54704326e-01,  3.33539009e-01,\n'
 '         1.07028246e-01,  1.09175956e+00,  1.92877090e+00,\n'
 '         2.32902241e+00,  1.99723840e-02,  1.47590923e+00,\n'
 '         1.37263668e+00,  1.08762300e+00,  9.72374260e-01,\n'
 '        -1.55749571e+00, -8.38721752e-01, -1.27624834e+00,\n'
 '         1.34429371e+00,  8.59265566e-01, -3.04178774e-01,\n'
 '        -1.12514400e+00, -2.23784402e-01,  2.37183547e+00,\n'
 '        -3.44933867e-01,  2.58972734e-01,  5.67954445e+00,\n'
 '        -6.23964667e-01,  2.38294101e+00, -4.74979639e-01,\n'
 '        -1.34902072e+00,  3.68440479e-01, -2.11583352e+00,\n'
 '         8.04986715e-01, -1.54025352e+00, -1.92438865e+00,\n'
 '         7.30427563e-01,  7.41365850e-02, -2.92883336e-01,\n'
 '        -9.72647518e-02, -1.20708942e-01,  1.13664961e+00,\n'
 '        -3.16696942e-01, -1.54030383e+00,  1.52668744e-01,\n'
 '         3.48368347e-01,  6.32280707e-02, -2.27012706e+00,\n'
 '        -3.19648922e-01,  5.60162842e-01, -1.04960573e+00,\n'
 '         1.03061640e+00, -1.30078554e+00, -7.58164585e-01,\n'
 '        -8.58479142e-01,  1.42433024e+00,  2.01882386e+00,\n'
 '        -1.82998395e+00,  5.81181645e-01,  6.65145636e-01,\n'
 '        -4.30100620e-01,  6.65777922e-01,  8.83215785e-01,\n'
 '         2.13715720e+00,  3.30096304e-01,  8.17359239e-02,\n'
 '        -1.10497385e-01, -1.03622138e+00, -2.40951943e+00,\n'
 '        -1.74424553e+00, -4.05893982e-01,  1.06980026e+00,\n'
 '        -1.77170813e-01, -2.35547113e+00,  5.29956877e-01,\n'
 '        -6.45473003e-02,  4.84767497e-01, -3.54573786e-01,\n'
 '         4.34473306e-02, -2.31013584e+00,  6.73582435e-01,\n'
 '        -1.07105589e+00, -4.29302812e-01, -6.07451499e-01,\n'
 '        -2.07869113e-01, -4.10193741e-01, -1.41175628e+00,\n'
 '         2.91748476e+00, -2.56506413e-01,  5.59897542e-01,\n'
 '        -2.21379089e+00,  3.44188213e+00,  2.11170054e+00,\n'
 '         3.08098495e-01,  6.94614291e-01, -1.70566845e+00,\n'
 '         3.04360294e+00,  8.74156892e-01, -2.36912298e+00,\n'
 '        -5.28476119e-01,  1.45051801e+00, -1.94341540e-01,\n'
 '         7.74188936e-02, -3.42707515e+00, -3.13591123e-01,\n'
 '        -5.91670454e-01, -1.04762316e+00,  1.77670193e+00,\n'
 '         4.47157025e-01, -1.04829383e+00, -6.40869260e-01,\n'
 '        -8.11574608e-02,  2.63478017e+00,  1.59642482e+00,\n'
 '         7.06337631e-01, -2.72707582e-01,  9.03036952e-01,\n'
 '        -1.42915153e+00, -6.38622940e-02, -1.54145229e+00,\n'
 '         8.30624163e-01, -9.64260459e-01,  1.25555873e+00,\n'
 '         8.15927506e-01, -1.66363740e+00,  6.37928173e-02,\n'
 '         1.82024157e+00,  3.03575396e-01,  2.91197598e-01,\n'
 '        -6.32065535e-01,  9.83666062e-01, -4.53327745e-01,\n'
 '         1.02248120e+00, -2.94799030e-01,  2.34460354e+00,\n'
 '         6.40648365e-01, -9.06214654e-01,  2.80122757e+00,\n'
 '        -2.58813143e-01, -3.13616693e-02, -5.03836870e-02,\n'
 '        -6.15033507e-01,  4.03028727e+00,  6.07383609e-01,\n'
 '         2.19277906e+00, -1.48135877e+00,  1.58620119e+00,\n'
 '         1.17215037e+00, -2.66828704e+00,  6.12738788e-01,\n'
 '        -1.53103364e+00, -2.68220186e+00, -3.14046073e+00,\n'
 '        -5.80406964e-01,  1.61667001e+00, -2.21675873e-01,\n'
 '         3.19008660e+00,  1.81652689e+00,  1.58098996e+00,\n'
 '        -1.79481149e+00,  1.35692000e+00, -1.39296055e-03,\n'
 '        -9.17414188e-01, -2.10059002e-01,  3.02492321e-01,\n'
 '        -1.18854284e+00, -2.05570984e+00,  6.28356457e-01,\n'
 '         9.13809717e-01, -3.50356996e-01, -8.74359667e-01,\n'
 '         2.49877071e+00,  6.89167500e-01,  8.19739759e-01,\n'
 '         2.12945008e+00, -3.92022014e-01, -8.78175736e-01,\n'
 '        -7.96668053e-01,  1.41109300e+00, -2.69993961e-01,\n'
 '        -1.68959189e+00, -8.69656205e-01,  4.97193634e-02,\n'
 '         7.08149195e-01, -1.60514867e+00, -2.79936981e+00,\n'
 '         2.14220834e+00, -1.51102841e+00, -2.35946631e+00,\n'
 '        -6.96618557e-01, -1.65815085e-01,  2.55946088e+00,\n'
 '        -2.54942775e-01,  1.07281983e+00,  2.93709725e-01,\n'
 '         1.22135282e+00,  2.14849567e+00, -1.12717140e+00,\n'
 '        -1.35275126e-01,  1.03116763e+00, -1.64144397e-01,\n'
 '        -6.52685940e-01,  1.94936943e+00, -2.10693526e+00,\n'
 '        -1.66185308e+00, -2.41508985e+00,  2.77284831e-01,\n'
 '        -2.40738750e+00, -5.43731451e-01, -1.08545214e-01,\n'
 '        -8.80117834e-01,  9.54137802e-01,  4.46817428e-01,\n'
 '        -1.36286771e+00,  1.27792931e+00,  5.97999334e-01,\n'
 '         5.56210518e-01, -2.38211721e-01, -2.54811907e+00,\n'
 '         1.95531058e+00,  1.38687110e+00, -5.20770252e-01,\n'
 '         1.65050948e+00,  1.13785696e+00,  1.63600236e-01,\n'
 '         1.65217853e+00,  4.66672182e-02, -2.12217403e+00,\n'
 '         5.32359958e-01,  1.11352158e+00, -1.15268064e+00,\n'
 '        -1.19275320e+00,  2.37218928e+00,  1.20681310e+00,\n'
 '         6.50460362e-01, -8.62704396e-01, -2.01649165e+00,\n'
 '        -7.04662979e-01, -1.54674614e+00, -5.31802654e-01,\n'
 '        -1.63783103e-01, -7.28414059e-01,  4.72022593e-01,\n'
 '        -2.79184580e+00, -7.87433505e-01,  3.13976437e-01,\n'
 '         1.96580744e+00, -3.68086696e-02,  3.82095754e-01,\n'
 '         2.14463145e-01, -2.41024208e+00, -4.05624718e-01,\n'
 '        -3.67272520e+00, -5.92733085e-01, -3.07731771e+00,\n'
 '        -3.58082485e+00,  4.64340597e-01,  1.20620584e+00,\n'
 '        -7.43248105e-01, -1.28451026e+00,  1.45823032e-01,\n'
 '         3.55124760e+00,  3.57944697e-01, -1.72274268e+00,\n'
 '         5.46682417e-01,  1.51155412e+00,  6.81223154e-01,\n'
 '        -3.76256824e-01, -4.02245998e-01,  2.04084897e+00,\n'
 '         1.13854021e-01,  3.65435868e-01,  1.95415914e-02,\n'
 '         1.40726054e+00,  1.84451056e+00,  9.45338607e-01,\n'
 '        -3.21732223e-01, -1.14517236e+00,  1.64081347e+00,\n'
 '        -1.63194108e+00, -1.85344148e+00,  4.89080459e-01,\n'
 '         1.91180259e-01, -3.76015067e-01, -1.30764604e+00,\n'
 '        -4.92151171e-01, -1.60089099e+00,  1.04654789e+00,\n'
 '        -1.29060104e-01, -2.65099823e-01,  4.07969892e-01,\n'
 '         1.24870122e+00, -1.05767059e+00, -2.20410037e+00,\n'
 '        -1.86930180e+00,  3.39193553e-01,  1.49970436e+00,\n'
 '        -2.39180398e+00, -7.39521444e-01,  2.21668482e+00,\n'
 '        -1.81948435e+00, -2.02968621e+00, -1.50176322e+00,\n'
 '        -1.33106601e+00, -2.71181893e+00, -4.43313658e-01,\n'
 '        -2.63629818e+00, -1.56219053e+00,  2.06778812e+00,\n'
 '        -6.30928576e-01, -2.38324714e+00,  5.89566052e-01,\n'
 '        -1.36250866e+00,  9.83606339e-01,  5.38915634e-01,\n'
 '        -9.34832811e-01, -1.01588988e+00,  3.35548788e-01,\n'
 '         8.75673473e-01,  5.73570669e-01, -1.15030682e+00,\n'
 '        -1.66930044e+00,  1.16823405e-01, -1.05174172e+00,\n'
 '        -1.12973476e+00,  1.13442254e+00,  2.28393173e+00,\n'
 '        -3.16271424e-01, -1.24512315e+00, -5.42152762e-01,\n'
 '         2.02111244e+00, -1.09414327e+00,  2.25721097e+00,\n'
 '        -7.15916276e-01, -3.93544584e-02, -1.59838331e+00,\n'
 '         1.57062793e+00,  5.17960131e-01,  9.14676070e-01,\n'
 '        -3.32330346e-01, -3.14190745e-01,  1.04480398e+00,\n'
 '         2.06766462e+00, -4.12052274e-02, -4.08673733e-02,\n'
 '        -2.14292622e+00, -9.49303329e-01, -2.89101601e+00,\n'
 '        -3.32521021e-01,  3.28480273e-01,  1.67487955e+00,\n'
 '         9.77198780e-02,  2.70241046e+00, -3.68729264e-01,\n'
 '        -2.15622735e+00, -1.40731835e+00, -2.30988646e+00,\n'
 '        -2.32168508e+00,  1.88825250e+00,  1.39572382e+00,\n'
 '         1.20604980e+00, -1.78504503e+00,  8.36841822e-01,\n'
 '         2.24908853e+00, -2.36177623e-01,  5.68261206e-01,\n'
 '         3.14576483e+00, -3.36048722e-01, -1.05658483e+00,\n'
 '         1.76971388e+00,  1.72940648e+00, -2.65214539e+00,\n'
 '         2.49096680e+00,  6.16220176e-01,  1.05202866e+00,\n'
 '         3.49111378e-01,  3.40735704e-01, -2.25921661e-01,\n'
 '         3.12870669e+00, -9.15299296e-01,  7.45492637e-01,\n'
 '        -1.43738556e+00,  2.32916737e+00, -8.10409069e-01,\n'
 '        -3.13881350e+00, -1.80485106e+00,  6.98682010e-01,\n'
 '         1.57760704e+00, -6.50001407e-01, -9.11847889e-01,\n'
 '        -2.11864010e-01,  1.37841845e+00, -2.12845516e+00,\n'
 '         7.26240575e-01, -4.59303796e-01,  9.88786519e-01,\n'
 '        -1.80711675e+00, -5.45093119e-01,  6.06070817e-01,\n'
 '         4.11400020e-01,  3.06579685e+00, -3.46683085e-01,\n'
 '        -8.27358514e-02,  7.68455505e-01,  1.77019095e+00,\n'
 '        -1.72313201e+00, -2.33525181e+00,  2.85466957e+00,\n'
 '         4.29103375e-01, -8.07580710e-01,  2.99673200e-01,\n'
 '         1.76731169e+00, -1.79252195e+00,  6.03990555e-01,\n'
 '        -2.40145540e+00, -1.30504096e+00, -1.52940023e+00,\n'
 '         5.41059613e-01, -3.34722090e+00, -1.97876707e-01,\n'
 '         4.24837887e-01, -1.35771954e+00,  1.67504609e+00,\n'
 '         1.00196731e+00, -1.73918486e+00, -5.85019588e-05,\n'
 '        -1.12773192e+00, -3.89398480e+00,  2.25081992e+00,\n'
 '        -1.95398405e-01, -2.12274575e+00,  4.85183388e-01,\n'
 '        -9.15358722e-01,  4.57978219e-01, -2.01775014e-01,\n'
 '        -3.75649750e-01, -8.16074252e-01,  6.86719537e-01,\n'
 '        -4.01576251e-01,  2.16475821e+00, -2.81134796e+00,\n'
 '         2.97220278e+00, -2.03552628e+00,  1.50225460e-01,\n'
 '        -1.23882806e+00, -6.75777554e-01,  3.26289272e+00,\n'
 '        -1.53989494e+00,  1.28401053e+00,  1.67739510e+00,\n'
 '        -5.98051429e-01, -1.50491989e+00, -2.33605057e-01,\n'
 '         8.88940930e-01, -3.52948666e-01, -1.62654066e+00,\n'
 '        -1.04817939e+00,  1.56361544e+00, -1.58860123e+00,\n'
 '         1.44339597e+00,  1.26915383e+00, -9.05926466e-01,\n'
 '        -9.78148580e-01,  1.82693934e+00,  1.38664737e-01,\n'
 '         1.08012235e+00,  2.36203885e+00, -6.65424705e-01,\n'
 '         7.56181627e-02, -9.67393398e-01, -6.83912814e-01,\n'
 '         1.27685738e+00,  2.48147893e+00, -1.77861601e-01,\n'
 '        -1.31936216e+00,  4.84531164e-01, -1.07366607e-01,\n'
 '        -9.17316854e-01,  1.63451254e+00,  2.61630684e-01,\n'
 '         1.66100264e-03, -1.82320654e+00, -4.62846339e-01,\n'
 '        -2.15712309e+00, -2.87385035e+00, -1.12978935e+00,\n'
 '        -1.09925941e-02,  5.20473599e-01,  3.79427701e-01,\n'
 '        -6.51563406e-02,  9.67341125e-01,  6.42304421e-01,\n'
 '         1.25870585e+00, -1.58055425e-02,  2.10273624e+00,\n'
 '         2.62832832e+00,  2.13286683e-01, -1.62923646e+00,\n'
 '        -1.41577876e+00,  5.48922539e-01,  1.40105343e+00,\n'
 '         2.26424646e+00,  2.07596636e+00,  2.76668966e-01,\n'
 '        -1.44388765e-01,  2.58212614e+00,  1.96019864e+00,\n'
 '         1.43477309e+00, -1.04208469e-01,  7.86862016e-01,\n'
 '        -5.52916408e-01,  2.65116882e+00,  1.03858793e+00,\n'
 '        -1.36354899e+00,  9.82849598e-01, -1.89113283e+00,\n'
 '         1.31364036e+00,  1.69800663e+00,  3.67005855e-01,\n'
 '        -1.20994854e+00, -1.38660324e+00,  1.00919974e+00,\n'
 '         6.02701485e-01,  3.19684535e-01,  9.31622744e-01,\n'
 '        -5.78337252e-01, -3.15051937e+00,  2.11172104e+00,\n'
 '         4.63761687e-02,  7.70890713e-01, -6.79943562e-02,\n'
 '        -2.99373865e+00, -4.54393029e-01,  1.25417098e-01,\n'
 '        -1.77063370e+00, -4.06183362e-01,  7.51385152e-01,\n'
 '         1.09082604e+00, -1.62520719e+00,  8.62067819e-01,\n'
 '         2.07134277e-01, -7.00737774e-01, -2.62226653e+00,\n'
 '        -1.55252624e+00, -2.96666241e+00, -2.31072068e+00,\n'
 '        -1.51206410e+00, -1.79168177e+00, -3.19102019e-01,\n'
 '         9.63101387e-02]])')
'test_inceptionnet | batch_shape is: [1]'
'test_inceptionnet | logits.shape is: ivy.Shape(1, 1000)'
'||'
'test_inceptionnet | indices_test | true_indices is: [258 270 279]'
'test_inceptionnet | indices_test | calc_indices is: [258 270 279]'
