'BasicConv2d | Test | input shape is: ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 128) | done 3/3'
'BasicConv2d | Test | Test Successfull!'
'||'
'InceptionAux | random_test_tensor shape is: ivy.Shape(1, 17, 17, 768)'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'InceptionAux | input shape is:ivy.Shape(1, 17, 17, 768)'
'InceptionAux | done 1/8, output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 128) | done 3/3'
'InceptionAux | done 2/8'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 1, 1, 768) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 1, 1, 768) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 1, 1, 768) | done 3/3'
'InceptionAux | done 3/8'
'InceptionAux | input shape to adaptive_avg_pool2d is:ivy.Shape(1, 1, 1, 768)'
('InceptionAux | permuted input shape to adaptive_avg_pool2d is:ivy.Shape(1, '
 '768, 1, 1)')
('InceptionAux | output shape from adaptive_avg_pool2d is:ivy.Shape(1, 768, 1, '
 '1)')
('InceptionAux | permuted output shape from adaptive_avg_pool2d '
 'is:ivy.Shape(1, 1, 1, 768)')
'InceptionAux | done 4/8'
'InceptionAux | done 5/8'
'InceptionAux | done 8/8'
'InceptionAux | Test Successfull!'
'random_test_tensor shape is: ivy.Shape(1, 35, 35, 192)'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'input shape is:ivy.Shape(1, 35, 35, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 35, 35, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 35, 35, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 35, 35, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 35, 35, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 35, 35, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 35, 35, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 35, 35, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 35, 35, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 35, 35, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 35, 35, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 35, 35, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 35, 35, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 35, 35, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 35, 35, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 35, 35, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 35, 35, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 35, 35, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 35, 35, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 35, 35, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 35, 35, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 35, 35, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 35, 35, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 35, 35, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 35, 35, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 35, 35, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 35, 35, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 35, 35, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 35, 35, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 35, 35, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 35, 35, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 35, 35, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 35, 35, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 35, 35, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 35, 35, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 35, 35, 32) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 35, 35, 32)'
'InceptionA | outputs 20/20'
'Test Successfull!'
'random_test_tensor shape is: ivy.Shape(1, 35, 35, 288)'
'layer 1/4 built'
'layer 2/4 built'
'layer 3/4 built'
'layer 4/4 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'input shape is:ivy.Shape(1, 35, 35, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 35, 35, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 17, 17, 384) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 17, 17, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 35, 35, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 35, 35, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 35, 35, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 35, 35, 64) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 35, 35, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 35, 35, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 35, 35, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 35, 35, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 35, 35, 96) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 35, 35, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 35, 35, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 17, 17, 96) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 17, 17, 96)'
'one 20/20, output shape is:ivy.Shape(1, 17, 17, 288)'
'one 20/20'
'Test Successfull!'
'random_test_tensor shape is: ivy.Shape(1, 17, 17, 768)'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'input shape is:ivy.Shape(1, 17, 17, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 17, 17, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 17, 17, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 17, 17, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 17, 17, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 17, 17, 128) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 17, 17, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 17, 17, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 17, 17, 128) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 17, 17, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 17, 17, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 17, 17, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 17, 17, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 17, 17, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 17, 17, 128) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 17, 17, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 17, 17, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 17, 17, 128) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 17, 17, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 17, 17, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 17, 17, 128) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 17, 17, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 17, 17, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 17, 17, 128) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 17, 17, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 17, 17, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 17, 17, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 17, 17, 192)'
'one 10/20, output shape is:ivy.Shape(1, 17, 17, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 17, 17, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 17, 17, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 17, 17, 192)'
'one 20/20'
'Test Successfull!'
'random_test_tensor shape is: ivy.Shape(1, 17, 17, 768)'
'layer 1/6 built'
'layer 2/6 built'
'layer 3/6 built'
'layer 4/6 built'
'layer 5/6 built'
'layer 6/6 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'input shape is:ivy.Shape(1, 17, 17, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 17, 17, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 17, 17, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 17, 17, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 17, 17, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 8, 8, 320) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 8, 8, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 17, 17, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 17, 17, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 17, 17, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 17, 17, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 17, 17, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 17, 17, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 17, 17, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 17, 17, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 17, 17, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 17, 17, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 8, 8, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 8, 8, 192)'
'one 7/20, output shape is:ivy.Shape(1, 8, 8, 768)'
'one 20/20'
'Test Successfull!'
'random_test_tensor shape is: ivy.Shape(1, 8, 8, 1280)'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'input shape is:ivy.Shape(1, 8, 8, 1280)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 8, 8, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 8, 8, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 8, 8, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 8, 8, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 8, 8, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 8, 8, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 8, 8, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 8, 8, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 8, 8, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 8, 8, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 8, 8, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 8, 8, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 8, 8, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 8, 8, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 8, 8, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 8, 8, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 8, 8, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 8, 8, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 8, 8, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 8, 8, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 8, 8, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 8, 8, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 8, 8, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 8, 8, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 8, 8, 192)'
'20/20'
'Test Successfull!'
'test_inceptionnet | device is: cpu'
'test_inceptionnet | fw is: numpy'
'test_inceptionnet | load_weights is: False'
'InceptionV3 | build | layer 1/22 built'
'InceptionV3 | build | layer 2/22 built'
'layer 3/22 built'
'InceptionV3 | build | layer 4/22 built'
'InceptionV3 | build | layer 5/22 built'
'InceptionV3 | build | layer 6/22 built'
'InceptionV3 | build | layer 7/22 built'
'InceptionV3 | build | layer 8/22 built'
'InceptionV3 | build | layer 9/22 built'
'InceptionV3 | build | layer 10/22 built'
'InceptionV3 | build | layer 11/22 built'
'InceptionV3 | build | layer 12/22 built'
'InceptionV3 | build | layer 13/22 built'
'InceptionV3 | build | layer 14/22 built'
'InceptionV3 | build | layer 15/22 built'
'InceptionV3 | build | layer 17/22 built'
'InceptionV3 | build | layer 18/22 built'
'InceptionV3 | build | layer 19/22 built'
'InceptionV3 | build | layer 20/22 built'
'InceptionV3 | build | layer 21/22 built'
'InceptionV3 | build | layer 22/22 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/4 built'
'layer 2/4 built'
'layer 3/4 built'
'layer 4/4 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/6 built'
'layer 2/6 built'
'layer 3/6 built'
'layer 4/6 built'
'layer 5/6 built'
'layer 6/6 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'inceptionNet_v3 | building InceptionV3 model | done 1/3'
'InceptionV3 | forward | input data_format is:NHWC | done 1/27'
'InceptionV3 | forward | data_format is going to be used is:NHWC | done 1/27'
'InceptionV3 | forward | input shape is:ivy.Shape(1, 224, 224, 3) | done 1/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 224, 224, 3) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 111, 111, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 111, 111, 32) | done 2/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 111, 111, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 32) | done 3/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 109, 109, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 64) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 64) | done 4/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 54, 54, 64) | done 5/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 54, 54, 80) | done 3/3'
'InceptionV3 | forward | is:ivy.Shape(1, 54, 54, 80) | done 6/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 80) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 52, 52, 192) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 52, 52, 192) | done 7/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 192) | done 8/27'
'input shape is:ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 32) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 32)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 25, 25, 256) | done 9/27'
'input shape is:ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 10/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 11/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 384) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 96) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 96)'
'one 20/20, output shape is:ivy.Shape(1, 12, 12, 288)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 12/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 12, 12, 768) | done 13/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 14/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 15/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 16/27'
'v3 16/27, output shape is:ivy.Shape(1, 12, 12, 768)'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 5, 5, 192)'
'one 7/20, output shape is:ivy.Shape(1, 5, 5, 768)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 1280) | done 17/27'
'input shape is:ivy.Shape(1, 5, 5, 1280)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 18/27'
'input shape is:ivy.Shape(1, 5, 5, 2048)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 19/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 20/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 5, 5) | done 21/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 1, 1) | done 22/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 27/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 24/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 25/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048) | done 26/27'
'InceptionV3 | forward | fc | done 27/27'
('test_inceptionnet | logits is: ivy.array([[ 3.33104469e+05, -2.78134625e+05, '
 '-3.02068125e+05,\n'
 '        -6.44246062e+05,  1.63815038e+06, -1.08190900e+06,\n'
 '        -1.04772369e+06, -1.47439062e+04, -9.45594062e+04,\n'
 '         7.60384688e+04, -1.01944419e+06,  5.04944375e+04,\n'
 '         7.12166438e+05, -3.35667344e+04, -6.08523594e+04,\n'
 '        -3.00073250e+05, -9.93177625e+05,  5.54865188e+05,\n'
 '        -1.37396281e+05, -5.98018125e+04, -8.90757125e+05,\n'
 '         1.09246188e+05,  8.50209375e+04,  3.63882531e+05,\n'
 '        -2.24941775e+06, -1.32286450e+06,  1.09996875e+06,\n'
 '        -3.75184188e+05,  7.49862875e+05,  2.07343438e+05,\n'
 '         2.28290312e+05,  1.61617344e+05,  5.04193656e+05,\n'
 '        -5.23767250e+05, -1.72507469e+05,  3.77915125e+05,\n'
 '        -1.24362950e+06, -1.25520031e+05,  1.43845219e+05,\n'
 '        -7.27694688e+04, -6.89886000e+05, -5.31983000e+05,\n'
 '         1.01919731e+06,  1.02207875e+05, -1.34200075e+06,\n'
 '         4.74598438e+05,  6.04600125e+05, -9.96824125e+05,\n'
 '         6.46914438e+05,  2.67167156e+05, -5.90983188e+05,\n'
 '        -9.59530125e+05,  5.81302250e+05,  4.54281875e+05,\n'
 '         9.10932875e+05,  3.38471797e+04, -5.89719125e+05,\n'
 '         5.77935625e+05,  9.06855375e+05, -6.90324250e+05,\n'
 '         6.26179500e+05, -2.16349100e+06, -4.01627469e+05,\n'
 '         1.49713750e+06,  7.11254375e+04, -1.36666262e+06,\n'
 '        -1.92333312e+05, -9.12133594e+04,  1.04615150e+06,\n'
 '         1.84265938e+04,  1.22501788e+06, -3.19647750e+05,\n'
 '        -7.54760000e+04,  6.68156312e+05, -1.08533425e+06,\n'
 '        -8.29382875e+05, -3.09648812e+05,  2.97594188e+05,\n'
 '         5.72343625e+05, -3.90195000e+05, -2.96355062e+05,\n'
 '         1.52639938e+05,  2.84658844e+05,  5.51713250e+05,\n'
 '        -5.72909625e+05,  4.00575500e+05,  2.76056062e+05,\n'
 '        -2.00333203e+05, -2.16528000e+05, -7.55886312e+05,\n'
 '         3.42724922e+04,  1.07502950e+06,  1.21931088e+06,\n'
 '         1.35849719e+05,  4.48476438e+05, -2.43983156e+05,\n'
 '         1.36970550e+06, -4.58265188e+05,  8.75947750e+05,\n'
 '        -2.47108125e+05,  1.22419700e+06,  6.08375188e+05,\n'
 '        -2.68587031e+05, -8.59929625e+05, -7.01935750e+05,\n'
 '         5.46761188e+05,  3.74188875e+05,  8.29833312e+05,\n'
 '        -1.17536438e+06,  2.12379550e+06, -1.95071875e+05,\n'
 '        -1.46376475e+06,  6.61012312e+05,  2.75785250e+05,\n'
 '         4.46587188e+04, -1.86507112e+06, -2.22438391e+05,\n'
 '        -6.29846406e+04,  1.13950844e+05, -1.46968550e+06,\n'
 '         1.10627888e+06,  3.19959062e+05, -2.24656484e+05,\n'
 '         9.82384625e+05,  4.64951812e+05, -3.65418812e+05,\n'
 '         4.81516906e+05, -8.23181562e+05, -3.52436469e+05,\n'
 '        -4.84732500e+05,  2.45902688e+05,  1.25252675e+06,\n'
 '         5.81879375e+05, -4.23961500e+05,  8.78129750e+05,\n'
 '        -2.64911938e+05,  8.81910500e+05, -1.12462738e+06,\n'
 '         3.85110719e+05,  8.95523375e+05, -4.23974812e+05,\n'
 '        -3.90720375e+05, -5.92246438e+05,  1.52170125e+05,\n'
 '         5.80521875e+05, -1.28047922e+05, -2.59166953e+05,\n'
 '         6.12361125e+05, -4.08334719e+05, -1.35955875e+05,\n'
 '         7.03907812e+05,  5.68500875e+05,  8.60458000e+05,\n'
 '        -4.92056812e+05,  5.51163812e+05, -7.33925312e+04,\n'
 '         2.20316594e+05, -1.42998675e+06,  1.01890672e+05,\n'
 '         5.26130625e+04,  7.97045781e+04, -1.43996312e+05,\n'
 '         6.71489625e+05, -4.55458094e+05,  6.83562375e+05,\n'
 '         2.22905438e+05,  6.46694375e+05, -2.27940625e+04,\n'
 '        -5.62527875e+05,  8.14959062e+05, -1.10030500e+06,\n'
 '        -6.31222188e+05, -3.15072344e+05, -1.24361641e+05,\n'
 '         4.71271500e+05,  3.53905250e+05, -2.58290000e+04,\n'
 '        -4.66882812e+04, -1.46916588e+06,  1.43524725e+06,\n'
 '         8.36217875e+05,  7.07872000e+05,  2.87042375e+05,\n'
 '        -6.04049375e+04,  9.64028438e+04, -1.19755938e+04,\n'
 '        -1.10128438e+05, -1.94974600e+06, -1.83760650e+06,\n'
 '        -2.98968219e+05, -2.44083625e+05, -1.30609012e+06,\n'
 '        -7.06789688e+05, -7.49661250e+04, -1.21698812e+05,\n'
 '         1.50197038e+06, -1.13106438e+06,  1.94301600e+06,\n'
 '        -1.03398094e+06,  6.87804375e+05,  7.82235062e+05,\n'
 '        -6.42510438e+05, -1.07557362e+06, -1.76843788e+06,\n'
 '        -1.22430600e+06, -2.51577234e+05, -1.22456388e+06,\n'
 '         3.53361875e+05,  1.28232625e+06, -6.20015000e+05,\n'
 '        -6.23369375e+04,  5.67211688e+05, -2.89675312e+05,\n'
 '        -2.29798750e+05,  2.07342188e+05, -1.19496425e+06,\n'
 '         3.99055844e+05, -8.34654250e+05,  6.45344938e+05,\n'
 '         1.79947719e+05,  9.25176312e+05,  7.04601688e+05,\n'
 '        -8.87722375e+05, -8.02638750e+04,  1.40596200e+06,\n'
 '         7.82252750e+05, -7.35100375e+05,  3.70092188e+05,\n'
 '         1.16948500e+06, -1.12033227e+05,  1.49766488e+06,\n'
 '        -1.11894100e+06,  8.55497062e+05, -8.26040750e+05,\n'
 '         9.80963750e+04, -4.61940312e+05, -4.05350812e+05,\n'
 '         1.09151203e+05,  6.87724375e+04, -2.28794797e+05,\n'
 '        -4.54359125e+05,  7.74577875e+05, -5.83882000e+05,\n'
 '        -3.76597500e+04,  7.96725781e+04,  3.08934688e+05,\n'
 '         1.93161250e+04, -3.68088000e+05, -1.46927850e+06,\n'
 '        -4.02288125e+05,  1.39515812e+06,  3.62193688e+05,\n'
 '         5.75080250e+05, -3.76834281e+05,  9.10864375e+05,\n'
 '         1.07252950e+06,  1.23290500e+05, -6.47831500e+05,\n'
 '        -2.40599875e+05, -6.65495625e+05,  4.26885812e+05,\n'
 '         1.08238850e+06,  8.41314062e+03, -2.00495250e+05,\n'
 '         1.71530203e+05, -6.71989062e+05,  5.85540375e+05,\n'
 '         6.96145000e+04, -3.55579625e+05,  6.35106438e+05,\n'
 '         4.37352000e+05, -6.53095188e+05, -8.20193750e+03,\n'
 '         9.00415938e+04,  1.23356050e+06, -8.55868562e+05,\n'
 '        -4.42586062e+05, -4.84387125e+05, -4.21557375e+05,\n'
 '        -3.88186031e+05, -3.97953562e+05, -9.38520000e+05,\n'
 '        -2.89123875e+05, -2.02891109e+05,  2.85181719e+04,\n'
 '        -2.89978312e+05, -2.88619594e+05,  2.24986406e+05,\n'
 '         5.43002375e+05,  6.16276875e+05, -5.56026125e+05,\n'
 '        -6.69821750e+05,  1.90862672e+05, -4.20439625e+05,\n'
 '         5.02551062e+05,  6.01761250e+04,  1.60237062e+05,\n'
 '         3.80538250e+05,  3.91486656e+05, -2.78454906e+05,\n'
 '         6.27762438e+05, -7.12248438e+05, -1.06604562e+05,\n'
 '         5.77653250e+05, -4.84180312e+04,  1.09745838e+06,\n'
 '         2.55407062e+05, -1.46122600e+06, -9.73493875e+05,\n'
 '         6.77497750e+05,  1.69590969e+05, -8.78860938e+04,\n'
 '         1.03359988e+06, -6.29489531e+04, -5.43826625e+05,\n'
 '        -9.53680312e+04, -1.65685438e+06, -4.09368000e+05,\n'
 '        -4.16954906e+05, -3.05478938e+05,  7.64768375e+05,\n'
 '        -7.89138000e+05, -7.11884000e+05, -9.25757062e+05,\n'
 '         6.01829000e+05, -1.58076188e+05, -1.64354250e+05,\n'
 '        -1.82837625e+05, -5.26883500e+05, -1.78344875e+05,\n'
 '        -1.70155075e+06,  5.04651938e+05, -5.74380375e+05,\n'
 '         9.20010438e+05,  9.00676750e+05, -1.51300688e+05,\n'
 '        -1.54648038e+06, -2.96703625e+05, -8.52284188e+05,\n'
 '         2.49284875e+05, -1.41704922e+05, -7.30137812e+04,\n'
 '        -1.07690725e+06,  1.46290100e+06,  1.06765375e+05,\n'
 '         6.54947250e+05, -1.15280612e+06, -8.41373750e+05,\n'
 '        -1.08640375e+06,  9.33624812e+05, -3.13254375e+05,\n'
 '        -8.43015312e+05, -7.66227438e+05, -9.34089219e+04,\n'
 '        -3.19281500e+05, -2.21313719e+05,  1.10265078e+05,\n'
 '         4.77539969e+05, -1.19269900e+06,  1.73530141e+05,\n'
 '        -2.16510703e+05, -2.96000594e+05,  7.28081875e+04,\n'
 '         8.36386188e+05,  1.18096450e+06, -4.63691625e+05,\n'
 '        -5.46385562e+05, -1.73843538e+06, -5.52580062e+05,\n'
 '         1.22211562e+05, -2.07283188e+05, -1.39211325e+06,\n'
 '         5.35825750e+05,  6.80810812e+05,  1.71097531e+05,\n'
 '        -1.26906438e+05, -1.49466350e+06,  7.86205500e+05,\n'
 '        -1.50759750e+05, -1.25373975e+06,  1.40591225e+06,\n'
 '         6.96979562e+05, -5.55558000e+05,  1.99108031e+05,\n'
 '         9.84064625e+05, -2.47931719e+05, -4.10423094e+05,\n'
 '         7.53019312e+05,  4.56343000e+05, -7.17743906e+04,\n'
 '        -1.00213444e+06, -5.51734250e+05, -1.65548025e+06,\n'
 '         6.66688062e+05, -2.15890000e+05,  4.18104500e+05,\n'
 '        -1.43753750e+05, -5.12153469e+05,  1.80866031e+05,\n'
 '        -9.44882875e+05, -4.38789062e+05, -7.53515000e+05,\n'
 '        -5.76264375e+05,  1.68025531e+05, -3.47164406e+05,\n'
 '         7.68920469e+04, -7.46784312e+05,  1.46356475e+06,\n'
 '        -6.24171875e+03,  3.36186406e+05, -6.29899375e+05,\n'
 '         3.19853000e+05,  3.86929250e+05, -7.29708000e+05,\n'
 '        -1.76184094e+05, -1.90919500e+05,  1.57712672e+05,\n'
 '         5.91568875e+05,  1.03980344e+05,  8.56715688e+05,\n'
 '        -6.48841562e+05, -3.85405562e+05, -2.69121188e+05,\n'
 '         8.68597500e+05,  6.03787812e+05, -1.11976162e+06,\n'
 '        -1.32441550e+06,  2.16975719e+05, -1.38170000e+04,\n'
 '         1.27916400e+06,  1.54781438e+06,  4.99585625e+05,\n'
 '        -6.59391625e+05, -2.86828719e+05,  5.35657562e+05,\n'
 '         9.58552500e+04,  1.06511850e+06, -7.22146250e+05,\n'
 '        -2.37478250e+05,  7.25929625e+05, -1.49150688e+05,\n'
 '         1.21360781e+05, -3.85714312e+05, -9.34833125e+05,\n'
 '        -7.62831000e+05, -8.49989125e+05,  1.83512250e+05,\n'
 '         2.08454000e+05,  2.97399812e+05,  4.05817281e+05,\n'
 '        -4.91848531e+05, -1.76988125e+05,  1.04645656e+06,\n'
 '        -4.32439312e+05,  6.01666688e+05,  8.10647375e+05,\n'
 '         4.32891844e+05, -1.49000838e+06,  1.70163609e+05,\n'
 '        -7.67214750e+05, -2.21023125e+04,  5.73902625e+05,\n'
 '         5.47016000e+05, -7.47072875e+05, -1.35029031e+05,\n'
 '         7.99788312e+05,  6.13778375e+05, -4.60211250e+04,\n'
 '         3.06324969e+05, -1.60543812e+05, -8.01661094e+04,\n'
 '         3.82799000e+05, -1.74486969e+05, -7.21375625e+04,\n'
 '         1.25132488e+06, -1.06686000e+06, -6.26074125e+05,\n'
 '        -8.33140469e+04, -4.90977312e+05,  5.93714438e+05,\n'
 '        -5.14636875e+05,  6.08040688e+05, -3.90378156e+05,\n'
 '         6.27321312e+05, -5.91273875e+05,  4.37063312e+05,\n'
 '         6.17467188e+05, -1.29431906e+05, -5.03365500e+05,\n'
 '        -9.80081875e+05,  2.29229688e+04, -3.99329969e+05,\n'
 '         1.07292850e+06,  4.14080500e+05, -9.31044500e+05,\n'
 '        -1.11832275e+06,  3.30627031e+05,  2.88869750e+05,\n'
 '         2.16993350e+06,  8.04025250e+05, -5.26280188e+05,\n'
 '         1.91339688e+04,  1.36854125e+05, -3.69746438e+05,\n'
 '         1.22529012e+06, -6.68557125e+05,  8.35332938e+05,\n'
 '         7.90242688e+05, -6.59112188e+04,  4.85183625e+05,\n'
 '        -7.76126375e+05, -1.68699700e+06,  3.63924594e+05,\n'
 '         4.20237000e+05, -1.02983962e+06,  4.14944375e+04,\n'
 '         4.21378469e+05, -6.52751562e+05, -9.03202422e+04,\n'
 '        -9.56867062e+05, -4.30876219e+05,  7.85864812e+05,\n'
 '        -7.07741188e+05,  9.55863375e+05, -7.31475875e+05,\n'
 '        -1.34103400e+06, -1.06826300e+06,  5.82214125e+05,\n'
 '         4.67854406e+05, -2.40045453e+05,  1.15563375e+06,\n'
 '        -7.19781250e+05, -3.86063812e+05,  1.42535953e+05,\n'
 '        -1.19938094e+05, -8.73316125e+05, -6.66542188e+04,\n'
 '         1.31095662e+06, -1.63889375e+05,  8.26207500e+04,\n'
 '         1.15678250e+06,  2.01487275e+06,  4.14645125e+05,\n'
 '         5.11676250e+04, -8.15817031e+04,  1.79654375e+04,\n'
 '         6.50460000e+04, -3.72318312e+05,  8.72002562e+05,\n'
 '        -3.41015656e+05,  4.73982062e+05, -2.48431812e+05,\n'
 '         9.37380375e+05,  1.33912988e+06,  4.54348938e+05,\n'
 '         7.00821062e+05, -2.05389975e+06, -8.50765625e+04,\n'
 '        -6.13013188e+05,  6.97132875e+05, -8.91265062e+05,\n'
 '         2.76704000e+05,  7.32724844e+04, -2.59606000e+05,\n'
 '         4.59375656e+05,  3.17369281e+05,  1.59540203e+05,\n'
 '         2.40983219e+05, -2.03552625e+05, -6.35062438e+05,\n'
 '        -1.47115906e+05, -2.04448312e+05,  4.05427500e+05,\n'
 '        -8.64008688e+05, -1.86308094e+05, -4.70668125e+05,\n'
 '         1.43818475e+06,  6.79455062e+05,  8.67716125e+05,\n'
 '         9.03447625e+05, -5.22642188e+05, -1.05176400e+06,\n'
 '         8.39065438e+05,  6.48472750e+05,  7.07694000e+05,\n'
 '         9.65302062e+05,  5.44815125e+05,  1.33263012e+06,\n'
 '         3.87415312e+04, -1.26550475e+06,  1.28457138e+06,\n'
 '         1.25284262e+06,  3.96650750e+05, -9.22242250e+05,\n'
 '         7.84285750e+05,  8.35855125e+05, -4.26520594e+05,\n'
 '         5.75112375e+05,  4.87029094e+05, -5.76910938e+05,\n'
 '         7.81396188e+05,  4.12911812e+05,  2.00928688e+05,\n'
 '         1.60126422e+05,  2.45056950e+06,  3.42389438e+05,\n'
 '         2.67650438e+05, -9.23175000e+04,  4.39542312e+05,\n'
 '        -1.15583938e+05,  1.11793062e+05, -1.01346775e+06,\n'
 '         5.38280688e+05, -4.09430000e+05,  5.12658500e+05,\n'
 '         3.83572062e+05,  5.19804844e+04, -5.98057000e+05,\n'
 '         9.05836812e+05, -8.84772875e+05,  1.50926612e+06,\n'
 '         2.38500938e+04, -1.76007188e+04, -2.28583625e+05,\n'
 '        -1.70767000e+05, -2.77366688e+05, -2.27555375e+05,\n'
 '         6.70512500e+03,  1.60662531e+05,  7.97270500e+05,\n'
 '         1.21461125e+06,  5.65465688e+05,  6.74483750e+05,\n'
 '         6.48795625e+05,  1.38473638e+06, -3.13361375e+05,\n'
 '        -9.07902938e+05, -3.55050281e+05, -1.60341662e+06,\n'
 '        -6.35511125e+05,  6.38060125e+05,  2.10239450e+06,\n'
 '         4.74374125e+05, -8.86355000e+05, -7.44833312e+05,\n'
 '        -4.62313594e+05, -1.20517975e+06,  4.89808750e+05,\n'
 '        -1.31180312e+06, -5.39759000e+05,  7.78671875e+02,\n'
 '        -1.00383400e+06,  7.80471875e+05,  8.74243375e+05,\n'
 '        -1.68468400e+06,  1.41258594e+05,  8.03208188e+05,\n'
 '         8.77326500e+05, -1.95567788e+06,  6.40652438e+05,\n'
 '         1.94163150e+06,  1.48305462e+06, -1.27855500e+06,\n'
 '         7.32159188e+05, -3.23249562e+05, -5.16149938e+05,\n'
 '        -4.78115156e+05, -1.87460562e+05,  1.78498312e+06,\n'
 '        -4.49359844e+05,  3.78210031e+05, -1.21614500e+06,\n'
 '         9.77988438e+04, -6.07628688e+05,  3.50244500e+05,\n'
 '        -5.47230125e+05,  4.30632000e+05, -3.95671906e+05,\n'
 '         9.43434375e+04,  4.29592156e+05, -1.58748125e+06,\n'
 '        -2.54601781e+05, -7.31878500e+05, -5.28851875e+05,\n'
 '        -7.63772750e+05,  9.21251938e+05,  6.18774000e+05,\n'
 '        -1.34799388e+06,  9.64116188e+05,  6.74935250e+05,\n'
 '         9.34848250e+05, -3.29924156e+05,  3.90674031e+05,\n'
 '        -1.97757031e+05, -5.71468188e+05, -1.23363162e+06,\n'
 '        -2.39334781e+05,  7.50269625e+05,  9.12500000e+00,\n'
 '         8.39491875e+05,  7.96101875e+05, -4.59693125e+05,\n'
 '         2.05017788e+06,  4.42420500e+05, -1.59548781e+05,\n'
 '         2.94202406e+05,  1.15444312e+06, -8.66149250e+05,\n'
 '         1.12240312e+06, -1.37658112e+06,  4.41830781e+05,\n'
 '        -7.65677500e+04, -6.61637625e+05, -4.65558844e+05,\n'
 '        -1.72281250e+03, -1.27665112e+06,  1.06212250e+05,\n'
 '         6.65477688e+05, -6.86326688e+05,  2.76427500e+05,\n'
 '        -5.17762750e+05, -1.43008000e+05,  9.97264062e+05,\n'
 '         5.87284375e+03, -3.33867250e+05,  2.42256344e+05,\n'
 '        -2.10006812e+05,  8.77514000e+05,  6.35817625e+05,\n'
 '        -1.03751766e+05,  1.22922188e+05, -3.65116812e+05,\n'
 '         5.49738250e+05,  2.36313469e+05,  8.73133500e+05,\n'
 '        -1.11767225e+06,  1.35831000e+05,  1.58328400e+06,\n'
 '         2.64829844e+05, -7.53413312e+05, -1.47589575e+06,\n'
 '         1.35931800e+06,  1.32716800e+06, -3.34388438e+05,\n'
 '        -6.25303875e+05, -5.27793625e+05,  8.97152125e+05,\n'
 '         9.58512250e+05, -7.53114375e+05,  6.85768812e+05,\n'
 '        -1.85471538e+06, -1.31064078e+05,  1.09034775e+06,\n'
 '         4.12204250e+05, -1.19020925e+06, -3.31905375e+05,\n'
 '        -3.59519688e+04, -5.56248188e+05, -4.47725000e+05,\n'
 '         4.29485062e+05, -6.47242312e+05, -2.85257688e+05,\n'
 '         6.36392312e+05, -9.20646500e+05, -1.94328125e+04,\n'
 '        -1.39243250e+06,  8.88263125e+05,  7.90949000e+05,\n'
 '        -3.03231250e+05,  3.98260375e+05,  2.56396062e+05,\n'
 '         2.82689906e+05,  6.42160750e+05, -1.74795625e+05,\n'
 '         2.26814000e+05,  9.34305062e+05, -1.41373588e+06,\n'
 '        -2.35686203e+05, -5.73776250e+05, -3.34705812e+05,\n'
 '        -1.30901625e+05,  6.16817250e+05,  8.58718375e+05,\n'
 '        -6.37473438e+05, -2.49213531e+05, -5.75688125e+04,\n'
 '         2.44399550e+06,  1.19080400e+06, -9.45385938e+05,\n'
 '        -3.50671688e+05, -4.70712438e+05,  1.45614625e+06,\n'
 '        -5.68787812e+04,  1.85104688e+04,  3.87996469e+05,\n'
 '         7.84779562e+05,  6.96830125e+05, -7.81074375e+05,\n'
 '         2.65688812e+05,  1.92428625e+05,  2.33237953e+05,\n'
 '         1.06303025e+06, -6.33125000e+04, -1.23696112e+06,\n'
 '        -1.41198212e+06, -9.03971688e+05, -1.05559547e+05,\n'
 '         1.04600712e+06,  1.43740012e+06, -3.94200938e+05,\n'
 '        -5.29414062e+05, -1.36330094e+05, -4.43404562e+05,\n'
 '        -3.15310875e+05,  2.52767925e+06, -3.65838688e+05,\n'
 '        -5.08176062e+05, -3.12467000e+05,  3.04972625e+05,\n'
 '        -2.35017469e+05,  2.56190281e+05, -9.07590375e+05,\n'
 '        -3.64277625e+05, -2.11970688e+05, -2.48879406e+05,\n'
 '         4.17190125e+05, -4.04760750e+05, -1.11345125e+05,\n'
 '        -1.40778488e+06, -1.33789688e+05, -1.37436000e+06,\n'
 '        -9.02860312e+05, -8.17694062e+04, -5.30686312e+05,\n'
 '         5.49460250e+05, -1.76063438e+06,  4.97582625e+05,\n'
 '        -3.08395250e+05, -6.52285625e+05, -4.09158938e+05,\n'
 '         1.53580922e+05,  2.04229906e+05,  3.87349375e+04,\n'
 '        -9.30741438e+05,  1.95698375e+05, -4.21484000e+05,\n'
 '        -9.91977125e+05,  1.92339156e+05, -3.10763156e+05,\n'
 '         1.37207700e+06,  1.29794388e+06,  2.83502656e+05,\n'
 '         5.74955188e+05, -6.94208375e+05, -1.10918375e+06,\n'
 '        -8.27748125e+04,  7.72066250e+04,  7.65513250e+05,\n'
 '         2.90008906e+05, -2.29558250e+05, -1.75374438e+05,\n'
 '         9.85695438e+05, -2.69279188e+05,  1.46453312e+05,\n'
 '        -2.64406219e+05,  5.14582156e+05,  4.20342812e+05,\n'
 '         1.31629700e+06,  2.05027344e+05,  1.41258625e+06,\n'
 '         1.04333406e+05, -2.87132406e+05,  1.69001975e+06,\n'
 '        -6.54620312e+05, -4.59542219e+05,  9.48147812e+05,\n'
 '        -2.31213925e+06,  1.19933862e+06, -2.75620000e+04,\n'
 '         1.32553325e+06, -1.35021125e+06, -1.09967375e+05,\n'
 '         2.07108125e+05,  3.78285625e+04,  2.40238700e+06,\n'
 '        -4.05037906e+05, -7.99465750e+05, -4.73238562e+05,\n'
 '         1.07470350e+06,  1.12762680e+05, -9.16832750e+05,\n'
 '         6.95039750e+05, -7.23732375e+05, -5.57511750e+05,\n'
 '         1.78736250e+04, -2.71895844e+05, -1.57678062e+05,\n'
 '        -1.03204312e+05, -4.44838875e+05,  2.46752125e+05,\n'
 '        -4.74722188e+05, -5.31214250e+05, -7.15573188e+05,\n'
 '        -3.46368531e+05,  2.36792875e+05,  3.30716500e+05,\n'
 '        -1.96947738e+06, -1.88609288e+06, -3.20724219e+05,\n'
 '        -8.47867312e+05, -3.65500375e+05, -4.01781250e+04,\n'
 '         7.78215000e+04,  1.38594516e+05, -1.24355250e+05,\n'
 '        -5.80468375e+05,  1.82352750e+06, -2.00386438e+05,\n'
 '        -1.04597400e+06,  1.04109619e+06,  2.08726562e+05,\n'
 '         6.71657625e+05,  1.16882312e+05, -9.45270750e+05,\n'
 '         2.71485938e+04, -2.74173438e+05,  4.03182250e+05,\n'
 '        -6.13100125e+05,  1.54533500e+05, -5.13415438e+05,\n'
 '         4.73613875e+05, -2.19223375e+06, -4.52188750e+04,\n'
 '        -3.79773156e+05,  3.76877469e+05, -1.73465988e+06,\n'
 '         7.90025000e+05,  1.31281512e+06,  6.87974766e+04,\n'
 '        -3.15885875e+05,  1.26024862e+06,  2.43902625e+05,\n'
 '         1.09694844e+05, -3.72190625e+03, -9.65401250e+04,\n'
 '        -4.96694031e+05,  1.51863125e+06, -1.21957325e+06,\n'
 '        -9.72087875e+05, -4.68665750e+05, -1.46297344e+05,\n'
 '        -7.97414125e+05,  3.47094562e+05, -4.18841094e+05,\n'
 '        -1.07755388e+06,  8.42640250e+05,  6.45616625e+05,\n'
 '        -8.84835062e+05, -5.30609250e+05,  8.14438750e+05,\n'
 '         8.69107125e+05,  1.03270600e+06, -7.13731750e+05,\n'
 '        -2.31987375e+05, -9.35259625e+05, -8.87697812e+04,\n'
 '        -3.98501375e+05,  1.56236425e+06, -5.99890500e+05,\n'
 '        -2.97473875e+05,  5.71471062e+05,  1.71636938e+06,\n'
 '         7.23695250e+05,  8.45392125e+05,  7.57712625e+05,\n'
 '         1.25807650e+06,  7.00334000e+05,  8.90734250e+05,\n'
 '         6.26120375e+05,  6.38125500e+05,  3.70547406e+05,\n'
 '        -7.77064250e+05, -9.57868750e+05,  8.76560125e+05,\n'
 '        -9.30934812e+05,  2.38027219e+05,  3.87670938e+04,\n'
 '         2.16530531e+05,  1.55231641e+04, -5.76793375e+05,\n'
 '         2.64820281e+05, -5.32049688e+05, -4.56058750e+05,\n'
 '         3.03668469e+05,  5.86295875e+05,  1.03022328e+05,\n'
 '        -1.58918922e+05, -7.04237750e+05,  4.66126156e+05,\n'
 '         6.84384125e+05]])')
'test_inceptionnet | batch_shape is: [1]'
'test_inceptionnet | logits.shape is: ivy.Shape(1, 1000)'
'||'
'test_inceptionnet | device is: cpu'
'test_inceptionnet | fw is: numpy'
'test_inceptionnet | load_weights is: True'
'InceptionV3 | build | layer 1/22 built'
'InceptionV3 | build | layer 2/22 built'
'layer 3/22 built'
'InceptionV3 | build | layer 4/22 built'
'InceptionV3 | build | layer 5/22 built'
'InceptionV3 | build | layer 6/22 built'
'InceptionV3 | build | layer 7/22 built'
'InceptionV3 | build | layer 8/22 built'
'InceptionV3 | build | layer 9/22 built'
'InceptionV3 | build | layer 10/22 built'
'InceptionV3 | build | layer 11/22 built'
'InceptionV3 | build | layer 12/22 built'
'InceptionV3 | build | layer 13/22 built'
'InceptionV3 | build | layer 14/22 built'
'InceptionV3 | build | layer 15/22 built'
'InceptionV3 | build | layer 17/22 built'
'InceptionV3 | build | layer 18/22 built'
'InceptionV3 | build | layer 19/22 built'
'InceptionV3 | build | layer 20/22 built'
'InceptionV3 | build | layer 21/22 built'
'InceptionV3 | build | layer 22/22 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/4 built'
'layer 2/4 built'
'layer 3/4 built'
'layer 4/4 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/6 built'
'layer 2/6 built'
'layer 3/6 built'
'layer 4/6 built'
'layer 5/6 built'
'layer 6/6 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'inceptionNet_v3 | building InceptionV3 model | done 1/3'
'inceptionNet_v3 | clearning pretrained weights | done 2/3'
'inceptionNet_v3 | loading pretrained weights | done 3/3'
'InceptionV3 | forward | input data_format is:NHWC | done 1/27'
'InceptionV3 | forward | data_format is going to be used is:NHWC | done 1/27'
'InceptionV3 | forward | input shape is:ivy.Shape(1, 224, 224, 3) | done 1/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 224, 224, 3) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 111, 111, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 111, 111, 32) | done 2/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 111, 111, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 32) | done 3/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 109, 109, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 64) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 64) | done 4/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 54, 54, 64) | done 5/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 54, 54, 80) | done 3/3'
'InceptionV3 | forward | is:ivy.Shape(1, 54, 54, 80) | done 6/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 80) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 52, 52, 192) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 52, 52, 192) | done 7/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 192) | done 8/27'
'input shape is:ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 32) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 32)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 25, 25, 256) | done 9/27'
'input shape is:ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 10/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 11/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 384) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 96) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 96)'
'one 20/20, output shape is:ivy.Shape(1, 12, 12, 288)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 12/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 12, 12, 768) | done 13/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 14/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 15/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 16/27'
'v3 16/27, output shape is:ivy.Shape(1, 12, 12, 768)'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 5, 5, 192)'
'one 7/20, output shape is:ivy.Shape(1, 5, 5, 768)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 1280) | done 17/27'
'input shape is:ivy.Shape(1, 5, 5, 1280)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 18/27'
'input shape is:ivy.Shape(1, 5, 5, 2048)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 19/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 20/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 5, 5) | done 21/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 1, 1) | done 22/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 27/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 24/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 25/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048) | done 26/27'
'InceptionV3 | forward | fc | done 27/27'
('test_inceptionnet | logits is: ivy.array([[-5.79198301e-01,  2.29389101e-01, '
 '-5.07284522e-01,\n'
 '        -5.02066374e-01, -1.73797297e+00, -1.46969348e-01,\n'
 '         2.36688519e+00,  9.14631009e-01, -6.77853823e-03,\n'
 '        -1.27315807e+00, -4.25418138e-01,  1.19901681e+00,\n'
 '         4.15312588e-01,  6.00672603e-01,  2.69515777e+00,\n'
 '        -2.74098009e-01, -5.12422621e-01,  6.26601338e-01,\n'
 '        -1.25038576e+00,  1.49853897e+00,  1.66559541e+00,\n'
 '        -2.12050486e+00,  1.86130953e+00, -1.07847905e+00,\n'
 '         1.22762807e-02, -1.43783975e+00, -1.70646465e+00,\n'
 '         4.44580108e-01, -1.38251734e+00,  2.53881693e-01,\n'
 '         1.59470093e+00,  5.43796778e-01,  1.77168703e+00,\n'
 '        -9.47361469e-01,  9.83654618e-01, -2.41302371e+00,\n'
 '         1.85563779e+00, -7.01785624e-01, -4.51857328e-01,\n'
 '         4.12406176e-01,  9.47001696e-01, -1.01626605e-01,\n'
 '        -7.42375374e-01,  1.49951017e+00, -5.56627154e-01,\n'
 '        -8.13451111e-02, -7.10806966e-01,  1.10138750e+00,\n'
 '        -5.47289729e-01, -1.55152693e-01, -1.53713858e+00,\n'
 '         1.26544094e+00, -5.87802768e-01, -3.55570745e+00,\n'
 '        -1.12987900e+00,  1.01078343e+00, -2.24694323e+00,\n'
 '        -1.39126146e+00, -9.44992364e-01, -3.76718610e-01,\n'
 '        -4.59857911e-01,  4.39062893e-01, -9.63802934e-01,\n'
 '        -3.34248042e+00, -6.92052603e-01, -2.65660906e+00,\n'
 '         7.24262357e-01,  1.16772222e+00,  1.41270637e+00,\n'
 '         1.27847969e-01, -1.09744513e+00, -1.07057858e+00,\n'
 '        -2.03783631e+00, -4.17215467e-01, -2.69712418e-01,\n'
 '        -1.14495599e+00,  5.36162019e-01,  5.09496748e-01,\n'
 '        -2.76264071e-01,  4.23890203e-01, -8.98009539e-01,\n'
 '         1.01095879e+00,  8.73676240e-02, -9.24298942e-01,\n'
 '         7.41960168e-01, -2.35963240e-01, -1.46207261e+00,\n'
 '        -5.40196896e-03,  8.05367708e-01,  7.24174440e-01,\n'
 '         4.72493440e-01,  9.67922866e-01, -5.31636357e-01,\n'
 '        -6.18021488e-01, -1.36637139e+00, -2.06428552e+00,\n'
 '         1.72832847e+00, -2.61293793e+00, -2.77101255e+00,\n'
 '         1.54938376e+00,  4.34654474e-01,  1.71721935e+00,\n'
 '         1.93352878e-01,  6.31057560e-01,  1.16798174e+00,\n'
 '        -2.10853147e+00,  1.04582894e+00, -5.54801166e-01,\n'
 '         1.51099944e+00, -1.68633521e-01, -6.65280700e-01,\n'
 '         2.94792742e-01,  1.72698641e+00,  2.81342125e+00,\n'
 '        -4.87139225e-01, -2.41070128e+00, -1.22378898e+00,\n'
 '         1.68149912e+00, -2.82126808e+00, -5.75065374e-01,\n'
 '        -2.27235842e+00, -1.27995086e+00, -1.04793727e+00,\n'
 '        -3.53102684e-02, -3.29378486e+00, -6.17623866e-01,\n'
 '        -1.37137186e+00,  2.00927305e+00, -1.12485325e+00,\n'
 '         4.90643501e-01,  5.27646244e-01,  1.10512733e+00,\n'
 '         1.85687709e+00, -1.40303409e+00, -3.03840458e-01,\n'
 '         6.18063986e-01, -3.71327966e-01,  4.70247179e-01,\n'
 '        -1.04330683e+00, -1.94062626e+00, -1.61573064e+00,\n'
 '        -1.07351577e+00, -3.08936644e+00, -2.06058681e-01,\n'
 '         3.33320499e+00, -4.31707650e-01,  4.70811874e-02,\n'
 '         8.16947222e-01,  3.78131449e-01, -8.84695888e-01,\n'
 '        -8.31282139e-01,  4.44737941e-01,  3.54339242e+00,\n'
 '         4.29686904e-01,  1.97309124e+00, -2.28824425e+00,\n'
 '        -9.51894760e-01,  5.33960915e+00, -1.48746431e+00,\n'
 '        -7.35157907e-01, -4.11603391e-01, -3.35230589e+00,\n'
 '        -3.74114513e+00,  7.13950276e-01,  1.57445526e+00,\n'
 '         3.11714888e-01, -7.07082868e-01, -5.80156088e-01,\n'
 '         2.55589396e-01,  2.16316175e+00,  2.02135992e+00,\n'
 '        -2.03575683e+00, -9.41158235e-01, -2.21004069e-01,\n'
 '         2.54333687e+00, -5.03492415e-01, -2.79511630e-01,\n'
 '        -6.05761483e-02,  2.65633434e-01,  1.14141345e+00,\n'
 '         2.51710892e-01,  1.24236429e+00, -4.33166325e-01,\n'
 '         6.86721504e-03, -4.40697223e-01,  2.63329959e+00,\n'
 '         3.71004510e+00, -4.99287903e-01, -1.67221999e+00,\n'
 '        -2.88930964e+00, -4.13618356e-01, -1.52307987e+00,\n'
 '         7.90878475e-01, -1.90614438e+00, -9.96357560e-01,\n'
 '        -1.76658249e+00, -3.20918035e+00,  1.13161051e+00,\n'
 '         6.99897647e-01,  2.85615295e-01, -3.74176562e-01,\n'
 '        -2.45649743e+00, -2.99298191e+00,  5.89929199e+00,\n'
 '        -1.62647879e+00, -1.97221136e+00, -2.01310253e+00,\n'
 '        -5.04470050e-01, -2.75871444e+00, -2.58118200e+00,\n'
 '         3.50511432e-01,  4.37679291e-02, -1.90315127e+00,\n'
 '        -4.06769007e-01,  5.11533320e-01, -6.51775181e-01,\n'
 '         1.51504767e+00, -2.39248300e+00, -4.99038219e-01,\n'
 '        -5.07011557e+00, -6.08523786e-01, -2.02280641e+00,\n'
 '         3.71250749e+00,  3.56874275e+00,  5.08531475e+00,\n'
 '         1.73170424e+00,  1.22473448e-01, -1.93751991e+00,\n'
 '         2.03123736e+00,  1.35772228e+00,  2.97140330e-01,\n'
 '         2.48226500e+00, -3.81872117e-01,  2.45284510e+00,\n'
 '        -5.66582739e-01,  1.43329847e+00,  2.71263689e-01,\n'
 '        -4.39987242e-01, -8.98523092e-01, -2.32564974e+00,\n'
 '         5.23707271e-01,  6.33458853e-01,  3.39679694e+00,\n'
 '        -4.21072125e-01, -2.98392624e-01,  5.85671782e-01,\n'
 '        -2.08460629e-01,  1.44135499e+00,  6.90778399e+00,\n'
 '         4.97061443e+00,  2.05766153e+00, -4.81582433e-01,\n'
 '        -4.36473638e-01, -1.66570514e-01, -9.81078386e-01,\n'
 '         2.84854555e+00,  7.31891155e-01,  8.93203735e+00,\n'
 '         2.08810558e+01,  6.39684200e+00,  5.92493630e+00,\n'
 '         8.04863644e+00,  1.33800137e+00, -7.78165817e-01,\n'
 '        -1.08045614e+00, -1.04158044e-01, -2.08235598e+00,\n'
 '         1.69765735e+00,  1.92911208e-01,  3.32172990e+00,\n'
 '         1.33459301e+01,  2.07071215e-01, -2.95534670e-01,\n'
 '        -5.94019294e-02,  4.01662678e-01, -2.04253149e+00,\n'
 '         1.42574084e+00,  2.43118358e+00, -9.19898272e-01,\n'
 '         1.17724848e+01,  2.43849397e+00, -1.54998624e+00,\n'
 '        -1.75771129e+00,  4.77802563e+00, -1.65656197e+00,\n'
 '        -1.88245308e+00, -1.29977035e+00,  4.68722761e-01,\n'
 '        -4.90307152e-01,  9.95006442e-01, -1.21157122e+00,\n'
 '         5.60502648e-01,  6.80736542e-01, -3.04617834e+00,\n'
 '        -6.34988248e-01, -2.92790198e+00,  4.39672279e+00,\n'
 '         8.83250475e-01, -2.25198603e+00, -1.07195532e+00,\n'
 '        -8.91122162e-01, -6.09867692e-01,  4.73501757e-02,\n'
 '        -5.75526953e-02, -9.42011952e-01, -1.24421406e+00,\n'
 '        -1.63234437e+00,  4.60957885e-02,  2.08791673e-01,\n'
 '         1.99503434e+00, -1.67192852e+00, -1.74476135e+00,\n'
 '        -7.28400171e-01, -1.30916786e+00, -2.07109880e+00,\n'
 '         3.02171230e-01, -1.60484135e+00, -5.82378864e-01,\n'
 '        -2.35511541e+00, -1.72109664e+00, -8.38483453e-01,\n'
 '        -1.52292979e+00, -3.54157209e-01,  3.18085372e-01,\n'
 '        -1.63207805e+00, -6.17765635e-02,  9.67470110e-01,\n'
 '         7.81151235e-01,  2.42581701e+00, -2.61789894e+00,\n'
 '        -7.93145418e-01,  1.83927715e+00,  3.63117933e+00,\n'
 '         7.14613080e-01,  1.80426550e+00, -6.24377012e-01,\n'
 '        -2.37546873e+00,  1.44792271e+00,  3.02883649e+00,\n'
 '        -2.30959797e+00, -5.87403715e-01,  2.93320060e-01,\n'
 '         5.95427215e-01, -6.62437320e-01, -1.82333553e+00,\n'
 '        -6.95240140e-01,  9.89265919e-01,  2.02545786e+00,\n'
 '         1.40770987e-01, -1.99425769e+00, -1.44295311e+00,\n'
 '        -2.16035295e+00, -2.08791351e+00, -1.71979404e+00,\n'
 '        -2.31940365e+00,  9.82734144e-01,  2.26430631e+00,\n'
 '         1.33613873e+00,  3.03752995e+00,  1.85470894e-01,\n'
 '        -1.05705655e+00, -7.76770472e-01, -1.37595594e+00,\n'
 '         1.00877023e+00, -1.50889504e+00, -1.36576223e+00,\n'
 '        -1.60758126e+00, -1.83493102e+00, -1.83195209e+00,\n'
 '        -2.51156759e+00, -3.87673885e-01, -2.42044330e-01,\n'
 '        -1.74806461e-01, -1.13861561e+00, -1.59266293e-01,\n'
 '        -1.96860421e+00, -2.01282477e+00,  1.62873793e+00,\n'
 '        -2.91311681e-01, -5.52098751e-01,  5.14630318e-01,\n'
 '        -3.14275765e+00, -1.88967168e+00, -2.01752543e+00,\n'
 '        -1.98688746e-01, -1.40063608e+00, -6.28302097e-01,\n'
 '        -1.14779584e-01, -1.34984183e+00, -1.06136024e+00,\n'
 '        -8.86403918e-01, -4.08997536e-02,  9.24448013e-01,\n'
 '         1.63777471e+00, -1.49238574e+00, -1.88252330e+00,\n'
 '         1.75949764e+00, -3.37219894e-01,  4.32644159e-01,\n'
 '         6.67585850e-01, -9.77636754e-01, -1.72604489e+00,\n'
 '        -1.82559490e-02, -6.64146185e-01,  1.65253532e+00,\n'
 '         1.34186673e+00, -1.16871417e+00, -1.00076366e+00,\n'
 '        -6.10200584e-01, -2.06731343e+00, -4.86506581e-01,\n'
 '        -2.97806692e+00, -1.75162232e+00, -2.59445643e+00,\n'
 '        -3.42126667e-01, -3.90016228e-01,  6.67059839e-01,\n'
 '         1.29596710e+00, -1.96690369e+00, -7.37767577e-01,\n'
 '        -6.92675471e-01, -6.73618495e-01,  1.34401131e+00,\n'
 '        -8.91659975e-01, -2.13388205e-01,  2.33867121e+00,\n'
 '         2.69562900e-01,  1.37216771e+00, -1.71683526e+00,\n'
 '        -5.85078895e-01, -2.27036864e-01,  7.01186240e-01,\n'
 '        -7.36911893e-01,  1.50255394e+00, -2.00099301e+00,\n'
 '         7.80859142e-02,  4.82493848e-01, -1.65486121e+00,\n'
 '        -4.01015848e-01, -9.59834099e-01, -9.17173862e-01,\n'
 '        -2.78841495e+00, -5.33317685e-01, -2.27276754e+00,\n'
 '         1.52694523e+00,  5.55645108e-01, -1.49506044e+00,\n'
 '        -9.13201034e-01,  9.79496777e-01, -1.04164267e+00,\n'
 '         6.14190817e-01,  5.53658977e-02, -3.25311989e-01,\n'
 '        -6.63782954e-01, -9.40284729e-01, -1.47473037e+00,\n'
 '         7.14686513e-02, -9.33619142e-01,  6.83029532e-01,\n'
 '         9.36147571e-01,  9.17498231e-01, -3.86706859e-01,\n'
 '         1.05546796e+00,  1.28923440e+00, -1.94095576e+00,\n'
 '        -4.05862600e-01,  3.79983693e-01, -1.96303392e+00,\n'
 '         1.59368968e+00,  3.56601208e-01,  2.83915639e-01,\n'
 '        -1.18443275e+00, -2.44405341e+00,  6.51821911e-01,\n'
 '        -1.49065089e+00, -1.43137681e+00,  2.52212834e+00,\n'
 '        -1.37348616e+00,  4.20960277e-01, -6.08413756e-01,\n'
 '         7.39737034e-01,  1.28883123e+00, -1.27224350e+00,\n'
 '        -2.18199149e-01, -1.25235844e+00, -1.63848138e+00,\n'
 '        -1.57450628e+00,  2.86853266e+00, -2.77181804e-01,\n'
 '        -7.16477871e-01, -8.16189766e-01,  1.49324107e+00,\n'
 '        -2.57554269e+00,  5.51407337e-02, -2.12441832e-01,\n'
 '         9.82383668e-01, -8.05115700e-03,  2.75965393e-01,\n'
 '        -8.89728546e-01,  2.03579068e+00, -1.80877686e+00,\n'
 '        -6.34831846e-01, -3.71794701e-02, -3.05370033e-01,\n'
 '        -1.80225301e+00,  2.51193404e+00, -2.18746114e+00,\n'
 '        -1.53585672e+00, -3.52164328e-01,  9.42528546e-02,\n'
 '         2.54155540e+00,  9.53753889e-01, -7.99963713e-01,\n'
 '        -9.54050183e-01, -2.15421498e-01, -2.60539949e-01,\n'
 '        -6.54569387e-01, -6.44450784e-01, -9.63748932e-01,\n'
 '        -1.81631970e+00,  6.30210519e-01, -4.99138713e-01,\n'
 '        -5.66822112e-01, -1.78894365e+00, -1.30411911e+00,\n'
 '         1.78008020e-01, -2.43612623e+00, -1.97385550e+00,\n'
 '         6.87900633e-02, -1.18530977e+00,  8.55042100e-01,\n'
 '         1.06013203e+00,  1.05316222e+00, -7.22779453e-01,\n'
 '        -1.26671290e+00,  3.35548222e-01, -2.27681017e+00,\n'
 '         4.09767532e+00, -6.89983964e-01, -3.12480032e-01,\n'
 '        -1.76286316e+00, -1.55628002e+00, -1.95334625e+00,\n'
 '         3.97203398e+00, -4.33848202e-01, -5.42222619e-01,\n'
 '         1.92992771e+00,  4.43763286e-02, -1.12996173e+00,\n'
 '        -7.44613111e-02,  1.38293791e+00,  9.46973681e-01,\n'
 '        -2.78371119e+00, -4.22193050e+00,  3.45561743e-01,\n'
 '        -7.31566071e-01,  8.63587797e-01, -8.69922697e-01,\n'
 '         1.65002275e+00,  3.22879612e-01,  6.29857898e-01,\n'
 '        -1.63594022e-01,  3.08533835e+00,  1.29986167e+00,\n'
 '         7.41190374e-01, -1.38060927e+00,  1.98678350e+00,\n'
 '        -2.10504365e+00,  9.87995028e-01, -1.12271637e-01,\n'
 '         2.13387608e+00, -1.42694485e+00,  9.46562171e-01,\n'
 '         1.95439160e+00,  2.41916746e-01, -2.65448499e+00,\n'
 '        -1.28239584e+00,  8.19504857e-01,  1.46864399e-01,\n'
 '        -1.76732051e+00, -1.39559880e-01,  1.07011294e+00,\n'
 '        -2.59474665e-02,  1.27310824e+00,  1.25239360e+00,\n'
 '         5.07837951e-01, -2.43407202e+00,  7.75921225e-01,\n'
 '         7.44554281e-01,  3.33730578e-02,  1.75336003e+00,\n'
 '        -5.40726185e-01,  1.62777174e+00,  2.98642218e-02,\n'
 '         4.91528332e-01, -7.68227935e-01,  1.95359874e+00,\n'
 '         6.88024283e-01, -7.82881081e-01,  1.49356818e+00,\n'
 '        -1.62220717e-01, -2.77499390e+00, -9.41564858e-01,\n'
 '        -1.03397512e+00,  2.37462616e+00, -5.65672159e-01,\n'
 '         4.02892113e+00,  2.73829508e+00,  1.18875718e+00,\n'
 '        -1.94456601e+00, -1.34648860e+00, -3.19150984e-01,\n'
 '         2.66303718e-02,  4.80925739e-01,  9.34507072e-01,\n'
 '        -7.78384805e-01, -2.28568769e+00,  1.62136346e-01,\n'
 '        -2.00912833e+00, -1.19419372e+00, -3.30997920e+00,\n'
 '         1.29192424e+00,  6.44917488e-02,  8.27845931e-02,\n'
 '         3.28742564e-02, -6.39739335e-01, -4.88987684e-01,\n'
 '        -9.46758270e-01,  4.34408188e+00,  1.31507015e+00,\n'
 '        -1.21587133e+00, -4.09114808e-01, -3.66587341e-02,\n'
 '         2.91995078e-01, -2.83255219e+00, -4.77463752e-02,\n'
 '         5.90337575e-01, -1.80256903e-01, -5.54936886e-01,\n'
 '        -2.04677209e-02, -8.70752931e-01, -2.06330371e+00,\n'
 '         3.46229613e-01,  4.34099138e-02, -2.70102477e+00,\n'
 '         1.45972121e+00,  6.27269745e-01, -1.17067504e+00,\n'
 '        -1.42762840e-01,  5.88122249e-01, -1.86285627e+00,\n'
 '        -1.36151516e+00,  6.71964586e-01, -5.43513820e-02,\n'
 '        -5.87004900e-01, -3.03504515e+00,  9.88207817e-01,\n'
 '        -3.51468992e+00, -1.01240262e-01, -2.30460739e+00,\n'
 '        -1.08551049e+00, -2.73686260e-01,  1.00122893e+00,\n'
 '        -3.97876406e+00, -8.57652187e-01,  2.00574100e-01,\n'
 '         1.18967927e+00,  8.80878687e-01, -3.56983471e+00,\n'
 '         1.24684215e-01,  3.54921043e-01, -8.22606385e-01,\n'
 '         1.29272544e+00, -6.57858074e-01,  2.51200771e+00,\n'
 '         1.73668814e+00,  2.77964497e+00, -1.57238495e+00,\n'
 '         8.01052213e-01,  2.42617035e+00,  1.76514566e-01,\n'
 '        -2.77697945e+00,  4.49711442e-01, -1.89990354e+00,\n'
 '         3.20343256e+00, -5.80401421e-01,  1.09285462e+00,\n'
 '        -6.17414892e-01, -1.91711628e+00, -1.05693400e+00,\n'
 '         1.51517659e-01, -8.08477998e-02,  1.76623237e+00,\n'
 '        -3.86511111e+00, -2.52520084e-01,  1.40712535e+00,\n'
 '         5.56373000e-01, -1.26861572e+00, -4.21844155e-01,\n'
 '         1.35889262e-01, -1.01490211e+00,  2.11794972e-01,\n'
 '        -2.67599583e+00, -3.03606689e-01, -1.48507285e+00,\n'
 '        -8.50490749e-01,  1.07655726e-01,  1.73140121e+00,\n'
 '        -2.11429787e+00, -1.31693304e+00,  1.51605666e+00,\n'
 '         3.27662778e+00, -3.19147617e-01, -1.54144239e+00,\n'
 '        -8.73063207e-01,  1.23892128e+00, -2.72419035e-01,\n'
 '        -9.54135358e-01,  3.50361437e-01,  2.69609714e+00,\n'
 '         1.86152375e+00, -1.03731048e+00, -2.94725448e-01,\n'
 '        -8.84624839e-01,  4.99691397e-01, -7.98521787e-02,\n'
 '         7.67769992e-01, -1.36331201e-01, -5.30469716e-02,\n'
 '        -5.70483804e-02, -7.49528766e-01,  9.57366228e-01,\n'
 '        -9.88285840e-02, -1.51460433e+00, -7.31281638e-01,\n'
 '        -8.25600862e-01, -1.55161488e+00, -1.65702736e+00,\n'
 '        -1.25305250e-01, -3.51078957e-02,  1.72439361e+00,\n'
 '         6.87023848e-02,  2.62770392e-02, -8.19356561e-01,\n'
 '        -2.35037875e+00, -9.22804415e-01,  4.88800096e+00,\n'
 '        -7.62253046e-01,  8.11217666e-01,  1.04446912e+00,\n'
 '        -1.86328745e+00,  1.44035325e-01, -4.79487836e-01,\n'
 '        -1.28693902e+00, -1.98502517e+00,  5.16167581e-01,\n'
 '         6.46955371e-02,  7.39098310e-01,  1.63146818e+00,\n'
 '        -1.72065353e+00, -2.32188868e+00, -2.83188295e+00,\n'
 '        -2.48021513e-01,  1.69900072e+00, -1.93234563e+00,\n'
 '         1.05328274e+00, -1.20596397e+00,  1.93609011e+00,\n'
 '        -3.82273495e-01,  1.89036942e+00,  1.38752341e-01,\n'
 '         3.18837404e-01, -1.01870406e+00,  1.10875785e+00,\n'
 '        -1.56504798e+00,  6.49942696e-01,  1.65805268e+00,\n'
 '         6.41132474e-01, -1.88220292e-01,  2.48636305e-02,\n'
 '         2.49010205e-01, -3.37523282e-01,  8.32338810e-01,\n'
 '        -7.88130641e-01, -2.20293045e+00, -1.25125003e+00,\n'
 '        -1.08970189e+00,  2.32933116e+00,  6.01640165e-01,\n'
 '         1.43447185e+00,  3.09927058e+00,  2.44002152e+00,\n'
 '         1.08846831e+00, -1.78971207e+00, -6.12309337e-01,\n'
 '        -1.13744819e+00,  1.08193409e+00, -1.34287548e+00,\n'
 '         1.81263477e-01,  2.28655624e+00, -3.01426649e-03,\n'
 '        -2.17802614e-01,  1.15035367e+00,  2.20154494e-01,\n'
 '        -1.13840565e-01,  5.03491878e-01, -2.40548897e+00,\n'
 '        -9.38040555e-01, -1.22173774e+00, -8.35593402e-01,\n'
 '         9.17574763e-01, -5.95925212e-01, -8.96526515e-01,\n'
 '         4.10953373e-01,  5.40262341e-01,  1.20311737e+00,\n'
 '         2.37206316e+00,  7.62457430e-01,  4.56862777e-01,\n'
 '         2.04065710e-01,  1.48653901e+00, -1.91524374e+00,\n'
 '         6.56902969e-01,  1.55322480e+00, -1.30165243e+00,\n'
 '        -5.25569022e-01,  1.07345474e+00, -2.72926641e+00,\n'
 '         2.45139408e+00, -2.41395164e+00,  2.20516872e+00,\n'
 '         8.20637047e-01,  4.53748584e-01,  2.98115671e-01,\n'
 '        -2.28487062e+00, -1.41839147e+00,  7.47009158e-01,\n'
 '         6.59704506e-02, -1.23194754e+00, -1.45254660e+00,\n'
 '         2.23753715e+00, -5.47751844e-01, -3.20902497e-01,\n'
 '         1.07862341e+00,  2.40032673e+00, -4.34245825e-01,\n'
 '        -1.02100086e+00, -3.64721513e+00,  2.28419972e+00,\n'
 '         1.77533102e+00,  2.69850779e+00, -5.46019226e-02,\n'
 '         1.37086868e+00,  3.98456901e-01, -4.00151014e-01,\n'
 '         2.46788040e-01, -1.95261955e-01,  1.87289095e+00,\n'
 '        -1.43379855e+00, -6.52997017e-01,  3.55501294e-01,\n'
 '         2.79237342e+00, -3.18644494e-02, -1.20498389e-01,\n'
 '        -1.74861169e+00,  1.64173335e-01, -1.44029415e+00,\n'
 '         1.26046157e+00, -2.69995451e+00, -1.14238274e+00,\n'
 '         2.63227129e+00, -6.48389518e-01,  6.65212274e-01,\n'
 '        -2.33394098e+00, -1.24991429e+00, -1.25809193e+00,\n'
 '        -5.45369268e-01, -2.46298051e+00,  7.28174508e-01,\n'
 '         1.39976275e+00, -8.98435295e-01, -1.23166657e+00,\n'
 '         1.95855451e+00,  9.96633053e-01,  1.33011937e-02,\n'
 '        -6.11833394e-01,  1.14211047e+00, -2.33911097e-01,\n'
 '         3.70097548e-01,  8.75917792e-01, -9.75051165e-01,\n'
 '         8.11795533e-01, -1.13672900e+00,  7.94824839e-01,\n'
 '        -1.35479003e-01, -1.14917743e+00,  4.13100243e+00,\n'
 '         2.18693480e-01,  1.12915480e+00,  6.51609123e-01,\n'
 '        -4.04558212e-01, -3.60269457e-01,  1.54441178e+00,\n'
 '        -3.80296087e+00, -2.60053992e-01, -2.99474788e+00,\n'
 '         2.73856372e-01,  1.15357518e+00, -1.60169470e+00,\n'
 '        -6.28113985e-01,  6.69693053e-02, -3.59153628e-01,\n'
 '        -1.96849957e-01, -3.17218065e-01, -6.91280961e-01,\n'
 '         2.10051608e+00,  4.94845897e-01, -6.03972495e-01,\n'
 '         1.34885347e+00, -1.52247131e-01,  4.97457385e-01,\n'
 '         8.64206791e-01,  1.05304980e+00,  8.06185007e-01,\n'
 '        -2.07309291e-01,  1.22212839e+00, -1.91884816e+00,\n'
 '        -4.63591874e-01,  2.97164500e-01, -1.08438468e+00,\n'
 '         8.29542697e-01, -4.84659195e-01, -4.91011590e-02,\n'
 '        -1.44792521e+00, -1.66905189e+00, -5.08529007e-01,\n'
 '         1.29227102e+00,  1.22890747e+00,  6.95181727e-01,\n'
 '         1.26691371e-01,  3.20005491e-02,  2.05115938e+00,\n'
 '         2.86921430e+00,  2.35502601e+00,  3.57258248e+00,\n'
 '         4.64962626e+00,  5.67528963e-01, -1.41872835e+00,\n'
 '         8.66106272e-01,  2.20541334e+00,  1.46517873e+00,\n'
 '         1.20268011e+00,  2.55005407e+00,  4.16348815e-01,\n'
 '         1.31547678e+00,  1.11370623e+00,  2.61056948e+00,\n'
 '         1.64361823e+00,  1.06755555e-01, -2.66918212e-01,\n'
 '        -6.27173603e-01,  2.31243277e+00, -7.35544086e-01,\n'
 '        -9.69756544e-01,  8.59972119e-01, -7.33041108e-01,\n'
 '         2.26031518e+00,  1.47075820e+00, -2.04052877e+00,\n'
 '        -2.24534583e+00, -1.03538120e+00,  1.11178029e+00,\n'
 '         6.24300837e-02, -7.22277880e-01,  1.28465915e+00,\n'
 '        -2.23840356e+00, -2.13043022e+00, -4.86804008e-01,\n'
 '        -1.86082840e+00, -1.05052984e+00, -1.21055388e+00,\n'
 '        -7.62592375e-01,  1.50987223e-01, -7.57609904e-02,\n'
 '        -2.43301201e+00, -1.39164281e+00, -1.17739093e+00,\n'
 '        -8.38216126e-01,  9.88419533e-01,  1.15912926e+00,\n'
 '         1.93104756e+00,  4.55949306e-01, -1.37938082e+00,\n'
 '        -1.53055382e+00, -3.22971702e+00,  1.64158374e-01,\n'
 '         2.33345836e-01, -2.36483693e+00, -1.38549042e+00,\n'
 '         1.36924958e+00]])')
'test_inceptionnet | batch_shape is: [1]'
'test_inceptionnet | logits.shape is: ivy.Shape(1, 1000)'
'||'
'test_inceptionnet | indices_test | true_indices is: [258 270 279]'
'test_inceptionnet | indices_test | calc_indices is: [258 270 279]'
'test_inceptionnet | device is: cpu'
'test_inceptionnet | fw is: numpy'
'test_inceptionnet | load_weights is: False'
'InceptionV3 | build | layer 1/22 built'
'InceptionV3 | build | layer 2/22 built'
'layer 3/22 built'
'InceptionV3 | build | layer 4/22 built'
'InceptionV3 | build | layer 5/22 built'
'InceptionV3 | build | layer 6/22 built'
'InceptionV3 | build | layer 7/22 built'
'InceptionV3 | build | layer 8/22 built'
'InceptionV3 | build | layer 9/22 built'
'InceptionV3 | build | layer 10/22 built'
'InceptionV3 | build | layer 11/22 built'
'InceptionV3 | build | layer 12/22 built'
'InceptionV3 | build | layer 13/22 built'
'InceptionV3 | build | layer 14/22 built'
'InceptionV3 | build | layer 15/22 built'
'InceptionV3 | build | layer 17/22 built'
'InceptionV3 | build | layer 18/22 built'
'InceptionV3 | build | layer 19/22 built'
'InceptionV3 | build | layer 20/22 built'
'InceptionV3 | build | layer 21/22 built'
'InceptionV3 | build | layer 22/22 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/4 built'
'layer 2/4 built'
'layer 3/4 built'
'layer 4/4 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/6 built'
'layer 2/6 built'
'layer 3/6 built'
'layer 4/6 built'
'layer 5/6 built'
'layer 6/6 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'inceptionNet_v3 | building InceptionV3 model | done 1/3'
'InceptionV3 | forward | input data_format is:NCHW | done 1/27'
'InceptionV3 | forward | data_format is going to be used is:NCHW | done 1/27'
'InceptionV3 | forward | input shape is:ivy.Shape(1, 224, 224, 3) | done 1/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 224, 224, 3) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 111, 111, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 111, 111, 32) | done 2/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 111, 111, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 32) | done 3/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 109, 109, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 64) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 64) | done 4/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 54, 54, 64) | done 5/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 54, 54, 80) | done 3/3'
'InceptionV3 | forward | is:ivy.Shape(1, 54, 54, 80) | done 6/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 80) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 52, 52, 192) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 52, 52, 192) | done 7/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 192) | done 8/27'
'input shape is:ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 32) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 32)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 25, 25, 256) | done 9/27'
'input shape is:ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 10/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 11/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 384) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 96) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 96)'
'one 20/20, output shape is:ivy.Shape(1, 12, 12, 288)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 12/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 12, 12, 768) | done 13/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 14/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 15/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 16/27'
'v3 16/27, output shape is:ivy.Shape(1, 12, 12, 768)'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 5, 5, 192)'
'one 7/20, output shape is:ivy.Shape(1, 5, 5, 768)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 1280) | done 17/27'
'input shape is:ivy.Shape(1, 5, 5, 1280)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 18/27'
'input shape is:ivy.Shape(1, 5, 5, 2048)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 19/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 20/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 5, 5) | done 21/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 1, 1) | done 22/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 27/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 24/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 25/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048) | done 26/27'
'InceptionV3 | forward | fc | done 27/27'
('test_inceptionnet | logits is: ivy.array([[ 1.48021797e+05, -9.04012500e+03, '
 '-1.38087500e+03,\n'
 '         1.02855094e+05,  3.02797219e+05, -6.06552500e+05,\n'
 '         7.21358938e+05, -4.16174750e+05, -2.14882625e+05,\n'
 '        -3.20778625e+05, -4.56690250e+05,  9.49806125e+05,\n'
 '        -4.57094844e+04,  2.40750266e+05,  4.79028438e+04,\n'
 '         4.19149125e+05,  7.25498375e+05, -6.55973250e+05,\n'
 '         6.11677688e+05,  2.73194500e+05,  6.54631625e+05,\n'
 '        -2.37013672e+05, -3.47583781e+05, -2.88003969e+05,\n'
 '        -8.20440312e+04, -1.08519828e+05, -4.79916719e+05,\n'
 '        -5.50103438e+05, -1.60273719e+05,  8.78915250e+05,\n'
 '        -5.27191250e+05, -5.26071188e+05, -3.63345062e+05,\n'
 '         3.27566938e+05, -8.92119750e+05, -8.12894875e+05,\n'
 '        -1.91642562e+05,  1.58974844e+04,  5.38220625e+04,\n'
 '        -1.73738438e+05,  2.01881594e+05, -4.11241875e+05,\n'
 '         3.69437188e+05,  1.02302588e+06, -9.89715875e+05,\n'
 '        -2.11403156e+05,  5.16427562e+05, -1.01517369e+06,\n'
 '         3.88630938e+05, -3.77686344e+05,  1.15294700e+06,\n'
 '        -8.58786250e+04,  9.48873281e+04,  1.74178500e+05,\n'
 '         1.16085156e+04,  8.22554000e+05,  6.02648250e+05,\n'
 '        -1.49914562e+05,  5.26188000e+05,  4.95575000e+04,\n'
 '         7.84731812e+05, -3.19288812e+05, -2.22130719e+05,\n'
 '        -1.22273750e+06,  3.12044000e+05,  7.13427562e+05,\n'
 '         1.95714688e+05,  1.61853344e+05, -1.09887328e+05,\n'
 '        -1.81733469e+05, -4.13909875e+05,  2.76116625e+05,\n'
 '        -7.83134844e+04,  4.13148688e+05, -1.85356344e+05,\n'
 '         5.85936719e+04,  1.50874562e+05, -5.43196250e+05,\n'
 '         5.57645250e+05, -3.74563812e+05, -2.11695156e+05,\n'
 '         1.84371625e+05,  1.05240525e+06,  1.18490703e+05,\n'
 '        -4.91139188e+05, -3.62448812e+05, -6.76141562e+04,\n'
 '         4.53059500e+05, -5.13771250e+05,  9.68779000e+05,\n'
 '         2.08408031e+05, -1.53773711e+04, -6.81933062e+05,\n'
 '         6.57985625e+05, -6.79650875e+05, -2.74045312e+05,\n'
 '         3.04107750e+05, -9.07998125e+05,  2.76922312e+05,\n'
 '         5.48429500e+05,  1.47813500e+05,  1.10834950e+06,\n'
 '         5.75965188e+05, -5.32382344e+04,  1.15896766e+05,\n'
 '        -8.84854750e+05, -3.81736594e+05,  9.71320469e+04,\n'
 '        -1.45241344e+05,  1.90095156e+05,  5.04778125e+03,\n'
 '         1.90956203e+05,  3.23953438e+04, -4.25710688e+05,\n'
 '         2.57901531e+05,  6.11593875e+05, -4.82631375e+05,\n'
 '         4.03117875e+05, -6.24443000e+05,  9.88833250e+05,\n'
 '        -2.18497125e+05,  6.11168188e+05,  1.46740391e+04,\n'
 '        -5.86594250e+05, -9.67082250e+05,  6.17659500e+05,\n'
 '        -5.53522375e+05, -1.86924188e+05, -4.39315406e+05,\n'
 '         7.64650156e+04,  1.04773438e+05, -1.03347656e+05,\n'
 '         6.39719750e+05, -9.73684875e+05, -2.14110312e+05,\n'
 '         4.87410625e+05,  5.93290125e+05,  4.99255438e+05,\n'
 '        -1.85084172e+05,  5.32291562e+04,  7.90651250e+05,\n'
 '        -3.12889656e+05,  3.87334062e+05, -8.49801562e+04,\n'
 '        -6.47902000e+05, -1.61044703e+05, -6.22986438e+05,\n'
 '         1.76968125e+05,  4.56744969e+05, -1.71003375e+05,\n'
 '         2.30811672e+05,  5.44016625e+05, -5.35298625e+05,\n'
 '        -4.10029594e+05, -1.18146288e+06, -2.36734188e+05,\n'
 '         4.84786000e+05,  3.16270438e+05, -1.98801234e+05,\n'
 '         1.74317484e+05,  1.33393344e+05,  9.21680312e+04,\n'
 '         2.30871312e+05,  8.34801250e+05, -6.70609250e+05,\n'
 '        -3.53874969e+05, -5.31249938e+05, -2.36506000e+05,\n'
 '         1.43529406e+05, -3.19521000e+05, -4.95171938e+05,\n'
 '        -3.39875000e+03,  3.96997219e+05, -5.34845000e+05,\n'
 '        -2.10224141e+05,  3.16403438e+05, -6.91850750e+05,\n'
 '         1.67923094e+05,  5.34921000e+05,  7.80349250e+05,\n'
 '         1.04559422e+05,  3.98008219e+05,  1.05398125e+06,\n'
 '         3.52544062e+04, -7.04119062e+05, -3.48608250e+05,\n'
 '         9.17330000e+04,  5.28223438e+05, -2.07496516e+05,\n'
 '        -6.11375156e+04, -6.65804250e+05, -3.83785406e+05,\n'
 '         2.30446031e+05, -9.42917438e+05,  3.62132000e+05,\n'
 '         6.06748062e+05, -2.32601266e+05,  6.36502578e+04,\n'
 '        -1.68941125e+05,  5.02460625e+04, -2.41675203e+05,\n'
 '         2.12695984e+05,  1.80236688e+05,  6.78916625e+05,\n'
 '        -9.59616406e+04,  3.29876312e+05, -2.25720875e+05,\n'
 '        -1.09978350e+06,  6.73772000e+05,  6.13486484e+04,\n'
 '        -5.25229938e+05, -3.93089531e+05,  6.32637688e+05,\n'
 '        -3.54610438e+05,  1.12268575e+06,  4.91369812e+05,\n'
 '        -4.63506062e+05, -2.73915438e+05, -4.96162438e+05,\n'
 '         2.66237375e+05, -5.24393250e+05,  1.49184844e+05,\n'
 '        -1.22962234e+05, -4.75601562e+04,  5.85551438e+05,\n'
 '         6.70943625e+05, -9.25712000e+05,  7.86148125e+05,\n'
 '         2.69287719e+05, -1.41659047e+05, -8.99591875e+04,\n'
 '        -1.95671844e+05,  4.92960219e+05,  3.28819656e+05,\n'
 '         1.59465281e+05, -7.73694531e+04, -5.64237656e+04,\n'
 '         6.38737250e+05,  3.96778688e+05, -1.65387094e+05,\n'
 '        -3.72878000e+05,  5.83191688e+05, -1.90447312e+05,\n'
 '         1.02030602e+05, -7.45244219e+04,  4.29607438e+05,\n'
 '         2.64130250e+05, -5.01958250e+05, -3.82863688e+05,\n'
 '         2.20948391e+05, -2.87026250e+05,  2.64093000e+05,\n'
 '        -1.26540359e+05,  3.18761270e+04, -3.11038438e+05,\n'
 '        -8.23578062e+05, -2.30891422e+05,  8.16069250e+05,\n'
 '         3.62405938e+05, -2.75391406e+05,  5.54819312e+05,\n'
 '         8.57302250e+05, -8.27324938e+05, -3.26491812e+05,\n'
 '         6.16321250e+05, -1.19868625e+06, -2.05381484e+05,\n'
 '         3.78439250e+05,  1.00145219e+05,  1.53959969e+05,\n'
 '        -1.63181203e+05, -2.52227625e+05,  2.03244562e+05,\n'
 '        -3.31211750e+05, -3.16132781e+05, -8.11832031e+04,\n'
 '         3.52951031e+05, -2.99991562e+05,  8.69237000e+05,\n'
 '        -1.32735219e+05,  4.45537938e+05,  9.28944688e+04,\n'
 '        -2.55365719e+05, -5.68466125e+05,  6.06296875e+05,\n'
 '         3.75782969e+05,  3.51533125e+04, -1.62531812e+05,\n'
 '         8.66109688e+05,  3.81884281e+05,  1.69460781e+05,\n'
 '         2.24496875e+03,  5.91726500e+05, -8.13804375e+04,\n'
 '         5.55193812e+05, -7.46484750e+05,  8.30620938e+04,\n'
 '         3.55840656e+05,  6.96728562e+05,  5.59126875e+04,\n'
 '         1.15468800e+06, -8.59937500e+03,  2.29141766e+05,\n'
 '         1.91413750e+04, -4.51100438e+05, -2.55404031e+05,\n'
 '         4.49124219e+05, -9.48186953e+04, -4.15617812e+05,\n'
 '        -1.48175578e+05,  4.98665250e+05, -1.10585500e+06,\n'
 '        -2.56571000e+05,  1.71569375e+05, -3.25354219e+05,\n'
 '         2.22662438e+05, -7.36505250e+05,  1.40005938e+04,\n'
 '        -5.58471500e+05, -2.13991047e+05, -1.04948375e+06,\n'
 '        -4.43325625e+05,  1.79306281e+05, -4.17194062e+04,\n'
 '        -2.71744938e+05,  6.68200547e+04, -7.79981250e+05,\n'
 '        -3.38280656e+05, -8.12921719e+04, -5.22422188e+05,\n'
 '         1.04556450e+06, -2.60650312e+05,  5.10167094e+05,\n'
 '        -1.23378250e+05,  9.72825312e+04,  1.89347891e+05,\n'
 '        -1.15380094e+05,  9.31655625e+04, -5.65170500e+05,\n'
 '         3.61862312e+05, -5.61758438e+04,  3.61157312e+05,\n'
 '        -4.60072938e+05, -4.24864062e+05, -6.33316875e+04,\n'
 '         1.80406312e+05, -1.10602062e+05,  1.15436562e+04,\n'
 '         3.11748438e+05,  1.25395438e+05, -9.02283125e+05,\n'
 '        -1.19414775e+06, -1.15031875e+04, -2.86671250e+04,\n'
 '        -6.46461688e+05,  4.32478219e+05,  1.21162422e+05,\n'
 '        -6.23240781e+04, -1.76382469e+05, -1.78758391e+05,\n'
 '        -1.57972188e+05, -1.57804203e+05, -4.89397656e+03,\n'
 '        -9.28796375e+05,  6.36178438e+04,  2.05497344e+05,\n'
 '        -3.64232875e+05, -4.00579500e+05, -2.77374719e+05,\n'
 '        -3.65383312e+05,  1.83114281e+05,  7.49889625e+05,\n'
 '        -7.81159375e+04, -1.71256266e+05, -3.39269250e+05,\n'
 '         1.13350100e+06,  7.87207500e+05,  7.10974562e+05,\n'
 '        -9.71341094e+04, -5.77393688e+05,  3.09344312e+05,\n'
 '         1.37150719e+05,  5.88944750e+05, -2.30831531e+05,\n'
 '         1.78376141e+05, -2.87239688e+05,  3.56492891e+04,\n'
 '         4.55325969e+05, -2.69007688e+05, -2.72132125e+05,\n'
 '        -3.60925625e+04, -7.44644500e+05, -2.62266625e+05,\n'
 '         3.18841562e+05, -2.27226781e+05,  1.04813869e+06,\n'
 '        -1.10761844e+05,  6.89452500e+05,  1.92333531e+05,\n'
 '         6.02683375e+05,  5.21946500e+05, -1.53965725e+06,\n'
 '         4.13555750e+05, -1.00250650e+06, -8.57831750e+05,\n'
 '         3.41575344e+05,  2.83984781e+05, -1.93070062e+05,\n'
 '         9.05615500e+05,  7.76392188e+05,  5.10724562e+05,\n'
 '         1.07872025e+06, -1.04529838e+06, -6.77648000e+05,\n'
 '         8.91004531e+04,  9.14847500e+05,  3.42551094e+05,\n'
 '         2.62555859e+04, -5.77324000e+05, -8.73719375e+05,\n'
 '         1.11880023e+05,  7.94409688e+04, -2.94301875e+04,\n'
 '        -1.78089500e+05,  3.74850844e+05, -2.35593141e+05,\n'
 '        -5.21261953e+04, -1.92950062e+05,  7.61723875e+05,\n'
 '         8.49860000e+05, -2.62677781e+05,  4.00831969e+05,\n'
 '        -2.23635016e+05,  8.75185250e+05, -1.19589125e+05,\n'
 '         1.39194150e+06, -5.56417812e+05,  5.16070234e+04,\n'
 '        -7.63665625e+04, -3.02486594e+05, -4.69640438e+05,\n'
 '         2.29124953e+05, -3.32142562e+05,  1.44070453e+05,\n'
 '        -4.96696719e+04,  9.67644375e+04,  6.56166875e+05,\n'
 '        -3.07462062e+05, -6.41678875e+05, -2.31365312e+05,\n'
 '         2.93758438e+05, -4.54153938e+05,  5.05946250e+05,\n'
 '         6.24424750e+05, -9.83796562e+05,  1.12572738e+06,\n'
 '         1.29798900e+06, -9.17897500e+04,  4.33630000e+05,\n'
 '        -1.00620625e+05,  4.92809219e+05, -5.82842344e+04,\n'
 '        -3.06587688e+05,  4.92444219e+05,  8.80496438e+05,\n'
 '         5.38455750e+05, -7.27460750e+05,  1.42599844e+05,\n'
 '         1.34430625e+04,  2.52244891e+05, -4.84197188e+05,\n'
 '        -5.18408281e+05, -3.16901938e+05, -3.65944906e+05,\n'
 '         1.15619578e+05,  6.28511812e+05, -2.28145641e+05,\n'
 '         1.11542336e+05,  6.53241562e+04, -1.79711531e+05,\n'
 '         5.32331125e+05,  2.77435312e+05,  1.19004725e+06,\n'
 '        -2.56087406e+05, -8.40135500e+05,  5.70911625e+05,\n'
 '         6.82087750e+05, -4.15106750e+05, -1.14028388e+06,\n'
 '         1.19185141e+05, -3.22763250e+05, -3.56426188e+05,\n'
 '         5.57454141e+04,  3.95329969e+05, -2.06050844e+05,\n'
 '         1.09156594e+05,  1.15536945e+05, -2.43618344e+05,\n'
 '        -6.74344500e+05,  7.15251125e+05,  2.33285938e+05,\n'
 '        -5.31668281e+04, -5.81475750e+05,  2.60607297e+05,\n'
 '         2.82156688e+05,  3.20662250e+05, -8.60532375e+05,\n'
 '         7.30981000e+05,  5.30098125e+05, -2.53144594e+05,\n'
 '        -1.55827562e+05, -3.28657188e+05,  1.69537188e+05,\n'
 '         1.14767075e+06,  1.30923172e+05, -3.38441125e+05,\n'
 '        -4.00432750e+05,  3.31558438e+05,  3.02831062e+05,\n'
 '        -3.31766719e+05, -3.07351438e+05, -2.89116250e+04,\n'
 '        -2.75821641e+04,  3.00265031e+05,  4.10891344e+05,\n'
 '         1.34307375e+05, -1.55555781e+05, -1.48446172e+05,\n'
 '        -1.16112734e+05,  2.64627062e+05,  9.45059219e+04,\n'
 '        -1.34061625e+05, -1.02180930e+05,  4.55846312e+05,\n'
 '         2.87370094e+05, -1.33139484e+05,  3.81209438e+05,\n'
 '         1.43404016e+05,  7.99027375e+05, -9.12039875e+05,\n'
 '         3.09539375e+05, -2.79652562e+05,  2.07262406e+05,\n'
 '        -1.20811906e+05, -3.35703281e+05,  3.82420188e+05,\n'
 '         7.39392000e+05, -1.04794512e+04,  4.14708000e+05,\n'
 '         2.35599234e+05, -3.03164312e+05,  1.23182575e+06,\n'
 '        -1.84469719e+05,  4.24615969e+05,  2.17745812e+05,\n'
 '         1.20945609e+05,  6.28868375e+05, -2.69519375e+05,\n'
 '         5.75788188e+05,  2.56507922e+05, -3.86144938e+05,\n'
 '        -2.96639188e+05,  5.60683562e+05,  2.45492047e+05,\n'
 '         1.26723575e+06,  3.67368062e+05,  1.99307484e+05,\n'
 '        -2.30094625e+05,  6.13130250e+05, -4.62810000e+05,\n'
 '        -2.79021094e+04, -1.11672570e+05,  4.90393406e+05,\n'
 '         2.40414609e+05,  1.23803400e+06,  6.15595938e+05,\n'
 '        -2.00606984e+05, -3.55363125e+05, -6.78637891e+04,\n'
 '         1.87636922e+05, -7.93757188e+04, -8.92484438e+05,\n'
 '         8.43791250e+04, -4.75187094e+05, -2.51055578e+05,\n'
 '        -6.81858375e+05, -4.62682312e+05, -6.85645500e+05,\n'
 '        -6.09277438e+05, -7.62995469e+04,  2.55997812e+05,\n'
 '        -2.69984375e+04, -7.36467688e+05,  5.01625938e+05,\n'
 '         1.07910212e+06, -3.28542906e+05, -1.50173016e+05,\n'
 '         1.93684312e+05, -3.16485000e+05,  4.08177875e+05,\n'
 '        -3.47891062e+05, -5.84493312e+05, -4.41001938e+05,\n'
 '         1.58906719e+05, -2.81760875e+05, -5.84790688e+05,\n'
 '         4.58617406e+05,  4.62627156e+05,  3.72998906e+04,\n'
 '         5.29464812e+05,  2.82676125e+05, -7.06392812e+05,\n'
 '        -5.18752469e+05,  3.88227875e+05,  2.51844344e+05,\n'
 '         8.37842375e+05, -3.39738906e+04, -3.76712375e+05,\n'
 '         8.08547500e+05,  6.26514625e+05, -6.50264375e+05,\n'
 '         3.01353125e+04,  2.32956031e+05,  5.37489188e+05,\n'
 '        -4.57479500e+05,  9.12108000e+05, -2.34156812e+05,\n'
 '         5.92282562e+05,  5.81307375e+05, -3.66257000e+05,\n'
 '        -2.42483297e+05,  9.14208125e+04, -6.42390875e+05,\n'
 '         5.03351219e+05,  1.53001562e+05,  7.45513125e+05,\n'
 '        -6.14366125e+05,  2.16368500e+05, -2.85133250e+05,\n'
 '        -2.31103250e+05, -4.45176719e+05,  1.57097438e+05,\n'
 '        -2.17320406e+05,  2.24196781e+05, -2.71743750e+05,\n'
 '         5.44597312e+05, -9.26401750e+05, -5.33908938e+05,\n'
 '        -4.89161312e+05, -1.12983844e+05,  5.08871625e+05,\n'
 '         3.67767875e+05,  4.68969000e+05, -1.92853344e+05,\n'
 '         4.03003312e+05, -2.29526281e+05, -6.71568688e+05,\n'
 '        -3.56408000e+05,  7.47572125e+05, -6.55796000e+05,\n'
 '         1.31940469e+04,  6.26513398e+04,  1.01127188e+06,\n'
 '        -4.11957812e+04,  2.67825438e+05,  9.14751438e+05,\n'
 '        -1.28375453e+05,  1.19841688e+05, -1.07696900e+06,\n'
 '        -7.04390625e+02,  3.12216562e+05,  2.43898578e+05,\n'
 '        -1.27645438e+05,  5.48693250e+05, -5.19290031e+05,\n'
 '        -2.85909031e+05, -4.49704469e+05,  9.57335938e+02,\n'
 '         2.27955312e+05, -9.37219625e+05,  3.23572625e+05,\n'
 '        -2.86955625e+05,  7.80812938e+05,  5.69146000e+05,\n'
 '         3.93352344e+04,  4.76000000e+02, -5.80734938e+05,\n'
 '         1.26932219e+05,  7.73133281e+04, -1.47497594e+05,\n'
 '         1.84311766e+05, -4.25570875e+05, -4.92172375e+05,\n'
 '        -5.55159750e+05, -5.71472875e+05,  2.81639656e+05,\n'
 '        -2.32601875e+05,  6.00978125e+05, -5.17574312e+05,\n'
 '        -6.49409625e+05, -1.69115312e+05, -1.02089875e+06,\n'
 '         1.94308109e+05,  5.58492500e+05,  4.48968594e+05,\n'
 '        -9.34855375e+05,  1.88694492e+04,  2.05024094e+05,\n'
 '        -2.52883312e+05,  2.13362594e+05,  1.02074969e+05,\n'
 '         2.60617781e+05, -9.32448438e+04,  2.93126438e+05,\n'
 '        -1.27202203e+05,  8.38066250e+05,  2.91608312e+05,\n'
 '        -1.36807156e+05, -3.16061188e+05, -3.73688500e+05,\n'
 '         6.72006500e+05,  9.96694625e+05,  8.37706938e+05,\n'
 '        -2.13803188e+05, -7.47445562e+05,  1.09160094e+05,\n'
 '        -3.79674156e+05, -1.35466328e+04,  1.07173075e+06,\n'
 '         2.92700625e+04, -7.03807031e+03, -1.26831641e+05,\n'
 '        -3.28852688e+05, -9.04965859e+04, -8.18806094e+04,\n'
 '         2.86496062e+05, -7.87839812e+05, -1.16467922e+05,\n'
 '         4.97255281e+05, -5.57736438e+05,  9.46492500e+05,\n'
 '         1.78402141e+05, -1.93096812e+05, -1.06629781e+05,\n'
 '        -4.83990500e+05,  7.68497109e+04, -1.62656094e+05,\n'
 '        -5.44216375e+05,  4.38798594e+05, -1.44031531e+05,\n'
 '         3.56086500e+05,  2.91670625e+05, -1.35224800e+06,\n'
 '         5.37284062e+04, -1.61604500e+05, -4.80957906e+05,\n'
 '        -9.01701375e+05, -3.79857000e+05,  1.23430234e+05,\n'
 '         6.87922000e+05, -2.08750000e+05,  6.61663812e+05,\n'
 '         6.82689500e+05, -9.74584562e+05, -4.92125438e+05,\n'
 '        -2.72788562e+05, -4.08381406e+05, -5.72372750e+05,\n'
 '         8.22047188e+05,  7.31304125e+05, -5.96999688e+05,\n'
 '        -8.93280625e+04, -9.98302125e+05, -6.85837312e+05,\n'
 '        -1.98502438e+05, -4.71587625e+05, -3.53246562e+05,\n'
 '        -1.47798750e+04,  8.53299219e+03, -1.97253719e+05,\n'
 '         6.06420938e+05,  1.39919938e+05,  6.91890156e+04,\n'
 '         2.51383969e+05, -9.40142500e+05,  2.29761719e+05,\n'
 '         3.39194781e+05,  1.10478350e+06, -4.93101469e+05,\n'
 '        -1.72387969e+05,  8.91440312e+04,  8.39546375e+05,\n'
 '         5.49349250e+05,  9.75767312e+05, -4.02265469e+04,\n'
 '        -1.03660100e+06,  5.72009188e+05, -1.79139625e+05,\n'
 '        -5.21823156e+05,  2.19955828e+05, -2.48061844e+05,\n'
 '         6.26279250e+05, -3.66518438e+04,  1.54431344e+05,\n'
 '        -4.63614312e+05,  1.10116562e+05, -1.88032234e+05,\n'
 '        -1.15525650e+06, -3.82184250e+05, -6.06425000e+05,\n'
 '        -6.90996562e+04,  5.07023688e+05,  9.59080000e+04,\n'
 '        -1.94276188e+05,  5.85492750e+05, -7.36469688e+04,\n'
 '         1.34036812e+05, -1.46828125e+04,  5.91272188e+05,\n'
 '         9.83309688e+05,  9.79739375e+04,  2.02385172e+05,\n'
 '        -3.44581500e+05,  4.72860375e+05, -1.69451031e+05,\n'
 '         8.37743625e+05, -1.21200500e+05,  4.73097312e+05,\n'
 '         6.50412750e+05, -3.56869250e+05, -3.59572750e+05,\n'
 '         6.13784125e+05,  2.35442031e+05, -1.00195925e+06,\n'
 '         5.23414656e+05, -1.31846969e+05, -1.37255406e+05,\n'
 '         1.11065288e+06,  5.54477188e+04, -3.73332422e+04,\n'
 '        -7.75992562e+05,  5.56815625e+05, -8.87100000e+04,\n'
 '        -1.79917594e+05,  7.48506750e+05,  8.65557188e+04,\n'
 '         6.68661250e+05,  5.03302312e+05, -1.68789062e+05,\n'
 '         1.32502328e+05, -5.67465000e+05, -7.78672188e+05,\n'
 '         7.80310500e+05,  6.69476562e+03, -1.03393025e+06,\n'
 '        -4.36527844e+05,  4.24485250e+05, -8.78632812e+03,\n'
 '        -1.20553047e+04,  1.07607078e+05,  6.11745312e+03,\n'
 '        -5.78086500e+05, -5.24036719e+04, -6.59226562e+05,\n'
 '        -2.54657969e+05,  1.05661562e+04, -4.43724438e+05,\n'
 '        -1.00534494e+06, -1.46881250e+06,  2.29247031e+05,\n'
 '        -3.63045156e+04, -4.46713312e+05,  2.79507562e+05,\n'
 '        -4.02366562e+05,  7.97893125e+04,  4.24005500e+05,\n'
 '        -6.34489062e+05, -1.48900297e+05, -3.98858188e+05,\n'
 '         1.52466125e+05, -1.80629375e+05,  8.65500000e+02,\n'
 '        -2.57795891e+05,  2.95363375e+05,  2.59047375e+05,\n'
 '        -1.36321281e+05, -3.13727938e+05, -2.36365094e+05,\n'
 '         3.97869750e+05,  9.36697969e+04,  7.24089562e+05,\n'
 '        -4.39252188e+04,  6.94677000e+05,  5.13295438e+05,\n'
 '         6.33513750e+05, -6.24252875e+05, -1.90149438e+05,\n'
 '         2.28924891e+05,  4.12345281e+05, -2.47969531e+04,\n'
 '         6.03120312e+05,  6.73384844e+04, -1.19748662e+06,\n'
 '         8.07179688e+03, -2.08589797e+05,  6.37511125e+05,\n'
 '         2.04394516e+05, -4.85629594e+05,  6.00130625e+05,\n'
 '        -1.13243898e+05, -1.51928391e+05, -3.97958438e+05,\n'
 '         8.60370062e+05, -1.21245656e+05, -3.17350562e+05,\n'
 '        -7.31120703e+04, -6.94174875e+05,  8.57802875e+05,\n'
 '         1.54551328e+05, -5.29975375e+05, -5.47812031e+04,\n'
 '        -5.73009125e+05,  2.62071875e+05,  4.84881000e+05,\n'
 '         3.59217500e+05, -8.52735188e+05,  1.05868875e+06,\n'
 '        -1.10780039e+05,  3.47805969e+05, -1.74631953e+05,\n'
 '         3.50885562e+05,  5.51699812e+05, -3.52748500e+05,\n'
 '        -1.15808125e+06,  3.25548750e+05,  6.33775938e+05,\n'
 '        -3.12405469e+05, -9.74535375e+05,  3.49991219e+05,\n'
 '        -1.30524281e+05, -6.02114875e+05,  8.77755156e+04,\n'
 '         1.71142719e+05,  1.34661156e+05, -5.79150438e+05,\n'
 '         5.55246312e+05,  6.70162250e+05,  2.61726484e+05,\n'
 '         4.79200500e+05,  8.12758906e+04,  1.72571650e+06,\n'
 '         5.96915938e+05, -9.61780875e+05, -3.77319062e+05,\n'
 '        -6.05210812e+05, -1.15674156e+05,  1.01739650e+06,\n'
 '        -4.27908398e+04,  6.68426062e+05, -1.67886750e+05,\n'
 '         7.77986375e+05, -1.87926562e+03,  2.41149656e+05,\n'
 '         1.91533422e+05, -2.62248562e+05, -1.96520828e+05,\n'
 '        -5.16144688e+05,  4.74084688e+04, -1.72293984e+05,\n'
 '         9.66860812e+05, -2.45051062e+05,  4.31503688e+05,\n'
 '        -1.04350125e+05, -7.59931375e+05,  2.06353750e+05,\n'
 '        -3.80451156e+05, -5.19427531e+05,  1.04377219e+05,\n'
 '         2.55252094e+05,  4.40520125e+05, -6.22192344e+04,\n'
 '         3.19472875e+05, -2.44118672e+05,  1.06938625e+05,\n'
 '        -4.42951656e+05, -6.10091125e+05, -3.19534062e+05,\n'
 '        -3.70461562e+05,  9.05649844e+04, -4.12610844e+05,\n'
 '        -4.87682250e+05, -5.04932594e+05, -1.63805406e+05,\n'
 '         1.48343688e+05,  2.08772984e+05, -7.10059000e+05,\n'
 '         1.25155727e+05,  1.40908938e+06,  9.76698750e+05,\n'
 '        -5.51238375e+05]])')
'test_inceptionnet | batch_shape is: [1]'
'test_inceptionnet | logits.shape is: ivy.Shape(1, 1000)'
'||'
'test_inceptionnet | device is: cpu'
'test_inceptionnet | fw is: numpy'
'test_inceptionnet | load_weights is: True'
'InceptionV3 | build | layer 1/22 built'
'InceptionV3 | build | layer 2/22 built'
'layer 3/22 built'
'InceptionV3 | build | layer 4/22 built'
'InceptionV3 | build | layer 5/22 built'
'InceptionV3 | build | layer 6/22 built'
'InceptionV3 | build | layer 7/22 built'
'InceptionV3 | build | layer 8/22 built'
'InceptionV3 | build | layer 9/22 built'
'InceptionV3 | build | layer 10/22 built'
'InceptionV3 | build | layer 11/22 built'
'InceptionV3 | build | layer 12/22 built'
'InceptionV3 | build | layer 13/22 built'
'InceptionV3 | build | layer 14/22 built'
'InceptionV3 | build | layer 15/22 built'
'InceptionV3 | build | layer 17/22 built'
'InceptionV3 | build | layer 18/22 built'
'InceptionV3 | build | layer 19/22 built'
'InceptionV3 | build | layer 20/22 built'
'InceptionV3 | build | layer 21/22 built'
'InceptionV3 | build | layer 22/22 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/4 built'
'layer 2/4 built'
'layer 3/4 built'
'layer 4/4 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/6 built'
'layer 2/6 built'
'layer 3/6 built'
'layer 4/6 built'
'layer 5/6 built'
'layer 6/6 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'inceptionNet_v3 | building InceptionV3 model | done 1/3'
'inceptionNet_v3 | clearning pretrained weights | done 2/3'
'inceptionNet_v3 | loading pretrained weights | done 3/3'
'InceptionV3 | forward | input data_format is:NCHW | done 1/27'
'InceptionV3 | forward | data_format is going to be used is:NCHW | done 1/27'
'InceptionV3 | forward | input shape is:ivy.Shape(1, 224, 224, 3) | done 1/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 224, 224, 3) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 111, 111, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 111, 111, 32) | done 2/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 111, 111, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 32) | done 3/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 109, 109, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 64) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 64) | done 4/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 54, 54, 64) | done 5/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 54, 54, 80) | done 3/3'
'InceptionV3 | forward | is:ivy.Shape(1, 54, 54, 80) | done 6/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 80) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 52, 52, 192) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 52, 52, 192) | done 7/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 192) | done 8/27'
'input shape is:ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 32) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 32)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 25, 25, 256) | done 9/27'
'input shape is:ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 10/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 11/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 384) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 96) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 96)'
'one 20/20, output shape is:ivy.Shape(1, 12, 12, 288)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 12/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 12, 12, 768) | done 13/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 14/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 15/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 16/27'
'v3 16/27, output shape is:ivy.Shape(1, 12, 12, 768)'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 5, 5, 192)'
'one 7/20, output shape is:ivy.Shape(1, 5, 5, 768)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 1280) | done 17/27'
'input shape is:ivy.Shape(1, 5, 5, 1280)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 18/27'
'input shape is:ivy.Shape(1, 5, 5, 2048)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 19/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 20/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 5, 5) | done 21/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 1, 1) | done 22/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 27/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 24/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 25/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048) | done 26/27'
'InceptionV3 | forward | fc | done 27/27'
('test_inceptionnet | logits is: ivy.array([[-4.05281424e-01, -9.15424466e-01, '
 '-4.72918153e-01,\n'
 '         1.07722330e+00, -8.27604532e-03, -1.76320583e-01,\n'
 '         2.68153811e+00,  4.53911811e-01,  1.57506764e-02,\n'
 '        -2.17397976e+00, -1.88420546e+00, -1.32155681e+00,\n'
 '        -1.45936501e+00,  1.18012548e+00,  1.23527110e+00,\n'
 '         1.04661904e-01, -1.94180667e+00, -1.06212664e+00,\n'
 '        -4.03900147e-01,  4.38554466e-01,  2.64664841e+00,\n'
 '        -1.75913024e+00, -7.01906562e-01, -1.37475324e+00,\n'
 '         1.57212770e+00, -7.45481849e-01,  2.39705056e-01,\n'
 '        -1.65968716e+00, -1.08901608e+00, -1.14883828e+00,\n'
 '         2.63850093e-02, -2.47765973e-01,  1.61622095e+00,\n'
 '         3.22665572e-01,  1.99199521e+00, -4.16093558e-01,\n'
 '         6.18736208e-01, -1.38114309e+00, -5.05216956e-01,\n'
 '        -3.50341827e-01,  8.12820554e-01,  6.37798190e-01,\n'
 '        -1.25599790e+00,  3.79960477e-01,  1.16943598e-01,\n'
 '        -1.12219775e+00, -6.80676460e-01,  1.67004800e+00,\n'
 '        -3.36253554e-01,  1.04094541e+00,  8.77705991e-01,\n'
 '        -1.02508962e-01,  1.11602020e+00, -7.56989360e-01,\n'
 '         2.84914208e+00,  1.14848584e-01, -2.06014848e+00,\n'
 '        -1.11058915e+00,  8.71154666e-01, -8.73313904e-01,\n'
 '         1.04455197e+00,  1.79453969e+00, -4.94064629e-01,\n'
 '        -5.37969470e-01, -5.99029303e-01,  1.04113817e+00,\n'
 '         2.10287929e+00,  1.70140600e+00,  1.70854890e+00,\n'
 '        -6.63105905e-01, -4.95953292e-01,  4.18924898e-01,\n'
 '        -1.52242768e+00, -1.04447305e+00, -8.59271765e-01,\n'
 '         6.12831831e-01,  2.75204718e-01,  1.53955996e+00,\n'
 '         1.32131338e-01,  6.64533377e-02, -1.46278310e+00,\n'
 '         3.55865687e-01,  2.73594230e-01,  7.45484173e-01,\n'
 '         1.59875751e+00, -1.06323588e+00,  4.13477838e-01,\n'
 '        -1.61989713e+00,  1.99557632e-01, -2.00884521e-01,\n'
 '        -5.51065922e-01,  1.34721994e+00, -7.61586785e-01,\n'
 '        -4.28891957e-01, -3.14593375e-01,  1.20204627e-01,\n'
 '         1.45256495e+00, -1.26842320e+00, -1.70415533e+00,\n'
 '         1.44805264e+00,  2.32019734e+00,  7.94311583e-01,\n'
 '        -1.10124612e+00,  2.79700041e-01,  2.03981018e+00,\n'
 '        -1.29285026e+00, -1.41805530e+00, -5.33416629e-01,\n'
 '         6.68158710e-01,  1.10671771e+00, -4.71464604e-01,\n'
 '        -2.06835318e+00, -2.26754576e-01,  8.57633352e-01,\n'
 '         1.86734474e+00, -1.95263720e+00, -1.16988182e+00,\n'
 '         2.01813281e-01, -6.84773803e-01, -9.91312146e-01,\n'
 '        -5.31810045e-01, -1.71686053e+00,  1.26883894e-01,\n'
 '         1.73327744e-01, -4.18096900e-01, -2.00975239e-01,\n'
 '        -1.73834503e+00, -1.54683262e-01, -3.82189274e-01,\n'
 '        -2.47420326e-01, -1.58434367e+00,  2.06831634e-01,\n'
 '         1.78499579e+00, -6.38698459e-01, -2.24451304e-01,\n'
 '         1.16598368e+00,  5.75327337e-01, -1.22180693e-01,\n'
 '        -7.74065197e-01, -1.42123830e+00, -6.65766597e-01,\n'
 '         1.67475879e+00, -1.43517864e+00,  6.03874564e-01,\n'
 '         1.92230034e+00,  8.79796863e-01,  7.76302576e-01,\n'
 '        -3.49438786e-01,  1.71428406e+00,  1.03067326e+00,\n'
 '         5.14669537e-01,  6.62582278e-01,  2.37166333e+00,\n'
 '         2.83188701e-01,  2.38359237e+00, -8.83271635e-01,\n'
 '         4.54949498e-01,  4.38685322e+00,  4.23766732e-01,\n'
 '        -1.45167160e+00, -1.33869171e-01, -1.28922021e+00,\n'
 '        -1.01640177e+00, -4.29683238e-01, -2.85860270e-01,\n'
 '        -1.53251380e-01,  4.27172929e-01,  5.88928819e-01,\n'
 '        -1.07135892e+00,  2.24688959e+00,  1.81511140e+00,\n'
 '         1.58746696e+00,  7.51561940e-01,  1.85111016e-01,\n'
 '         7.13233650e-01, -5.92746556e-01, -1.20303810e+00,\n'
 '        -6.49093464e-02,  1.90322208e+00, -7.21850932e-01,\n'
 '        -9.79068816e-01, -6.51178539e-01, -2.66776180e+00,\n'
 '         1.05189014e+00, -3.50256264e-01, -3.49968314e-01,\n'
 '         1.16986811e+00, -1.69381306e-01, -2.34068894e+00,\n'
 '        -4.43106508e+00, -8.25016499e-01, -1.95813942e+00,\n'
 '         8.22760224e-01, -2.55912638e+00, -1.42674386e+00,\n'
 '         8.28925744e-02, -1.90128171e+00,  3.85569364e-01,\n'
 '        -1.92661524e-01,  1.43329740e+00, -1.46910369e-01,\n'
 '        -3.32647181e+00, -1.28013635e+00,  4.19269705e+00,\n'
 '        -2.32407975e+00, -2.34408736e+00, -1.32720816e+00,\n'
 '         9.40071285e-01, -2.08952188e+00, -1.33710253e+00,\n'
 '         5.97254992e-01,  3.63825858e-01, -1.31648028e+00,\n'
 '        -4.87945408e-01,  2.47955179e+00,  3.24555099e-01,\n'
 '         1.31630290e+00,  5.81264854e-01,  2.62379825e-01,\n'
 '        -2.50591064e+00,  9.43145990e-01,  8.36163998e-01,\n'
 '         3.38339353e+00,  1.08230340e+00,  4.09410620e+00,\n'
 '        -7.61661887e-01,  1.87632143e+00, -4.67913294e+00,\n'
 '         2.46453810e+00,  1.33629441e+00,  2.85775137e+00,\n'
 '         1.87622130e+00,  2.44039595e-02,  1.43110752e+00,\n'
 '         3.93355101e-01,  1.18239030e-01,  1.11979699e+00,\n'
 '         2.02686429e+00, -1.33239627e+00, -8.96278739e-01,\n'
 '        -2.78733850e-01,  6.18714452e-01,  2.71952701e+00,\n'
 '        -1.02768987e-01, -1.98775113e+00, -6.80364013e-01,\n'
 '         6.19568944e-01,  1.34192634e+00,  6.40141916e+00,\n'
 '         4.01769590e+00,  4.11005783e+00,  7.32769906e-01,\n'
 '        -4.45385486e-01,  2.93580890e-02,  5.69534123e-01,\n'
 '         1.03644580e-01,  1.37523449e+00,  8.11169815e+00,\n'
 '         1.75145588e+01,  5.93638706e+00,  3.90525484e+00,\n'
 '         4.65067196e+00, -5.24304390e-01,  3.01591009e-01,\n'
 '        -2.51061201e+00,  1.21688247e+00, -4.22182798e-01,\n'
 '         2.14031959e+00,  2.13924766e-01,  1.44417286e+00,\n'
 '         1.17490320e+01, -2.06663466e+00,  7.27929354e-01,\n'
 '        -4.62657750e-01, -6.79661572e-01, -2.52884531e+00,\n'
 '        -7.11393833e-01,  2.13682246e+00, -1.84049106e+00,\n'
 '         1.06479721e+01,  2.43511558e+00, -1.31675446e+00,\n'
 '        -2.08305717e+00,  3.62665200e+00, -2.79236883e-01,\n'
 '        -2.65824318e+00, -1.74121845e+00,  1.74798465e+00,\n'
 '        -1.19504619e+00, -2.70741135e-01, -1.55077958e+00,\n'
 '        -7.21739888e-01, -4.72209334e-01, -2.64457941e+00,\n'
 '        -1.17832017e+00, -8.38494539e-01,  2.92248344e+00,\n'
 '        -8.53995562e-01, -1.38797545e+00, -1.68034494e+00,\n'
 '         6.54803991e-01, -1.19981444e+00,  2.02510738e+00,\n'
 '        -1.27896994e-01,  8.09285402e-01, -1.15912509e+00,\n'
 '        -8.06205094e-01, -1.07193440e-01,  1.01662791e+00,\n'
 '         1.19288385e+00, -8.76205504e-01,  1.38725102e+00,\n'
 '         1.60152602e+00,  1.11086702e+00,  2.08532691e+00,\n'
 '         1.87554562e+00,  2.83766687e-01,  1.00952482e+00,\n'
 '         1.39015162e+00, -4.94097471e-02,  5.65489769e-01,\n'
 '         1.37743324e-01,  2.02975702e+00,  2.50442266e+00,\n'
 '        -2.02245832e+00,  1.50942790e+00,  1.67207575e+00,\n'
 '         1.97352719e+00,  4.22808319e-01,  7.72499666e-02,\n'
 '        -9.59066510e-01,  1.85041213e+00,  2.25223684e+00,\n'
 '         2.03022033e-01,  6.10959053e-01, -2.89345932e+00,\n'
 '        -2.04537725e+00,  7.02474534e-01,  1.71611571e+00,\n'
 '        -1.41931593e+00,  8.24061453e-01,  1.18890643e-01,\n'
 '        -3.02901357e-01, -2.79038906e-01, -8.71331096e-01,\n'
 '         1.74081325e-03,  2.33697319e+00,  1.54642236e+00,\n'
 '         9.81526196e-01, -1.50889921e+00, -2.06682873e+00,\n'
 '         1.48488224e-01, -2.22265697e+00, -8.95339698e-02,\n'
 '        -2.49954611e-01,  2.18337107e+00,  5.65690219e-01,\n'
 '        -7.03117609e-01,  7.82315970e-01, -1.14965940e+00,\n'
 '        -5.10041118e-01,  3.01447630e-01, -1.36099637e+00,\n'
 '         9.37148333e-02,  6.08293116e-02, -2.97731304e+00,\n'
 '        -3.70616341e+00, -2.53378511e+00, -3.12294811e-02,\n'
 '        -2.50802684e+00,  1.75910145e-01, -2.38825011e+00,\n'
 '        -2.87706518e+00, -1.99566865e+00, -1.07396722e+00,\n'
 '        -1.15056157e+00, -1.72341228e+00,  6.28622174e-01,\n'
 '        -3.71365666e-01, -1.73307955e+00,  4.10349697e-01,\n'
 '        -2.25781131e+00, -2.61518025e+00, -2.40210891e+00,\n'
 '        -2.02243781e+00, -1.11717336e-01, -2.14016771e+00,\n'
 '        -1.46765804e+00, -9.61075783e-01, -1.26764619e+00,\n'
 '        -1.38485146e+00,  3.29686880e-01,  4.08271790e-01,\n'
 '         7.35410154e-01,  5.35555243e-01,  1.14491022e+00,\n'
 '         1.97627807e+00, -5.11166692e-01, -2.24876612e-01,\n'
 '         6.01992845e-01,  2.39219755e-01, -2.36507845e+00,\n'
 '        -3.29884350e-01, -1.35923779e+00,  2.09960794e+00,\n'
 '         8.53300929e-01, -8.20932031e-01, -1.52964997e+00,\n'
 '        -1.68041325e+00, -2.41063595e+00, -1.36233401e+00,\n'
 '        -1.97107959e+00, -2.08475590e+00, -2.54924631e+00,\n'
 '        -1.72304702e+00, -2.50502408e-01,  6.61508620e-01,\n'
 '         1.29479647e+00, -2.44539833e+00, -4.38091159e-01,\n'
 '        -1.65872037e+00, -2.96326304e+00,  4.88193244e-01,\n'
 '         1.10701108e+00,  2.72826672e+00,  1.92540336e+00,\n'
 '        -3.17362011e-01, -5.12525916e-01,  1.38972068e+00,\n'
 '         7.03059852e-01,  7.45616436e-01, -1.92784846e+00,\n'
 '        -4.94485527e-01,  5.03012657e-01, -8.21802795e-01,\n'
 '         2.54211605e-01, -2.23711801e+00,  2.99102247e-01,\n'
 '        -6.46410823e-01,  2.26463467e-01,  4.19739246e-01,\n'
 '         3.37173283e-01, -7.33498335e-02, -2.55211687e+00,\n'
 '        -2.65220880e-01,  3.89762187e+00, -2.23475647e+00,\n'
 '        -1.79970860e+00,  1.06516814e+00, -4.89623368e-01,\n'
 '         8.16972852e-01,  5.72753727e-01, -9.73296463e-02,\n'
 '        -1.42117178e+00, -1.22700453e+00,  3.82312149e-01,\n'
 '         1.09962750e+00,  6.13836646e-01, -1.00904977e+00,\n'
 '         8.40915561e-01, -6.83326721e-02, -1.20734072e+00,\n'
 '        -5.94563246e-01,  1.62270355e+00,  1.56604493e+00,\n'
 '        -1.26480281e+00,  3.50086182e-01, -5.92330694e-01,\n'
 '        -5.34303665e-01, -1.10763347e+00,  1.34015739e+00,\n'
 '        -8.11872184e-01, -5.57623953e-02,  2.19700217e+00,\n'
 '        -4.02258098e-01, -2.01884317e+00,  3.32322407e+00,\n'
 '        -4.17709202e-01,  3.28307676e+00,  1.90253496e-01,\n'
 '         1.67545164e+00,  7.81012237e-01, -3.02183509e+00,\n'
 '         1.56605625e+00,  6.54556036e-01, -2.13898301e+00,\n'
 '        -3.15244853e-01, -6.92263126e-01,  1.28269660e+00,\n'
 '         7.91779756e-01, -7.37024128e-01,  4.92461324e-02,\n'
 '        -2.15722561e+00, -2.94351363e+00, -1.98271096e+00,\n'
 '         3.25119436e-01, -1.19392180e+00, -6.47626817e-04,\n'
 '         1.29942656e+00, -3.49734366e-01, -2.51162797e-01,\n'
 '         1.04614747e+00, -2.83306718e-01,  3.62077355e-01,\n'
 '        -2.79029560e+00,  1.66749573e+00, -1.40293181e+00,\n'
 '        -1.41133010e-01, -3.44846726e-01,  5.38441420e-01,\n'
 '         1.47310972e-01,  1.37177301e+00,  6.93708539e-01,\n'
 '        -1.49517775e-01,  4.20375049e-01, -3.70988399e-02,\n'
 '        -2.06197906e+00,  4.80708659e-01, -2.83733869e+00,\n'
 '        -1.66989541e+00, -1.29369962e+00, -1.61529362e+00,\n'
 '         4.29676026e-01, -1.19332993e+00, -9.78107810e-01,\n'
 '        -8.89704108e-01, -3.14122820e+00, -2.62702203e+00,\n'
 '        -1.24082029e+00, -1.14191067e+00, -1.46207440e+00,\n'
 '        -7.07151890e-01, -1.73514211e+00, -8.80208790e-01,\n'
 '        -2.05909872e+00, -1.63332868e+00, -3.75997519e+00,\n'
 '         2.59923172e+00,  6.28741026e-01, -1.32747412e+00,\n'
 '        -5.98430812e-01, -1.23450708e+00, -1.22073007e+00,\n'
 '         3.09960961e+00, -1.30442166e+00, -1.67590380e+00,\n'
 '         1.27890384e+00,  2.49490127e-01, -1.11949630e-01,\n'
 '        -4.52277452e-01,  7.85280764e-01, -6.76618099e-01,\n'
 '        -3.05355817e-01, -1.81331384e+00,  6.45574853e-02,\n'
 '        -2.09300542e+00,  8.76382589e-02,  5.48978984e-01,\n'
 '         2.84903087e-02,  2.31516138e-01, -1.99671716e-01,\n'
 '        -2.87263155e-01,  2.32133222e+00,  1.33450293e+00,\n'
 '         1.57206714e-01,  2.90241212e-01,  3.69530320e-01,\n'
 '         2.77028531e-01,  2.84521556e+00, -6.35493279e-01,\n'
 '        -1.20931768e+00, -9.61471677e-01,  1.83299279e+00,\n'
 '         1.75960934e+00, -5.55411339e-01,  1.79293126e-01,\n'
 '         9.05237317e-01, -1.58284402e+00,  2.27451873e+00,\n'
 '        -1.95970392e+00, -2.13946715e-01,  4.97610778e-01,\n'
 '        -1.82898149e-01,  1.13674653e+00,  1.84483159e+00,\n'
 '         1.85491228e+00, -2.85013652e+00,  2.24486613e+00,\n'
 '        -2.00904369e-01, -1.99475497e-01,  1.83666647e-01,\n'
 '        -1.42423415e+00,  1.19380784e+00,  3.89264435e-01,\n'
 '         5.99783122e-01,  1.71025619e-01,  1.58442295e+00,\n'
 '        -6.68939501e-02,  1.76543981e-01,  1.35316491e-01,\n'
 '         1.24173172e-01, -1.95421660e+00, -3.37679565e-01,\n'
 '         1.66166723e-01,  2.71269393e+00, -1.95781219e+00,\n'
 '         3.71915078e+00,  7.19905496e-01,  8.17286015e-01,\n'
 '        -2.42266715e-01, -5.32653630e-02,  1.27268577e+00,\n'
 '        -6.65328383e-01,  1.82011828e-01,  1.73384619e+00,\n'
 '        -2.48426485e+00, -9.20850575e-01,  2.76641160e-01,\n'
 '        -1.05292153e+00, -1.33892441e+00, -5.76937854e-01,\n'
 '         1.50176322e+00, -7.86568224e-01, -2.26911545e+00,\n'
 '         9.13784742e-01,  5.10633171e-01,  6.68316841e-01,\n'
 '        -9.61951852e-01,  2.10063011e-01,  6.34985685e-01,\n'
 '        -2.45378590e+00, -2.44072056e+00, -1.90542316e+00,\n'
 '        -1.82187998e+00,  5.69015443e-02, -2.20716095e+00,\n'
 '         7.70177662e-01, -6.10157132e-01,  2.12863350e+00,\n'
 '         1.49734449e+00, -4.44532901e-01, -1.58714914e+00,\n'
 '        -7.16910183e-01,  1.28819144e+00, -2.69431424e+00,\n'
 '         1.21742165e+00,  1.66964054e+00, -9.89120662e-01,\n'
 '         5.51374555e-01,  7.51522660e-01, -2.38663673e+00,\n'
 '        -1.16612419e-01,  7.36175329e-02, -1.30010176e+00,\n'
 '        -9.48033810e-01, -2.88148022e+00,  2.14441791e-01,\n'
 '        -2.41412854e+00, -3.87208760e-01, -2.64398003e+00,\n'
 '        -1.86280623e-01, -7.60366440e-01,  1.55118334e+00,\n'
 '        -2.41429448e+00, -3.74428302e-01, -3.85799855e-01,\n'
 '        -1.01770528e-01, -2.37240881e-01, -1.79027808e+00,\n'
 '         1.00878924e-01,  4.31025624e-02, -1.38633513e+00,\n'
 '         1.14368463e+00, -1.54991817e+00,  1.05819559e+00,\n'
 '         8.79749715e-01, -2.60049701e-01,  1.98692954e+00,\n'
 '         1.41207695e+00,  6.54416203e-01,  1.48663711e+00,\n'
 '        -3.23393297e+00,  1.57347798e+00, -2.46022534e+00,\n'
 '         3.13157290e-01, -2.50441790e+00, -8.49625349e-01,\n'
 '         1.07829809e+00,  2.06617564e-02, -9.48567688e-01,\n'
 '         1.28321779e+00, -2.80047298e-01, -2.15289056e-01,\n'
 '        -8.88640583e-01, -1.02044702e+00,  2.64174175e+00,\n'
 '         1.57060623e+00, -8.57556820e-01,  8.18521500e-01,\n'
 '        -2.36077845e-01, -1.13483465e+00,  5.53840458e-01,\n'
 '        -2.85728621e+00,  3.57243836e-01, -2.70483231e+00,\n'
 '        -2.91902780e+00, -6.22106567e-02,  1.21501517e+00,\n'
 '        -1.72929048e+00, -3.76147866e+00, -5.74772239e-01,\n'
 '         1.14740694e+00,  1.64929062e-01, -5.93336701e-01,\n'
 '        -8.51806879e-01, -4.16258514e-01, -3.33772302e-01,\n'
 '        -2.89201379e-01, -6.64532065e-01,  1.38079596e+00,\n'
 '         3.62240493e-01, -1.78668654e+00, -2.83289105e-01,\n'
 '        -1.98696643e-01,  1.45824778e+00,  4.33977544e-01,\n'
 '         1.91338450e-01,  5.98600209e-01,  6.11151695e-01,\n'
 '        -6.57728612e-02,  8.66268158e-01,  1.94518542e+00,\n'
 '         5.54383636e-01,  3.90760124e-01, -1.74409199e+00,\n'
 '        -1.09338433e-01, -4.98942763e-01,  7.69560456e-01,\n'
 '        -1.13926828e+00, -8.92745614e-01,  1.09530497e+00,\n'
 '         3.01168680e-01,  9.22848523e-01,  5.76482713e-01,\n'
 '        -1.95229387e+00, -1.31297803e+00,  3.98124647e+00,\n'
 '        -8.92859101e-01, -1.35106504e+00, -9.74427462e-02,\n'
 '        -2.42768455e+00, -5.93245476e-02, -4.07536089e-01,\n'
 '        -1.32887518e+00, -2.36850381e+00,  6.70239985e-01,\n'
 '        -1.57246435e+00,  1.28226030e+00,  5.47007561e-01,\n'
 '        -3.27780819e+00, -1.00809181e+00, -2.04927158e+00,\n'
 '         5.79298139e-01,  9.26455200e-01, -1.87653327e+00,\n'
 '        -1.34330010e+00, -8.67518425e-01,  1.65602148e+00,\n'
 '        -2.69981170e+00,  5.80408275e-01,  1.53032422e-01,\n'
 '        -1.09981906e+00, -1.32516611e+00,  3.43058646e-01,\n'
 '        -1.43533751e-01,  9.41328704e-01,  1.50982678e-01,\n'
 '        -1.17802107e+00,  4.19454873e-02,  1.41391087e+00,\n'
 '         2.96487594e+00,  1.15905449e-01, -2.26305798e-02,\n'
 '         3.18719745e-02, -4.03901577e-01,  4.50405776e-02,\n'
 '        -8.17369461e-01, -1.46527004e+00,  3.12733149e+00,\n'
 '         9.64644074e-01, -2.83105612e-01,  1.93166387e+00,\n'
 '         1.32549322e+00,  8.40086222e-01, -1.36509872e+00,\n'
 '        -4.25736010e-01, -1.07298148e+00, -3.49343324e+00,\n'
 '        -2.18689293e-01,  2.26186276e+00,  1.32357311e+00,\n'
 '        -1.95842356e-01,  4.36965287e-01,  7.88618922e-01,\n'
 '        -3.55170399e-01,  6.04783177e-01, -2.68537378e+00,\n'
 '         5.08053750e-02,  1.97969174e+00, -6.44296944e-01,\n'
 '         2.13171816e+00,  4.14564013e-01, -3.75773609e-01,\n'
 '        -1.62118530e+00,  1.15375125e+00,  8.25913548e-01,\n'
 '         1.54117620e+00, -1.10271001e+00, -3.03034806e+00,\n'
 '        -1.04671300e+00,  6.50422573e-01, -2.45687890e+00,\n'
 '        -5.03111124e-01, -1.69566202e+00,  1.18535757e+00,\n'
 '        -1.09487712e-01, -1.02027273e+00, -1.53416610e+00,\n'
 '         8.27855110e-01, -1.80367398e+00,  8.19981173e-02,\n'
 '         6.17353097e-02,  1.18340218e+00,  1.20994842e+00,\n'
 '        -1.42581928e+00, -1.40149641e+00,  1.47753501e+00,\n'
 '         2.21202522e-01,  4.38372105e-01, -1.15812969e+00,\n'
 '         9.59994316e-01,  1.12158763e+00,  6.25699163e-01,\n'
 '         1.72317874e+00,  2.35591888e+00, -1.51950121e-02,\n'
 '        -2.76773786e+00, -2.96214890e+00,  1.91580057e-01,\n'
 '        -1.79364467e+00,  1.39352644e+00, -8.56840730e-01,\n'
 '         3.05670357e+00,  9.69975591e-01,  4.22306657e-01,\n'
 '        -4.89367247e-01, -2.68385291e+00,  5.16800404e-01,\n'
 '         1.10434640e+00, -4.79151249e-01,  4.27705705e-01,\n'
 '         3.20382524e+00, -4.25597251e-01,  1.59850359e+00,\n'
 '        -2.96532941e+00, -2.82620221e-01, -5.88642240e-01,\n'
 '        -2.61720568e-01, -1.68612623e+00,  4.60586131e-01,\n'
 '         6.58138394e-01, -8.89133155e-01, -4.37316865e-01,\n'
 '        -1.46958947e+00, -2.11913776e+00, -1.17703652e+00,\n'
 '        -3.27734053e-01, -2.69672418e+00,  1.26885450e+00,\n'
 '         1.46718755e-01, -1.66453242e+00, -1.04259992e+00,\n'
 '        -9.73131359e-02, -1.48513019e+00, -2.32419372e-01,\n'
 '        -4.05651391e-01,  3.07633996e+00,  6.17698789e-01,\n'
 '        -1.22788608e+00,  1.80236423e+00, -2.33521074e-01,\n'
 '        -7.31732786e-01, -7.04729438e-01,  8.68579030e-01,\n'
 '        -9.14268494e-01, -1.31619215e+00,  2.44589043e+00,\n'
 '        -8.99521411e-01,  7.77009904e-01,  4.87708956e-01,\n'
 '         1.26111925e+00,  5.29658198e-01,  3.44504863e-01,\n'
 '        -1.58120692e+00,  4.28368628e-01, -1.75337052e+00,\n'
 '         6.23093247e-01,  7.33121336e-01, -7.26091862e-02,\n'
 '         1.18137443e+00,  6.11761928e-01,  1.15479827e+00,\n'
 '         1.21076012e+00,  3.55995989e+00,  1.56215215e+00,\n'
 '         7.05350280e-01, -4.28998321e-01, -5.96873701e-01,\n'
 '         1.58471799e+00, -1.13877285e+00, -8.55618656e-01,\n'
 '         1.95498967e+00,  1.70549548e+00,  5.80240667e-01,\n'
 '        -2.34978819e+00, -3.22957456e-01, -9.53724444e-01,\n'
 '        -1.48096514e+00, -2.08980656e+00,  9.14363384e-01,\n'
 '         1.25752747e-01,  4.61769581e-01, -2.24009013e+00,\n'
 '        -1.28601503e+00, -1.01950932e+00, -8.37540030e-02,\n'
 '         1.26920223e-01, -1.09719729e+00, -1.85814369e+00,\n'
 '        -1.90414226e+00,  2.75867492e-01,  1.69276535e-01,\n'
 '         1.64374399e+00, -1.69607806e+00, -3.34004104e-01,\n'
 '        -7.78071523e-01, -1.67965984e+00, -8.73962164e-01,\n'
 '        -1.02621746e+00, -3.49404901e-01,  2.69030595e+00,\n'
 '         1.03286397e+00, -6.60349369e-01,  4.60501432e-01,\n'
 '         1.02378798e+00,  1.24092948e+00,  1.34495544e+00,\n'
 '        -1.12874493e-01,  1.30798399e+00,  3.00469667e-01,\n'
 '        -1.43929124e+00,  1.70522153e+00, -3.39595586e-01,\n'
 '        -9.63885963e-01, -2.57283449e+00, -1.19824743e+00,\n'
 '         3.63634396e+00,  1.76762462e+00, -9.03529048e-01,\n'
 '        -2.14080483e-01,  5.32247841e-01,  1.07237887e+00,\n'
 '         1.21739507e+00,  1.68681872e+00, -2.50144005e-01,\n'
 '        -1.03690600e+00,  2.86502659e-01,  2.56591582e+00,\n'
 '         1.58526945e+00,  7.05469251e-01, -6.72171295e-01,\n'
 '         5.79638183e-01, -7.22864091e-01,  5.54176450e-01,\n'
 '        -7.93952286e-01, -2.77338219e+00,  1.77953869e-01,\n'
 '        -1.60739958e+00,  6.68870568e-01,  1.47877008e-01,\n'
 '        -1.93280566e+00,  7.45393991e-01, -1.12948251e+00,\n'
 '        -1.47115922e+00, -2.51211786e+00,  1.89550531e+00,\n'
 '         1.16955686e+00,  9.02665556e-01, -5.67303777e-01,\n'
 '         2.06757784e+00]])')
'test_inceptionnet | batch_shape is: [1]'
'test_inceptionnet | logits.shape is: ivy.Shape(1, 1000)'
'||'
'test_inceptionnet | indices_test | true_indices is: [258 270 279]'
'test_inceptionnet | indices_test | calc_indices is: [258 270 279]'
'test_inceptionnet | device is: cpu'
'test_inceptionnet | fw is: jax'
'test_inceptionnet | load_weights is: False'
'InceptionV3 | build | layer 1/22 built'
'InceptionV3 | build | layer 2/22 built'
'layer 3/22 built'
'InceptionV3 | build | layer 4/22 built'
'InceptionV3 | build | layer 5/22 built'
'InceptionV3 | build | layer 6/22 built'
'InceptionV3 | build | layer 7/22 built'
'InceptionV3 | build | layer 8/22 built'
'InceptionV3 | build | layer 9/22 built'
'InceptionV3 | build | layer 10/22 built'
'InceptionV3 | build | layer 11/22 built'
'InceptionV3 | build | layer 12/22 built'
'InceptionV3 | build | layer 13/22 built'
'InceptionV3 | build | layer 14/22 built'
'InceptionV3 | build | layer 15/22 built'
'InceptionV3 | build | layer 17/22 built'
'InceptionV3 | build | layer 18/22 built'
'InceptionV3 | build | layer 19/22 built'
'InceptionV3 | build | layer 20/22 built'
'InceptionV3 | build | layer 21/22 built'
'InceptionV3 | build | layer 22/22 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/4 built'
'layer 2/4 built'
'layer 3/4 built'
'layer 4/4 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/6 built'
'layer 2/6 built'
'layer 3/6 built'
'layer 4/6 built'
'layer 5/6 built'
'layer 6/6 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'inceptionNet_v3 | building InceptionV3 model | done 1/3'
'InceptionV3 | forward | input data_format is:NHWC | done 1/27'
'InceptionV3 | forward | data_format is going to be used is:NHWC | done 1/27'
'InceptionV3 | forward | input shape is:ivy.Shape(1, 224, 224, 3) | done 1/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 224, 224, 3) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 111, 111, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 111, 111, 32) | done 2/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 111, 111, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 32) | done 3/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 109, 109, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 64) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 64) | done 4/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 54, 54, 64) | done 5/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 54, 54, 80) | done 3/3'
'InceptionV3 | forward | is:ivy.Shape(1, 54, 54, 80) | done 6/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 80) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 52, 52, 192) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 52, 52, 192) | done 7/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 192) | done 8/27'
'input shape is:ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 32) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 32)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 25, 25, 256) | done 9/27'
'input shape is:ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 10/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 11/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 384) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 96) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 96)'
'one 20/20, output shape is:ivy.Shape(1, 12, 12, 288)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 12/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 12, 12, 768) | done 13/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 14/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 15/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 16/27'
'v3 16/27, output shape is:ivy.Shape(1, 12, 12, 768)'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 5, 5, 192)'
'one 7/20, output shape is:ivy.Shape(1, 5, 5, 768)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 1280) | done 17/27'
'input shape is:ivy.Shape(1, 5, 5, 1280)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 18/27'
'input shape is:ivy.Shape(1, 5, 5, 2048)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 19/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 20/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 5, 5) | done 21/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 1, 1) | done 22/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 27/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 24/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 25/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048) | done 26/27'
'InceptionV3 | forward | fc | done 27/27'
('test_inceptionnet | logits is: ivy.array([[ 2.27084395e+04,  9.02972500e+05, '
 '-1.48047031e+05,\n'
 '         1.50825562e+06,  7.02987812e+04,  2.68975719e+05,\n'
 '         6.10630688e+05,  6.24932812e+05,  1.30753211e+05,\n'
 '        -5.68577062e+05, -3.33157781e+05, -2.83188875e+05,\n'
 '         2.90093965e+04,  1.87509625e+05,  2.02536762e+06,\n'
 '         2.20257625e+05,  4.01504375e+05,  4.65943594e+04,\n'
 '        -1.58974672e+05,  9.40858875e+05,  4.19863281e+05,\n'
 '        -2.17941516e+05,  7.28214922e+04, -1.25830800e+06,\n'
 '        -7.19036484e+04,  3.19953594e+05,  1.62201538e+06,\n'
 '         7.42074062e+04,  5.88096438e+05, -1.70515750e+05,\n'
 '         4.23096133e+04,  2.08597375e+06, -1.19681888e+06,\n'
 '        -4.84080656e+05,  5.37465438e+05,  3.94377531e+05,\n'
 '         1.37637688e+06,  1.46621175e+06, -7.28789938e+05,\n'
 '         8.54831719e+04,  2.76134062e+05,  8.09559938e+05,\n'
 '         1.98899562e+05,  1.30644971e+04,  6.01807875e+05,\n'
 '         1.45819425e+06, -4.75434344e+05, -2.17449297e+05,\n'
 '         8.89954438e+05, -2.15412141e+05, -5.15748719e+05,\n'
 '        -8.10930688e+05,  1.21651850e+06, -7.21186062e+05,\n'
 '        -8.53000312e+05,  7.15168125e+04, -1.36163438e+05,\n'
 '         1.48243750e+05, -6.57639438e+05, -1.20536297e+05,\n'
 '        -1.18773075e+06, -5.68357250e+05, -8.83685312e+04,\n'
 '        -5.18229719e+05,  7.62716328e+04, -4.06820562e+05,\n'
 '        -4.36336656e+05,  1.60518675e+06, -3.06847469e+05,\n'
 '         6.21513562e+05,  5.66296750e+05,  8.42708516e+04,\n'
 '         9.35234625e+05, -2.00088172e+05,  1.16045050e+06,\n'
 '        -1.29850712e+06, -5.21900625e+05,  1.43596699e+04,\n'
 '         4.19007812e+05,  2.19740047e+05, -7.69785812e+05,\n'
 '         2.27287297e+05,  2.99672281e+05, -1.07860200e+06,\n'
 '        -9.58209125e+05,  1.23176609e+05,  6.40560062e+05,\n'
 '        -4.32720438e+05, -1.01383356e+06,  7.69803500e+05,\n'
 '        -4.29292906e+05,  2.63589875e+05,  1.24375112e+06,\n'
 '        -2.75201938e+05,  8.32796250e+05, -1.09594350e+06,\n'
 '         1.74809422e+05,  7.53624812e+05, -9.21690812e+05,\n'
 '        -1.21390875e+06,  8.20893625e+05,  9.73333500e+05,\n'
 '        -9.29228188e+05,  4.75898094e+05, -3.18229629e+04,\n'
 '        -3.21347312e+05, -1.85609638e+06,  1.43289750e+06,\n'
 '         7.85911484e+04, -6.27003250e+05, -1.78421825e+06,\n'
 '        -1.50463438e+06, -7.72830188e+05,  6.63451000e+05,\n'
 '        -5.87725438e+05,  1.36936212e+06,  1.04382150e+06,\n'
 '        -1.46193734e+05,  8.18876648e+02, -7.63183875e+05,\n'
 '         8.05949438e+05, -1.36493266e+05, -2.79889188e+05,\n'
 '         5.30569625e+05,  3.55141250e+05,  9.71362625e+05,\n'
 '        -7.56824125e+05,  6.17819625e+05, -8.90573594e+04,\n'
 '         5.77750703e+04, -6.86414688e+05,  8.09985312e+05,\n'
 '        -5.11538188e+05,  3.88458625e+05,  3.37547375e+05,\n'
 '         2.17688781e+05, -7.35891750e+05,  1.46289638e+06,\n'
 '         1.23493500e+06,  2.48038391e+05, -2.07810098e+04,\n'
 '        -9.59415188e+05,  2.65621062e+05,  2.43146609e+05,\n'
 '         1.22876212e+06, -9.83687750e+05, -3.88731094e+05,\n'
 '        -3.95030031e+05,  6.26916250e+05,  1.15571450e+06,\n'
 '         2.41193391e+05,  1.85555838e+06, -6.50659812e+05,\n'
 '         4.59495094e+05,  2.61582484e+05,  1.72828625e+06,\n'
 '        -1.02234769e+06, -4.56392656e+05,  5.22639281e+05,\n'
 '         8.57937125e+05,  8.31108438e+05,  2.33619359e+05,\n'
 '         4.92552422e+04,  4.39586812e+05, -1.35213238e+06,\n'
 '         7.16408500e+05,  3.20125449e+04,  2.40780906e+05,\n'
 '         6.80569625e+05,  7.89717812e+05, -1.15271175e+06,\n'
 '        -7.02726438e+05, -3.81885688e+05, -1.96929375e+05,\n'
 '        -2.92472875e+05,  1.30884212e+06, -3.95611125e+05,\n'
 '        -3.74716281e+05, -7.51081812e+05,  5.76059938e+05,\n'
 '        -5.64187109e+04, -6.60568438e+05, -7.08046000e+05,\n'
 '         7.78135562e+05,  2.18974453e+05,  7.40767125e+05,\n'
 '        -1.82856172e+05,  3.12592406e+05, -5.47137125e+05,\n'
 '         7.52161406e+04,  3.62288875e+05,  2.25959578e+05,\n'
 '         1.92623612e+06,  3.07432719e+05,  6.98658750e+05,\n'
 '         7.66415391e+04, -1.33137031e+05,  2.59632188e+05,\n'
 '         7.32712688e+05, -1.45349638e+06,  1.75446488e+06,\n'
 '         8.16790781e+04,  9.09932812e+05, -1.91672725e+06,\n'
 '        -4.99043438e+05, -1.13303212e+06, -2.00186469e+05,\n'
 '        -3.28237062e+05,  4.94655969e+05, -2.03303000e+06,\n'
 '         1.03794875e+05, -1.31923100e+06, -5.64653164e+04,\n'
 '         1.21348325e+06,  9.07457500e+05,  5.37380688e+05,\n'
 '         1.40278250e+05,  3.79335750e+05,  1.25540625e+06,\n'
 '         3.75894375e+05, -2.62877109e+04,  1.95657900e+06,\n'
 '        -1.46682812e+06, -1.08184250e+06,  9.01433312e+05,\n'
 '         1.54767281e+05, -3.73943688e+05,  1.07149412e+06,\n'
 '         1.04456856e+06,  1.78476609e+05, -6.26699188e+05,\n'
 '         1.04802531e+05, -4.39842750e+05, -4.61283281e+05,\n'
 '         4.22378312e+05,  8.72257125e+05, -4.11975719e+05,\n'
 '         5.51981938e+05, -5.99553938e+05, -3.97749594e+05,\n'
 '        -1.32340812e+06,  1.20767451e+04,  1.14941812e+06,\n'
 '        -1.07244797e+05, -7.22422062e+05,  2.61445547e+05,\n'
 '         1.37003450e+06, -6.91242875e+05,  4.60995219e+05,\n'
 '        -3.92568031e+05,  2.48722141e+05,  6.71538750e+04,\n'
 '        -1.44004312e+05,  2.88087781e+05, -6.22725062e+05,\n'
 '        -8.64359688e+05, -1.60492031e+05, -6.48684375e+05,\n'
 '         1.87939500e+05,  1.98981189e+03, -8.94329812e+05,\n'
 '        -1.01909269e+06, -1.84213531e+05,  1.48209450e+06,\n'
 '         1.39470075e+06,  1.37372850e+06,  2.15668691e+04,\n'
 '         6.27385750e+05,  1.09853012e+06, -2.86074219e+05,\n'
 '         5.03453781e+05, -1.60696062e+05,  2.05210200e+06,\n'
 '         5.86930500e+05,  1.40264038e+06, -2.50633422e+05,\n'
 '        -4.92803688e+05,  4.02463000e+05,  5.33786062e+05,\n'
 '        -3.05854719e+05, -7.87882375e+05, -5.14118969e+05,\n'
 '        -2.73146156e+05, -5.01138375e+05, -1.48372859e+05,\n'
 '        -1.15602388e+06,  1.47207641e+05, -5.15511062e+05,\n'
 '        -5.70746445e+04,  1.91043672e+05,  7.57703875e+05,\n'
 '         1.05512925e+06, -9.28310750e+05, -3.12541344e+05,\n'
 '        -1.90201100e+06, -4.62225664e+04, -9.08511062e+05,\n'
 '         1.09302539e+05, -4.85479438e+05, -1.02674269e+06,\n'
 '         3.36556062e+05, -7.47929141e+04, -4.60339656e+05,\n'
 '         3.89840500e+05,  2.05095266e+05, -2.60315750e+05,\n'
 '         5.35608000e+05, -1.56728712e+06,  7.43279750e+05,\n'
 '         3.97453250e+05,  4.54822031e+04,  1.36477850e+06,\n'
 '        -1.75557938e+05, -4.16768312e+05, -7.46268438e+05,\n'
 '        -5.54310000e+05, -1.00233606e+06,  1.68918050e+06,\n'
 '         1.00425431e+06,  3.55155250e+05,  6.23095188e+05,\n'
 '         2.92622250e+05, -1.06731125e+06,  2.08332219e+05,\n'
 '        -1.07421050e+06,  5.49440750e+05,  1.07688850e+06,\n'
 '         2.59701406e+05, -7.62969188e+05, -7.74702250e+05,\n'
 '         1.04487088e+06,  1.57227788e+06, -6.96917125e+05,\n'
 '         9.38282938e+05,  1.14312662e+06,  2.09476850e+06,\n'
 '         2.29207844e+05,  7.65937000e+05, -1.64462725e+06,\n'
 '        -5.71962383e+04,  1.37637688e+05, -1.05242800e+06,\n'
 '        -1.90963703e+05,  6.35949875e+05,  1.56954800e+06,\n'
 '        -1.26616612e+06,  3.95247812e+05,  1.99192297e+05,\n'
 '        -1.86013900e+06, -5.16028672e+04,  2.83365410e+04,\n'
 '         3.82021000e+05, -9.37556938e+05, -1.07378162e+06,\n'
 '         1.19848195e+05, -8.46073812e+05,  6.38205312e+05,\n'
 '         1.22826172e+05,  4.05804281e+05, -2.86442344e+05,\n'
 '         4.83463938e+05,  4.12525500e+05,  8.38660500e+05,\n'
 '        -1.14768638e+06,  3.76596000e+05,  5.48542500e+04,\n'
 '         7.93801000e+05,  6.86907000e+05, -4.52541219e+05,\n'
 '        -8.01828438e+05,  6.98008000e+05, -7.03807312e+05,\n'
 '         4.46524156e+05,  5.03399453e+04,  1.19284400e+06,\n'
 '        -1.37792912e+06, -5.55808375e+05,  1.76651297e+05,\n'
 '        -4.96840000e+05, -1.11596538e+06,  3.82885000e+05,\n'
 '        -1.41837875e+06,  1.65940312e+06,  4.12881188e+05,\n'
 '        -1.82565225e+06, -3.70386844e+05, -3.95065594e+05,\n'
 '        -1.20748488e+06, -4.21470812e+05,  8.45168688e+05,\n'
 '         5.56933750e+05, -6.94625812e+05, -1.14152266e+05,\n'
 '        -1.33040100e+06, -3.59714812e+05, -9.90715625e+05,\n'
 '        -7.71940562e+05,  7.21533188e+05, -1.27485462e+06,\n'
 '         1.72848300e+06, -1.53974188e+06,  5.98841375e+05,\n'
 '        -9.87896312e+05, -5.52485352e+04,  6.14740250e+05,\n'
 '         9.76677875e+05, -4.18782062e+05,  7.34768375e+05,\n'
 '         4.23655438e+05, -1.35882175e+06,  8.81446312e+05,\n'
 '         3.90757938e+05, -2.80798188e+05,  5.04923438e+05,\n'
 '        -6.51337438e+05,  1.90480656e+05,  2.95388156e+05,\n'
 '        -7.26610312e+04,  4.46717594e+05,  1.17269150e+06,\n'
 '         1.15506398e+05,  1.48547078e+05, -1.39120500e+05,\n'
 '         1.14865562e+06,  3.46532000e+05,  3.26983531e+05,\n'
 '        -5.15743156e+05,  4.13009594e+05, -6.02194375e+05,\n'
 '         1.42647725e+06,  1.07936836e+05, -6.82474438e+05,\n'
 '        -1.14221188e+05,  1.36054525e+06, -1.62322351e+03,\n'
 '         1.97578828e+05,  8.84178750e+05,  2.62142891e+05,\n'
 '        -3.95521094e+05,  5.83997812e+05, -1.06751912e+06,\n'
 '         4.21863625e+05,  7.49413750e+05, -1.07173212e+06,\n'
 '         8.22961719e+04, -3.07678531e+05, -2.22025975e+06,\n'
 '         1.40206875e+05, -8.68673438e+04, -7.31904453e+04,\n'
 '        -9.29801625e+05,  2.30731150e+06, -9.21194438e+05,\n'
 '         2.30537688e+05,  5.40924500e+05,  2.81615469e+05,\n'
 '         6.15488062e+05,  8.14787688e+05, -2.64272125e+05,\n'
 '         3.32288094e+05, -5.68552750e+05,  6.84758312e+05,\n'
 '         8.62265312e+05, -6.31073000e+05, -5.40629625e+05,\n'
 '         2.48431469e+05, -1.80827475e+06,  1.38531862e+06,\n'
 '         7.99734562e+05,  2.01591750e+06, -4.40999170e+03,\n'
 '         5.14470156e+05, -1.26430912e+06, -1.39299525e+06,\n'
 '         2.61358422e+05, -1.00200438e+06, -1.36715850e+06,\n'
 '         6.88174250e+05,  4.05390281e+05,  6.75570438e+05,\n'
 '        -2.13560273e+04, -1.15000412e+06,  1.55199953e+05,\n'
 '         5.30019688e+05,  7.71797062e+05, -1.58354859e+05,\n'
 '         1.79690844e+05,  1.50209512e+06,  4.19722344e+05,\n'
 '         3.62443062e+05, -7.28148250e+05,  3.49982422e+04,\n'
 '        -1.68797625e+06,  9.42571328e+04, -1.44442025e+06,\n'
 '         1.19755312e+04,  8.98598125e+05, -8.98940859e+04,\n'
 '         1.06205712e+06,  1.08757312e+06,  5.78625156e+04,\n'
 '         8.20948125e+04,  5.70025125e+05, -2.19163531e+05,\n'
 '        -3.58901938e+05,  1.78374297e+04, -2.43691484e+05,\n'
 '         2.49889531e+05, -6.41067125e+05,  4.87933250e+05,\n'
 '        -1.70969016e+05, -1.02148819e+06,  1.52062062e+06,\n'
 '        -7.30923188e+05,  6.97791875e+05, -5.50513188e+05,\n'
 '         1.80171138e+06,  4.45116188e+05, -1.85772359e+05,\n'
 '         1.16753800e+06, -3.94404500e+05, -1.00639300e+06,\n'
 '        -3.59689375e+05, -1.64956922e+05, -1.40841362e+06,\n'
 '        -5.53734424e+03, -3.62630094e+05, -1.17618088e+06,\n'
 '        -1.40571391e+05, -1.43034038e+06, -4.50712688e+05,\n'
 '        -7.96505938e+04,  1.50337362e+06, -1.49241975e+06,\n'
 '        -2.02633531e+05,  2.15233000e+05, -3.63074406e+05,\n'
 '        -6.14222383e+04, -4.22021523e+04, -8.65703375e+05,\n'
 '         8.11547375e+05, -1.60554312e+05,  6.22248625e+05,\n'
 '        -5.31342375e+05,  6.95865625e+04, -8.20804188e+05,\n'
 '        -7.52556688e+05,  8.02795812e+05, -5.64986812e+05,\n'
 '         7.06484219e+04, -2.75366969e+05, -1.13889062e+06,\n'
 '         3.96665219e+05, -1.65347462e+06,  3.81297070e+04,\n'
 '         4.02649438e+05,  1.25365138e+06,  1.27079462e+06,\n'
 '        -4.95469656e+05, -1.82857219e+05, -1.25939212e+06,\n'
 '         9.67801688e+05, -1.88724438e+05, -1.50761175e+06,\n'
 '        -1.44138562e+05,  4.24874594e+05, -2.61173625e+05,\n'
 '         8.08446625e+05, -9.50742188e+04, -4.42479812e+05,\n'
 '         4.68949125e+05, -3.39622250e+05,  1.70392350e+06,\n'
 '        -3.12471000e+05, -9.01093812e+05, -2.24732641e+05,\n'
 '         5.97289500e+05, -1.52318150e+06,  2.98857375e+05,\n'
 '        -4.96681688e+05, -1.03513012e+06,  8.90078188e+05,\n'
 '         1.94942391e+05,  6.13725742e+04,  5.47331812e+05,\n'
 '         1.34681650e+06, -2.97997594e+05, -1.22748075e+06,\n'
 '        -1.94616016e+05,  9.84827375e+05,  3.76015844e+05,\n'
 '        -1.00222258e+05,  8.62951688e+05, -5.93963984e+04,\n'
 '        -3.56981594e+05, -1.99279125e+05,  9.49325438e+05,\n'
 '         6.69539062e+05, -4.68403719e+05, -6.74919125e+05,\n'
 '        -3.62755594e+05, -7.91146562e+05,  7.08309453e+04,\n'
 '         8.74937188e+04,  2.34538125e+05,  1.15972212e+06,\n'
 '        -5.77441000e+05,  1.67352750e+05, -5.22249312e+05,\n'
 '         7.88284312e+05,  1.02704194e+06,  4.12872094e+05,\n'
 '         5.27219500e+05, -1.58521888e+06,  9.24713125e+05,\n'
 '         2.62229344e+05,  6.39620062e+05, -1.16177539e+04,\n'
 '        -9.08113500e+05,  1.32374750e+06,  1.33267512e+06,\n'
 '        -2.38153574e+04,  6.30908375e+05, -9.73825500e+05,\n'
 '         4.62256188e+05,  2.28857266e+05, -1.97358500e+06,\n'
 '        -8.12561500e+05, -3.02644219e+05,  1.46317262e+06,\n'
 '         1.50520359e+05, -2.09811625e+05,  1.26390175e+06,\n'
 '        -1.26793800e+06,  1.15505412e+06,  2.81820000e+05,\n'
 '        -5.39160625e+05,  3.16407250e+05,  3.12545312e+05,\n'
 '         9.06577750e+05,  2.00814094e+05,  1.35920812e+06,\n'
 '        -8.27918000e+05, -1.71361612e+06,  6.30509125e+05,\n'
 '         5.83808750e+05, -3.41343531e+05, -7.81941750e+05,\n'
 '         7.64577062e+05,  8.08521125e+05, -4.34193875e+05,\n'
 '        -9.24373125e+05, -9.30527266e+04,  9.15929812e+05,\n'
 '         6.43459000e+05, -2.95738594e+05,  1.96295900e+06,\n'
 '        -5.09570281e+05, -1.09431328e+05, -7.62834000e+05,\n'
 '        -6.15095875e+05,  1.03050594e+05,  1.90998516e+04,\n'
 '         1.08343262e+06, -5.23635500e+05,  9.90537938e+05,\n'
 '         1.42688969e+05,  7.10888000e+05, -4.29831094e+05,\n'
 '        -1.56238412e+06,  4.54556969e+05, -3.73602750e+05,\n'
 '         1.10121562e+06,  4.56195688e+05, -8.19388438e+05,\n'
 '         1.15271525e+06, -5.75328500e+05, -1.43965800e+06,\n'
 '         1.10569138e+06, -1.05508450e+06, -9.13289812e+05,\n'
 '         9.42776125e+05, -3.62666594e+05, -7.96357875e+05,\n'
 '        -8.21629938e+05, -4.77761094e+05,  6.06834312e+05,\n'
 '         6.28162750e+05,  1.69995031e+05,  8.14085750e+05,\n'
 '         1.15984788e+06,  9.15983750e+05, -3.11007812e+05,\n'
 '         4.72976469e+05, -1.01461844e+06,  4.52257594e+05,\n'
 '         3.23171406e+04,  4.91196250e+04, -7.91354062e+05,\n'
 '         4.44375531e+05, -7.17157562e+05,  3.11285906e+05,\n'
 '        -7.21715188e+05,  1.04439338e+06,  1.27689867e+05,\n'
 '        -3.63900781e+05,  1.38301312e+05, -6.27084258e+04,\n'
 '         5.22813469e+05, -1.23067100e+06,  6.40323750e+05,\n'
 '        -4.85705820e+04, -1.01203750e+05, -5.10921938e+05,\n'
 '        -1.68379350e+06,  9.37163250e+05,  9.11155156e+04,\n'
 '         2.58276525e+06,  2.70809500e+05, -8.14711312e+05,\n'
 '        -9.39403625e+05, -1.19054562e+06, -6.70934750e+05,\n'
 '         5.26936125e+05, -6.49491812e+05, -4.24938719e+05,\n'
 '         2.87811531e+05, -1.59637156e+05,  3.82491719e+05,\n'
 '        -7.78327000e+05,  2.75579750e+05,  1.84554297e+05,\n'
 '        -7.05086062e+05,  9.05459180e+03,  5.19070344e+05,\n'
 '         9.90307625e+05, -2.10956300e+06, -7.79882938e+05,\n'
 '         9.78354625e+05,  6.78559375e+04, -1.23904500e+06,\n'
 '        -5.19129453e+04,  3.49646094e+05, -1.62400612e+06,\n'
 '        -1.30687862e+06, -3.71802344e+04, -3.05626938e+05,\n'
 '         2.87357562e+05,  3.63732188e+05, -2.90001688e+05,\n'
 '        -2.14320859e+05,  2.62651062e+05,  6.12501875e+05,\n'
 '        -1.15810312e+06, -7.06190938e+05, -1.35722862e+06,\n'
 '         2.85307406e+05,  3.00312188e+05, -6.41766438e+05,\n'
 '         5.37723062e+05,  3.93349219e+05,  2.55418859e+05,\n'
 '         4.43621781e+05, -1.03633275e+06,  7.47406445e+03,\n'
 '        -1.34847656e+05,  7.42764812e+05, -6.93185625e+04,\n'
 '         1.14048975e+06, -8.91111000e+05, -1.69679988e+06,\n'
 '        -1.05524212e+06, -6.32073688e+05,  2.79687969e+05,\n'
 '         8.63609938e+05,  1.52908734e+05, -4.88472094e+05,\n'
 '        -1.41315662e+06,  5.87635812e+05, -7.01594438e+05,\n'
 '         1.22973641e+05, -1.02577109e+05, -4.33570469e+05,\n'
 '        -2.58075000e+05, -7.32435812e+05,  7.20186938e+05,\n'
 '         7.23285688e+05,  1.26857700e+06,  1.87966750e+05,\n'
 '        -1.50135550e+06, -8.80149219e+03, -8.79030875e+05,\n'
 '        -1.06649844e+05, -2.60005516e+05,  1.88685406e+05,\n'
 '        -3.44751125e+05, -2.37459688e+05, -1.13153938e+06,\n'
 '        -1.21080950e+06,  2.60553812e+05,  1.19474900e+06,\n'
 '        -7.92677875e+05,  2.24565109e+05, -3.66438188e+05,\n'
 '         8.72658906e+04,  1.44445225e+06, -3.66013469e+05,\n'
 '        -1.36231088e+06,  2.07035547e+05,  3.91077979e+03,\n'
 '         6.53184312e+05,  6.14978125e+05,  9.27509750e+05,\n'
 '         1.00306644e+06, -9.52440688e+05, -9.21691250e+05,\n'
 '        -3.92921594e+05, -7.02343125e+05,  1.88907719e+05,\n'
 '        -2.70035375e+05,  1.02456150e+06, -8.77804188e+05,\n'
 '        -3.50133359e+04,  1.20166900e+06,  7.93501875e+05,\n'
 '         2.72854469e+05, -2.92181125e+05,  7.85173984e+04,\n'
 '         1.49869162e+06,  4.47160594e+05, -3.92792812e+04,\n'
 '        -2.76478789e+04,  8.07951438e+05, -9.71275625e+05,\n'
 '        -1.28009338e+06,  1.68594062e+06,  6.24214562e+05,\n'
 '         9.38662312e+05, -5.50984938e+05,  6.90251625e+05,\n'
 '        -2.76022719e+05, -2.46431250e+05, -3.78154719e+05,\n'
 '        -9.16080188e+05, -7.42604688e+05, -5.56462734e+04,\n'
 '        -4.98757688e+05, -1.42557612e+06, -7.74051688e+05,\n'
 '         3.73114219e+05,  2.33265797e+05, -9.99750062e+05,\n'
 '         1.23287325e+06,  5.41457891e+04, -2.35233234e+05,\n'
 '         6.80171062e+05,  5.55091812e+05,  5.69809062e+05,\n'
 '         5.59522688e+05,  3.94537750e+05,  1.43355525e+06,\n'
 '         7.53863750e+05,  6.07625469e+04,  1.90707094e+05,\n'
 '        -7.83863750e+05,  2.32183578e+05,  4.87705469e+05,\n'
 '        -9.46947031e+04,  1.35413300e+06, -9.26950234e+04,\n'
 '        -1.21672088e+06,  6.07823125e+05, -2.47102828e+05,\n'
 '         2.50762363e+04, -1.30039388e+06, -8.11621500e+05,\n'
 '        -3.15730977e+04,  5.31300750e+05, -2.80446312e+05,\n'
 '         4.78108281e+05, -9.10854938e+05,  4.94714938e+05,\n'
 '        -5.23183375e+05, -3.58921656e+05, -6.45320742e+04,\n'
 '         5.42101750e+05,  2.02089359e+05,  9.63581562e+05,\n'
 '         1.00533419e+06, -3.22790156e+05, -5.21668469e+05,\n'
 '         7.52662625e+05, -3.05606750e+05,  4.05685281e+05,\n'
 '        -1.46442188e+05,  4.56535078e+04,  9.13729250e+05,\n'
 '         7.58584250e+05,  1.42608375e+06,  3.12428438e+05,\n'
 '         1.37281362e+06,  7.23585938e+05, -4.44447375e+05,\n'
 '         6.82772688e+05, -9.09513938e+05,  2.46396641e+05,\n'
 '        -5.53683938e+05,  9.13081000e+05, -1.80966516e+05,\n'
 '         1.60022734e+04, -6.64700438e+05,  4.35639453e+04,\n'
 '         4.51118656e+05, -3.98245906e+05,  2.30071031e+05,\n'
 '         1.66656588e+06,  8.22070312e+05, -5.96871375e+05,\n'
 '        -8.96781625e+05,  3.68316602e+04,  4.17928062e+05,\n'
 '        -3.45903094e+05, -1.18205438e+05, -1.27579775e+06,\n'
 '         1.36796975e+06,  8.40630750e+05,  8.79737891e+03,\n'
 '         1.45047922e+05, -7.05771719e+04, -2.26442312e+05,\n'
 '        -6.96615625e+05, -9.20170688e+05,  1.99631047e+05,\n'
 '        -5.19155625e+05, -4.46190688e+05, -3.21601844e+05,\n'
 '        -6.15022562e+05, -1.55029619e+04,  9.06098688e+05,\n'
 '         1.32059000e+06, -3.10154188e+05,  8.19848938e+05,\n'
 '        -7.84361562e+04,  3.17137637e+04,  3.58130656e+05,\n'
 '         1.25313338e+06, -7.57740312e+05,  6.55118688e+05,\n'
 '        -8.03117125e+05,  9.42087562e+05, -8.47913250e+05,\n'
 '        -1.42983875e+06,  1.35585250e+05,  1.44066925e+06,\n'
 '         4.65618469e+05, -4.46187188e+04,  2.53913984e+05,\n'
 '        -1.76670734e+05, -1.01574469e+06, -2.78105750e+05,\n'
 '        -1.23381047e+05, -8.18085438e+05, -8.10626312e+05,\n'
 '        -1.58370609e+05, -1.29610175e+06,  2.61925891e+05,\n'
 '        -1.90716700e+06,  1.17159225e+06, -1.13790075e+06,\n'
 '         4.74739750e+05, -2.67889250e+05, -7.38362438e+05,\n'
 '         6.44241750e+05, -3.56749344e+05, -1.97098425e+06,\n'
 '        -4.14758633e+04,  1.27711025e+06, -8.10065812e+05,\n'
 '         1.84526938e+06, -1.30830250e+06, -1.22108662e+06,\n'
 '        -1.91218328e+05,  1.41957312e+06, -2.65781781e+05,\n'
 '         2.88492938e+05, -6.63087625e+05,  9.88722625e+05,\n'
 '        -4.27766656e+05, -7.56106125e+05, -1.67167234e+05,\n'
 '         1.23355262e+06, -3.22191375e+05,  6.43785438e+05,\n'
 '        -3.03078250e+05,  2.05577225e+06,  1.38688825e+06,\n'
 '        -5.44754258e+04,  1.21694100e+06,  2.35964656e+05,\n'
 '        -8.22704812e+05]])')
'test_inceptionnet | batch_shape is: [1]'
'test_inceptionnet | logits.shape is: ivy.Shape(1, 1000)'
'||'
'test_inceptionnet | device is: cpu'
'test_inceptionnet | fw is: jax'
'test_inceptionnet | load_weights is: True'
'InceptionV3 | build | layer 1/22 built'
'InceptionV3 | build | layer 2/22 built'
'layer 3/22 built'
'InceptionV3 | build | layer 4/22 built'
'InceptionV3 | build | layer 5/22 built'
'InceptionV3 | build | layer 6/22 built'
'InceptionV3 | build | layer 7/22 built'
'InceptionV3 | build | layer 8/22 built'
'InceptionV3 | build | layer 9/22 built'
'InceptionV3 | build | layer 10/22 built'
'InceptionV3 | build | layer 11/22 built'
'InceptionV3 | build | layer 12/22 built'
'InceptionV3 | build | layer 13/22 built'
'InceptionV3 | build | layer 14/22 built'
'InceptionV3 | build | layer 15/22 built'
'InceptionV3 | build | layer 17/22 built'
'InceptionV3 | build | layer 18/22 built'
'InceptionV3 | build | layer 19/22 built'
'InceptionV3 | build | layer 20/22 built'
'InceptionV3 | build | layer 21/22 built'
'InceptionV3 | build | layer 22/22 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/4 built'
'layer 2/4 built'
'layer 3/4 built'
'layer 4/4 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/6 built'
'layer 2/6 built'
'layer 3/6 built'
'layer 4/6 built'
'layer 5/6 built'
'layer 6/6 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'inceptionNet_v3 | building InceptionV3 model | done 1/3'
'inceptionNet_v3 | clearning pretrained weights | done 2/3'
'inceptionNet_v3 | loading pretrained weights | done 3/3'
'InceptionV3 | forward | input data_format is:NHWC | done 1/27'
'InceptionV3 | forward | data_format is going to be used is:NHWC | done 1/27'
'InceptionV3 | forward | input shape is:ivy.Shape(1, 224, 224, 3) | done 1/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 224, 224, 3) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 111, 111, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 111, 111, 32) | done 2/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 111, 111, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 32) | done 3/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 109, 109, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 64) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 64) | done 4/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 54, 54, 64) | done 5/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 54, 54, 80) | done 3/3'
'InceptionV3 | forward | is:ivy.Shape(1, 54, 54, 80) | done 6/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 80) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 52, 52, 192) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 52, 52, 192) | done 7/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 192) | done 8/27'
'input shape is:ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 32) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 32)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 25, 25, 256) | done 9/27'
'input shape is:ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 10/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 11/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 384) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 96) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 96)'
'one 20/20, output shape is:ivy.Shape(1, 12, 12, 288)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 12/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 12, 12, 768) | done 13/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 14/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 15/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 16/27'
'v3 16/27, output shape is:ivy.Shape(1, 12, 12, 768)'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 5, 5, 192)'
'one 7/20, output shape is:ivy.Shape(1, 5, 5, 768)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 1280) | done 17/27'
'input shape is:ivy.Shape(1, 5, 5, 1280)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 18/27'
'input shape is:ivy.Shape(1, 5, 5, 2048)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 19/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 20/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 5, 5) | done 21/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 1, 1) | done 22/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 27/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 24/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 25/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048) | done 26/27'
'InceptionV3 | forward | fc | done 27/27'
('test_inceptionnet | logits is: ivy.array([[ 1.31299067e+00, '
 '-9.10785675e-01,  3.29865634e-01,\n'
 '         2.95258331e+00,  8.10467839e-01, -1.74668193e-01,\n'
 '         3.33803892e+00, -4.99150723e-01,  3.54579031e-01,\n'
 '        -2.29515171e+00, -8.64671648e-01, -1.98412105e-01,\n'
 '        -3.90140653e-01,  7.65480340e-01,  1.74564564e+00,\n'
 '        -2.13141465e+00, -7.49898195e-01, -5.30144215e-01,\n'
 '        -8.65069032e-02,  7.65097320e-01,  2.37927437e+00,\n'
 '        -1.88421369e+00,  2.49732637e+00, -1.08412588e+00,\n'
 '        -4.48239707e-02, -1.80822110e+00, -1.82645321e+00,\n'
 '        -1.37985373e+00, -1.37592447e+00, -2.46960449e+00,\n'
 '         3.62911224e-01,  2.09339738e+00,  2.26349568e+00,\n'
 '         2.32192755e-01,  1.15667307e+00, -2.12245965e+00,\n'
 '         1.59595132e+00, -4.85648304e-01, -1.03329372e+00,\n'
 '         1.12369633e+00,  2.13360620e+00,  8.51906762e-02,\n'
 '        -2.22364634e-01, -8.22054446e-02, -1.68499076e+00,\n'
 '        -2.53725553e+00,  3.35364044e-01,  2.46555448e-01,\n'
 '        -6.07675493e-01, -7.94708192e-01, -6.19937956e-01,\n'
 '        -1.70803368e-01, -2.56604493e-01, -2.32648611e+00,\n'
 '        -6.46273255e-01,  1.80998161e-01, -2.00289607e+00,\n'
 '        -1.29700410e+00, -3.74266028e-01, -1.41839993e+00,\n'
 '         1.94198862e-01,  1.05324566e+00, -2.64131141e+00,\n'
 '        -2.48587108e+00, -1.18723214e+00, -1.12153977e-01,\n'
 '        -1.62936866e+00,  3.90243769e-01, -7.47307062e-01,\n'
 '        -7.88031340e-01, -3.14520538e-01, -7.76716471e-01,\n'
 '         6.24767959e-01, -3.83098424e-01,  5.94073296e-01,\n'
 '        -1.92174941e-01, -9.85341787e-01,  7.41531908e-01,\n'
 '         4.97027725e-01,  5.51002264e-01, -1.69560388e-01,\n'
 '         7.84854651e-01, -3.09239179e-02,  7.80681789e-01,\n'
 '         2.94969416e+00, -2.50253499e-01, -1.36229396e+00,\n'
 '        -9.51480746e-01, -5.76352656e-01, -1.02229804e-01,\n'
 '        -1.15596259e+00,  1.81373286e+00, -4.51190352e-01,\n'
 '         1.76809371e-01,  6.65757060e-03, -1.17695928e+00,\n'
 '         1.18426228e+00, -1.24287569e+00, -2.47133231e+00,\n'
 '         2.64641666e+00,  4.80793059e-01, -6.29718900e-02,\n'
 '        -1.69238162e+00, -3.68132055e-01,  2.51331478e-02,\n'
 '        -3.57979584e+00, -2.13572502e+00, -1.47107136e+00,\n'
 '        -3.67922246e-01,  7.73108006e-02,  7.72117734e-01,\n'
 '        -1.33344305e+00,  3.25181222e+00,  2.34909773e+00,\n'
 '         2.54470634e+00, -1.09623992e+00, -1.46703267e+00,\n'
 '         7.89947748e-01, -1.55221403e+00,  7.41268873e-01,\n'
 '         6.34541392e-01, -2.41852617e+00,  1.27628958e+00,\n'
 '         2.69252658e-01, -3.58522153e+00, -1.62909090e-01,\n'
 '         6.48843884e-01,  1.82130682e+00,  6.06242530e-02,\n'
 '        -5.22779077e-02,  1.23804069e+00,  1.93971109e+00,\n'
 '         1.81441760e+00, -2.88097322e-01,  1.18351400e+00,\n'
 '         1.01108658e+00,  2.07667398e+00,  2.81822771e-01,\n'
 '         2.80646443e-01, -1.04469299e+00,  1.24296546e-02,\n'
 '        -3.98072630e-01, -2.22682929e+00, -1.52165949e-01,\n'
 '         3.02570128e+00, -6.50846600e-01,  1.45742750e+00,\n'
 '        -1.76012969e+00,  2.83863872e-01,  8.52133572e-01,\n'
 '         2.07457352e+00, -5.65059721e-01,  2.64077449e+00,\n'
 '         3.31345797e-02,  1.51128924e+00, -3.20420456e+00,\n'
 '        -1.04575205e+00,  2.29367566e+00, -2.14352274e+00,\n'
 '        -1.43027484e-01,  1.52774191e+00, -1.16168821e+00,\n'
 '        -2.65519500e+00,  5.28248429e-01, -4.31282371e-01,\n'
 '         1.10443793e-01, -1.95469415e+00,  4.07777756e-01,\n'
 '        -3.58594283e-02,  2.39306212e+00,  1.20718598e+00,\n'
 '        -7.08570301e-01, -1.38096297e+00,  6.67411625e-01,\n'
 '         2.00255465e+00, -7.56753445e-01,  6.92432106e-01,\n'
 '         3.13523412e-02,  1.53631449e+00, -5.89829803e-01,\n'
 '        -8.13118577e-01,  8.87891769e-01, -1.78675127e+00,\n'
 '        -7.75644302e-01, -7.57714331e-01,  1.58457935e+00,\n'
 '         2.83245373e+00, -1.06754446e+00, -1.07357359e+00,\n'
 '        -3.35644245e+00, -7.28168726e-01, -2.97324002e-01,\n'
 '         6.30246818e-01, -1.64007974e+00, -1.11458659e+00,\n'
 '        -1.01202786e+00, -1.58511639e+00,  1.41391706e+00,\n'
 '        -1.13703072e+00,  4.65241894e-02, -5.28113306e-01,\n'
 '        -6.40718996e-01, -2.75182873e-01,  4.22725916e+00,\n'
 '        -1.78423560e+00, -1.76112258e+00, -2.05757666e+00,\n'
 '         1.09190285e+00, -1.29299629e+00, -9.01336670e-01,\n'
 '        -3.43763739e-01, -2.77540278e+00,  4.84750420e-01,\n'
 '         6.86079264e-01,  1.78497672e+00, -4.74998415e-01,\n'
 '         6.69976592e-01, -2.74188906e-01,  1.61644006e+00,\n'
 '        -3.11041594e+00, -3.58595073e-01,  5.54959893e-01,\n'
 '         4.12714243e+00,  1.60246134e+00,  2.92876053e+00,\n'
 '        -2.00099921e+00,  1.15416884e+00, -2.76475000e+00,\n'
 '        -2.85969615e-01,  4.27217752e-01, -8.16433489e-01,\n'
 '         1.22574461e+00,  1.16542137e+00,  1.19505251e+00,\n'
 '        -3.03234965e-01,  5.01928210e-01,  5.65953851e-01,\n'
 '        -2.18483543e+00,  5.79733491e-01,  6.46641254e-02,\n'
 '         8.06972146e-01,  5.15662193e-01,  7.23054409e-01,\n'
 '        -2.46766615e+00, -2.19184780e+00, -4.98505682e-01,\n'
 '        -7.70313322e-01,  1.89824730e-01,  7.47451925e+00,\n'
 '         5.33715677e+00,  3.57476711e+00, -5.85550487e-01,\n'
 '        -2.40829658e+00, -1.38735032e+00, -1.58301556e+00,\n'
 '         1.08667254e+00,  8.84922862e-01,  8.00869846e+00,\n'
 '         1.86811581e+01,  5.27261925e+00,  5.41108274e+00,\n'
 '         7.16846991e+00, -2.35829353e+00, -1.51112580e+00,\n'
 '        -9.16061759e-01, -3.91483307e-01, -7.69016683e-01,\n'
 '         1.72555733e+00, -7.60342300e-01,  2.46913552e+00,\n'
 '         1.30873938e+01, -1.09022427e+00,  1.53984040e-01,\n'
 '         1.07574791e-01,  5.75494409e-01, -1.79728949e+00,\n'
 '         5.41732788e-01,  2.76693296e+00,  4.58031595e-02,\n'
 '         1.14548016e+01,  4.72625434e-01, -1.26451135e+00,\n'
 '        -7.22915232e-01,  3.83806276e+00, -4.54343468e-01,\n'
 '        -1.82099319e+00, -1.46204531e+00,  1.23415029e+00,\n'
 '         4.09051090e-01,  6.75023913e-01, -5.92758417e-01,\n'
 '         9.47472453e-01,  6.45741969e-02, -1.80035740e-01,\n'
 '        -8.68863344e-01, -1.30519807e+00,  4.78442478e+00,\n'
 '        -1.01080978e+00, -1.25170791e+00, -3.40994310e+00,\n'
 '        -6.45140350e-01, -1.59595239e+00,  7.79892683e-01,\n'
 '        -3.89477611e-02,  7.37080455e-01,  7.20574141e-01,\n'
 '         1.91789538e-01,  1.95250988e+00, -2.82944798e-01,\n'
 '        -6.86722279e-01, -1.11642837e+00,  5.44559717e-01,\n'
 '         1.27283311e+00, -9.63974297e-01, -4.01734650e-01,\n'
 '        -1.21175826e-01, -7.24398911e-01,  6.01847291e-01,\n'
 '        -5.64895153e-01, -1.42287087e+00,  1.83003068e+00,\n'
 '         1.06475651e-02,  5.55099964e-01, -8.66380334e-03,\n'
 '        -2.55518651e+00, -7.32988715e-01,  9.79528248e-01,\n'
 '         6.38596356e-01,  1.58810270e+00, -5.13626337e-01,\n'
 '        -1.02179825e+00,  3.04675841e+00,  2.72728872e+00,\n'
 '        -6.01510108e-01,  2.21661493e-01, -1.81530941e+00,\n'
 '        -1.89841116e+00,  1.00948143e+00,  3.34566474e+00,\n'
 '        -1.97105551e+00,  1.10418093e+00, -5.04382849e-01,\n'
 '        -2.12546140e-01,  7.99889684e-01, -7.32955337e-01,\n'
 '        -8.72524977e-02,  1.73876002e-01,  1.90280581e+00,\n'
 '        -2.09559023e-01, -9.66729343e-01, -6.75118491e-02,\n'
 '         7.48282433e-01,  4.70520139e-01,  8.34827959e-01,\n'
 '        -1.49499810e+00,  1.20835495e+00,  1.91914117e+00,\n'
 '        -1.08129948e-01,  1.28818119e+00,  9.15043354e-01,\n'
 '        -8.54649365e-01, -4.04508650e-01, -1.37287772e+00,\n'
 '         6.25299215e-01, -1.75490856e+00, -2.63772321e+00,\n'
 '        -2.72249723e+00, -2.24484778e+00, -1.42087948e+00,\n'
 '        -2.89774680e+00, -4.41263258e-01, -1.85462749e+00,\n'
 '        -2.26076558e-01, -2.43480146e-01,  1.01193786e-03,\n'
 '        -1.52000487e+00, -1.49550355e+00,  3.14483374e-01,\n'
 '         7.26479590e-01, -2.40330315e+00,  1.92579776e-01,\n'
 '        -2.77527118e+00, -1.40981698e+00, -2.29490447e+00,\n'
 '        -1.14794582e-01,  1.32535055e-01, -1.15686202e+00,\n'
 '         9.58482802e-01,  6.36359453e-01, -4.60347116e-01,\n'
 '        -1.22729570e-01, -1.24424684e+00,  1.11992538e+00,\n'
 '         5.71606457e-01, -5.41466325e-02, -1.19493484e-01,\n'
 '         2.31377578e+00,  9.46654797e-01,  2.04292726e+00,\n'
 '         4.52802539e-01, -5.46546936e-01, -1.79551744e+00,\n'
 '        -5.34612358e-01,  3.94421578e-01,  2.10508084e+00,\n'
 '         7.37293840e-01,  3.27955753e-01,  1.18199587e+00,\n'
 '         7.41559088e-01,  6.45167410e-01, -2.10318708e+00,\n'
 '        -5.73161721e-01, -2.42679572e+00, -1.12600243e+00,\n'
 '        -3.43039012e+00, -6.08257830e-01,  3.82181972e-01,\n'
 '         1.26612282e+00, -1.76849031e+00, -1.27043378e+00,\n'
 '        -7.66261518e-01, -2.94174981e+00, -1.49211407e+00,\n'
 '        -7.64558137e-01, -5.93529105e-01,  1.88867891e+00,\n'
 '        -5.09509027e-01,  8.63235474e-01, -6.52929544e-01,\n'
 '        -3.48426029e-02, -1.08903933e+00, -2.07611006e-02,\n'
 '        -4.17091519e-01,  1.17070401e+00, -1.21371615e+00,\n'
 '        -3.49706471e-01,  3.09930325e-01,  3.45139742e-01,\n'
 '        -2.12601447e+00,  9.35607314e-01,  3.82426321e-01,\n'
 '        -1.20760131e+00,  9.27040696e-01, -4.55548585e-01,\n'
 '        -5.51223099e-01,  1.52782249e+00, -2.85784245e+00,\n'
 '        -1.59772277e+00,  1.41056967e+00,  5.26244760e-01,\n'
 '         2.21086907e+00,  6.93734050e-01,  1.02244687e+00,\n'
 '        -1.21651757e+00,  8.88054967e-01, -1.37543631e+00,\n'
 '         8.11694324e-01, -7.69364834e-02, -2.18104982e+00,\n'
 '         4.87872399e-02, -4.58546281e-01, -9.25517678e-01,\n'
 '         1.95290148e+00,  1.00871146e+00,  9.84572172e-01,\n'
 '        -1.73531139e+00, -7.47951865e-01, -8.86001587e-01,\n'
 '         2.37438607e+00,  9.70177889e-01, -8.71894777e-01,\n'
 '        -3.62190366e-01, -1.62679410e+00,  1.23366380e+00,\n'
 '         1.05515420e-02,  9.16512907e-02,  4.42933083e+00,\n'
 '        -2.01546359e+00,  4.99840707e-01,  4.22400117e-01,\n'
 '        -2.05364972e-01, -1.50577456e-01, -1.04025876e+00,\n'
 '         6.19859934e-01,  6.12926364e-01, -2.16588473e+00,\n'
 '        -1.22494757e+00, -9.42519307e-01, -1.90435350e-03,\n'
 '        -3.46736252e-01,  5.38926959e-01,  1.72458291e+00,\n'
 '        -2.77202904e-01, -1.01548994e+00, -8.93109918e-01,\n'
 '         3.51765603e-01,  4.30259526e-01, -1.58520126e+00,\n'
 '         2.35348299e-01,  2.24259257e+00, -1.96689534e+00,\n'
 '        -1.28541261e-01,  3.36222708e-01, -1.76920295e+00,\n'
 '        -2.18321145e-01,  1.23644805e+00,  2.26640773e+00,\n'
 '         5.95559359e-01,  7.05029666e-02, -2.08216011e-01,\n'
 '         1.85138428e+00,  1.08320981e-01,  8.04521024e-01,\n'
 '        -1.16623962e+00, -1.21253228e+00, -9.98358309e-01,\n'
 '        -2.16863131e+00, -2.54282951e-01, -3.33209562e+00,\n'
 '        -2.98506141e+00, -1.53341103e+00,  4.45210576e-01,\n'
 '        -8.99410784e-01, -1.88145673e+00,  1.37210679e+00,\n'
 '        -9.40194130e-01, -1.61517215e+00, -3.60559773e+00,\n'
 '        -1.03777111e+00, -1.44762313e+00,  2.38241982e+00,\n'
 '         2.44416094e+00, -2.55858958e-01, -7.51895010e-01,\n'
 '         1.45174396e+00, -1.34915328e+00, -1.14940572e+00,\n'
 '         3.80013847e+00,  1.71430957e+00, -2.47186804e+00,\n'
 '         6.39586866e-01,  1.23334205e+00, -1.57204628e-01,\n'
 '         1.53114402e+00, -8.68448764e-02,  1.88791871e-01,\n'
 '        -2.45802879e-01,  2.20388323e-02, -2.79334021e+00,\n'
 '        -1.96329206e-01,  1.29788160e+00,  2.10646331e-01,\n'
 '        -1.30698085e-01, -4.02968836e+00,  7.97784925e-01,\n'
 '        -5.22951305e-01, -1.83197951e+00,  7.25605488e-01,\n'
 '        -7.82709777e-01,  2.15402991e-01,  4.86574799e-01,\n'
 '        -1.97193336e+00,  5.20665216e+00,  2.11060691e+00,\n'
 '         9.99555051e-01, -6.38246894e-01, -1.45385697e-01,\n'
 '         5.69691658e-01,  1.96416128e+00, -4.38162595e-01,\n'
 '         1.06997383e+00,  7.67360330e-01,  3.52091193e-01,\n'
 '         1.93418050e+00, -4.68877763e-01,  6.91629589e-01,\n'
 '         1.61171091e+00, -1.33255112e+00,  5.97281754e-01,\n'
 '        -1.17914844e+00,  8.56694341e-01,  1.53494984e-01,\n'
 '         8.56296659e-01, -1.22157717e+00,  1.12803507e+00,\n'
 '         3.69907439e-01, -2.45175457e+00, -7.25715041e-01,\n'
 '        -1.35353637e+00,  1.74381733e-02, -4.47029918e-02,\n'
 '         8.11541319e-01, -1.87433943e-01,  4.35248643e-01,\n'
 '         5.52488565e-02,  8.07267129e-01,  1.13799918e+00,\n'
 '        -1.17867017e+00, -1.92569923e+00, -1.55909824e+00,\n'
 '        -2.23679805e+00, -1.10633659e+00, -1.06066585e+00,\n'
 '         1.10950172e-01,  1.78208780e+00, -2.82214850e-01,\n'
 '         3.15347481e+00,  4.59222227e-01,  1.67374444e+00,\n'
 '        -3.65418285e-01,  2.26554275e-01, -7.31410742e-01,\n'
 '         1.89347744e+00,  7.48301566e-01,  5.99203885e-01,\n'
 '        -2.41923034e-01, -1.16421258e+00,  1.38349473e-01,\n'
 '        -9.19864953e-01, -8.62855494e-01, -1.59739566e+00,\n'
 '         1.66514122e+00,  1.29912662e+00, -9.26990747e-01,\n'
 '        -3.80122691e-01,  2.17164755e+00, -3.85546803e-01,\n'
 '         1.18578517e+00,  3.80796528e+00, -6.27548993e-02,\n'
 '        -3.48472500e+00, -1.56139171e+00, -2.60830689e+00,\n'
 '         7.48721242e-01, -3.77193856e+00, -1.73276877e+00,\n'
 '        -1.14822602e+00,  6.82441473e-01, -6.29153401e-02,\n'
 '         1.75510013e+00, -1.38898528e+00, -1.09769499e+00,\n'
 '         5.44754624e-01,  5.33089042e-01, -9.76034641e-01,\n'
 '        -4.06620651e-01,  1.59488380e+00, -8.10146630e-01,\n'
 '        -6.45726740e-01, -1.75891876e-01, -2.38749742e+00,\n'
 '         8.79703462e-03,  1.00060821e+00, -1.01359093e+00,\n'
 '        -3.10292363e-01, -6.98265016e-01,  1.18437898e+00,\n'
 '        -9.25673366e-01, -1.02924514e+00, -5.15683651e-01,\n'
 '        -1.06816244e+00,  5.87226510e-01,  1.08612084e+00,\n'
 '        -1.72632694e+00, -2.29405356e+00,  4.58127916e-01,\n'
 '        -2.04894280e+00,  2.30146378e-01,  7.48086274e-01,\n'
 '         1.17469037e+00,  7.94919074e-01, -1.41706419e+00,\n'
 '         2.57762766e+00, -2.27460074e+00, -1.09097838e+00,\n'
 '         3.07076484e-01,  3.02782536e-01, -1.36510932e+00,\n'
 '         1.20123673e+00,  8.30039144e-01,  1.86558962e-01,\n'
 '        -2.26777697e+00,  2.63456607e+00,  1.64245391e+00,\n'
 '        -4.65218663e-01, -4.84273672e-01, -1.16817188e+00,\n'
 '         6.33337438e-01, -2.10849690e+00,  2.77711451e-01,\n'
 '        -6.16892219e-01, -1.38678706e+00, -1.17077434e+00,\n'
 '        -1.60248280e+00,  9.66425121e-01,  2.56386280e+00,\n'
 '         1.50455213e+00,  1.16721720e-01,  1.06051052e+00,\n'
 '         8.36043477e-01, -3.69278288e+00, -7.28323340e-01,\n'
 '        -9.62186456e-01,  2.33851477e-01, -2.36694002e+00,\n'
 '        -3.58564973e+00,  7.86804915e-01, -1.93159175e+00,\n'
 '         1.49680167e-01, -1.64785516e+00,  1.28804743e+00,\n'
 '        -1.13643333e-01, -3.11974049e+00, -2.90349746e+00,\n'
 '        -1.57857612e-02,  1.19122302e+00, -1.05485237e+00,\n'
 '        -4.04773206e-01,  1.74457049e+00,  5.37680447e-01,\n'
 '         4.06473935e-01, -1.47137070e+00, -4.30740267e-01,\n'
 '         1.91788971e+00,  2.31595564e+00, -2.16161579e-01,\n'
 '        -2.75379241e-01, -4.11452502e-01, -1.42050064e+00,\n'
 '         1.07995200e+00, -7.72465468e-01,  2.08955121e+00,\n'
 '        -6.16471656e-02, -1.86309910e+00, -7.17742443e-01,\n'
 '        -2.05390406e+00, -1.97069228e+00, -3.49157602e-01,\n'
 '         2.13319674e-01,  4.52322736e-02,  8.81628573e-01,\n'
 '         4.86824930e-01,  7.00780809e-01, -1.90915144e+00,\n'
 '        -4.48268235e-01, -2.32732320e+00,  4.72917604e+00,\n'
 '        -3.76894951e-01,  3.09840024e-01,  6.39951169e-01,\n'
 '        -5.76846898e-01,  1.15659058e+00,  2.81492639e+00,\n'
 '        -3.64059115e+00, -3.06490159e+00, -5.41360200e-01,\n'
 '        -2.37523055e+00,  3.74071836e-01,  2.58048773e+00,\n'
 '        -2.17918301e+00, -3.15875268e+00, -2.13588905e+00,\n'
 '         2.62106925e-01,  1.54182649e+00, -1.99269652e+00,\n'
 '         1.29388082e+00,  5.44114828e-01, -1.26740491e+00,\n'
 '        -1.34050155e+00,  1.34792352e+00, -1.07968235e+00,\n'
 '        -6.11343622e-01, -1.19404209e+00, -2.42637420e+00,\n'
 '        -1.17271566e+00,  1.42386103e+00,  1.41675639e+00,\n'
 '        -5.26624203e-01, -1.86013329e+00, -7.11946428e-01,\n'
 '         2.98758173e+00,  2.02285782e-01, -5.98860979e-01,\n'
 '        -9.68651652e-01, -1.68987215e+00, -2.59272516e-01,\n'
 '         7.87679553e-02, -8.43708873e-01,  1.22300279e+00,\n'
 '         3.58421773e-01,  7.46525526e-01,  1.92916191e+00,\n'
 '         9.07877088e-01, -9.94392633e-01,  1.58759579e-01,\n'
 '        -1.05808639e+00, -2.41876721e+00, -1.90979838e+00,\n'
 '        -8.94129753e-01,  9.23582554e-01,  8.67985904e-01,\n'
 '         5.15782833e-01,  2.46541405e+00,  3.13095760e+00,\n'
 '        -2.15584064e+00,  1.09284759e+00, -3.47852564e+00,\n'
 '        -2.16483545e+00,  9.58190560e-01, -6.25417531e-01,\n'
 '         4.30167317e-01, -1.25430083e+00,  2.03081465e+00,\n'
 '         2.43094587e+00,  8.21640372e-01,  2.49755406e+00,\n'
 '         6.92541122e-01, -2.45759964e-01, -6.29885793e-01,\n'
 '         7.34316349e-01, -9.19881463e-02, -1.39759970e+00,\n'
 '         1.29274368e+00, -1.01905656e+00, -5.07230163e-01,\n'
 '        -7.56654799e-01,  5.36950290e-01,  1.10946655e+00,\n'
 '         2.80049729e+00, -5.38586974e-01,  4.44006264e-01,\n'
 '        -8.83946300e-01,  2.05146694e+00,  1.04112184e+00,\n'
 '        -6.18576288e-01, -1.32607788e-01,  1.09340298e+00,\n'
 '         1.88622922e-01,  2.83685327e-02, -7.64781535e-01,\n'
 '         3.64699721e-01, -5.10282330e-02,  1.92943132e+00,\n'
 '         3.07792902e+00,  4.33655620e-01, -2.91050076e-01,\n'
 '        -1.81725287e+00, -1.18990552e+00,  1.31468844e+00,\n'
 '         3.26648980e-01,  7.34665513e-01, -7.59813547e-01,\n'
 '         1.92051828e+00,  1.43334895e-01, -6.02307796e-01,\n'
 '        -1.24796927e-02, -1.66539502e+00,  4.65485096e-01,\n'
 '         4.20420915e-01, -3.94917905e-01,  1.30495143e+00,\n'
 '         1.40560079e+00,  1.97081476e-01,  1.22592568e+00,\n'
 '        -3.61966038e+00,  2.34814429e+00,  1.02485144e+00,\n'
 '         6.58562660e-01, -2.72794581e+00, -1.97141305e-01,\n'
 '         1.84729433e+00,  6.37867689e-01,  1.36250511e-01,\n'
 '        -7.06490278e-01, -1.17657936e+00, -6.39389276e-01,\n'
 '         9.72281814e-01, -3.83395553e+00,  1.44216371e+00,\n'
 '        -4.03670222e-01, -2.34627938e+00, -1.42738128e+00,\n'
 '        -2.04205364e-02, -2.05985904e+00,  8.34638357e-01,\n'
 '        -1.93759143e-01, -2.07830250e-01,  1.45636427e+00,\n'
 '        -1.24094689e+00,  8.80069137e-02,  8.02767932e-01,\n'
 '         1.33108520e+00, -2.00015736e+00,  4.86477554e-01,\n'
 '        -3.42551899e+00, -4.95351195e-01,  1.59944892e+00,\n'
 '        -7.85257220e-01,  1.69209301e-01,  4.32604253e-01,\n'
 '         1.52945840e+00, -3.12261319e+00,  1.88201666e-04,\n'
 '        -1.96887028e+00, -1.31541944e+00, -1.74799776e+00,\n'
 '        -1.24985170e+00,  7.69946575e-01,  2.34138161e-01,\n'
 '         4.11963731e-01,  5.49046934e-01, -2.03019738e-01,\n'
 '        -7.94441760e-01,  2.79753303e+00,  8.20819139e-01,\n'
 '         5.25583804e-01,  4.10407782e-03, -1.02674544e+00,\n'
 '        -2.50772893e-01, -1.05710357e-01, -3.15211952e-01,\n'
 '        -2.51639962e-01, -7.33663857e-01,  1.60687673e+00,\n'
 '        -1.65173638e+00,  1.72040284e+00, -8.01921129e-01,\n'
 '        -1.05521095e+00,  2.49657452e-01, -3.97244364e-01,\n'
 '         1.33953166e+00, -8.48071516e-01, -1.67218184e+00,\n'
 '        -1.17528021e+00, -1.60594881e+00, -6.40400112e-01,\n'
 '         9.71419215e-01,  1.12058687e+00, -2.49036372e-01,\n'
 '         5.57493210e-01, -8.38624597e-01,  8.91080856e-01,\n'
 '         1.45268047e+00,  8.01752210e-02,  1.39021075e+00,\n'
 '         3.11084628e-01, -3.68387937e-01, -2.98150003e-01,\n'
 '         2.98545152e-01, -1.21998859e+00, -1.47188187e-01,\n'
 '         1.10657299e+00,  1.63822102e+00,  4.69196320e-01,\n'
 '         1.26743209e+00,  1.83261001e+00,  1.70370841e+00,\n'
 '         5.25117934e-01,  3.63950133e-01, -3.59097183e-01,\n'
 '        -1.98337054e+00,  2.27274513e+00, -2.50685191e+00,\n'
 '        -2.09353685e-01,  3.04510891e-01, -1.01166213e+00,\n'
 '        -6.03046715e-01,  1.84628940e+00, -3.75565767e-01,\n'
 '        -8.51219058e-01, -1.93185031e+00,  1.44500208e+00,\n'
 '         1.13336349e+00, -9.60518360e-01, -8.01165462e-01,\n'
 '        -1.58961749e+00, -3.12870145e-01,  2.16207242e+00,\n'
 '         4.43394244e-01, -1.25083160e+00, -2.31580448e+00,\n'
 '        -7.15183497e-01, -3.27821255e-01,  5.62845051e-01,\n'
 '        -9.26003456e-02, -4.27219272e-02,  1.05260801e+00,\n'
 '        -5.60662270e-01,  6.35895729e-01, -1.49478689e-01,\n'
 '        -3.31471920e-01,  3.48633915e-01, -2.98962784e+00,\n'
 '        -1.24465060e+00, -3.55747294e+00,  5.79241514e-01,\n'
 '        -6.73242435e-02, -4.90707070e-01, -6.67316675e-01,\n'
 '        -2.36328125e+00]])')
'test_inceptionnet | batch_shape is: [1]'
'test_inceptionnet | logits.shape is: ivy.Shape(1, 1000)'
'||'
'test_inceptionnet | indices_test | true_indices is: [258 270 279]'
'test_inceptionnet | indices_test | calc_indices is: [258 270 279]'
'test_inceptionnet | device is: cpu'
'test_inceptionnet | fw is: jax'
'test_inceptionnet | load_weights is: False'
'InceptionV3 | build | layer 1/22 built'
'InceptionV3 | build | layer 2/22 built'
'layer 3/22 built'
'InceptionV3 | build | layer 4/22 built'
'InceptionV3 | build | layer 5/22 built'
'InceptionV3 | build | layer 6/22 built'
'InceptionV3 | build | layer 7/22 built'
'InceptionV3 | build | layer 8/22 built'
'InceptionV3 | build | layer 9/22 built'
'InceptionV3 | build | layer 10/22 built'
'InceptionV3 | build | layer 11/22 built'
'InceptionV3 | build | layer 12/22 built'
'InceptionV3 | build | layer 13/22 built'
'InceptionV3 | build | layer 14/22 built'
'InceptionV3 | build | layer 15/22 built'
'InceptionV3 | build | layer 17/22 built'
'InceptionV3 | build | layer 18/22 built'
'InceptionV3 | build | layer 19/22 built'
'InceptionV3 | build | layer 20/22 built'
'InceptionV3 | build | layer 21/22 built'
'InceptionV3 | build | layer 22/22 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/4 built'
'layer 2/4 built'
'layer 3/4 built'
'layer 4/4 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/6 built'
'layer 2/6 built'
'layer 3/6 built'
'layer 4/6 built'
'layer 5/6 built'
'layer 6/6 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'inceptionNet_v3 | building InceptionV3 model | done 1/3'
'InceptionV3 | forward | input data_format is:NCHW | done 1/27'
'InceptionV3 | forward | data_format is going to be used is:NCHW | done 1/27'
'InceptionV3 | forward | input shape is:ivy.Shape(1, 224, 224, 3) | done 1/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 224, 224, 3) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 111, 111, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 111, 111, 32) | done 2/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 111, 111, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 32) | done 3/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 109, 109, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 64) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 64) | done 4/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 54, 54, 64) | done 5/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 54, 54, 80) | done 3/3'
'InceptionV3 | forward | is:ivy.Shape(1, 54, 54, 80) | done 6/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 80) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 52, 52, 192) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 52, 52, 192) | done 7/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 192) | done 8/27'
'input shape is:ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 32) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 32)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 25, 25, 256) | done 9/27'
'input shape is:ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 10/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 11/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 384) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 96) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 96)'
'one 20/20, output shape is:ivy.Shape(1, 12, 12, 288)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 12/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 12, 12, 768) | done 13/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 14/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 15/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 16/27'
'v3 16/27, output shape is:ivy.Shape(1, 12, 12, 768)'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 5, 5, 192)'
'one 7/20, output shape is:ivy.Shape(1, 5, 5, 768)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 1280) | done 17/27'
'input shape is:ivy.Shape(1, 5, 5, 1280)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 18/27'
'input shape is:ivy.Shape(1, 5, 5, 2048)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 19/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 20/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 5, 5) | done 21/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 1, 1) | done 22/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 27/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 24/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 25/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048) | done 26/27'
'InceptionV3 | forward | fc | done 27/27'
('test_inceptionnet | logits is: ivy.array([[ 6.91111125e+05,  '
 '6.97916562e+05,  1.00593289e+05,\n'
 '        -1.04020469e+06,  2.09222453e+05, -8.65960562e+05,\n'
 '         9.52952188e+05, -1.63872625e+05,  5.10722969e+05,\n'
 '         2.16652703e+05, -1.14759047e+05,  2.13934438e+05,\n'
 '        -1.72311203e+05,  1.22441102e+05,  2.16106531e+05,\n'
 '        -9.65645703e+04,  7.63063625e+05, -2.39239141e+05,\n'
 '         1.36962250e+05, -4.99238562e+05,  2.85963344e+05,\n'
 '        -5.39946688e+05, -3.42197906e+05, -3.46465219e+05,\n'
 '         5.11760375e+05,  2.39466547e+05, -1.61599953e+05,\n'
 '        -6.01601875e+05, -2.19410625e+05, -1.03032477e+05,\n'
 '         4.00213438e+05, -5.22400469e+05, -1.21420672e+05,\n'
 '         8.10527688e+05, -3.64317406e+05, -2.41157219e+05,\n'
 '        -7.36430625e+05,  1.40438297e+05, -3.92841156e+05,\n'
 '        -2.72358906e+05, -2.50959082e+04, -1.46741500e+05,\n'
 '        -3.08612062e+05, -7.58349125e+05, -1.68389312e+05,\n'
 '         1.49064875e+05,  2.89368812e+05, -1.04474984e+05,\n'
 '        -2.09837312e+05,  1.04539925e+06,  1.03648328e+05,\n'
 '         4.12260188e+05,  1.97076000e+05,  5.33259250e+05,\n'
 '         1.92255508e+04,  3.49268812e+05,  4.82508000e+05,\n'
 '         6.01188000e+05,  6.00840688e+05, -3.81917422e+04,\n'
 '         4.36226719e+04, -3.95942500e+05,  2.73540188e+05,\n'
 '        -1.01333219e+05,  5.58091953e+04, -2.28374172e+05,\n'
 '         2.05016156e+05, -8.08033438e+05, -9.52965500e+05,\n'
 '         2.18289492e+04, -6.11254688e+05, -3.95732406e+05,\n'
 '        -1.77364812e+05, -3.04718938e+05, -1.14263888e+06,\n'
 '         2.08783984e+05,  5.66119688e+05, -3.02483781e+05,\n'
 '        -4.65311281e+05,  2.93462734e+04,  4.75022094e+05,\n'
 '        -8.78002500e+04,  4.99897594e+05, -2.49959688e+04,\n'
 '         1.07474500e+05,  1.96696891e+05, -9.17279375e+04,\n'
 '         3.03508812e+05, -2.74975312e+05,  5.87497062e+05,\n'
 '         6.97827688e+05,  2.12908130e+03,  4.66263031e+05,\n'
 '         3.16162125e+05,  1.06751800e+06, -1.74441219e+05,\n'
 '        -1.21270227e+05, -2.21223438e+05, -4.85719281e+05,\n'
 '        -8.13200938e+05, -4.88628375e+05,  1.64464844e+05,\n'
 '        -4.31886344e+05,  3.61700156e+04, -2.37039031e+05,\n'
 '         6.22786250e+05, -6.38087375e+05, -2.37811312e+05,\n'
 '        -9.24290430e+03,  6.71951625e+05,  3.07062375e+05,\n'
 '        -7.08157188e+05,  3.22851250e+05,  2.54397688e+05,\n'
 '        -2.72882188e+05, -1.45144078e+05,  7.11682438e+05,\n'
 '        -2.29158609e+05,  2.94980250e+05,  3.48934094e+05,\n'
 '         6.66750469e+04, -1.95967109e+05, -6.61425250e+05,\n'
 '        -2.14322141e+05, -3.24274844e+05,  1.51451469e+05,\n'
 '         4.54900594e+05, -3.27037969e+05,  2.06713516e+05,\n'
 '         4.11132000e+05,  4.38470500e+05, -3.77669844e+05,\n'
 '         6.37791562e+05, -1.02829619e+06, -3.74319023e+04,\n'
 '         4.63425062e+05, -8.97691062e+05,  4.48056750e+05,\n'
 '         7.81133312e+05, -7.82965375e+05,  2.82989219e+05,\n'
 '         1.91052562e+05,  9.66953250e+05, -7.03584000e+05,\n'
 '        -8.40799938e+05,  3.87705812e+05,  2.16431828e+05,\n'
 '         3.43302094e+05,  1.82190844e+05, -3.38377281e+05,\n'
 '        -1.92044641e+05,  1.14983500e+06,  5.64262500e+05,\n'
 '        -6.69351812e+05, -4.25936992e+04,  1.97760215e+04,\n'
 '         3.98573125e+04,  5.22194312e+05,  1.12758588e+06,\n'
 '        -1.36205150e+06, -6.70110438e+05,  3.24635156e+05,\n'
 '        -8.21170000e+05,  8.70118203e+04,  6.59536625e+05,\n'
 '         2.58780906e+05, -4.83925969e+05, -4.79831000e+05,\n'
 '        -8.40101797e+04, -2.80312844e+05,  6.02533398e+04,\n'
 '         4.69315844e+05, -2.40496953e+05, -9.96466438e+05,\n'
 '        -1.15359125e+06,  3.21451969e+05, -7.85060562e+05,\n'
 '         2.62921719e+05, -3.33601312e+05,  2.96774927e+03,\n'
 '        -7.82079609e+04,  6.01216758e+04,  2.93432469e+05,\n'
 '         4.12514312e+05,  8.52346188e+05, -9.63773281e+04,\n'
 '        -4.07576641e+04,  1.23121953e+05,  1.05960662e+06,\n'
 '         9.07036188e+05,  6.20135562e+05, -3.40036406e+05,\n'
 '        -2.30355359e+05,  6.41425352e+04, -5.70522125e+05,\n'
 '        -4.24551781e+05, -5.42585000e+05, -4.98339625e+05,\n'
 '        -3.03502656e+05, -1.82919938e+05,  4.45221750e+05,\n'
 '         1.68496844e+05, -7.98816125e+05,  2.85454219e+05,\n'
 '         1.00390325e+06, -5.03073984e+04,  2.32295195e+04,\n'
 '         5.23770812e+05,  7.15508562e+05, -2.37044750e+05,\n'
 '        -6.88841000e+05,  7.69621688e+05, -5.46202188e+05,\n'
 '         4.04354844e+05, -9.23090625e+04, -2.91572375e+05,\n'
 '         1.56807625e+05,  2.99019719e+05, -8.89782500e+04,\n'
 '        -4.87451500e+05, -2.27599922e+05, -1.23864344e+05,\n'
 '         2.88934938e+05, -5.24175688e+05,  3.10165449e+04,\n'
 '         7.28041375e+05,  9.10543250e+05, -2.56576953e+05,\n'
 '        -2.51341406e+05, -2.59470516e+05,  9.29484938e+05,\n'
 '        -2.60717438e+05, -5.01381875e+04, -3.31249875e+05,\n'
 '         6.75494938e+05, -1.23492633e+05,  3.66191125e+05,\n'
 '        -3.01138812e+05, -1.46449538e+06,  2.33138125e+05,\n'
 '         5.68060500e+05, -3.60520969e+05,  1.32998375e+05,\n'
 '         1.99457844e+05,  7.56797625e+05,  2.73096500e+05,\n'
 '        -1.77503375e+05, -2.04922859e+05, -1.83681328e+05,\n'
 '        -2.54339750e+05,  2.16070938e+05,  5.06467781e+05,\n'
 '        -4.06771656e+05, -6.97845562e+05, -7.57565125e+05,\n'
 '        -7.01767750e+05, -4.03351281e+05, -1.28176412e+06,\n'
 '         3.39443406e+05, -2.78906660e+04,  2.24095125e+05,\n'
 '         5.88920938e+05, -2.90976250e+05, -1.33468938e+05,\n'
 '        -4.34027750e+05,  4.01083156e+05, -8.30775703e+04,\n'
 '        -1.06281508e+05, -7.84010812e+05,  6.99220062e+05,\n'
 '        -6.05013875e+05,  3.62283688e+05, -3.49516719e+05,\n'
 '        -7.34060375e+05,  2.63437969e+05,  6.59530062e+05,\n'
 '        -9.75368984e+04, -5.55870438e+05,  3.31055312e+05,\n'
 '         1.07438789e+05,  2.71749188e+05, -2.34556141e+05,\n'
 '        -2.38020797e+05, -1.69459953e+05,  1.75334297e+04,\n'
 '        -1.52317703e+05,  2.65562625e+05, -7.73759938e+05,\n'
 '        -5.38300188e+05, -2.90482000e+05,  5.04643516e+04,\n'
 '         2.38711484e+05,  8.55448312e+05, -3.71877383e+04,\n'
 '         7.83601125e+05, -2.56994000e+05,  2.16534531e+05,\n'
 '         2.59588172e+05,  5.02755750e+05,  2.61583730e+04,\n'
 '        -3.58474727e+04, -1.37119844e+05,  1.50099844e+05,\n'
 '         9.60059688e+05, -1.11808375e+06, -1.10153027e+04,\n'
 '         7.42269562e+05,  3.22952656e+05, -5.26158062e+05,\n'
 '        -1.51316875e+05, -6.93057250e+05, -1.17380289e+05,\n'
 '         4.51964531e+05, -3.36348094e+05, -3.84339031e+05,\n'
 '         1.08987988e+06, -8.53444812e+05,  3.11408094e+05,\n'
 '         3.77761375e+05,  3.09014668e+04,  5.82055117e+04,\n'
 '         4.17815500e+05,  4.84105438e+05, -9.52197312e+05,\n'
 '        -5.16099812e+05,  1.85913027e+04,  4.84936125e+05,\n'
 '        -8.38414922e+04, -4.95038320e+04,  6.83303375e+05,\n'
 '         1.18985638e+06,  3.97789500e+05, -2.46699453e+05,\n'
 '        -5.92818562e+05, -3.58676656e+05,  3.35121375e+05,\n'
 '         8.24449219e+04,  3.11634344e+05,  2.00962250e+05,\n'
 '        -4.21585781e+05,  2.60423938e+05,  2.87795219e+05,\n'
 '         5.97941062e+05,  1.13530375e+06,  8.94438250e+05,\n'
 '         3.44222906e+05, -5.08633188e+05,  3.64940812e+05,\n'
 '         5.30486812e+05, -7.43078750e+05, -3.16557715e+04,\n'
 '         5.85355188e+05, -6.56493000e+05,  5.46474258e+04,\n'
 '         3.65252156e+05, -7.65153625e+05, -1.26595875e+05,\n'
 '        -2.23423297e+05, -5.80201625e+05,  4.57374812e+05,\n'
 '        -8.36078125e+05,  4.77198719e+05, -5.86735125e+05,\n'
 '        -2.72221562e+05,  3.06420125e+05,  5.74085039e+04,\n'
 '        -4.76728781e+05, -3.56244344e+05, -3.57684625e+05,\n'
 '        -1.28685109e+05, -4.49433625e+05,  4.32281188e+05,\n'
 '         2.81300719e+05, -1.91685844e+05, -5.35282875e+05,\n'
 '         1.81914590e+04, -5.02855625e+05,  2.74798344e+05,\n'
 '         3.81160906e+05, -8.62521484e+04, -3.94231781e+05,\n'
 '         3.41770938e+05, -3.35433312e+05, -4.13071094e+05,\n'
 '         3.34124750e+05,  4.02680656e+05,  2.69761375e+05,\n'
 '        -5.54796688e+05, -7.72458188e+05,  7.21371500e+05,\n'
 '        -4.89357266e+04,  1.26795150e+06, -3.36237156e+05,\n'
 '         4.56120906e+05, -6.30508062e+05, -1.02454681e+06,\n'
 '        -1.18732050e+06,  1.20962562e+06, -3.82055250e+05,\n'
 '        -1.54714594e+05,  5.88838188e+05,  4.53770750e+05,\n'
 '        -4.45927588e+03,  1.57530656e+05,  2.67601750e+05,\n'
 '        -6.61657750e+05,  7.79614750e+05, -5.30982562e+05,\n'
 '         3.12245728e+03,  7.15325938e+05,  4.39785375e+05,\n'
 '         5.95582500e+05, -5.03142734e+04,  3.33386406e+05,\n'
 '        -8.43867312e+05, -3.84886438e+05, -3.53207750e+05,\n'
 '        -5.22731103e+03,  4.96843531e+05,  2.65094469e+05,\n'
 '        -9.73314875e+05,  7.38570625e+04, -2.43387266e+05,\n'
 '        -4.79870094e+05, -1.95328766e+05,  1.92529812e+05,\n'
 '         3.93366812e+05, -2.56520562e+05,  1.61081547e+05,\n'
 '         2.91747031e+05, -1.69551156e+05,  3.59306000e+05,\n'
 '        -3.88892773e+04, -6.54255938e+05, -1.86528000e+05,\n'
 '        -1.07724365e+04,  1.06281492e+05,  2.46644141e+05,\n'
 '        -4.03860562e+05,  5.65199438e+05,  5.47011836e+04,\n'
 '        -1.40812109e+05, -5.94935438e+05, -3.12208781e+05,\n'
 '        -8.53933125e+05, -1.48703775e+06,  8.42786562e+05,\n'
 '        -5.24867812e+05, -2.59227891e+05,  7.83628875e+05,\n'
 '        -1.98716281e+05, -1.34583672e+05, -2.76637000e+05,\n'
 '        -3.22616625e+05,  4.27357688e+05, -9.00460062e+05,\n'
 '         1.08992828e+05, -2.15160047e+05,  3.49051656e+05,\n'
 '        -1.39885594e+05,  4.02069344e+05,  8.80140688e+05,\n'
 '         3.60214594e+05,  2.37476594e+05, -1.62503953e+05,\n'
 '        -5.93947125e+05, -1.94964125e+05,  5.90145625e+05,\n'
 '        -3.04811594e+05, -1.36571484e+05, -2.99986562e+05,\n'
 '        -1.93459547e+05, -5.55154375e+05, -1.02933138e+06,\n'
 '        -5.25588625e+05,  4.94570531e+05,  6.41542125e+05,\n'
 '         1.78637891e+05, -2.01613281e+04, -2.13828188e+05,\n'
 '        -3.94469219e+05,  1.28913289e+05, -5.00009562e+05,\n'
 '        -1.34667578e+05,  3.23235281e+05, -1.94322375e+05,\n'
 '        -4.62075312e+05,  5.15527312e+05, -1.25484453e+05,\n'
 '         1.39218859e+05, -3.63176602e+04, -2.66473625e+05,\n'
 '         1.17297836e+05,  1.59039000e+06,  6.22684375e+05,\n'
 '         2.82784219e+04, -4.17143500e+05,  3.91838625e+05,\n'
 '        -6.71957688e+05, -1.23358914e+05, -5.62560812e+05,\n'
 '         9.97454844e+04,  3.79793156e+05, -4.90302719e+05,\n'
 '        -7.17770234e+04, -3.84384688e+04, -4.43478555e+04,\n'
 '        -3.93895156e+05,  5.84234438e+05, -5.52894062e+05,\n'
 '        -1.44661906e+05, -9.58500875e+05,  1.44265500e+05,\n'
 '         3.82804344e+05,  3.26870531e+05, -1.88794922e+05,\n'
 '         8.19725125e+05,  3.49749844e+05,  2.58505031e+05,\n'
 '         3.79118203e+04,  7.44672938e+05, -4.71233000e+05,\n'
 '        -4.50235656e+05,  6.94743938e+05,  1.52477562e+05,\n'
 '        -5.42516688e+05, -1.40665078e+05, -3.24930469e+05,\n'
 '         2.23226438e+05,  1.19040615e+04,  1.27739150e+04,\n'
 '        -3.91430031e+05,  1.30772812e+06, -4.38324406e+05,\n'
 '        -3.93393250e+05, -1.64873362e+06, -4.50188656e+05,\n'
 '         2.46929641e+05,  3.59151250e+05, -1.06868570e+05,\n'
 '        -3.55594312e+05,  3.05355293e+04,  5.22063188e+05,\n'
 '         4.57888344e+05, -9.36985312e+04, -1.43428625e+05,\n'
 '        -6.29508320e+04,  4.65436250e+05,  1.46392281e+05,\n'
 '         6.70603938e+05,  5.34882125e+05, -1.97850344e+05,\n'
 '         8.26004062e+05, -1.03120578e+05, -3.08121719e+05,\n'
 '         7.38631172e+04, -9.53044500e+05, -5.25403477e+04,\n'
 '        -5.91686500e+05, -7.25327562e+05,  7.11045625e+04,\n'
 '         2.30729609e+05, -5.82289062e+05,  3.52878500e+05,\n'
 '         2.33503781e+05,  2.36374434e+04, -5.86151438e+05,\n'
 '        -3.13507188e+05, -2.57330625e+05, -8.55889531e+04,\n'
 '        -1.33794734e+05, -2.34769547e+05, -1.04446195e+05,\n'
 '        -3.77852062e+05,  4.06205156e+05, -7.20894688e+05,\n'
 '         2.77184281e+05,  2.07382672e+05,  3.80188375e+05,\n'
 '         3.55859375e+05, -7.13890875e+05, -2.89685781e+05,\n'
 '        -4.70539502e+03,  2.51902234e+05,  3.63798438e+04,\n'
 '         9.86424938e+05, -5.21264062e+05, -6.59055562e+05,\n'
 '        -3.18718250e+05, -1.31991462e+06, -8.38304375e+05,\n'
 '        -8.23358828e+04,  2.78740062e+05,  1.15098953e+05,\n'
 '         2.02434290e+03, -2.37024609e+05, -6.77935625e+05,\n'
 '        -2.07798109e+05, -6.84734812e+05,  4.07151844e+05,\n'
 '        -1.73537070e+04, -3.66065594e+05,  2.05152266e+04,\n'
 '         4.64283344e+05,  2.78773625e+05, -4.90666875e+05,\n'
 '         2.75790594e+05,  6.21382578e+04,  4.67078344e+05,\n'
 '        -5.29213000e+05, -5.94753812e+05,  2.23709750e+05,\n'
 '         2.86455406e+05, -6.26588062e+05,  4.55774062e+04,\n'
 '        -6.50514750e+05,  6.16558500e+05, -1.05529258e+05,\n'
 '        -9.38263750e+05, -5.41155688e+05, -1.34250094e+05,\n'
 '         2.85784750e+05,  6.79012266e+04,  2.45426969e+05,\n'
 '         5.74989688e+04, -3.24179250e+05,  1.82747150e+06,\n'
 '        -2.14915734e+05, -7.13276250e+05,  3.21146688e+05,\n'
 '        -1.23424641e+05, -1.43049812e+05,  3.23138031e+05,\n'
 '        -4.80061562e+05,  6.19166312e+05,  7.19977188e+04,\n'
 '         8.21330062e+05,  1.10220742e+05, -5.92148250e+05,\n'
 '         2.64284281e+05, -3.87458906e+04,  3.96766500e+05,\n'
 '         7.71109562e+05,  2.47360484e+05,  4.35344766e+04,\n'
 '         5.88010062e+05,  8.37281125e+05,  1.84388906e+05,\n'
 '         3.58925375e+05,  6.96707500e+04,  2.52850703e+05,\n'
 '        -2.04954953e+05, -8.56673125e+05,  2.56360750e+05,\n'
 '         1.78263938e+05, -3.64680031e+05, -6.49302250e+05,\n'
 '         2.07967938e+05, -2.63213438e+05, -8.46588625e+05,\n'
 '        -1.51070953e+05, -5.54441312e+05, -4.61154625e+05,\n'
 '         2.79210969e+05,  2.61089250e+05,  1.39349266e+05,\n'
 '        -3.96328250e+05,  2.53667188e+04, -3.68630281e+05,\n'
 '         9.58219688e+05, -2.72074188e+05,  8.66387344e+04,\n'
 '        -7.24571750e+05,  7.79923906e+04,  7.77615312e+04,\n'
 '        -6.48711562e+05, -2.61920820e+04, -4.57680469e+05,\n'
 '         2.47479453e+04, -7.40612734e+04, -4.45710312e+05,\n'
 '        -1.10887432e+04, -4.54056875e+05,  9.27826250e+05,\n'
 '        -2.31966156e+05, -1.08815188e+05, -6.56767422e+04,\n'
 '         1.33131922e+05,  8.00559312e+05, -1.95410453e+05,\n'
 '        -9.57049500e+05, -3.89608555e+04,  1.96526594e+05,\n'
 '         1.72661125e+05,  1.79150250e+05, -5.43258398e+03,\n'
 '         1.39955500e+05, -2.97484812e+05,  5.80203375e+05,\n'
 '        -1.39412207e+04, -8.12491062e+05, -1.75795344e+05,\n'
 '        -6.95159875e+05,  6.62301938e+05,  5.63714188e+05,\n'
 '        -6.68388750e+05,  1.67402031e+05,  1.81414328e+05,\n'
 '        -9.17884863e+03, -2.77252844e+05,  1.87151344e+05,\n'
 '        -4.27636875e+05, -3.87707812e+05,  9.12121188e+05,\n'
 '         2.10078484e+05,  3.92350742e+04, -6.01462875e+05,\n'
 '         4.71375469e+05,  3.22675996e+04,  3.38871844e+05,\n'
 '        -6.61842125e+05,  1.63752812e+05, -1.18477945e+05,\n'
 '         1.28383875e+05,  4.99588469e+05,  3.80183938e+05,\n'
 '         1.10380703e+05,  8.50233359e+04, -2.23638422e+05,\n'
 '        -5.29376312e+05, -5.70713250e+05,  8.21777750e+05,\n'
 '        -6.47703438e+05,  8.20933938e+05,  3.24806484e+04,\n'
 '        -9.13112188e+04,  9.48883812e+05,  3.97751594e+05,\n'
 '         8.83550547e+04,  1.06369609e+05,  7.44442312e+05,\n'
 '        -3.74067422e+04, -5.25815000e+05,  1.00262086e+05,\n'
 '        -5.30286312e+05,  1.67108438e+05,  1.04308925e+06,\n'
 '         8.36778203e+04,  2.68804125e+05,  3.05935156e+05,\n'
 '         7.80784141e+04,  1.86117562e+05,  8.18356688e+05,\n'
 '         7.70493250e+05,  2.38172500e+05, -6.06623375e+05,\n'
 '        -2.37480098e+04, -7.67904000e+05, -5.18656438e+05,\n'
 '         5.09917688e+05,  4.89643562e+05,  5.45869453e+04,\n'
 '         7.79687938e+05,  5.09285812e+05, -5.74693875e+05,\n'
 '         3.07094344e+05, -6.68067250e+05,  2.78621188e+05,\n'
 '        -5.12534453e+04, -2.80576125e+05,  6.45668625e+05,\n'
 '         3.57239219e+05, -2.97244344e+05, -4.22378406e+05,\n'
 '        -7.20461312e+05, -9.78925703e+04,  7.10165438e+05,\n'
 '         6.82739219e+04,  3.63917688e+05, -6.71442656e+04,\n'
 '         4.53399125e+05,  7.76155938e+05, -5.64647438e+05,\n'
 '        -3.14059875e+05,  6.27887625e+05, -1.22566641e+05,\n'
 '         8.11144219e+04,  3.62639250e+05,  7.50813312e+05,\n'
 '         1.66388469e+05,  3.05784250e+05, -8.28695125e+05,\n'
 '         1.19338852e+05,  4.47400656e+05, -3.42914453e+04,\n'
 '         5.89032344e+04,  3.62466906e+05,  4.98188164e+04,\n'
 '         5.24995820e+04, -2.23097016e+05,  6.25927750e+05,\n'
 '         1.32674828e+05, -1.86517891e+04,  3.70881500e+05,\n'
 '        -1.78117719e+05, -2.39076109e+05,  5.67159125e+05,\n'
 '         3.63190750e+05,  1.05841852e+05, -2.58893156e+05,\n'
 '        -4.83341406e+04,  3.49477156e+05, -4.50259180e+04,\n'
 '         5.23453156e+05,  3.91312750e+05,  6.85068125e+05,\n'
 '        -1.59864062e+05,  3.78582562e+05, -5.50667625e+05,\n'
 '         8.87206312e+05, -3.94877438e+05, -1.06097225e+06,\n'
 '         4.61677375e+05, -2.61096344e+05, -1.09530625e+05,\n'
 '        -4.83575656e+05, -7.16949297e+04, -3.25141531e+05,\n'
 '        -6.78281250e+05,  4.76905273e+04, -3.81902531e+05,\n'
 '        -1.64988109e+05, -8.09887344e+04,  1.00410600e+06,\n'
 '         4.08144156e+05, -1.51591062e+05,  6.02591750e+05,\n'
 '         5.62745188e+05,  1.22502023e+05, -1.87222562e+05,\n'
 '         4.27080531e+05, -2.38158141e+05,  1.09889138e+06,\n'
 '        -1.90137531e+05, -1.12716888e+06, -3.01812094e+05,\n'
 '         5.73995688e+05,  1.38636250e+05,  3.90652375e+05,\n'
 '         2.22861984e+05,  1.14456738e+06, -3.78716219e+05,\n'
 '         1.08713242e+05, -3.07185938e+04,  3.30151062e+05,\n'
 '         3.32874562e+05, -1.53168000e+05, -8.64857562e+05,\n'
 '         1.20721734e+05,  4.48600531e+05, -6.80231438e+05,\n'
 '         2.29680094e+05,  1.47202859e+05,  2.50864000e+05,\n'
 '         3.24862719e+05,  6.81595000e+05, -4.95154156e+05,\n'
 '        -4.13514062e+04,  9.99490938e+05,  5.39348938e+05,\n'
 '         2.46723969e+05, -3.84838125e+05,  1.70307266e+05,\n'
 '        -1.60089922e+05, -4.73765688e+05,  2.57710219e+05,\n'
 '         5.33157578e+04, -2.72705375e+05,  4.02196219e+05,\n'
 '        -7.06357375e+05, -4.29995375e+05, -9.09906438e+05,\n'
 '        -1.03222913e+03, -7.01895812e+05, -5.02457852e+04,\n'
 '         2.49606516e+05, -2.54769719e+05, -1.09339512e+06,\n'
 '        -2.22914828e+05,  2.86235410e+04, -1.25676398e+05,\n'
 '        -2.91606000e+05,  1.00615112e+06, -7.23071562e+04,\n'
 '         3.27889344e+05,  1.69310430e+04, -2.95821906e+05,\n'
 '        -3.78563688e+05,  9.54532375e+05,  3.84054875e+05,\n'
 '        -2.01228953e+05, -2.96307344e+05, -1.47486709e+04,\n'
 '         1.19434016e+05,  2.08240844e+05,  3.27476719e+05,\n'
 '        -3.17631062e+05, -4.00836562e+05,  1.72435719e+05,\n'
 '        -4.11182344e+05,  4.72720906e+05, -3.97018938e+05,\n'
 '         2.30965984e+05,  4.50233312e+05, -9.10677344e+04,\n'
 '        -8.41606641e+04,  1.02375146e+04, -2.96352812e+05,\n'
 '         1.65239750e+05, -3.73026156e+05, -8.12904062e+05,\n'
 '         8.58357562e+05,  4.33756750e+05, -5.96546312e+05,\n'
 '         2.39152031e+05, -7.28657312e+05, -5.93700812e+05,\n'
 '        -1.97670938e+05, -4.71130742e+04, -2.75873500e+05,\n'
 '         1.74152188e+05,  2.57893453e+05,  7.62842891e+04,\n'
 '         1.17713875e+05, -1.33005578e+05, -3.50132250e+05,\n'
 '         1.13634992e+05,  8.94893203e+04, -9.93266188e+05,\n'
 '         2.73179812e+05, -1.40488766e+05,  3.45086906e+05,\n'
 '         7.24627295e+03, -4.09376844e+05, -3.48669492e+04,\n'
 '         1.02065188e+06,  4.90924875e+05, -8.11794250e+05,\n'
 '        -3.81638188e+05, -8.30406172e+04, -5.09952500e+05,\n'
 '        -3.94208375e+05,  9.27456812e+05, -8.60364625e+05,\n'
 '         2.63980188e+05,  6.26281172e+04,  4.27055125e+05,\n'
 '         9.51624297e+04,  1.68459297e+05, -6.89469609e+04,\n'
 '        -3.38481750e+05,  7.51912125e+05, -2.44882484e+05,\n'
 '         6.60299688e+05, -6.74445688e+05, -8.62290438e+05,\n'
 '         1.02667773e+05,  2.83779625e+05,  5.45979000e+05,\n'
 '         5.88722750e+05, -1.07847125e+06, -4.85714125e+05,\n'
 '         8.93721875e+04, -8.55656250e+04, -7.66428750e+05,\n'
 '         2.86465562e+05, -7.70293375e+05, -3.85858531e+05,\n'
 '        -8.35550781e+04,  2.80386438e+05,  2.42681812e+05,\n'
 '         3.11802844e+05, -2.84915656e+05, -2.89026062e+05,\n'
 '         2.72310219e+05,  1.35608594e+05, -1.23416662e+06,\n'
 '         2.99332637e+04,  2.78616344e+05,  2.41805266e+05,\n'
 '        -2.42771094e+05,  5.79468562e+05,  2.51325250e+05,\n'
 '        -6.25331562e+05, -2.13106656e+05,  5.59794750e+05,\n'
 '        -2.98182844e+05, -6.61834875e+05,  8.43617688e+05,\n'
 '        -1.27015688e+05]])')
'test_inceptionnet | batch_shape is: [1]'
'test_inceptionnet | logits.shape is: ivy.Shape(1, 1000)'
'||'
'test_inceptionnet | device is: cpu'
'test_inceptionnet | fw is: jax'
'test_inceptionnet | load_weights is: True'
'InceptionV3 | build | layer 1/22 built'
'InceptionV3 | build | layer 2/22 built'
'layer 3/22 built'
'InceptionV3 | build | layer 4/22 built'
'InceptionV3 | build | layer 5/22 built'
'InceptionV3 | build | layer 6/22 built'
'InceptionV3 | build | layer 7/22 built'
'InceptionV3 | build | layer 8/22 built'
'InceptionV3 | build | layer 9/22 built'
'InceptionV3 | build | layer 10/22 built'
'InceptionV3 | build | layer 11/22 built'
'InceptionV3 | build | layer 12/22 built'
'InceptionV3 | build | layer 13/22 built'
'InceptionV3 | build | layer 14/22 built'
'InceptionV3 | build | layer 15/22 built'
'InceptionV3 | build | layer 17/22 built'
'InceptionV3 | build | layer 18/22 built'
'InceptionV3 | build | layer 19/22 built'
'InceptionV3 | build | layer 20/22 built'
'InceptionV3 | build | layer 21/22 built'
'InceptionV3 | build | layer 22/22 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/4 built'
'layer 2/4 built'
'layer 3/4 built'
'layer 4/4 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/6 built'
'layer 2/6 built'
'layer 3/6 built'
'layer 4/6 built'
'layer 5/6 built'
'layer 6/6 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'inceptionNet_v3 | building InceptionV3 model | done 1/3'
'inceptionNet_v3 | clearning pretrained weights | done 2/3'
'inceptionNet_v3 | loading pretrained weights | done 3/3'
'InceptionV3 | forward | input data_format is:NCHW | done 1/27'
'InceptionV3 | forward | data_format is going to be used is:NCHW | done 1/27'
'InceptionV3 | forward | input shape is:ivy.Shape(1, 224, 224, 3) | done 1/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 224, 224, 3) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 111, 111, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 111, 111, 32) | done 2/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 111, 111, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 32) | done 3/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 109, 109, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 64) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 64) | done 4/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 54, 54, 64) | done 5/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 54, 54, 80) | done 3/3'
'InceptionV3 | forward | is:ivy.Shape(1, 54, 54, 80) | done 6/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 80) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 52, 52, 192) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 52, 52, 192) | done 7/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 192) | done 8/27'
'input shape is:ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 32) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 32)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 25, 25, 256) | done 9/27'
'input shape is:ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 10/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 11/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 384) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 96) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 96)'
'one 20/20, output shape is:ivy.Shape(1, 12, 12, 288)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 12/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 12, 12, 768) | done 13/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 14/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 15/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 16/27'
'v3 16/27, output shape is:ivy.Shape(1, 12, 12, 768)'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 5, 5, 192)'
'one 7/20, output shape is:ivy.Shape(1, 5, 5, 768)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 1280) | done 17/27'
'input shape is:ivy.Shape(1, 5, 5, 1280)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 18/27'
'input shape is:ivy.Shape(1, 5, 5, 2048)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 19/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 20/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 5, 5) | done 21/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 1, 1) | done 22/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 27/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 24/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 25/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048) | done 26/27'
'InceptionV3 | forward | fc | done 27/27'
('test_inceptionnet | logits is: ivy.array([[-1.55690461e-01, -1.34749949e+00, '
 '-2.29122728e-01,\n'
 '         1.32712638e+00, -1.75874412e-01,  8.83178353e-01,\n'
 '         2.57571626e+00, -9.02108252e-02, -4.15482611e-01,\n'
 '        -2.71436500e+00, -4.66130048e-01,  3.17997813e-01,\n'
 '        -2.53521204e-02,  1.09315550e+00,  2.44289398e+00,\n'
 '         1.04927278e+00, -2.94063401e+00, -4.62971807e-01,\n'
 '        -8.88365507e-02,  1.28523183e+00,  3.09394908e+00,\n'
 '        -2.50446606e+00,  9.20041442e-01, -2.09793186e+00,\n'
 '        -6.61274552e-01, -3.59484792e-01, -5.39409816e-02,\n'
 '        -9.46308851e-01,  6.57562614e-01, -1.29101825e+00,\n'
 '         7.82457709e-01,  1.07118130e+00,  1.77567279e+00,\n'
 '         3.30164909e-01,  1.58258212e+00, -5.55502057e-01,\n'
 '         1.77217579e+00, -5.40360749e-01, -8.25820506e-01,\n'
 '         1.90413821e+00,  1.00089443e+00,  1.51032341e+00,\n'
 '         1.27386761e+00,  1.24244869e+00,  3.48232090e-02,\n'
 '         1.01748872e+00, -8.05178165e-01,  1.04030609e+00,\n'
 '        -6.40948862e-02, -2.03059480e-01,  4.84178096e-01,\n'
 '         9.88848448e-01,  1.76331329e+00, -7.25564957e-01,\n'
 '         2.15007162e+00,  1.00783348e+00, -1.48189211e+00,\n'
 '         2.90979147e-01,  1.23690295e+00,  4.10424173e-01,\n'
 '        -1.03432953e+00,  2.24872160e+00, -3.94010484e-01,\n'
 '        -4.04884636e-01, -1.18568993e+00, -1.47191560e+00,\n'
 '         1.53627837e+00,  2.02963424e+00,  2.02145362e+00,\n'
 '        -1.43864214e+00, -4.18877691e-01, -2.11823314e-01,\n'
 '        -1.50273430e+00, -1.25624466e+00,  3.02458972e-01,\n'
 '         3.47002924e-01, -1.48169398e+00, -2.74914742e-01,\n'
 '         4.84958887e-01,  1.10505056e+00, -1.56978512e+00,\n'
 '         2.29398704e+00, -1.48685977e-01, -7.60322452e-01,\n'
 '        -3.98541749e-01, -3.35930407e-01, -8.40928078e-01,\n'
 '        -2.04742885e+00, -1.56885952e-01,  5.44519186e-01,\n'
 '        -2.56128758e-01,  1.44498634e+00, -3.79516602e-01,\n'
 '         2.69466758e-01, -1.81954050e+00, -1.63965344e+00,\n'
 '         1.14338350e+00,  6.17472529e-01, -4.08521175e-01,\n'
 '         1.32309771e+00,  1.75311804e+00,  6.47935391e-01,\n'
 '         1.05589867e-01, -8.34159493e-01,  2.35403109e+00,\n'
 '        -2.37211108e+00, -9.30327773e-01,  1.91537964e+00,\n'
 '         1.85091257e+00, -9.62257624e-01, -1.75616354e-01,\n'
 '        -2.41782761e+00,  4.05317783e+00,  3.49199057e+00,\n'
 '        -4.27045882e-01, -1.85975599e+00, -6.26547217e-01,\n'
 '        -1.55318439e+00, -1.39259839e+00,  1.17750548e-01,\n'
 '        -1.22674358e+00, -1.58035553e+00,  1.66510534e+00,\n'
 '        -6.27899170e-02, -2.64008880e+00,  5.36227643e-01,\n'
 '        -1.86392331e+00,  2.03045082e+00,  4.42157060e-01,\n'
 '         3.51360917e-01,  6.00007415e-01,  7.11022377e-01,\n'
 '         1.56178689e+00, -2.29236627e+00, -7.13864922e-01,\n'
 '         5.97521007e-01,  7.00696826e-01,  1.57659686e+00,\n'
 '        -1.28999257e+00, -1.57233691e+00, -5.94553113e-01,\n'
 '        -1.87454343e-01, -1.00100958e+00,  4.99954402e-01,\n'
 '         2.91480112e+00,  7.82355666e-01,  1.15550220e-01,\n'
 '        -7.86914051e-01,  8.64458978e-01,  6.36390388e-01,\n'
 '        -4.44640934e-01,  1.25342607e-03,  2.96652055e+00,\n'
 '        -1.46553516e-02, -5.32614052e-01, -2.25715089e+00,\n'
 '         8.68773103e-01,  4.19426155e+00, -2.83502936e+00,\n'
 '        -7.04241753e-01,  9.03651535e-01, -2.89957690e+00,\n'
 '        -1.87093043e+00,  4.41654384e-01, -1.43621266e-01,\n'
 '        -1.44805944e+00, -9.40699577e-01, -6.85455144e-01,\n'
 '        -2.38997459e+00,  2.89691186e+00,  8.66189659e-01,\n'
 '        -8.22011948e-01,  1.02412367e+00,  2.05593085e+00,\n'
 '         5.07771671e-01, -1.32701492e+00, -1.29840910e+00,\n'
 '        -9.54409316e-02,  7.23320723e-01,  1.49142659e+00,\n'
 '         1.09172940e+00,  6.20460630e-01, -1.21655655e+00,\n'
 '         1.23654902e+00,  1.19210049e-01,  1.31056440e+00,\n'
 '         2.54025006e+00, -8.51049900e-01, -1.34687281e+00,\n'
 '        -2.03535032e+00,  4.35728073e-01, -4.30508137e-01,\n'
 '        -1.61951613e+00, -6.34601593e-01, -3.42008233e+00,\n'
 '        -1.40272641e+00, -2.15741777e+00,  2.00123739e+00,\n'
 '        -2.90094465e-01,  4.29021359e-01,  1.01915824e+00,\n'
 '        -2.64845061e+00, -9.16265786e-01,  6.60368872e+00,\n'
 '        -2.35786319e+00, -2.55337262e+00, -1.64892971e+00,\n'
 '         4.42462504e-01, -2.62020445e+00, -1.28119183e+00,\n'
 '        -1.67500997e+00, -1.25733113e+00, -1.18572152e+00,\n'
 '        -3.74090344e-01,  2.28325605e+00,  2.49217823e-01,\n'
 '         1.96238124e+00,  7.31784105e-01,  5.08507609e-01,\n'
 '        -3.07913470e+00, -1.50003219e+00,  5.59717655e-01,\n'
 '         3.79429150e+00,  2.64576960e+00,  5.64156055e+00,\n'
 '        -2.83059645e+00,  2.07682347e+00, -3.19174600e+00,\n'
 '         1.40263879e+00,  9.35061038e-01,  2.18201184e+00,\n'
 '         3.63821053e+00,  3.21190500e+00,  2.22467351e+00,\n'
 '        -2.43039101e-01, -4.73717116e-02,  3.58646214e-01,\n'
 '        -1.77016282e+00, -8.30522180e-01, -9.44413662e-01,\n'
 '         3.29590112e-01, -2.02002740e+00,  2.15504313e+00,\n'
 '         3.23327780e-01, -8.71000290e-01,  2.36212879e-01,\n'
 '        -2.69963116e-01,  1.38608718e+00,  7.90899992e+00,\n'
 '         4.30811453e+00,  3.67498374e+00,  7.27693379e-01,\n'
 '        -2.30351210e+00,  5.89714468e-01, -8.62499952e-01,\n'
 '        -9.46907818e-01,  1.87682772e+00,  7.68573570e+00,\n'
 '         1.95489960e+01,  5.78779411e+00,  3.76320052e+00,\n'
 '         4.26566887e+00, -2.06913209e+00, -5.04994512e-01,\n'
 '        -1.18178010e+00, -6.20411634e-01, -1.86133838e+00,\n'
 '         2.16914868e+00,  2.62937069e-01,  1.12844276e+00,\n'
 '         1.02186174e+01, -2.46654010e+00, -1.30088997e+00,\n'
 '        -9.23619449e-01, -1.30390906e+00, -2.77049589e+00,\n'
 '         2.94787973e-01, -4.65063453e-01, -3.00087094e+00,\n'
 '         9.63316250e+00,  1.92381203e-01, -1.81962684e-01,\n'
 '        -8.50308180e-01,  2.08346939e+00, -3.13149309e+00,\n'
 '        -8.97578359e-01, -9.84556317e-01,  3.42324227e-01,\n'
 '         1.81816578e+00,  6.85901046e-01,  6.01755828e-02,\n'
 '         6.91633701e-01,  7.57953703e-01, -2.09911203e+00,\n'
 '        -1.09276116e-01, -2.23958611e-01,  4.72809792e+00,\n'
 '         3.79210413e-02, -3.61047316e+00, -1.84027553e+00,\n'
 '        -1.25795439e-01,  1.12062439e-01,  1.20316112e+00,\n'
 '         1.98727226e+00,  5.36049962e-01,  1.51048601e-02,\n'
 '         3.16786915e-01,  1.68610096e+00,  1.32323301e+00,\n'
 '         1.01806927e+00, -3.95073414e-01,  3.34124789e-02,\n'
 '        -4.50305402e-01, -2.27124524e+00, -2.13618889e-01,\n'
 '        -3.70038390e-01, -1.98508215e+00,  5.59354007e-01,\n'
 '        -7.28308320e-01, -5.37769675e-01,  4.81452435e-01,\n'
 '        -8.23228210e-02, -4.95840967e-01,  3.03514433e+00,\n'
 '        -2.77630782e+00,  1.08321559e+00,  1.47431648e+00,\n'
 '         1.30431581e+00,  4.49147254e-01, -4.55608308e-01,\n'
 '         2.16490999e-01,  2.32537222e+00,  1.43296349e+00,\n'
 '        -1.60099649e+00, -1.99959862e+00, -2.56230044e+00,\n'
 '        -2.18704748e+00, -2.36226887e-01,  9.73025441e-01,\n'
 '         1.05876178e-02, -4.74515319e-01,  2.54361772e+00,\n'
 '        -1.66842103e-01,  5.11542440e-01, -3.75320166e-01,\n'
 '         2.39049244e+00,  1.41211700e+00,  2.62213230e-01,\n'
 '         1.86515140e+00,  6.77424073e-02, -1.54334712e+00,\n'
 '        -9.91216481e-01, -2.18377876e+00, -8.47474694e-01,\n'
 '        -3.40276003e-01,  1.63825917e+00,  3.41205537e-01,\n'
 '        -5.98539770e-01,  1.55066538e+00, -1.50998938e+00,\n'
 '        -1.26681948e+00, -1.25371504e+00, -2.26692796e+00,\n'
 '         1.01829171e+00, -2.76500440e+00, -4.09727049e+00,\n'
 '        -1.89442718e+00,  5.94475865e-01, -1.87830818e+00,\n'
 '        -3.41062760e+00, -1.20861685e+00, -1.91311502e+00,\n'
 '        -1.01732636e+00,  1.78923666e-01, -9.62748051e-01,\n'
 '        -2.72869587e+00, -1.40412808e+00, -2.12281299e+00,\n'
 '        -3.18119430e+00, -3.20257950e+00, -3.21349597e+00,\n'
 '        -2.33127356e+00, -3.16365075e+00, -2.31568742e+00,\n'
 '        -3.16668534e+00,  3.95886272e-01, -4.25716400e-01,\n'
 '        -6.47887587e-01, -6.15427375e-01,  8.22816610e-01,\n'
 '        -7.89180577e-01, -2.98597813e-01,  4.84454632e-03,\n'
 '         6.56776130e-01,  1.48626232e+00, -1.43677795e+00,\n'
 '         1.94620276e+00, -9.57698703e-01,  1.55498838e+00,\n'
 '         1.22989941e+00, -2.78439546e+00,  4.41262811e-01,\n'
 '         1.54485774e+00,  2.69894695e+00,  1.57762849e+00,\n'
 '         1.50775218e+00, -2.57656455e-01, -1.96914554e+00,\n'
 '        -7.24841654e-02, -1.45338273e+00, -1.48837364e+00,\n'
 '        -3.41987801e+00, -3.78314209e+00, -2.31231189e+00,\n'
 '        -8.51143122e-01,  6.88358367e-01, -2.00367856e+00,\n'
 '         3.09602439e-01, -5.91362298e-01, -9.63716507e-01,\n'
 '         2.58202553e-01, -3.13608336e+00, -7.24562049e-01,\n'
 '         1.31144774e+00,  3.05701065e+00,  3.72355700e+00,\n'
 '        -3.40120971e-01, -7.12665796e-01,  1.17753387e+00,\n'
 '        -2.05744147e-01,  9.81129885e-01, -3.46721262e-01,\n'
 '         9.31122303e-01, -9.39743757e-01, -1.39242959e+00,\n'
 '        -1.80533603e-01, -4.91996616e-01, -8.13870072e-01,\n'
 '        -4.27271068e-01, -1.03467500e+00,  7.28947639e-01,\n'
 '        -7.00390339e-01, -2.08405018e+00, -1.98671961e+00,\n'
 '        -1.00968718e+00,  1.24759173e+00, -1.46670055e+00,\n'
 '        -1.60079026e+00,  4.07704711e-01, -1.43521667e-01,\n'
 '        -8.74258995e-01,  1.01703393e+00, -2.21395469e+00,\n'
 '        -9.24805105e-02,  7.06991315e-01,  2.46617421e-01,\n'
 '        -3.96257818e-01,  1.35719895e+00,  7.54067481e-01,\n'
 '        -1.44191122e+00, -1.16390228e+00, -1.98292208e+00,\n'
 '         6.79522514e-01, -6.80368841e-01,  1.00719380e+00,\n'
 '        -3.40731311e+00,  1.54411864e+00,  6.80826783e-01,\n'
 '         4.62212682e-01,  1.07596791e+00,  1.49213600e+00,\n'
 '        -2.85292983e+00, -1.03081358e+00,  2.43530989e+00,\n'
 '        -2.17429519e-01, -3.42431426e+00,  3.18943834e+00,\n'
 '        -3.04495752e-01,  3.80071282e+00, -7.65214443e-01,\n'
 '        -1.27274013e+00, -1.75114080e-01,  2.63639569e-01,\n'
 '        -5.71413934e-01,  9.37602520e-01, -1.34805751e+00,\n'
 '         2.57172287e-01,  2.33730465e-01,  2.62023497e+00,\n'
 '         2.61384416e+00,  1.23096275e+00,  2.71241021e+00,\n'
 '        -1.19882774e+00, -7.86568522e-01, -2.07373047e+00,\n'
 '         3.87128234e-01, -1.98279524e+00, -2.79346824e+00,\n'
 '         1.00978064e+00, -8.50936696e-02, -1.84849477e+00,\n'
 '        -1.05712509e+00, -7.53391027e-01, -6.59563780e-01,\n'
 '        -1.60158360e+00,  7.80439377e-01, -1.86700356e+00,\n'
 '         4.07612175e-02,  1.29148197e+00, -1.34350336e+00,\n'
 '         6.14990234e-01,  1.39013529e-02,  1.80820778e-01,\n'
 '         6.60944700e-01,  9.28133786e-01,  5.55834293e-01,\n'
 '        -8.72404456e-01,  1.26794970e+00, -3.47319722e+00,\n'
 '        -4.78054464e-01,  4.31086659e-01,  1.65635765e-01,\n'
 '         1.08887427e-01, -5.94040871e-01, -1.44530487e+00,\n'
 '        -2.15777159e-02, -3.68749678e-01, -2.36998129e+00,\n'
 '        -7.51074254e-01, -1.88555324e+00,  4.39608634e-01,\n'
 '         3.58324111e-01,  2.10942611e-01, -9.64421451e-01,\n'
 '        -1.58969307e+00, -5.95203400e-01, -1.06678367e+00,\n'
 '         1.93636072e+00, -1.62456715e+00,  1.86980796e+00,\n'
 '        -3.89579773e-01, -3.75549376e-01, -7.14078426e-01,\n'
 '         9.06935632e-01,  1.32448113e+00, -5.96781731e-01,\n'
 '         3.35896349e+00,  2.15624884e-01, -1.31897378e+00,\n'
 '        -3.81023556e-01, -3.79433811e-01, -1.32786202e+00,\n'
 '        -1.19901395e+00, -1.40154684e+00, -3.71968806e-01,\n'
 '        -1.58724976e+00,  9.56450105e-02, -2.88746893e-01,\n'
 '        -6.15669191e-01, -3.92640650e-01, -1.05631709e+00,\n'
 '        -4.12028938e-01,  3.78069520e+00,  1.42555952e+00,\n'
 '         5.44037938e-01, -9.19098377e-01,  9.76515532e-01,\n'
 '        -2.49850631e+00, -1.76468387e-01, -1.60944462e+00,\n'
 '        -1.23403990e+00,  1.73711062e-01,  5.83981931e-01,\n'
 '         2.21329141e+00, -1.13369751e+00, -8.07337880e-01,\n'
 '         4.47293848e-01, -1.37685549e+00, -7.42877424e-02,\n'
 '        -1.43828440e+00,  2.44322920e+00,  2.30714321e-01,\n'
 '         2.68762851e+00, -4.09757853e-01,  1.43022358e+00,\n'
 '         6.70477331e-01, -3.41152549e+00, -5.65106511e-01,\n'
 '        -1.16220903e+00,  6.68446422e-01,  9.45520461e-01,\n'
 '        -6.99756384e-01,  2.05701923e+00,  1.16161275e+00,\n'
 '         2.38984513e+00,  2.20290884e-01,  9.74937081e-01,\n'
 '         1.73018098e-01, -2.36248660e+00, -5.25720716e-02,\n'
 '        -7.54700899e-01, -1.71240628e+00, -1.90575147e+00,\n'
 '         8.08175683e-01,  2.00760484e+00, -1.52074587e+00,\n'
 '         4.25806236e+00,  8.11961293e-01,  1.34986150e+00,\n'
 '        -5.23151338e-01, -1.54518688e+00,  2.54418445e+00,\n'
 '         1.08452618e+00,  2.55256176e-01, -5.90255678e-01,\n'
 '        -4.12076092e+00, -2.30382979e-01, -9.52136278e-01,\n'
 '        -1.70390630e+00, -9.11825716e-01, -1.03573918e+00,\n'
 '         1.02513254e+00,  5.27280688e-01, -3.14616382e-01,\n'
 '         9.56770062e-01,  1.77596939e+00,  1.05133224e+00,\n'
 '        -1.11331391e+00,  2.98325992e+00, -1.00259751e-01,\n'
 '        -9.19739902e-01, -2.12366867e+00, -1.89166522e+00,\n'
 '        -2.72811413e+00, -1.42025387e+00, -2.07952428e+00,\n'
 '         5.07039964e-01, -3.88683766e-01, -8.86802673e-01,\n'
 '        -6.14159882e-01,  3.52865756e-01, -8.90391767e-01,\n'
 '        -6.22681528e-02,  5.56643605e-01, -2.25764900e-01,\n'
 '        -3.25918108e-01,  3.68192673e-01, -1.10081220e+00,\n'
 '         4.39622402e-02,  2.43921638e-01, -4.81998324e-02,\n'
 '        -2.85028148e+00, -1.02032647e-01, -2.34630394e+00,\n'
 '        -7.31400847e-01, -3.43023848e+00,  9.13357616e-01,\n'
 '        -3.46161914e+00,  1.66708380e-02, -1.71665204e+00,\n'
 '        -1.11007965e+00,  6.51731908e-01,  2.78090692e+00,\n'
 '        -2.96796083e+00,  6.12292886e-01,  6.33430362e-01,\n'
 '        -1.61078548e+00, -1.72219682e+00, -2.65268183e+00,\n'
 '         1.66099012e+00,  1.09689689e+00, -1.37936044e+00,\n'
 '         2.18875468e-01, -2.61322439e-01,  8.45392346e-01,\n'
 '        -1.46878445e+00,  1.05476677e+00, -1.74721062e-01,\n'
 '         1.19118381e+00, -1.60379231e-01, -9.26069021e-02,\n'
 '        -3.92814684e+00,  2.65476870e+00,  1.32832623e+00,\n'
 '         1.65311313e+00,  1.01579860e-01, -1.06426036e+00,\n'
 '         2.66438901e-01, -5.17610669e-01, -3.03424336e-02,\n'
 '         5.47456741e-01, -1.08623993e+00, -4.83728886e-01,\n'
 '        -3.60781383e+00, -6.09067500e-01,  2.49455428e+00,\n'
 '         6.49657011e-01, -5.23370326e-01,  1.42945015e+00,\n'
 '        -3.38666767e-01, -6.09259069e-01, -5.16079187e-01,\n'
 '        -3.93927789e+00, -1.97660044e-01, -2.74061203e+00,\n'
 '        -3.69574189e+00,  9.60658371e-01,  2.69750953e+00,\n'
 '        -1.49507701e+00, -1.73025286e+00,  4.55238134e-01,\n'
 '         9.03205037e-01, -1.70440924e+00, -3.12844706e+00,\n'
 '         2.24356628e+00, -1.28061891e-01, -5.54203749e-01,\n'
 '         1.38507500e-01,  1.46957803e+00,  1.12630582e+00,\n'
 '        -1.76694393e+00, -2.07893610e+00, -1.07859123e+00,\n'
 '        -8.58241439e-01,  2.41948462e+00,  6.75721243e-02,\n'
 '         4.21703219e-01, -1.81593388e-01,  2.73982501e+00,\n'
 '        -4.17822599e-01,  4.29186314e-01, -1.42118156e-01,\n'
 '        -1.92798460e+00, -2.67598689e-01, -1.15798855e+00,\n'
 '        -7.56928205e-01, -1.25063455e+00, -4.94182676e-01,\n'
 '         3.51388097e-01,  5.75810850e-01,  2.23860335e+00,\n'
 '         6.11863196e-01, -1.42103410e+00, -8.18053246e-01,\n'
 '        -1.38980460e+00, -2.47237921e+00,  2.56332064e+00,\n'
 '        -2.25593018e+00,  3.08616161e-02, -1.31671512e+00,\n'
 '        -1.53279030e+00,  2.44906202e-01, -1.68078974e-01,\n'
 '        -4.85572591e-02, -1.72003937e+00,  1.36598265e+00,\n'
 '        -1.29999447e+00,  4.56296802e-02,  8.08907747e-01,\n'
 '        -1.82670331e+00, -2.53185844e+00, -3.97090912e-02,\n'
 '         9.68993604e-02, -3.23041201e-01, -2.97157931e+00,\n'
 '         9.07546639e-01, -3.93778294e-01,  1.74622130e+00,\n'
 '         1.14614248e-01,  1.14306092e+00,  1.02980614e+00,\n'
 '        -8.41693640e-01, -9.78214979e-01, -1.84291041e+00,\n'
 '         9.51609075e-01, -3.12264889e-01,  2.06993341e+00,\n'
 '         1.69098723e+00, -1.34645665e+00, -7.77048886e-01,\n'
 '         3.28800130e+00,  1.27575362e+00,  6.44402087e-01,\n'
 '        -1.46532393e+00, -2.13571572e+00, -1.05452895e+00,\n'
 '         1.38603878e+00,  6.94946349e-01,  1.39833689e+00,\n'
 '        -7.66764045e-01,  1.43920541e+00,  1.86765230e+00,\n'
 '         2.74494600e+00,  5.51329851e-01, -9.49951053e-01,\n'
 '        -5.40592849e-01, -1.69732600e-01, -3.43809032e+00,\n'
 '         8.71499419e-01,  1.55860972e+00,  4.39164817e-01,\n'
 '         9.33746338e-01,  3.22923708e+00,  9.45041657e-01,\n'
 '        -2.37353039e+00, -3.38634580e-01, -2.69999242e+00,\n'
 '         1.68948069e-01,  5.91681242e-01, -4.96268272e-01,\n'
 '         1.86996520e+00,  1.75178516e+00,  1.47251666e+00,\n'
 '        -6.64904237e-01,  1.31802797e+00,  1.28579426e+00,\n'
 '         8.77466440e-01, -8.60124111e-01, -1.90422428e+00,\n'
 '         4.51957017e-01, -5.93046248e-01, -2.20820713e+00,\n'
 '         1.06064534e+00, -2.38721311e-01, -3.86187136e-01,\n'
 '         2.44910121e-02,  1.41889191e+00,  2.78206676e-01,\n'
 '         1.59040523e+00, -1.05946338e+00, -2.78129458e-01,\n'
 '         5.90336174e-02,  8.70527506e-01,  8.63460660e-01,\n'
 '        -8.59676242e-01, -1.11567485e+00,  1.32257426e+00,\n'
 '        -1.11651945e+00,  1.76647091e+00, -3.30788463e-01,\n'
 '        -3.21054280e-01, -7.05313802e-01, -6.27530217e-01,\n'
 '         2.44509125e+00,  2.51754522e+00, -1.61750841e+00,\n'
 '        -1.30769992e+00, -2.12887406e+00,  1.47295308e+00,\n'
 '         3.15493673e-01, -4.82030779e-01, -2.90556699e-02,\n'
 '         1.18366194e+00,  5.36060691e-01, -1.07455218e+00,\n'
 '        -7.87571371e-01, -3.06211293e-01,  1.99166584e+00,\n'
 '         1.49495113e+00,  1.20158708e+00,  2.15443921e+00,\n'
 '         3.65256429e-01, -6.27708435e-01, -9.11599040e-01,\n'
 '        -1.92245817e+00, -1.22757947e+00,  3.32443476e-01,\n'
 '         1.35693061e+00, -1.87586009e+00, -1.54457331e+00,\n'
 '         3.98792386e-01,  2.66971558e-01,  3.56329620e-01,\n'
 '        -7.78558314e-01, -1.77457750e+00, -6.06437385e-01,\n'
 '         6.90107644e-01, -2.44554114e+00,  2.44047141e+00,\n'
 '        -2.91465372e-01, -3.35316777e+00, -1.72140288e+00,\n'
 '         2.01139998e+00, -1.17475939e+00, -1.69899130e+00,\n'
 '        -1.83821011e+00,  1.81918228e+00, -5.24143696e-01,\n'
 '        -1.09083950e+00,  5.06289840e-01, -8.12597930e-01,\n'
 '         2.78618753e-01, -1.51498330e+00,  1.65994084e+00,\n'
 '        -5.65867066e-01, -8.93425584e-01,  2.04470396e+00,\n'
 '        -2.66922426e+00,  9.58201349e-01,  1.99640727e+00,\n'
 '        -3.29829186e-01,  6.47778869e-01,  3.06030095e-01,\n'
 '        -2.37959290e+00, -8.09842765e-01,  4.70839232e-01,\n'
 '        -2.07179815e-01,  8.61163974e-01,  1.16905308e+00,\n'
 '         4.39831883e-01, -4.66402441e-01, -6.38777018e-02,\n'
 '         5.66368341e-01,  2.65078473e+00, -5.42195439e-01,\n'
 '         1.38700283e+00, -5.17255306e-01, -6.16508841e-01,\n'
 '         1.46953329e-01,  4.11149949e-01, -2.01759648e+00,\n'
 '         3.32998872e-01,  2.40370393e+00,  1.37558997e+00,\n'
 '        -1.56275690e+00, -1.29140839e-01, -1.32636285e+00,\n'
 '        -2.54887152e+00,  1.28765082e+00, -9.95887160e-01,\n'
 '         1.38675451e+00, -1.10216475e+00, -1.77493012e+00,\n'
 '        -1.95359564e+00, -1.75644743e+00, -1.50208902e+00,\n'
 '         4.15880531e-01,  4.76945341e-01,  2.63124168e-01,\n'
 '         1.39474422e-01,  3.55637670e-01,  1.30753040e+00,\n'
 '         1.89863372e+00,  2.86276484e+00,  8.29124272e-01,\n'
 '         1.06025112e+00,  9.68182862e-01, -3.38979125e-01,\n'
 '        -1.44085634e+00, -6.04110658e-02,  1.83592606e+00,\n'
 '         1.72915816e+00,  2.34097123e+00,  8.26344788e-02,\n'
 '         1.28770506e+00,  2.45842314e+00,  2.57669330e+00,\n'
 '         2.95367241e+00, -2.16753900e-01, -7.95834303e-01,\n'
 '        -3.44852149e-01,  1.03267098e+00, -1.01094603e+00,\n'
 '        -8.36148202e-01, -1.58683682e+00, -1.69613123e+00,\n'
 '         1.44474602e+00,  1.10909176e+00, -1.58744132e+00,\n'
 '        -5.99977970e-01,  1.29846370e+00,  1.41766000e+00,\n'
 '        -8.69199634e-02, -1.46985006e+00,  1.24610603e-01,\n'
 '        -4.04729783e-01, -1.94686794e+00,  2.92417193e+00,\n'
 '         1.54665041e+00, -5.14898658e-01, -7.76035607e-01,\n'
 '        -2.06747341e+00, -1.41792929e+00,  1.28920197e+00,\n'
 '        -7.36820698e-02, -2.11389661e-02, -1.86054945e-01,\n'
 '         8.01777124e-01,  1.09913123e+00,  1.04084289e+00,\n'
 '        -5.78327417e-01, -1.62814450e+00, -1.46645784e+00,\n'
 '        -1.86250448e+00, -1.41805696e+00,  1.21591508e+00,\n'
 '        -1.45819283e+00, -1.13771474e+00,  4.21664089e-01,\n'
 '         1.11385018e-01]])')
'test_inceptionnet | batch_shape is: [1]'
'test_inceptionnet | logits.shape is: ivy.Shape(1, 1000)'
'||'
'test_inceptionnet | indices_test | true_indices is: [258 270 279]'
'test_inceptionnet | indices_test | calc_indices is: [258 270 279]'
'test_inceptionnet | device is: cpu'
'test_inceptionnet | fw is: tensorflow'
'test_inceptionnet | load_weights is: False'
'InceptionV3 | build | layer 1/22 built'
'InceptionV3 | build | layer 2/22 built'
'layer 3/22 built'
'InceptionV3 | build | layer 4/22 built'
'InceptionV3 | build | layer 5/22 built'
'InceptionV3 | build | layer 6/22 built'
'InceptionV3 | build | layer 7/22 built'
'InceptionV3 | build | layer 8/22 built'
'InceptionV3 | build | layer 9/22 built'
'InceptionV3 | build | layer 10/22 built'
'InceptionV3 | build | layer 11/22 built'
'InceptionV3 | build | layer 12/22 built'
'InceptionV3 | build | layer 13/22 built'
'InceptionV3 | build | layer 14/22 built'
'InceptionV3 | build | layer 15/22 built'
'InceptionV3 | build | layer 17/22 built'
'InceptionV3 | build | layer 18/22 built'
'InceptionV3 | build | layer 19/22 built'
'InceptionV3 | build | layer 20/22 built'
'InceptionV3 | build | layer 21/22 built'
'InceptionV3 | build | layer 22/22 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/4 built'
'layer 2/4 built'
'layer 3/4 built'
'layer 4/4 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/6 built'
'layer 2/6 built'
'layer 3/6 built'
'layer 4/6 built'
'layer 5/6 built'
'layer 6/6 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'inceptionNet_v3 | building InceptionV3 model | done 1/3'
'InceptionV3 | forward | input data_format is:NHWC | done 1/27'
'InceptionV3 | forward | data_format is going to be used is:NHWC | done 1/27'
'InceptionV3 | forward | input shape is:ivy.Shape(1, 224, 224, 3) | done 1/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 224, 224, 3) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 111, 111, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 111, 111, 32) | done 2/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 111, 111, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 32) | done 3/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 109, 109, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 64) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 64) | done 4/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 54, 54, 64) | done 5/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 54, 54, 80) | done 3/3'
'InceptionV3 | forward | is:ivy.Shape(1, 54, 54, 80) | done 6/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 80) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 52, 52, 192) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 52, 52, 192) | done 7/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 192) | done 8/27'
'input shape is:ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 32) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 32)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 25, 25, 256) | done 9/27'
'input shape is:ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 10/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 11/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 384) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 96) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 96)'
'one 20/20, output shape is:ivy.Shape(1, 12, 12, 288)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 12/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 12, 12, 768) | done 13/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 14/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 15/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 16/27'
'v3 16/27, output shape is:ivy.Shape(1, 12, 12, 768)'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 5, 5, 192)'
'one 7/20, output shape is:ivy.Shape(1, 5, 5, 768)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 1280) | done 17/27'
'input shape is:ivy.Shape(1, 5, 5, 1280)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 18/27'
'input shape is:ivy.Shape(1, 5, 5, 2048)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 19/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 20/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 5, 5) | done 21/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 1, 1) | done 22/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 27/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 24/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 25/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048) | done 26/27'
'InceptionV3 | forward | fc | done 27/27'
('test_inceptionnet | logits is: ivy.array([[ 1.24451650e+06,  '
 '4.90995750e+05,  1.07804400e+06,\n'
 '        -9.35049250e+05, -2.66642562e+05,  4.27267625e+05,\n'
 '         6.82808750e+04, -3.16113031e+05, -3.43809500e+05,\n'
 '        -4.92274469e+05, -2.82034406e+05, -1.01656035e+04,\n'
 '        -1.45939929e+03, -6.46161375e+05,  4.19215375e+05,\n'
 '         3.55583969e+05,  1.81728484e+05, -4.98424500e+05,\n'
 '         2.80375500e+05, -1.07130500e+06, -4.72350906e+05,\n'
 '         5.46593875e+05,  2.69790062e+05,  3.80390438e+05,\n'
 '         2.10066078e+05, -6.51103688e+05, -8.97189250e+05,\n'
 '        -3.72928312e+05, -1.17354414e+05,  2.42987609e+05,\n'
 '        -3.84131781e+05, -4.94866062e+05, -2.87292344e+05,\n'
 '         6.19763188e+05, -6.99472562e+05,  9.09737438e+05,\n'
 '        -1.06403612e+06, -3.84327750e+05,  2.25371000e+05,\n'
 '        -9.94572188e+05, -9.93251875e+05,  1.28177875e+06,\n'
 '        -2.16020906e+05,  6.50691562e+05,  3.13682500e+05,\n'
 '        -4.01546500e+05,  2.17821578e+05, -1.29599875e+06,\n'
 '         3.73202000e+05, -3.11561531e+05, -1.25116762e+06,\n'
 '         1.73578950e+06,  1.03949000e+05, -2.99628906e+05,\n'
 '         2.87371500e+05, -1.26600562e+05, -2.25509250e+06,\n'
 '        -9.48713125e+05,  3.01527188e+05,  1.65569281e+05,\n'
 '         5.65943250e+05,  4.80819250e+05, -9.19135625e+05,\n'
 '        -9.01123688e+05,  3.67961406e+05, -4.56985594e+05,\n'
 '         6.28464875e+05,  3.35556406e+05, -3.67459938e+05,\n'
 '         1.17860050e+06,  1.05018500e+06, -9.35237438e+05,\n'
 '        -9.44816562e+05,  2.52614797e+05, -4.62611656e+05,\n'
 '        -8.99177375e+05,  9.02161625e+05,  7.31108062e+05,\n'
 '         2.71251500e+05,  6.01073000e+05,  6.41155125e+05,\n'
 '        -2.87798875e+05,  2.12989172e+05,  7.94999688e+05,\n'
 '         4.20861844e+05,  1.02847556e+06, -1.12660961e+05,\n'
 '         2.04465488e+04,  9.20557812e+05, -6.24962438e+05,\n'
 '        -6.25173250e+05,  1.07644475e+06, -7.03797312e+05,\n'
 '         9.82586500e+05,  3.01556219e+05, -9.41960859e+04,\n'
 '         2.80416375e+05, -3.40886125e+05,  4.35815531e+05,\n'
 '        -2.88806406e+05,  1.29803300e+06, -2.93053656e+05,\n'
 '        -1.04307836e+05, -4.52580219e+05, -5.66299000e+05,\n'
 '        -6.73628250e+05,  6.61718562e+05,  9.98966375e+05,\n'
 '        -6.67005312e+05, -1.86907148e+04, -2.12596016e+05,\n'
 '        -1.92141203e+05, -6.14500438e+05,  5.52464375e+05,\n'
 '        -3.67864281e+05, -4.35816031e+05,  5.19424781e+05,\n'
 '         1.48882461e+04, -1.68499688e+05, -7.69365938e+04,\n'
 '         2.05427359e+05,  9.65089562e+05, -3.42427719e+05,\n'
 '        -5.46942125e+05,  5.95371375e+05,  7.49822062e+05,\n'
 '        -5.70718848e+03, -3.42288375e+05,  9.87909180e+03,\n'
 '        -2.53259031e+05, -8.67007438e+05, -1.36834912e+06,\n'
 '         2.89462539e+04, -2.84219938e+05, -4.46454750e+05,\n'
 '         2.51371297e+05, -9.83522062e+05,  6.01058875e+05,\n'
 '         1.64057362e+06,  2.51583375e+05, -7.60801625e+05,\n'
 '         4.55814375e+04,  4.03070031e+05,  1.58990438e+05,\n'
 '        -5.73638188e+05,  4.79202938e+05, -1.39252312e+06,\n'
 '        -3.32518781e+05, -4.20938781e+05, -1.28822609e+05,\n'
 '        -3.27057375e+05, -3.93251312e+05, -3.99532062e+05,\n'
 '         1.31719219e+05, -2.93012281e+05, -6.17260625e+05,\n'
 '        -9.36435375e+05,  3.49597094e+05, -3.39819531e+05,\n'
 '         6.39797000e+05,  3.31238812e+05,  9.51835125e+05,\n'
 '        -4.74687969e+05,  7.89402344e+04, -1.43094516e+05,\n'
 '         1.66146828e+05,  3.98495781e+05,  2.16500344e+05,\n'
 '        -1.07404638e+06, -3.10193188e+05, -5.20676312e+05,\n'
 '        -4.17590875e+05, -5.86372062e+05, -1.19058400e+06,\n'
 '         3.99974500e+05,  7.56748875e+05,  1.03363762e+06,\n'
 '         1.40756450e+06, -2.70484062e+05,  9.48872070e+01,\n'
 '         3.85446812e+05,  6.14415312e+05, -3.40516438e+05,\n'
 '         4.42237000e+05, -4.17058867e+04, -4.51305438e+05,\n'
 '        -2.46989750e+05, -1.16152871e+04,  3.35924906e+05,\n'
 '         4.16906375e+05, -6.31879062e+05,  1.47383422e+05,\n'
 '         4.70582531e+05, -2.36137812e+04,  1.50983141e+05,\n'
 '         5.36593875e+05, -7.79095750e+05, -4.34623000e+05,\n'
 '        -6.23251133e+04,  5.26703000e+05, -8.30495000e+04,\n'
 '         4.06013281e+05,  7.06372062e+05,  2.27753344e+05,\n'
 '         3.65384719e+05,  3.97337094e+05, -7.97372000e+05,\n'
 '         4.26183062e+05, -5.43627188e+05, -2.68699312e+05,\n'
 '         1.70780938e+05,  2.18167125e+05,  2.78180281e+05,\n'
 '         1.14632162e+06,  1.53855391e+05,  9.96048125e+05,\n'
 '        -1.19549275e+06, -8.00568125e+04, -4.34024594e+05,\n'
 '         3.82919938e+05,  9.59101188e+05, -5.04767688e+05,\n'
 '        -4.46493906e+04,  6.31322625e+05,  1.31928641e+05,\n'
 '        -4.58292906e+05, -6.37272375e+05, -1.17877320e+05,\n'
 '         3.22350176e+04,  1.43393164e+03, -1.06157175e+06,\n'
 '        -9.67821812e+05,  5.06669656e+05, -5.47506562e+05,\n'
 '         6.38435500e+05,  3.14139902e+04, -5.89630125e+05,\n'
 '        -1.12201988e+06,  6.61753375e+05, -3.44113656e+05,\n'
 '         7.66682750e+05, -5.35724500e+05, -4.50132094e+05,\n'
 '         7.09905500e+05, -9.68402500e+05, -7.19879812e+05,\n'
 '        -2.95644281e+05,  2.32395234e+05,  5.41928250e+05,\n'
 '        -4.92471688e+05,  2.57079844e+04, -6.24872875e+05,\n'
 '        -4.83635875e+05, -3.34405781e+05, -4.95625656e+05,\n'
 '        -3.29821875e+05, -6.96054625e+05, -8.27904938e+05,\n'
 '         3.32547562e+05, -5.61980562e+05, -3.63064375e+05,\n'
 '        -2.45804703e+05,  9.46981562e+05,  7.69749000e+05,\n'
 '        -4.97812219e+05, -3.12620500e+05,  5.23780969e+05,\n'
 '         1.50300359e+05,  1.14333312e+05, -2.49867453e+05,\n'
 '        -8.43143688e+05, -4.54463781e+05, -1.13616088e+06,\n'
 '         8.18455625e+04, -9.81241172e+04, -6.43199297e+04,\n'
 '        -6.09606688e+05,  1.56902766e+05,  2.15808297e+05,\n'
 '        -2.72699062e+05,  1.97609078e+05, -8.61516812e+05,\n'
 '         2.01109516e+05,  5.32602062e+05,  5.14477688e+05,\n'
 '         3.67710000e+05, -2.43806609e+05, -6.50538711e+04,\n'
 '         3.97060188e+05,  2.34839781e+05,  3.74124781e+05,\n'
 '         4.17296156e+05, -6.47793688e+05, -7.29603828e+04,\n'
 '        -3.20279281e+05,  1.30192525e+06, -1.49666469e+05,\n'
 '        -6.81695562e+05, -7.00242750e+05,  4.56591875e+05,\n'
 '        -3.84159219e+04, -8.04108000e+05,  1.27140725e+06,\n'
 '        -1.12458138e+06, -3.96920094e+05,  8.88940938e+04,\n'
 '         1.71239344e+05,  6.50992312e+05, -2.04917797e+05,\n'
 '         8.64154688e+05, -6.63521875e+05,  2.93885562e+05,\n'
 '         3.65593156e+05, -1.81250094e+05,  1.25275539e+05,\n'
 '        -1.18133138e+06,  6.01269688e+05, -6.84851250e+05,\n'
 '         4.95383250e+05, -8.85595078e+04,  2.36494406e+05,\n'
 '         8.45799375e+05, -1.75032125e+05,  3.94745406e+05,\n'
 '        -6.47476312e+05,  7.31590547e+04, -3.29801562e+05,\n'
 '        -7.03433375e+05, -8.22362312e+05,  2.49559188e+05,\n'
 '        -2.96203125e+05, -2.26037250e+05,  2.61819641e+05,\n'
 '        -9.65666062e+05,  1.47009609e+05, -1.30615938e+06,\n'
 '         1.60496712e+06,  2.10619891e+05, -2.89167281e+05,\n'
 '        -2.31855500e+05, -7.90587375e+05, -2.47326000e+05,\n'
 '         6.90778750e+05, -2.23453312e+05,  6.14992188e+05,\n'
 '        -2.85331055e+03,  1.24869727e+05, -6.37432062e+05,\n'
 '        -5.94764805e+04, -2.20815531e+05, -1.41940938e+05,\n'
 '        -3.08192406e+05, -3.24947250e+05,  9.76729766e+04,\n'
 '         6.87329812e+05, -1.52248516e+05, -6.67873984e+04,\n'
 '        -1.66106688e+05,  4.51688812e+05, -4.95252594e+05,\n'
 '        -4.12724258e+04,  1.90150719e+05, -1.78352375e+05,\n'
 '         4.19740906e+05, -6.59720125e+05,  3.26568781e+05,\n'
 '         4.85528625e+05, -6.38151625e+05,  1.40669350e+06,\n'
 '        -1.03237912e+06, -8.52643125e+05, -2.50674828e+05,\n'
 '        -3.15764062e+05,  5.21813250e+05,  2.00240000e+05,\n'
 '         5.58509688e+05, -8.06716797e+04, -2.68490625e+04,\n'
 '        -9.04344500e+05, -1.65825328e+05,  7.09269438e+05,\n'
 '         2.69182094e+05,  4.56555562e+05, -3.80409438e+05,\n'
 '        -5.67146250e+05, -4.02951094e+05,  2.71237875e+05,\n'
 '         1.41250906e+05,  2.05865000e+05,  6.24261188e+05,\n'
 '        -2.87438156e+05, -1.06964250e+05,  6.18791625e+05,\n'
 '        -2.14657578e+05, -1.19156625e+05,  6.05844688e+05,\n'
 '        -1.44579484e+05, -5.31034250e+05, -7.52030750e+05,\n'
 '        -9.74505250e+05, -4.53212875e+05,  1.19830555e+05,\n'
 '         1.14726012e+06, -8.67734812e+05, -6.38025000e+05,\n'
 '         4.29813594e+05, -6.63466719e+04, -3.97891406e+04,\n'
 '         9.00854938e+05,  2.29638438e+05,  4.98978750e+05,\n'
 '         1.31309925e+06, -6.70444500e+05,  7.70816562e+05,\n'
 '         3.09449902e+04,  1.52513062e+05,  3.92617344e+05,\n'
 '         2.13647328e+05,  5.98186875e+05,  1.41717822e+04,\n'
 '         3.94322070e+03, -5.89663125e+05, -3.20122781e+05,\n'
 '         6.61823562e+05,  7.97665062e+05,  4.30676250e+05,\n'
 '         1.57073219e+05,  3.35337156e+05,  1.26377638e+06,\n'
 '        -1.53946670e+04, -6.15416500e+05, -2.43958922e+05,\n'
 '         4.60644688e+04,  4.28190719e+05,  1.14774707e+04,\n'
 '        -5.24571938e+05, -7.37095500e+05, -1.28092475e+06,\n'
 '        -1.27981227e+05,  1.77368412e+06, -1.52652925e+06,\n'
 '        -9.10360062e+05,  1.05948525e+04, -1.10180188e+05,\n'
 '         1.04180550e+06, -1.40734125e+05, -2.79635469e+05,\n'
 '        -5.69173312e+05,  1.06699288e+06,  1.55668484e+05,\n'
 '         1.07604212e+06, -1.01075675e+06,  8.76686688e+05,\n'
 '        -2.14127594e+05,  1.34063106e+04,  7.87974062e+05,\n'
 '         4.30847812e+05,  2.40096672e+05,  8.07531562e+05,\n'
 '         7.10994062e+05,  5.17745344e+05, -3.89908828e+04,\n'
 '         1.79972469e+05,  6.47504188e+05, -2.55548945e+04,\n'
 '         5.20727062e+05,  5.78244812e+05,  9.83826875e+05,\n'
 '        -5.30874062e+05, -6.41953438e+05, -4.54660656e+05,\n'
 '         4.53838750e+05,  7.62670875e+05,  7.82715688e+05,\n'
 '         3.14203688e+05,  4.38128125e+05, -9.89562938e+05,\n'
 '        -9.70190312e+05, -8.29736500e+05, -5.55311812e+05,\n'
 '         4.50315391e+04,  6.08551094e+04,  1.07236062e+06,\n'
 '         8.85257891e+04,  1.43080662e+06,  5.36943500e+05,\n'
 '         7.35595234e+04,  2.28662375e+05, -2.11858789e+03,\n'
 '         8.46558594e+04,  6.95654125e+05,  9.15873438e+04,\n'
 '         7.00489188e+05,  5.98620312e+05,  1.94375562e+05,\n'
 '        -1.00310712e+06, -1.34659312e+05,  1.03680300e+06,\n'
 '        -2.88142531e+05,  5.01623594e+05, -2.79454375e+05,\n'
 '         1.08025550e+06,  3.95239781e+05, -3.85777695e+04,\n'
 '        -7.47115688e+05,  2.15670891e+05, -3.64876094e+05,\n'
 '        -1.58675750e+05, -5.43316375e+05, -6.18591062e+05,\n'
 '        -4.80331719e+05,  9.01311328e+04, -1.28243600e+06,\n'
 '        -9.80667250e+05,  3.98576656e+05,  1.17059825e+06,\n'
 '         1.79510352e+04, -2.43627688e+05, -2.71835094e+05,\n'
 '         1.39740875e+05,  6.95371125e+05, -4.16238062e+05,\n'
 '        -2.36340844e+05,  3.01481375e+05, -1.38883562e+05,\n'
 '         9.22817750e+05,  5.87898500e+05,  3.01320812e+05,\n'
 '        -3.45702750e+05,  5.45505938e+05, -5.50015438e+05,\n'
 '        -4.80406500e+05, -4.07211594e+05,  5.66329062e+05,\n'
 '         2.04253406e+05, -1.23548586e+05, -1.65276484e+05,\n'
 '        -2.28378672e+05, -4.42415562e+05,  8.01288188e+05,\n'
 '         2.30471453e+05, -5.71649875e+05,  1.46334234e+05,\n'
 '         6.62731484e+04, -7.49050312e+04, -4.83944781e+05,\n'
 '        -6.33502375e+05, -8.31865188e+05, -6.49307250e+05,\n'
 '         1.31767912e+06,  8.66685938e+05,  4.06114375e+05,\n'
 '         7.16199562e+05,  9.28690125e+05,  2.89031469e+05,\n'
 '         7.85737750e+05,  6.25418906e+04,  1.38217832e+04,\n'
 '        -1.03416150e+06, -1.50253953e+05,  1.11138926e+04,\n'
 '         7.35986750e+05, -5.01909812e+05,  1.96708281e+05,\n'
 '         1.88856344e+05,  1.43686016e+05,  3.70851219e+05,\n'
 '         1.11819325e+06,  4.01124625e+05, -8.25513625e+05,\n'
 '         2.22021844e+05,  4.20513125e+05, -1.44177781e+05,\n'
 '         2.75009219e+05, -2.01261016e+05, -2.45279648e+04,\n'
 '         5.81030938e+05,  5.11157531e+05, -3.58719656e+05,\n'
 '         1.04539844e+04,  1.52080859e+05, -3.82928312e+05,\n'
 '        -5.83829688e+04,  1.16227188e+05, -5.64141750e+05,\n'
 '        -4.69409219e+05, -7.62971875e+05, -3.08076000e+05,\n'
 '         7.05583562e+05,  2.65921844e+05,  2.92028312e+05,\n'
 '         1.83925000e+05, -4.61489406e+05, -5.08382938e+05,\n'
 '        -1.00993172e+05, -1.79335332e+04, -2.77198531e+05,\n'
 '         8.91052062e+05, -3.08144062e+05, -1.12333400e+06,\n'
 '        -1.03389375e+05, -6.26602812e+05,  6.66026312e+05,\n'
 '        -3.83894609e+04,  5.85892688e+05, -2.96987219e+05,\n'
 '         9.96053438e+04,  2.66429969e+05, -5.45561000e+05,\n'
 '         1.48757219e+05, -2.86760820e+04, -4.76833156e+05,\n'
 '         8.72685188e+05, -8.03540438e+05,  6.63230562e+05,\n'
 '        -6.79166016e+04,  4.73668469e+05, -4.54766875e+05,\n'
 '        -5.41611688e+05,  6.40206133e+04, -5.85790938e+05,\n'
 '         4.07941375e+05, -4.51615281e+05, -1.45707712e+06,\n'
 '         4.88991312e+05, -2.87124531e+05, -1.76184516e+05,\n'
 '         3.28521906e+05, -2.65575875e+05, -1.12356648e+05,\n'
 '         1.95442938e+05,  1.86624141e+05, -6.16463500e+05,\n'
 '        -2.71766281e+05,  3.86819875e+05, -5.63816992e+03,\n'
 '        -9.35859609e+04,  8.07356719e+04,  1.11390912e+06,\n'
 '         5.83769250e+05, -4.21621812e+05,  2.81619844e+05,\n'
 '         4.79889062e+05,  7.67176438e+05, -2.77403156e+05,\n'
 '        -1.12173008e+05,  5.50339625e+05,  4.42282438e+05,\n'
 '        -2.88075594e+05, -5.58345938e+05, -3.01739688e+05,\n'
 '        -1.25388325e+06,  4.97207312e+05,  9.41696812e+05,\n'
 '        -1.05056062e+06, -1.94009250e+05,  3.94382734e+04,\n'
 '         1.72589234e+05, -7.89343250e+05, -6.06914500e+05,\n'
 '         5.30290062e+05, -2.69649469e+05,  2.42819188e+05,\n'
 '         6.24139312e+05, -1.46062125e+05, -6.22405562e+05,\n'
 '         1.04618539e+05, -2.99452750e+05, -2.21231188e+05,\n'
 '        -5.57411312e+05, -1.15910180e+05, -2.34053734e+05,\n'
 '         1.88054578e+05, -6.61966312e+05,  3.34336188e+05,\n'
 '         1.56414250e+05, -1.71989719e+05, -9.38855375e+05,\n'
 '        -4.82252219e+05, -6.95790820e+03, -8.18070250e+05,\n'
 '        -1.34381594e+05,  8.62063812e+05, -1.05401962e+06,\n'
 '        -2.45348469e+05,  1.12734425e+06, -1.06451938e+06,\n'
 '         9.57222750e+05,  2.00655125e+05, -4.25881000e+05,\n'
 '        -4.97595250e+05, -1.34522425e+06,  2.58166000e+05,\n'
 '        -7.73625875e+05,  2.18241969e+05, -2.90862562e+05,\n'
 '        -1.19198850e+06,  2.40617594e+05,  8.09988438e+04,\n'
 '        -3.36925750e+05, -1.14364242e+05,  8.67416688e+05,\n'
 '        -1.63461141e+05, -1.20689578e+05,  3.65346562e+05,\n'
 '        -9.61658789e+03,  7.17085438e+05,  1.67269031e+05,\n'
 '         1.30075062e+05, -8.00198375e+05,  3.15782562e+05,\n'
 '         1.20523038e+06,  7.45493938e+05,  7.14658438e+05,\n'
 '        -1.03239625e+05,  1.03274144e+06, -1.06251531e+05,\n'
 '         7.24092188e+05,  1.04954488e+06,  2.97914281e+05,\n'
 '         8.65469531e+04,  9.61445188e+05,  2.51372984e+05,\n'
 '         3.28959094e+05,  5.03072281e+05, -6.54430562e+05,\n'
 '        -7.80528938e+05,  5.40418945e+03,  1.80335988e+06,\n'
 '         1.34823984e+05,  7.53011875e+05, -2.95975062e+05,\n'
 '         2.75113594e+05,  4.82368344e+05, -9.40951188e+05,\n'
 '        -3.79310781e+05,  2.16167922e+05,  4.44277156e+05,\n'
 '        -3.88613906e+05,  5.56855562e+05,  5.19573562e+05,\n'
 '        -1.72358500e+05,  5.18265188e+05, -3.04663906e+04,\n'
 '        -2.80549922e+04,  5.16329336e+04, -3.58977688e+05,\n'
 '        -1.77616484e+05,  2.88719727e+04,  4.62989000e+05,\n'
 '        -5.28741625e+05, -4.90456062e+05,  1.65174094e+05,\n'
 '        -2.90793844e+05,  2.22364000e+05, -5.27566125e+05,\n'
 '        -4.86320469e+05,  1.23666438e+06, -6.24183500e+05,\n'
 '         2.63568281e+05, -2.55219812e+05,  8.84462438e+05,\n'
 '        -1.52218975e+06, -3.49603781e+05,  2.46250234e+04,\n'
 '        -5.59588562e+05, -2.91119781e+05, -2.52160684e+04,\n'
 '         2.96588594e+05,  5.07957281e+05,  1.01101119e+06,\n'
 '        -3.63943750e+05, -1.09843375e+06,  6.77363906e+04,\n'
 '        -6.26218398e+04, -3.65045906e+05,  1.27957117e+05,\n'
 '         8.83035000e+05, -2.48675664e+04,  2.68234812e+05,\n'
 '         5.47234688e+05, -4.19158750e+05,  6.25926000e+05,\n'
 '        -1.28246445e+04, -3.02951312e+05, -3.26507688e+05,\n'
 '         5.22922156e+05,  8.23449125e+05,  1.41914088e+06,\n'
 '        -1.41220969e+05, -3.39904297e+04, -4.07057312e+05,\n'
 '         4.35360500e+05,  3.90817844e+05, -3.05825938e+05,\n'
 '        -1.85226328e+05,  9.93773125e+05, -2.53859406e+05,\n'
 '         4.32941406e+05,  2.08337344e+05, -4.84463000e+05,\n'
 '         6.80456125e+05, -4.25362656e+05, -1.04435206e+06,\n'
 '        -1.09999212e+06, -1.15258938e+05,  5.33163875e+05,\n'
 '         7.62289844e+04,  5.11727531e+05,  6.60525250e+05,\n'
 '         9.41638500e+05,  5.74902562e+05, -5.60302125e+05,\n'
 '        -1.02802131e+06, -1.03657619e+06,  4.94837281e+05,\n'
 '        -6.28874062e+05,  5.46307250e+05, -9.89509750e+05,\n'
 '         4.47667188e+05, -3.80034812e+05, -5.91376188e+05,\n'
 '         5.49328938e+05, -7.10531500e+05, -5.61304438e+05,\n'
 '        -9.44714688e+05,  4.96804219e+05,  9.96555250e+05,\n'
 '        -8.33391000e+05, -1.76343750e+04, -3.72472219e+05,\n'
 '        -9.56204844e+04,  8.41873125e+05, -5.84859062e+04,\n'
 '        -4.46414625e+05, -3.16285844e+05, -1.04714319e+06,\n'
 '         1.16433617e+05, -6.62428188e+05,  4.17772656e+05,\n'
 '        -4.70011656e+05,  6.43462750e+05,  2.37315516e+05,\n'
 '         4.41036531e+05,  9.30518438e+05,  6.15454125e+05,\n'
 '        -1.84689172e+05,  8.70886688e+05, -2.14841578e+05,\n'
 '        -8.04381094e+04, -7.85106500e+05,  4.43637156e+05,\n'
 '        -1.15335344e+05, -4.50879594e+05, -7.60858375e+05,\n'
 '         2.23063828e+05, -1.96914016e+05,  4.34946000e+05,\n'
 '         3.48979000e+05, -3.98995742e+04,  7.77872750e+05,\n'
 '         2.65057285e+04, -5.72621500e+05, -1.10031625e+06,\n'
 '         3.22075344e+05, -5.03922125e+05, -8.98337422e+04,\n'
 '        -7.93778125e+04, -4.29454531e+04, -7.50243125e+04,\n'
 '         2.30033867e+04, -4.77691594e+05,  1.33823172e+05,\n'
 '         2.97757531e+05, -3.13771375e+05,  3.03598242e+03,\n'
 '        -2.53936016e+05, -2.92429000e+05,  2.90138008e+04,\n'
 '        -1.07345531e+05, -3.43368156e+05, -4.42811219e+05,\n'
 '         6.05594824e+03,  1.73474266e+05, -3.66249500e+05,\n'
 '         9.39779812e+05,  9.85957500e+04, -4.53838969e+05,\n'
 '        -1.26393797e+05, -3.35108938e+05,  2.10961250e+05,\n'
 '         2.62748688e+05,  6.40293438e+05, -6.54897438e+05,\n'
 '        -5.96225000e+05, -1.96619469e+05,  2.85459438e+05,\n'
 '         7.11987438e+05, -4.74196062e+05,  7.40676406e+04,\n'
 '         2.79209406e+05, -8.36841688e+05,  8.65054000e+05,\n'
 '         2.26356203e+05, -6.61741750e+05, -1.19579600e+06,\n'
 '        -4.16372344e+05,  2.22008547e+05,  2.01617438e+05,\n'
 '         9.05252539e+03,  4.61913250e+05,  7.25916125e+05,\n'
 '        -1.07399562e+06,  6.68819062e+05,  2.13163938e+05,\n'
 '         9.27610562e+05,  3.57196719e+05,  1.57663609e+05,\n'
 '        -5.66083562e+05, -1.48429462e+06,  5.69859500e+05,\n'
 '        -1.81392406e+05, -3.38680031e+05,  5.91054250e+05,\n'
 '        -8.73403125e+05, -4.81781812e+05,  8.24658250e+05,\n'
 '        -2.97282531e+05, -1.25317150e+06, -1.54499031e+05,\n'
 '         2.42936312e+05, -6.46443500e+05,  2.56318281e+04,\n'
 '         1.10378575e+06, -8.56002500e+04, -1.48916200e+06,\n'
 '        -1.99799004e+04,  2.86105594e+05,  8.01999750e+05,\n'
 '         4.51680719e+05, -2.15328766e+05, -3.62067266e+04,\n'
 '         2.27753391e+05, -1.19453266e+05, -7.23321875e+05,\n'
 '         2.30106328e+05, -7.80145438e+05,  3.16981992e+04,\n'
 '        -1.27400430e+05, -9.14064688e+05, -1.29030162e+06,\n'
 '         5.28554375e+05, -8.17430188e+05, -5.23013875e+05,\n'
 '        -8.79759250e+05,  4.93649594e+05,  9.22871750e+05,\n'
 '         2.22724125e+05, -5.57995750e+05,  1.30549156e+05,\n'
 '         5.31306250e+05, -9.34649938e+05, -4.86570438e+05,\n'
 '         2.22502625e+05, -1.09869531e+05,  2.40218469e+05,\n'
 '        -1.45142912e+06,  1.01095306e+06,  3.74601625e+05,\n'
 '         5.63289812e+05, -4.62393094e+05,  3.55944625e+05,\n'
 '        -1.01356444e+06, -5.34462750e+05, -6.28619000e+05,\n'
 '         2.35049395e+04, -1.72583738e+06,  1.07394800e+06,\n'
 '        -1.59358975e+06, -3.56593398e+04,  1.75911875e+05,\n'
 '        -2.14877859e+05, -1.98086484e+05,  3.70070977e+04,\n'
 '         8.69438500e+05,  8.07638938e+05, -5.02927844e+05,\n'
 '        -4.82761969e+05, -5.77900250e+05, -4.59346219e+05,\n'
 '        -1.92216975e+06,  4.03503047e+04,  5.61315125e+05,\n'
 '        -2.54132070e+04,  4.41899250e+05,  1.47988391e+05,\n'
 '        -7.84919438e+05,  1.54952773e+04,  2.30640766e+05,\n'
 '         9.41520938e+05]])')
'test_inceptionnet | batch_shape is: [1]'
'test_inceptionnet | logits.shape is: ivy.Shape(1, 1000)'
'||'
'test_inceptionnet | device is: cpu'
'test_inceptionnet | fw is: tensorflow'
'test_inceptionnet | load_weights is: True'
'InceptionV3 | build | layer 1/22 built'
'InceptionV3 | build | layer 2/22 built'
'layer 3/22 built'
'InceptionV3 | build | layer 4/22 built'
'InceptionV3 | build | layer 5/22 built'
'InceptionV3 | build | layer 6/22 built'
'InceptionV3 | build | layer 7/22 built'
'InceptionV3 | build | layer 8/22 built'
'InceptionV3 | build | layer 9/22 built'
'InceptionV3 | build | layer 10/22 built'
'InceptionV3 | build | layer 11/22 built'
'InceptionV3 | build | layer 12/22 built'
'InceptionV3 | build | layer 13/22 built'
'InceptionV3 | build | layer 14/22 built'
'InceptionV3 | build | layer 15/22 built'
'InceptionV3 | build | layer 17/22 built'
'InceptionV3 | build | layer 18/22 built'
'InceptionV3 | build | layer 19/22 built'
'InceptionV3 | build | layer 20/22 built'
'InceptionV3 | build | layer 21/22 built'
'InceptionV3 | build | layer 22/22 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/4 built'
'layer 2/4 built'
'layer 3/4 built'
'layer 4/4 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/6 built'
'layer 2/6 built'
'layer 3/6 built'
'layer 4/6 built'
'layer 5/6 built'
'layer 6/6 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'inceptionNet_v3 | building InceptionV3 model | done 1/3'
'inceptionNet_v3 | clearning pretrained weights | done 2/3'
'inceptionNet_v3 | loading pretrained weights | done 3/3'
'InceptionV3 | forward | input data_format is:NHWC | done 1/27'
'InceptionV3 | forward | data_format is going to be used is:NHWC | done 1/27'
'InceptionV3 | forward | input shape is:ivy.Shape(1, 224, 224, 3) | done 1/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 224, 224, 3) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 111, 111, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 111, 111, 32) | done 2/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 111, 111, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 32) | done 3/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 109, 109, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 64) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 64) | done 4/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 54, 54, 64) | done 5/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 54, 54, 80) | done 3/3'
'InceptionV3 | forward | is:ivy.Shape(1, 54, 54, 80) | done 6/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 80) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 52, 52, 192) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 52, 52, 192) | done 7/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 192) | done 8/27'
'input shape is:ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 32) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 32)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 25, 25, 256) | done 9/27'
'input shape is:ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 10/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 11/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 384) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 96) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 96)'
'one 20/20, output shape is:ivy.Shape(1, 12, 12, 288)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 12/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 12, 12, 768) | done 13/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 14/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 15/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 16/27'
'v3 16/27, output shape is:ivy.Shape(1, 12, 12, 768)'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 5, 5, 192)'
'one 7/20, output shape is:ivy.Shape(1, 5, 5, 768)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 1280) | done 17/27'
'input shape is:ivy.Shape(1, 5, 5, 1280)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 18/27'
'input shape is:ivy.Shape(1, 5, 5, 2048)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 19/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 20/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 5, 5) | done 21/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 1, 1) | done 22/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 27/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 24/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 25/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048) | done 26/27'
'InceptionV3 | forward | fc | done 27/27'
('test_inceptionnet | logits is: ivy.array([[-1.38213724e-01, '
 '-1.35402501e-01,  6.58749580e-01,\n'
 '         5.95918775e-01, -2.63177276e-01,  7.35087454e-01,\n'
 '         1.90317690e+00,  1.54911268e+00, -6.79762483e-01,\n'
 '        -1.72404563e+00, -1.87501728e-01,  1.47641885e+00,\n'
 '         1.72202504e+00,  1.00630510e+00,  2.26616454e+00,\n'
 '         7.56641701e-02, -1.30778825e+00, -1.21089220e-01,\n'
 '        -1.04487085e+00,  1.49009514e+00,  1.19709992e+00,\n'
 '        -4.39617574e-01,  8.48055243e-01, -1.90017581e-01,\n'
 '        -3.34668219e-01, -1.23371112e+00, -1.50644171e+00,\n'
 '        -2.07807970e+00, -4.69594002e-01, -9.19406354e-01,\n'
 '        -4.81830180e-01,  7.15251684e-01,  1.61518478e+00,\n'
 '         2.49656737e-02,  2.28218126e+00, -2.10786700e+00,\n'
 '        -6.56316400e-01, -5.12109041e-01, -2.74332225e-01,\n'
 '         2.09285140e+00, -8.82616639e-03,  2.58907103e+00,\n'
 '         1.32215321e-01, -2.75690496e-01, -1.16899443e+00,\n'
 '         1.10211277e+00, -4.59297031e-01,  2.04627097e-01,\n'
 '        -7.54047036e-01, -1.61922291e-01, -2.25734973e+00,\n'
 '         6.30379915e-01, -9.36996102e-01, -5.57278335e-01,\n'
 '         3.70754719e-01,  4.47877169e-01, -2.16969013e+00,\n'
 '        -1.42170596e+00, -8.21432412e-01, -8.38693976e-01,\n'
 '        -2.06801653e+00,  1.13197350e+00, -2.72038269e+00,\n'
 '        -1.98358226e+00, -1.66312242e+00, -7.79837847e-01,\n'
 '         6.10272884e-02,  1.40645564e+00,  1.58691931e+00,\n'
 '         6.19018018e-01, -6.78807557e-01, -6.12172008e-01,\n'
 '        -1.75912321e+00, -7.95183837e-01, -1.80067241e+00,\n'
 '        -2.54403919e-01,  2.54651189e-01,  1.43121153e-01,\n'
 '        -1.65499210e+00,  1.92036793e-01, -1.32729447e+00,\n'
 '         6.80484533e-01,  4.33494777e-01,  7.49578297e-01,\n'
 '         5.05292177e-01,  3.48936856e-01,  9.73568201e-01,\n'
 '        -2.00348616e+00,  6.57651305e-01,  1.20338738e+00,\n'
 '         9.84688044e-01,  1.18332458e+00,  1.66059911e-01,\n'
 '        -5.33550084e-01,  1.83156073e-01, -1.79869127e+00,\n'
 '         1.13883483e+00, -1.33266413e+00, -1.45306838e+00,\n'
 '         9.01359320e-01,  2.55981088e-01,  3.61870736e-01,\n'
 '         6.25460982e-01,  1.40038812e+00,  6.24531746e-01,\n'
 '        -2.21296096e+00, -1.63286030e+00,  1.15449309e+00,\n'
 '         1.18072069e+00, -2.55153298e-01,  3.17579448e-01,\n'
 '        -2.26747417e+00,  3.16948563e-01,  3.00108194e+00,\n'
 '         1.06014299e+00, -1.47454739e+00, -2.37331700e+00,\n'
 '         5.53933024e-01, -1.80133605e+00,  6.32854700e-01,\n'
 '        -9.60284233e-01, -2.92562723e+00,  1.80324525e-01,\n'
 '         5.09687662e-02, -7.17235148e-01, -1.25563836e+00,\n'
 '        -1.49906635e+00,  7.26993561e-01, -1.22449064e+00,\n'
 '         1.02139384e-01,  8.89697134e-01, -1.09868288e+00,\n'
 '         1.52740550e+00, -1.02983564e-01, -6.58590972e-01,\n'
 '        -2.87035406e-01, -6.01619005e-01, -1.57128727e+00,\n'
 '        -9.04654562e-01, -1.18802965e+00, -1.11151075e+00,\n'
 '        -5.36493897e-01, -1.49027002e+00, -6.48898780e-01,\n'
 '         4.18773031e+00, -4.65508282e-01,  1.20967007e+00,\n'
 '        -8.32169831e-01, -4.77782041e-01,  1.11443984e+00,\n'
 '         5.50347209e-01,  7.28155255e-01,  3.24238276e+00,\n'
 '        -4.25537944e-01, -3.47461551e-03, -3.84495115e+00,\n'
 '        -1.52899250e-01,  4.67047310e+00, -2.57772684e+00,\n'
 '        -3.85490626e-01,  1.75267279e-01, -2.30750275e+00,\n'
 '        -1.79338098e+00, -9.47868705e-01, -1.50236440e+00,\n'
 '        -1.63087726e+00, -2.15342164e+00, -5.69756985e-01,\n'
 '        -1.81271136e+00,  9.46351349e-01, -6.21752620e-01,\n'
 '         1.80269516e+00,  1.12663245e+00,  6.45814538e-01,\n'
 '         2.41979063e-01, -2.32655501e+00, -1.65214062e+00,\n'
 '        -1.88832164e+00,  1.04189348e+00,  7.80263841e-01,\n'
 '        -4.07653570e-01, -1.27372003e+00, -4.21733570e+00,\n'
 '        -1.41239274e+00, -2.38158298e+00,  3.07640934e+00,\n'
 '         4.86182213e+00, -1.34552991e+00, -2.91736054e+00,\n'
 '        -4.01774931e+00, -1.97493339e+00, -1.99420118e+00,\n'
 '        -1.56905103e+00, -1.55625153e+00, -4.36101770e+00,\n'
 '        -1.22099388e+00, -3.72167254e+00, -4.43508834e-01,\n'
 '        -2.20108223e+00, -3.61704081e-01, -1.62789249e+00,\n'
 '        -3.96193767e+00, -2.03552699e+00,  4.40535307e+00,\n'
 '        -2.50321698e+00, -3.04633236e+00, -2.34073544e+00,\n'
 '         6.88849390e-03, -4.01718235e+00, -3.34319186e+00,\n'
 '        -1.47558773e+00, -1.32582068e+00, -2.83599186e+00,\n'
 '        -7.35891283e-01,  1.26839495e+00, -8.60357225e-01,\n'
 '         1.88133585e+00, -1.63475776e+00,  1.01768994e+00,\n'
 '        -5.30884886e+00, -6.87168241e-01, -5.19708753e-01,\n'
 '         2.79985452e+00,  1.96927047e+00,  5.58474064e+00,\n'
 '        -1.66265845e+00,  5.36573052e-01, -5.02834177e+00,\n'
 '         1.29895771e+00,  1.27862859e+00,  1.19390631e+00,\n'
 '         1.92033148e+00,  1.86321628e+00,  1.00172377e+00,\n'
 '        -1.09732497e+00,  4.93535101e-01, -7.81382263e-01,\n'
 '        -5.93756914e-01, -1.44695246e+00, -1.53812516e+00,\n'
 '        -1.04377925e-01,  3.03344697e-01,  3.43119311e+00,\n'
 '         8.10548782e-01, -5.75450301e-01,  1.59199369e+00,\n'
 '         4.66805994e-01,  1.73653793e+00,  8.69872379e+00,\n'
 '         6.63875246e+00,  3.19487953e+00, -3.19447339e-01,\n'
 '        -6.20135307e-01,  1.22771454e+00, -6.22249365e-01,\n'
 '         3.52332294e-01,  2.80797696e+00,  7.50398731e+00,\n'
 '         2.19531612e+01,  7.07954931e+00,  6.53686666e+00,\n'
 '         6.09584618e+00, -1.75803077e+00, -4.61107194e-02,\n'
 '        -6.14324212e-01, -4.68370438e-01, -1.08978176e+00,\n'
 '         1.90683091e+00, -1.91580176e-01,  2.66117382e+00,\n'
 '         1.32055502e+01, -2.55808622e-01, -6.88743591e-01,\n'
 '         1.68636393e+00,  1.17913261e-01, -1.01330030e+00,\n'
 '         1.17776751e-01,  2.22631908e+00, -3.17778528e-01,\n'
 '         1.17177334e+01,  7.46245503e-01, -5.49308807e-02,\n'
 '        -1.49468040e+00,  4.32430744e+00, -1.39289546e+00,\n'
 '        -1.13132179e+00, -8.99391770e-01,  1.11392212e+00,\n'
 '        -5.76228201e-01,  4.61240053e-01, -6.29561663e-01,\n'
 '         2.90715194e+00,  5.37746966e-01, -9.40361738e-01,\n'
 '        -6.83302879e-01, -2.62190485e+00,  3.77559376e+00,\n'
 '        -9.50667381e-01, -3.04831171e+00, -2.55380225e+00,\n'
 '        -5.03692865e-01, -1.75049827e-02,  5.82049549e-01,\n'
 '         1.10575151e+00,  2.32247747e-02, -9.02131796e-01,\n'
 '         4.01194125e-01,  3.92399400e-01,  8.47648621e-01,\n'
 '         2.28757620e+00, -6.07312262e-01,  9.47444439e-01,\n'
 '         6.59304738e-01, -3.47346246e-01, -2.65233874e-01,\n'
 '         3.27798903e-01, -1.89135480e+00, -4.23958957e-01,\n'
 '         5.14685869e-01, -5.12585401e-01,  1.39142716e+00,\n'
 '         6.75955534e-01,  1.71141338e+00,  1.94328964e+00,\n'
 '        -1.62198055e+00,  1.84695852e+00,  4.93533492e-01,\n'
 '         1.00225234e+00,  1.40948474e+00, -1.91134107e+00,\n'
 '        -1.77612567e+00,  2.14410043e+00,  1.98032594e+00,\n'
 '        -1.00973964e+00, -4.78579581e-01, -2.23434949e+00,\n'
 '         3.76237541e-01, -3.86839092e-01,  3.17386723e+00,\n'
 '        -1.38707686e+00,  6.30653650e-02,  1.50338495e+00,\n'
 '        -1.34510249e-01, -1.39377189e+00, -1.13378870e+00,\n'
 '         3.20712388e-01,  9.27774489e-01,  1.24577713e+00,\n'
 '         7.15627492e-01, -1.03521928e-01,  1.05132133e-01,\n'
 '        -1.47524881e+00, -9.81494367e-01,  1.49528372e+00,\n'
 '        -2.89282501e-02,  2.85457397e+00,  2.22884321e+00,\n'
 '         7.61986017e-01,  1.67891884e+00,  8.16034734e-01,\n'
 '        -2.91222334e+00,  6.57753646e-03, -1.50030243e+00,\n'
 '         2.99002081e-01, -1.01172411e+00, -1.78627253e+00,\n'
 '        -3.68957281e+00, -1.93317974e+00,  1.27101457e+00,\n'
 '        -2.79011798e+00, -2.02217832e-01, -8.79623532e-01,\n'
 '        -4.68662739e-01, -7.09963560e-01, -9.33278680e-01,\n'
 '        -3.87386036e+00, -2.13602400e+00, -5.41891694e-01,\n'
 '         3.46328795e-01, -2.94448662e+00, -1.94512677e+00,\n'
 '        -3.05831385e+00, -1.25741744e+00, -1.17866087e+00,\n'
 '        -3.04212421e-01, -1.58889696e-01, -2.27709055e+00,\n'
 '        -6.03435039e-01, -7.57977724e-01, -6.61091030e-01,\n'
 '        -3.01268721e+00, -1.25948763e+00, -6.12339437e-01,\n'
 '         1.24177504e+00, -5.86445451e-01,  2.63098151e-01,\n'
 '         4.30428088e-01, -8.76054645e-01,  2.20142436e+00,\n'
 '         1.98901236e+00, -1.51961410e+00, -6.18079901e-02,\n'
 '         1.37386859e+00,  4.57002670e-01,  4.52988446e-01,\n'
 '        -9.73479152e-02, -1.36305129e+00, -1.92348528e+00,\n'
 '         6.48434222e-01, -1.41123605e+00, -1.52662885e+00,\n'
 '        -3.08057475e+00, -2.71893811e+00, -2.97703266e-01,\n'
 '        -2.17367485e-01, -1.39620328e+00, -2.89143205e+00,\n'
 '         1.70281982e+00, -6.78488076e-01,  4.79373753e-01,\n'
 '         4.63127077e-01, -2.43946052e+00,  1.29474151e+00,\n'
 '        -1.12887585e+00,  1.33720303e+00,  1.62473083e+00,\n'
 '        -7.13202953e-02,  9.40328836e-01, -2.98013187e+00,\n'
 '         3.69985163e-01, -5.20868003e-02,  5.47688007e-01,\n'
 '         1.69712675e+00, -2.37194791e-01, -2.15057588e+00,\n'
 '        -1.52885556e+00, -1.05803287e+00, -1.00921774e+00,\n'
 '        -1.32683861e+00, -1.82501733e-01,  2.93681598e+00,\n'
 '         8.36457729e-01,  8.29331458e-01, -2.62780619e+00,\n'
 '        -5.23524880e-01,  2.47291541e+00, -1.66709709e+00,\n'
 '         1.60529315e-01, -1.11805153e+00, -6.37053072e-01,\n'
 '        -1.34961951e+00,  2.41151786e+00, -2.20433235e+00,\n'
 '        -1.66688251e+00,  1.52222872e-01,  9.28542614e-01,\n'
 '         1.96437001e-01,  9.19006109e-01, -2.57504791e-01,\n'
 '         2.43610561e-01, -7.79187798e-01, -1.04478002e+00,\n'
 '         1.43812120e+00, -7.97423959e-01,  1.71885550e+00,\n'
 '        -1.94926226e+00, -7.27412105e-01, -8.44970107e-01,\n'
 '         6.85602307e-01, -8.54412019e-02,  2.02853417e+00,\n'
 '        -1.08386373e+00, -2.89406538e+00,  2.92195392e+00,\n'
 '        -1.11469305e+00, -3.38307476e+00,  3.70358944e+00,\n'
 '        -4.86837983e-01,  1.62977457e-01,  7.94045627e-01,\n'
 '        -9.74239707e-01,  7.29790807e-01, -2.47784710e+00,\n'
 '        -6.22410178e-01, -3.35975021e-01, -4.29425526e+00,\n'
 '        -8.88280421e-02,  1.18486166e-01, -2.53871739e-01,\n'
 '         3.81030023e-01,  1.16654491e+00,  8.68415773e-01,\n'
 '        -1.28485846e+00, -1.08343267e+00,  8.78686547e-01,\n'
 '        -2.55440593e-01, -9.15312707e-01, -1.42713881e+00,\n'
 '         8.95513773e-01,  7.73971021e-01, -3.85225439e+00,\n'
 '        -3.17542583e-01, -1.77191853e+00, -2.21770361e-01,\n'
 '        -2.91989064e+00,  1.49483168e+00,  1.10409558e+00,\n'
 '        -2.97479630e-01,  1.68936062e+00, -4.44339365e-01,\n'
 '         1.47903752e+00,  5.12511134e-01,  8.93569112e-01,\n'
 '        -7.51931429e-01, -6.10831976e-02,  4.63377476e-01,\n'
 '        -1.16727769e+00,  7.04352677e-01, -2.77243304e+00,\n'
 '        -1.59467256e+00,  7.58933127e-02, -1.41458595e+00,\n'
 '        -1.15456009e+00, -1.57868230e+00,  1.13233447e-01,\n'
 '        -1.66724789e+00, -7.92616844e-01, -1.47057128e+00,\n'
 '        -1.04507422e+00, -6.68964982e-01,  6.25913382e-01,\n'
 '         1.55916667e+00, -8.90620828e-01, -2.40249324e+00,\n'
 '        -9.18947816e-01,  1.41163039e+00, -3.19160700e+00,\n'
 '         1.30160320e+00,  5.94536781e-01, -1.17770171e+00,\n'
 '        -5.73802412e-01,  1.62470102e+00,  1.10859729e-01,\n'
 '         2.09600425e+00,  5.12342393e-01, -2.22502783e-01,\n'
 '         1.98767245e+00,  1.15982985e+00, -1.37255907e+00,\n'
 '        -4.90303606e-01,  8.65334123e-02, -1.92012143e+00,\n'
 '        -1.32758760e+00, -4.44065475e+00, -3.57031614e-01,\n'
 '        -2.51564980e+00,  4.51773822e-01, -2.57854015e-02,\n'
 '         8.43286276e-01,  1.03989756e+00, -5.35125136e-02,\n'
 '         1.15704685e-02,  2.46338248e+00,  2.75557566e+00,\n'
 '         3.98824275e-01, -6.36998653e-01,  1.65044427e+00,\n'
 '        -3.46691704e+00,  3.39712411e-01, -1.04892218e+00,\n'
 '         3.06539834e-02, -8.22060585e-01,  1.56307983e+00,\n'
 '         1.68024003e+00, -1.10877132e+00, -6.60291016e-01,\n'
 '        -1.40063733e-01,  4.83208776e-01,  2.96591950e+00,\n'
 '        -1.86752284e+00,  1.57262802e+00,  8.28978658e-01,\n'
 '         3.86746979e+00, -5.43127656e-01,  1.74218404e+00,\n'
 '         2.25612044e+00, -2.84164643e+00,  9.61324930e-01,\n'
 '        -3.15246284e-01, -4.76046622e-01,  1.77316475e+00,\n'
 '        -2.17408824e+00,  3.03067207e+00,  8.83513928e-01,\n'
 '         2.17223120e+00, -2.08506957e-01,  1.61244225e+00,\n'
 '         8.53648603e-01, -1.55154455e+00,  3.44140828e-02,\n'
 '        -4.63498115e-01, -1.91367900e+00, -1.54991031e+00,\n'
 '        -1.50780749e+00,  2.89653301e+00, -5.07090867e-01,\n'
 '         5.78920841e+00,  1.37837374e+00,  5.93431354e-01,\n'
 '        -6.12620473e-01, -1.31463647e-01,  5.27111113e-01,\n'
 '        -7.23087549e-01,  2.17708921e+00,  1.56651402e+00,\n'
 '        -2.81665420e+00,  1.36955574e-01,  5.95737457e-01,\n'
 '        -1.79412746e+00,  7.75426447e-01, -1.70702815e+00,\n'
 '         2.88991499e+00,  1.06152952e-01, -3.86449933e-01,\n'
 '         2.77090478e+00,  5.93851089e-01,  2.28689814e+00,\n'
 '        -4.14481014e-01,  1.69643199e+00,  1.20893312e+00,\n'
 '        -1.99248052e+00, -2.80062914e-01, -3.64222437e-01,\n'
 '         4.07537431e-01, -1.34340727e+00, -3.19090128e+00,\n'
 '        -4.72935379e-01, -3.34928513e+00,  1.44483638e+00,\n'
 '         1.43542022e-01, -1.15760541e+00, -8.87070373e-02,\n'
 '        -3.92516345e-01,  1.19229329e+00, -3.02232653e-01,\n'
 '         1.35447061e+00,  6.01998508e-01, -1.05237281e+00,\n'
 '        -2.06005752e-01, -1.26517952e+00,  8.12968671e-01,\n'
 '        -2.29925179e+00,  6.32681668e-01, -1.84730113e+00,\n'
 '        -3.65738243e-01, -1.88944650e+00,  1.07590485e+00,\n'
 '        -2.21847153e+00, -1.30331069e-01, -7.13802815e-01,\n'
 '        -2.02130032e+00, -4.67643172e-01,  2.10979676e+00,\n'
 '        -2.55960345e+00,  1.18680954e+00, -2.04811618e-02,\n'
 '         2.64543891e-01, -1.31075191e+00, -3.42712808e+00,\n'
 '         4.39082205e-01,  1.24666572e+00,  4.39037383e-02,\n'
 '        -6.11787558e-01,  3.42633992e-01,  6.61189437e-01,\n'
 '        -7.31215000e-01, -1.28573179e-03,  5.65999746e-01,\n'
 '         6.83755159e-01,  3.03243589e+00, -1.68496704e+00,\n'
 '        -3.11786556e+00,  1.98303163e+00, -1.09165955e+00,\n'
 '        -6.84950501e-02, -8.17534685e-01, -7.44683087e-01,\n'
 '         5.38890362e-01, -2.90964305e-01,  4.16380465e-01,\n'
 '         1.63901448e-01, -3.13213229e-01,  8.29565585e-01,\n'
 '        -4.54514742e+00, -6.83623374e-01,  2.08713222e+00,\n'
 '         6.09799147e-01,  7.86636114e-01, -3.68786186e-01,\n'
 '         1.09676242e+00, -1.36281431e+00,  3.46480012e-02,\n'
 '        -2.60191941e+00, -1.17052031e+00, -2.39465523e+00,\n'
 '        -3.38737035e+00, -5.84426284e-01,  9.11391795e-01,\n'
 '        -1.87736964e+00, -2.67782211e+00,  3.94809931e-01,\n'
 '         2.73433495e+00,  9.63257551e-01, -4.05920363e+00,\n'
 '         1.76332974e+00, -1.54682040e-01, -2.15271282e+00,\n'
 '        -7.44212985e-01,  2.25529695e+00,  3.43210697e+00,\n'
 '         9.22715187e-01, -1.67120421e+00, -8.56891275e-01,\n'
 '         2.54786879e-01,  2.42012930e+00, -4.43482637e-01,\n'
 '        -6.64501429e-01, -6.15299106e-01, -1.98039496e+00,\n'
 '        -1.04910445e+00, -2.28308964e+00,  4.02232265e+00,\n'
 '        -6.05150908e-02,  3.59350562e-01, -4.69751954e-01,\n'
 '        -6.87077045e-01, -5.37122726e-01,  1.05990255e+00,\n'
 '         7.38327503e-01, -1.08380616e+00,  3.72431445e+00,\n'
 '        -2.91066289e-01, -1.35383153e+00, -4.06981647e-01,\n'
 '        -5.26992619e-01, -1.67770648e+00,  3.85806799e+00,\n'
 '         5.33743799e-01, -1.55699611e+00,  7.54888058e-02,\n'
 '        -1.55264699e+00,  7.81056702e-01,  5.57258666e-01,\n'
 '        -1.75510788e+00, -1.25282860e+00,  6.16109550e-01,\n'
 '         9.05310452e-01,  3.67594659e-02,  1.68730986e+00,\n'
 '        -1.06254244e+00, -1.70610571e+00, -2.50704670e+00,\n'
 '         1.01764107e+00,  3.31712317e+00, -1.90348685e-01,\n'
 '        -2.51838231e+00, -1.24498832e+00,  7.11825192e-01,\n'
 '        -7.53442585e-01,  1.12223506e+00, -1.48845577e+00,\n'
 '        -9.48150277e-01, -9.18766037e-02, -1.29923832e+00,\n'
 '        -2.41839066e-01,  3.06147075e+00,  8.94924045e-01,\n'
 '        -5.40273666e-01,  1.26991975e+00, -1.51508987e-01,\n'
 '         2.83857417e+00,  3.11416006e+00,  8.29528570e-01,\n'
 '         6.72654688e-01,  1.30257690e+00, -4.04366195e-01,\n'
 '         3.55332911e-01,  8.27810109e-01,  4.47050750e-01,\n'
 '         2.66361952e-01,  1.90394402e+00,  3.44339311e-02,\n'
 '         4.32221770e-01, -8.58691216e-01, -3.25828642e-02,\n'
 '        -1.28481710e+00, -1.33068278e-01, -4.22735119e+00,\n'
 '         6.13468029e-02,  1.78745794e+00,  2.42351604e+00,\n'
 '        -1.81783900e-01,  1.50263977e+00, -1.57645774e+00,\n'
 '        -4.48332071e-01, -1.09583831e+00, -4.94858170e+00,\n'
 '        -6.14810526e-01, -8.64970386e-02,  7.95885682e-01,\n'
 '         2.14410281e+00,  4.69024062e-01,  5.84468424e-01,\n'
 '         3.60362738e-01,  1.29022086e+00,  3.39550525e-01,\n'
 '         8.02491427e-01,  6.81137800e-01, -4.29503351e-01,\n'
 '         7.86189199e-01,  9.42937136e-02, -2.55269861e+00,\n'
 '         1.98479438e+00, -2.90672362e-01, -2.34588936e-01,\n'
 '        -4.01353693e+00,  1.48128188e+00, -3.21594626e-01,\n'
 '         2.12757707e+00, -1.83139527e+00, -1.82614773e-01,\n'
 '        -9.68682051e-01,  7.07715392e-01,  9.22665596e-01,\n'
 '        -3.41039181e-01, -6.02531433e-02,  4.61480081e-01,\n'
 '         1.62967190e-01,  2.51348555e-01, -1.25918388e+00,\n'
 '        -2.09196880e-01,  1.04331696e+00,  1.33625352e+00,\n'
 '         2.17231226e+00,  4.31913704e-01,  2.42905796e-01,\n'
 '        -3.00717801e-02, -8.31100464e-01,  6.93248272e-01,\n'
 '         9.79644477e-01,  1.30048120e+00,  2.04003766e-01,\n'
 '         2.27700925e+00, -3.83849263e-01,  4.51036036e-01,\n'
 '        -5.96214294e-01, -2.01086044e+00,  7.78829575e-01,\n'
 '         4.08333659e-01, -2.03715116e-01,  9.66680586e-01,\n'
 '         2.19758701e+00, -1.52767742e+00, -3.74131143e-01,\n'
 '        -3.00235701e+00, -7.06214070e-01, -1.83212125e+00,\n'
 '         5.83486915e-01, -2.04998446e+00, -8.32248271e-01,\n'
 '         2.58376062e-01, -5.66924512e-01,  2.18188453e+00,\n'
 '        -1.74565220e+00, -2.28134131e+00, -7.77195573e-01,\n'
 '         7.77979046e-02, -3.60188937e+00,  2.42925096e+00,\n'
 '        -8.76773417e-01, -2.04905033e+00,  2.50685990e-01,\n'
 '         3.23912644e+00, -1.41650081e-01,  1.72286466e-01,\n'
 '         9.78258848e-02,  9.30617929e-01,  5.92773199e-01,\n'
 '        -9.26942527e-01,  2.42754316e+00, -1.77462828e+00,\n'
 '        -2.33665109e-02, -5.88810444e-01,  2.13540292e+00,\n'
 '         1.08631030e-01, -1.69204783e+00,  3.03339720e+00,\n'
 '        -1.82956827e+00,  3.80420923e+00,  7.40648806e-01,\n'
 '        -2.84951359e-01, -1.50950289e+00,  5.24181366e-01,\n'
 '        -2.07570553e+00,  1.49314463e-01, -2.51393509e+00,\n'
 '         5.02692342e-01,  2.96671224e+00, -2.01517534e+00,\n'
 '         3.86279523e-01, -8.20211291e-01, -8.50524306e-01,\n'
 '        -4.84609187e-01,  1.52037597e+00, -3.83060038e-01,\n'
 '         6.76692486e-01,  4.53747898e-01,  2.57043421e-01,\n'
 '         4.85367507e-01,  2.82515556e-01,  2.33030722e-01,\n'
 '         9.83908892e-01,  9.05095160e-01,  2.07114846e-01,\n'
 '        -1.36213139e-01,  2.03949618e+00, -1.63309777e+00,\n'
 '        -7.37484038e-01,  6.91782236e-01, -2.08710283e-01,\n'
 '         8.26852679e-01, -1.39095557e+00, -3.41241121e-01,\n'
 '        -2.20955706e+00, -1.63166022e+00, -1.17819095e+00,\n'
 '        -1.49863839e-01,  3.26517344e-01, -3.54831189e-01,\n'
 '         8.73534977e-02,  1.54753923e+00,  3.62486076e+00,\n'
 '         1.96675015e+00,  2.51385450e+00,  1.80928576e+00,\n'
 '         3.51302385e+00, -4.31269825e-01, -2.58354640e+00,\n'
 '        -1.06566228e-01,  1.76273608e+00,  2.48719192e+00,\n'
 '         1.91359699e+00,  2.60160017e+00,  8.28120828e-01,\n'
 '         2.05435157e+00,  2.54615307e+00,  2.50973892e+00,\n'
 '         2.71265197e+00, -2.38837934e+00, -7.90010035e-01,\n'
 '        -7.31512487e-01,  1.04585814e+00, -8.70131970e-01,\n'
 '        -1.77870965e+00, -2.12093806e+00,  8.43651950e-01,\n'
 '         2.19985318e+00,  2.32066774e+00, -1.19935787e+00,\n'
 '        -9.28522795e-02, -9.57344770e-01,  4.73984688e-01,\n'
 '        -4.41054523e-01, -2.44388962e+00, -6.91887736e-01,\n'
 '        -1.94333219e+00, -2.05413580e+00,  2.68577290e+00,\n'
 '         3.30621362e-01, -1.08985257e+00, -1.30652237e+00,\n'
 '         2.75095284e-01,  4.76397395e-01, -9.96485770e-01,\n'
 '        -1.61861134e+00, -2.08890974e-01, -1.35072553e+00,\n'
 '         2.83143252e-01, -2.12514937e-01,  1.12612748e+00,\n'
 '         4.14574772e-01, -6.23095520e-02, -7.99487352e-01,\n'
 '        -1.16237044e+00, -1.91934395e+00,  1.11765945e+00,\n'
 '        -5.12344718e-01, -1.83370018e+00, -8.71133208e-01,\n'
 '         7.10712850e-01]])')
'test_inceptionnet | batch_shape is: [1]'
'test_inceptionnet | logits.shape is: ivy.Shape(1, 1000)'
'||'
'test_inceptionnet | indices_test | true_indices is: [258 270 279]'
'test_inceptionnet | indices_test | calc_indices is: [258 270 279]'
'test_inceptionnet | device is: cpu'
'test_inceptionnet | fw is: tensorflow'
'test_inceptionnet | load_weights is: False'
'InceptionV3 | build | layer 1/22 built'
'InceptionV3 | build | layer 2/22 built'
'layer 3/22 built'
'InceptionV3 | build | layer 4/22 built'
'InceptionV3 | build | layer 5/22 built'
'InceptionV3 | build | layer 6/22 built'
'InceptionV3 | build | layer 7/22 built'
'InceptionV3 | build | layer 8/22 built'
'InceptionV3 | build | layer 9/22 built'
'InceptionV3 | build | layer 10/22 built'
'InceptionV3 | build | layer 11/22 built'
'InceptionV3 | build | layer 12/22 built'
'InceptionV3 | build | layer 13/22 built'
'InceptionV3 | build | layer 14/22 built'
'InceptionV3 | build | layer 15/22 built'
'InceptionV3 | build | layer 17/22 built'
'InceptionV3 | build | layer 18/22 built'
'InceptionV3 | build | layer 19/22 built'
'InceptionV3 | build | layer 20/22 built'
'InceptionV3 | build | layer 21/22 built'
'InceptionV3 | build | layer 22/22 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/4 built'
'layer 2/4 built'
'layer 3/4 built'
'layer 4/4 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/6 built'
'layer 2/6 built'
'layer 3/6 built'
'layer 4/6 built'
'layer 5/6 built'
'layer 6/6 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'inceptionNet_v3 | building InceptionV3 model | done 1/3'
'InceptionV3 | forward | input data_format is:NCHW | done 1/27'
'InceptionV3 | forward | data_format is going to be used is:NCHW | done 1/27'
'InceptionV3 | forward | input shape is:ivy.Shape(1, 224, 224, 3) | done 1/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 224, 224, 3) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 111, 111, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 111, 111, 32) | done 2/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 111, 111, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 32) | done 3/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 109, 109, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 64) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 64) | done 4/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 54, 54, 64) | done 5/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 54, 54, 80) | done 3/3'
'InceptionV3 | forward | is:ivy.Shape(1, 54, 54, 80) | done 6/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 80) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 52, 52, 192) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 52, 52, 192) | done 7/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 192) | done 8/27'
'input shape is:ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 32) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 32)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 25, 25, 256) | done 9/27'
'input shape is:ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 10/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 11/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 384) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 96) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 96)'
'one 20/20, output shape is:ivy.Shape(1, 12, 12, 288)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 12/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 12, 12, 768) | done 13/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 14/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 15/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 16/27'
'v3 16/27, output shape is:ivy.Shape(1, 12, 12, 768)'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 5, 5, 192)'
'one 7/20, output shape is:ivy.Shape(1, 5, 5, 768)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 1280) | done 17/27'
'input shape is:ivy.Shape(1, 5, 5, 1280)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 18/27'
'input shape is:ivy.Shape(1, 5, 5, 2048)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 19/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 20/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 5, 5) | done 21/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 1, 1) | done 22/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 27/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 24/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 25/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048) | done 26/27'
'InceptionV3 | forward | fc | done 27/27'
('test_inceptionnet | logits is: ivy.array([[-1.81086094e+04, -5.56092250e+05, '
 '-4.16200219e+05,\n'
 '         6.37755273e+04, -1.00753200e+06,  3.08277219e+05,\n'
 '         2.64851438e+05,  1.33170062e+05,  2.36994422e+05,\n'
 '         5.41805562e+05, -1.35596562e+05, -8.65525625e+04,\n'
 '        -4.08710000e+04, -1.22099288e+06,  5.92080875e+05,\n'
 '         6.69593750e+05, -1.27135825e+06,  4.72382969e+05,\n'
 '        -3.19601875e+05,  1.27754738e+06,  7.60485062e+05,\n'
 '         1.43323875e+05,  7.01632891e+04, -2.81765688e+05,\n'
 '        -2.53095391e+05, -7.11009188e+05,  3.73662875e+05,\n'
 '         3.85429219e+05, -8.52888812e+05, -1.09960023e+05,\n'
 '        -2.14611172e+04, -2.16694031e+05,  1.45504797e+05,\n'
 '        -5.34003750e+05, -4.47058750e+05,  6.31652375e+05,\n'
 '         9.57682875e+05,  5.78795938e+05, -1.61505906e+05,\n'
 '        -2.10567812e+05,  4.08330531e+05,  3.10082562e+05,\n'
 '        -2.22098242e+03, -3.08353031e+05,  4.85683594e+05,\n'
 '         1.20880175e+06, -8.48889625e+05, -2.76371938e+05,\n'
 '        -5.70705875e+05,  9.62228188e+05, -8.14789812e+05,\n'
 '         6.47766562e+05, -3.91136816e+03, -8.21102938e+05,\n'
 '        -9.91232734e+04,  2.63262750e+05,  4.32105375e+05,\n'
 '         1.50003797e+05,  1.32731703e+05, -3.17112875e+05,\n'
 '         3.20654656e+05, -7.08686062e+05, -1.69770719e+05,\n'
 '        -4.27901812e+05,  6.28845375e+05,  2.95992750e+05,\n'
 '        -2.43153422e+05,  1.22979088e+06,  5.08893750e+05,\n'
 '        -5.87011938e+05,  4.90615125e+05, -8.17948062e+05,\n'
 '        -1.89005172e+05,  8.91290250e+05, -1.34002212e+06,\n'
 '        -4.16821688e+05, -5.66100938e+04,  5.70940438e+05,\n'
 '        -2.20455562e+05,  6.79652812e+04, -5.73931750e+05,\n'
 '         1.90863188e+05,  1.64512922e+05, -1.80688938e+05,\n'
 '         3.19402469e+05,  2.61850266e+05,  7.27778250e+05,\n'
 '        -3.74438000e+05, -5.03297852e+03, -1.21311031e+05,\n'
 '         3.19834656e+05, -3.82950938e+05, -7.68261938e+05,\n'
 '        -8.74097422e+04, -7.31662125e+05, -1.73328625e+05,\n'
 '         2.03884326e+03,  3.96757000e+05,  7.07200938e+04,\n'
 '         4.82440844e+05, -9.66078281e+04,  1.39332203e+05,\n'
 '         1.24787125e+05, -4.12428219e+05, -3.90082406e+05,\n'
 '         4.32770688e+05,  1.27258703e+05, -1.93540219e+05,\n'
 '         3.44592312e+05, -1.92304578e+05, -3.41004469e+05,\n'
 '         1.80262703e+05, -2.01713422e+05,  3.94523156e+05,\n'
 '        -2.33931812e+05,  4.52692062e+05,  9.12526250e+04,\n'
 '        -4.63284281e+05, -3.00155406e+05,  5.25882125e+05,\n'
 '         1.11038656e+05, -6.62163812e+05, -4.63115281e+05,\n'
 '        -8.52896750e+05, -4.05707812e+05, -6.40258562e+05,\n'
 '         1.14688600e+06, -2.32988406e+05, -1.03992109e+04,\n'
 '         8.90595000e+04, -4.75962875e+05, -4.85363219e+05,\n'
 '        -2.66086750e+05, -7.15704062e+04, -3.78909406e+05,\n'
 '         5.48133188e+05,  1.01577031e+06, -7.81132910e+03,\n'
 '        -2.03658781e+05, -2.18829125e+05,  8.73949844e+04,\n'
 '         1.45487562e+05,  8.49848938e+05, -2.07628172e+05,\n'
 '         2.07305812e+05,  4.03213438e+04,  1.00021547e+05,\n'
 '         4.25644875e+05,  4.13610656e+05, -4.10364375e+04,\n'
 '        -3.60061188e+05, -4.48451625e+05, -2.77419500e+05,\n'
 '         3.93268000e+05, -7.58870500e+05, -6.21418750e+04,\n'
 '        -1.04932588e+06,  5.71364531e+04, -5.36222461e+04,\n'
 '         3.70710625e+04, -3.61748516e+04, -4.80697750e+05,\n'
 '        -6.55060688e+05, -3.09424188e+05,  1.81607594e+05,\n'
 '         3.09597906e+05,  3.37950625e+05,  2.49097156e+05,\n'
 '        -5.79890375e+05,  1.99980922e+05,  1.00610484e+05,\n'
 '         4.48524781e+05, -4.75111375e+05, -1.81069250e+05,\n'
 '         3.10614750e+05, -2.63272438e+05,  1.82835859e+04,\n'
 '         1.21214141e+05, -1.29379125e+05,  7.35426562e+05,\n'
 '        -7.00601000e+05, -1.46777734e+05,  1.13168450e+06,\n'
 '         3.02577750e+05, -7.68264250e+05,  5.10529281e+05,\n'
 '        -7.47182375e+05, -4.04626562e+05,  1.50896250e+05,\n'
 '         4.98162688e+05, -4.46480281e+05, -1.27348445e+05,\n'
 '         1.04964938e+05,  9.90502188e+05, -1.99537344e+05,\n'
 '         8.99188000e+05,  3.48607719e+05, -1.34233769e+04,\n'
 '        -2.67906125e+05,  6.75986719e+04,  1.46184469e+05,\n'
 '        -2.51319551e+04, -5.77342938e+05, -4.24257469e+05,\n'
 '         3.74281875e+05,  6.13722250e+05, -3.18472750e+05,\n'
 '        -3.48764219e+05,  2.83287617e+04,  6.56673562e+05,\n'
 '        -3.44790250e+05,  1.18649688e+06,  1.94408125e+05,\n'
 '        -9.13842438e+05,  2.65980312e+05, -3.14954062e+05,\n'
 '        -4.42581781e+05,  8.91588875e+05,  2.87754688e+05,\n'
 '        -4.24391781e+05, -2.56220359e+05, -2.88735250e+05,\n'
 '         5.06154500e+05,  3.39651906e+05, -6.83500188e+05,\n'
 '        -3.87286172e+04,  1.14315797e+05, -5.87223000e+05,\n'
 '         3.21930500e+05,  7.39173375e+05,  2.42650406e+05,\n'
 '         4.61840906e+05,  2.73745125e+05, -4.26933125e+05,\n'
 '         4.88450156e+05, -1.72587539e+04, -1.01935344e+06,\n'
 '         6.81087250e+05,  1.54111469e+05, -1.02603469e+06,\n'
 '        -3.42125219e+05, -1.97699281e+05,  6.54729625e+05,\n'
 '         6.18050750e+05,  5.36592125e+05,  9.22951500e+05,\n'
 '         3.29998938e+05,  3.31523062e+05,  4.69466031e+05,\n'
 '         1.62847328e+05, -4.53861602e+04,  3.20135344e+05,\n'
 '        -4.96821062e+05, -9.63072688e+05, -1.68142875e+05,\n'
 '         1.24038023e+05,  7.82089375e+04,  7.47575500e+05,\n'
 '         3.75697812e+05,  5.32361750e+05,  6.01343000e+05,\n'
 '        -9.43121562e+04, -1.24471180e+05, -2.06528562e+05,\n'
 '         8.15600875e+05, -3.97119594e+05, -1.82304375e+05,\n'
 '         2.59225422e+05, -2.67980156e+05,  6.82593750e+05,\n'
 '        -3.56199906e+05,  1.27353000e+06,  4.49056875e+05,\n'
 '        -2.01564562e+05, -1.63853859e+05,  6.96867578e+04,\n'
 '        -5.47476000e+05, -8.96318594e+04, -2.56317188e+05,\n'
 '        -1.65783203e+05,  4.56308312e+05, -1.42988469e+05,\n'
 '        -4.93027656e+05,  7.81373875e+05, -7.93282375e+05,\n'
 '        -2.62421281e+05,  6.93820859e+04,  7.90061312e+05,\n'
 '        -1.69747453e+05,  2.69186719e+05,  7.60941938e+05,\n'
 '        -9.78318750e+04, -7.38041125e+05, -1.79823938e+05,\n'
 '         7.40559812e+05,  6.64215000e+05,  2.70658375e+05,\n'
 '        -1.85363281e+05, -6.62758188e+05,  7.40200688e+05,\n'
 '         2.04853203e+04, -9.95123500e+05, -1.98047109e+05,\n'
 '         3.30912625e+05,  3.49116500e+05, -1.79572344e+04,\n'
 '         1.81597125e+05,  3.94062219e+05,  1.16119012e+06,\n'
 '        -2.71275875e+05, -4.13928000e+05, -9.44681172e+04,\n'
 '        -3.20913188e+05,  1.86680586e+04, -1.43672312e+05,\n'
 '         1.06825508e+05,  6.54872062e+05,  1.17753945e+05,\n'
 '        -1.30739094e+05,  2.79932750e+05, -9.03400938e+05,\n'
 '         5.33508188e+05,  1.51796641e+05,  1.57109766e+05,\n'
 '         8.16868438e+04, -4.49269625e+05,  1.75539023e+04,\n'
 '        -2.71205281e+05, -5.42332250e+05, -4.34804906e+05,\n'
 '         6.59508000e+05,  3.63689875e+05,  2.97021562e+05,\n'
 '        -1.98917125e+05, -1.46446969e+05, -1.28627906e+05,\n'
 '         3.88628406e+05, -6.43826875e+04,  1.35832525e+06,\n'
 '         1.71664375e+05, -1.83095344e+05, -5.86928477e+04,\n'
 '         4.41007438e+05,  1.41207672e+05, -1.15869156e+05,\n'
 '        -4.62236758e+04, -5.73677750e+05, -6.08154500e+05,\n'
 '         4.92187938e+05, -1.59733562e+05, -5.89007422e+04,\n'
 '         7.24436688e+05, -2.12803688e+05,  3.93588562e+05,\n'
 '         7.26978594e+04, -9.57571875e+05, -7.93723688e+05,\n'
 '         1.34784922e+05, -4.92649938e+05, -3.92422312e+05,\n'
 '         5.62466562e+05, -3.61799812e+05, -6.48540688e+05,\n'
 '         7.00569688e+04,  6.51295000e+04, -9.51536797e+04,\n'
 '         8.91325750e+05, -8.90706188e+05,  1.66724625e+05,\n'
 '        -1.87427312e+05, -4.00279250e+05,  3.94714375e+05,\n'
 '         5.45566188e+05,  5.74107562e+05, -2.99403031e+05,\n'
 '         2.79836188e+05, -1.75011047e+05, -3.88610562e+05,\n'
 '        -4.41311219e+05,  2.49388812e+05,  2.52670719e+05,\n'
 '        -1.61022250e+05,  4.30258688e+05, -9.02607500e+04,\n'
 '         4.74053000e+05, -6.85740750e+05, -1.56224590e+04,\n'
 '        -3.99328672e+04, -2.35282984e+05,  3.45235250e+05,\n'
 '         3.06435938e+05,  5.58415688e+05,  5.94282750e+05,\n'
 '        -2.91117688e+05, -7.61111812e+05,  2.27712625e+05,\n'
 '        -6.07415625e+04,  3.28771438e+05,  3.24889031e+05,\n'
 '        -3.15637469e+05,  1.46590656e+05,  2.96293281e+05,\n'
 '         4.96431750e+05,  3.60291438e+05, -4.33620250e+05,\n'
 '        -5.18200750e+05,  5.59615375e+05,  4.17677656e+05,\n'
 '        -4.19691000e+05,  2.01854781e+05,  2.70338047e+04,\n'
 '        -3.17672531e+05,  9.34424250e+05, -3.73221062e+05,\n'
 '        -3.00143188e+05,  4.65844938e+05, -2.30949953e+05,\n'
 '        -7.02301500e+05,  1.33834275e+06, -2.49434219e+05,\n'
 '        -3.07000812e+05,  6.58938047e+04, -1.33978125e+05,\n'
 '         7.70542625e+05,  4.43080938e+05,  1.99393750e+05,\n'
 '        -1.16414844e+05, -4.24557000e+05, -4.80432781e+05,\n'
 '         2.10907688e+05,  8.96763000e+05,  3.83741500e+05,\n'
 '        -1.22174250e+06, -4.03039094e+05, -6.38631438e+05,\n'
 '         7.96193672e+04, -2.12024109e+05,  3.09680156e+05,\n'
 '         7.01364188e+05, -1.24948154e+04,  3.92706375e+05,\n'
 '        -6.76809688e+04,  2.02624727e+04, -2.95795656e+05,\n'
 '        -9.33173000e+05, -7.77905438e+05,  2.73061906e+05,\n'
 '        -7.17704250e+05, -4.36188531e+05, -5.25818000e+05,\n'
 '         3.36618031e+05,  3.24693312e+05, -6.38368828e+04,\n'
 '         2.98029906e+05, -3.22202875e+05,  3.92743469e+05,\n'
 '         1.87023828e+05,  1.03106305e+05,  2.76627281e+05,\n'
 '        -4.82568994e+03,  4.19255188e+05, -7.07117438e+05,\n'
 '         3.73251438e+05, -2.33110750e+05, -1.67237773e+04,\n'
 '        -3.65384625e+05,  6.34560688e+05, -2.07937125e+05,\n'
 '         3.50521688e+05,  1.39043672e+04,  4.59987344e+05,\n'
 '         3.24110656e+05,  2.00732281e+05, -2.29606984e+05,\n'
 '        -1.78153297e+05,  9.22755703e+04,  2.68555719e+05,\n'
 '         7.10424625e+05, -2.04101422e+05, -7.99750500e+05,\n'
 '        -5.04104406e+05,  9.64668750e+05, -2.66538094e+05,\n'
 '         1.41633984e+05,  1.38998750e+06,  2.79384719e+05,\n'
 '         4.28997344e+05, -3.78621375e+05,  3.63410219e+05,\n'
 '         3.27236344e+05,  1.19817492e+05, -4.50334969e+05,\n'
 '         5.82136812e+05, -1.79570688e+05,  3.34055062e+05,\n'
 '        -1.81191328e+04, -8.94867188e+05,  4.57781469e+05,\n'
 '         6.39237461e+04,  1.76887047e+05,  2.47769656e+05,\n'
 '         5.57257250e+05, -3.48999281e+05,  3.90269062e+05,\n'
 '        -3.86308906e+05, -7.39608562e+05, -7.18588938e+05,\n'
 '         2.57148734e+05, -1.02128125e+06,  6.46158500e+05,\n'
 '        -5.66763000e+05, -1.09950250e+05,  4.42896719e+04,\n'
 '        -4.64649969e+05,  3.12763188e+05, -4.30343406e+05,\n'
 '        -1.91252422e+04,  5.94734938e+05, -1.17350410e+04,\n'
 '         8.08217812e+04,  2.90491312e+05,  3.21804812e+05,\n'
 '        -2.86584395e+04,  7.63024062e+05,  2.04001484e+05,\n'
 '         7.69307188e+05,  5.78722250e+05,  4.13057906e+05,\n'
 '        -9.29621188e+05,  4.64777062e+05, -7.76722875e+05,\n'
 '         8.25781250e+00,  5.42319562e+05, -1.88753547e+05,\n'
 '         5.37521625e+05,  7.88852500e+05, -5.50026750e+05,\n'
 '        -4.39556211e+04,  1.94592000e+05,  4.42688750e+05,\n'
 '         4.15454875e+05,  8.01384938e+05, -2.61697984e+05,\n'
 '        -2.36340609e+05,  2.24543109e+05, -3.06982812e+05,\n'
 '         3.84425969e+05,  1.10613712e+06,  3.91892469e+05,\n'
 '        -3.46469875e+05, -4.42271750e+05,  1.51731047e+05,\n'
 '        -1.00774344e+06, -2.51973344e+05, -2.54758848e+04,\n'
 '         1.17823734e+05, -3.24907594e+05, -2.73449375e+05,\n'
 '        -2.45129844e+05,  6.07221375e+05,  4.89819750e+05,\n'
 '         1.08520825e+06, -6.99176562e+04,  2.42659875e+05,\n'
 '        -2.41383125e+05, -3.94217219e+05,  3.83802344e+03,\n'
 '         3.94483906e+05, -7.55366062e+05, -6.86217250e+05,\n'
 '        -4.37104375e+05, -1.65876062e+05, -1.96013344e+05,\n'
 '        -8.68695547e+04,  3.08142844e+05, -1.07921262e+06,\n'
 '        -2.58695516e+05, -8.38036438e+05, -4.01819824e+03,\n'
 '         9.31296328e+04,  2.83415062e+05, -1.05044570e+05,\n'
 '         7.12220000e+05,  9.93174375e+04, -1.92556984e+05,\n'
 '         1.49608797e+05,  9.80090312e+05, -1.14410012e+06,\n'
 '         1.25632562e+05, -5.19402781e+05,  1.08555977e+04,\n'
 '        -4.64553156e+05, -6.39129188e+05, -9.61961750e+05,\n'
 '        -9.06476812e+05, -3.58852375e+05,  4.60709531e+05,\n'
 '        -7.96709312e+05, -2.39092688e+05, -7.46101625e+05,\n'
 '         2.18052422e+05,  3.00262250e+05, -6.09192125e+05,\n'
 '         4.22343062e+05, -1.11950738e+06,  8.66205078e+03,\n'
 '        -3.97259883e+04, -2.90212594e+05,  1.07104680e+05,\n'
 '        -6.38766000e+05, -5.60724250e+05,  2.70698594e+05,\n'
 '         3.45401031e+05,  8.58847750e+05, -6.04466062e+05,\n'
 '        -5.25462656e+04, -1.59150359e+05, -5.97936938e+05,\n'
 '        -1.86572000e+05, -2.45705031e+05, -1.97981844e+05,\n'
 '        -8.21425625e+05, -7.47046953e+04, -3.67793844e+05,\n'
 '         5.17565531e+05, -1.65020781e+04,  8.64966562e+04,\n'
 '         4.76744500e+05, -7.78381188e+05,  8.81722875e+05,\n'
 '         3.89200094e+05,  6.95773062e+05, -9.35810469e+04,\n'
 '         4.58744688e+05,  5.91454750e+05, -7.69637562e+05,\n'
 '         2.71348094e+05,  7.38803672e+04,  6.29501250e+04,\n'
 '        -8.48629000e+05, -5.19343688e+05,  1.93622453e+05,\n'
 '         2.63959625e+05,  4.18264188e+05,  5.89496500e+05,\n'
 '         1.00025731e+06,  3.90065344e+05, -4.13700812e+05,\n'
 '         4.97945344e+05, -3.27205625e+05,  2.85663531e+05,\n'
 '         6.50714938e+05, -5.98973062e+05, -9.80520391e+04,\n'
 '         4.61448750e+05, -9.76360312e+04, -8.16922188e+04,\n'
 '        -9.85318516e+04,  2.99969844e+05,  3.33452938e+05,\n'
 '         2.87790195e+04, -1.38590750e+06,  8.04999766e+04,\n'
 '        -9.55258516e+04,  3.94943750e+05,  3.26799375e+05,\n'
 '        -8.84410938e+03,  1.71908965e+04,  1.00108250e+06,\n'
 '         3.88950375e+05,  9.95851797e+04, -5.58679750e+05,\n'
 '        -8.46603188e+05, -1.79570172e+05,  1.19027281e+05,\n'
 '        -2.48852375e+05,  7.86110125e+05, -3.24839969e+05,\n'
 '        -2.18049031e+05, -4.34585312e+04,  6.28608375e+05,\n'
 '        -4.34966594e+05,  2.39569391e+05, -1.32110352e+04,\n'
 '        -4.82229875e+05,  3.09188770e+04,  3.95997500e+05,\n'
 '        -7.24429938e+05, -4.01685303e+03, -2.48094277e+04,\n'
 '         3.79158219e+05, -3.96917094e+05,  1.49756391e+05,\n'
 '         3.44346375e+05, -5.74903062e+05, -7.39924188e+05,\n'
 '         5.48302562e+05,  3.04324000e+05,  4.55725344e+05,\n'
 '         1.87628578e+05,  3.52962500e+05, -6.59554125e+05,\n'
 '        -4.94155664e+03,  5.93833438e+05,  3.33403531e+05,\n'
 '        -1.19130594e+05, -3.68053469e+05,  8.99513281e+04,\n'
 '        -4.46903719e+05, -4.17850039e+04, -1.38773112e+06,\n'
 '        -2.04499180e+04,  6.43283086e+04,  3.58284406e+05,\n'
 '        -1.49394312e+06,  4.63648719e+05,  2.19771656e+05,\n'
 '        -2.60068266e+05, -2.84527094e+05,  2.83820219e+05,\n'
 '         5.07005281e+05, -2.67651656e+05,  4.58276844e+05,\n'
 '        -6.14475312e+05,  2.47240047e+05, -8.22821875e+05,\n'
 '        -1.39370219e+05, -1.11789125e+05,  8.37021125e+05,\n'
 '         2.95810469e+05, -5.40675537e+03, -1.23348820e+05,\n'
 '         5.97071812e+05,  3.50475906e+05, -7.09539438e+05,\n'
 '        -1.26819648e+04,  5.87013477e+04, -1.75313688e+05,\n'
 '        -1.46624000e+05,  1.33468462e+06, -4.51611500e+05,\n'
 '         5.55629297e+04,  9.58934250e+05,  5.14576031e+05,\n'
 '         2.47618812e+05, -1.09333887e+04, -6.89533938e+05,\n'
 '         1.09816350e+06, -1.82080531e+05, -1.83922719e+05,\n'
 '         1.66848406e+05, -3.49139438e+05,  6.42021438e+05,\n'
 '        -3.53290156e+05, -1.45830188e+05,  7.36699875e+05,\n'
 '         3.60241656e+05,  1.51137125e+05,  7.31140078e+04,\n'
 '        -8.44643906e+04,  5.97928320e+04,  2.72527719e+05,\n'
 '        -1.78476406e+05, -5.30657438e+05,  1.22138859e+05,\n'
 '        -7.89620625e+05,  2.06718484e+05,  5.98433812e+05,\n'
 '         3.81674406e+05, -1.12872492e+05, -1.20764531e+05,\n'
 '        -7.18793250e+05,  1.71664609e+05,  5.56669062e+04,\n'
 '        -2.92327281e+05,  5.15001062e+05,  8.30574062e+04,\n'
 '         7.33183812e+05, -1.15032568e+04,  1.10143712e+06,\n'
 '         5.23693938e+05, -3.55313688e+05, -3.13466156e+05,\n'
 '         3.71870750e+05, -9.01609922e+04,  2.38021594e+05,\n'
 '        -4.32452719e+05,  1.79049766e+05,  6.93586750e+05,\n'
 '        -7.23755000e+05, -3.10490875e+05, -8.33352438e+05,\n'
 '        -4.05901656e+05, -5.91002539e+04,  1.91860328e+05,\n'
 '        -2.38090605e+04, -7.23842188e+05,  1.09077734e+05,\n'
 '        -8.63361016e+04,  9.75230375e+05,  1.29815992e+05,\n'
 '         1.96580609e+05,  5.39550438e+05, -9.78537750e+05,\n'
 '        -3.37426625e+05,  3.62806031e+05, -8.70635938e+05,\n'
 '        -2.66810125e+05,  6.49094375e+05,  2.14211719e+05,\n'
 '        -4.08485219e+05,  4.90208375e+05, -3.37710719e+05,\n'
 '         3.09109375e+05,  1.28208450e+06,  1.09541375e+05,\n'
 '        -2.86917688e+05,  6.58378875e+05, -8.73960875e+05,\n'
 '        -1.33911288e+06, -5.16547500e+04,  3.78182094e+05,\n'
 '        -8.82833125e+04,  2.86884531e+05,  8.72082812e+05,\n'
 '        -2.66983438e+05,  1.95768688e+05,  7.19469500e+05,\n'
 '        -6.62701938e+05,  5.32136016e+04,  6.81772750e+05,\n'
 '         3.33614844e+05, -5.98694375e+05, -4.39059625e+05,\n'
 '         5.16561844e+05,  1.83943188e+05, -1.03786648e+05,\n'
 '         4.71061188e+05, -1.05306025e+06,  7.66447070e+03,\n'
 '        -4.28419031e+05,  7.18759438e+05,  5.82270500e+05,\n'
 '        -1.19102594e+05, -4.03936312e+05, -2.56595328e+05,\n'
 '        -3.09781844e+05,  4.15059156e+05,  1.13639588e+06,\n'
 '        -8.52475859e+04, -7.09983750e+05, -2.49242078e+05,\n'
 '        -2.05463453e+05, -2.66144906e+05, -1.01467794e+06,\n'
 '        -4.16781781e+05, -5.00686688e+05, -2.58467891e+05,\n'
 '         3.10634000e+05, -2.69713406e+05, -6.16813438e+05,\n'
 '         1.68914391e+05, -1.33647725e+06, -3.98570594e+05,\n'
 '        -1.20781047e+05,  1.30350281e+05,  1.47505469e+05,\n'
 '         1.70508297e+05,  5.01540031e+05, -1.01581194e+06,\n'
 '        -5.92124375e+05,  3.03808688e+05, -5.46860977e+04,\n'
 '         5.92646688e+05, -4.10829625e+05, -2.42194570e+04,\n'
 '        -2.21924172e+05,  5.42421375e+05, -6.80855062e+05,\n'
 '        -4.51402773e+04,  2.55500969e+05, -6.89089750e+05,\n'
 '        -9.56682125e+05, -1.49828984e+05,  2.42538109e+05,\n'
 '        -2.27088812e+05, -1.13629414e+05,  4.22815781e+05,\n'
 '        -3.25825117e+04,  4.03453594e+05, -3.34513156e+05,\n'
 '         5.98404188e+05,  4.94795812e+05,  5.47209250e+05,\n'
 '         5.97890688e+05,  9.24326562e+04,  5.81258062e+05,\n'
 '         3.86983906e+05,  1.62738375e+05, -3.44509500e+05,\n'
 '        -3.83141469e+05, -7.40559062e+05,  2.13520430e+04,\n'
 '        -2.45512461e+04,  4.12957594e+05,  1.56901297e+05,\n'
 '        -6.28272312e+05, -4.18106062e+05, -1.08175725e+06,\n'
 '        -1.14589961e+05, -8.39287109e+04,  5.76592688e+05,\n'
 '        -3.82569281e+05,  3.23372062e+05, -3.17883594e+05,\n'
 '         5.60379938e+05, -1.80995812e+05, -1.39633344e+05,\n'
 '         4.82968500e+05, -7.29229297e+04, -5.34670125e+05,\n'
 '         2.89212844e+05,  4.44151562e+05,  4.13234750e+05,\n'
 '         2.80554766e+04, -1.87620531e+05, -1.40603297e+05,\n'
 '         3.58389000e+05,  7.77280469e+04,  6.05578625e+05,\n'
 '         2.08284344e+05,  4.47296875e+05, -2.22056766e+05,\n'
 '         4.26827312e+05, -1.53971156e+05, -4.49946219e+05,\n'
 '         6.98044562e+05, -2.57830188e+05,  3.97310406e+05,\n'
 '         2.52597625e+05,  4.42419688e+05, -5.99033312e+05,\n'
 '        -3.59792281e+05, -2.66380219e+05, -3.70620812e+05,\n'
 '        -1.92328906e+03,  3.94610094e+05,  4.57325391e+03,\n'
 '        -3.68582812e+05, -8.77795188e+05, -1.17839281e+05,\n'
 '         5.21465312e+05, -1.25547969e+05,  1.04733331e+06,\n'
 '         2.13684766e+04, -8.39366094e+04,  4.79554250e+05,\n'
 '        -4.82700906e+05, -1.39370531e+05,  2.77080906e+05,\n'
 '        -2.22482156e+05,  7.80682656e+04,  5.12607906e+05,\n'
 '         4.23922000e+05, -2.77576438e+05, -2.65734188e+05,\n'
 '        -4.87410375e+05,  3.33596797e+04, -3.33963469e+05,\n'
 '         1.02690125e+05,  2.58373219e+05,  5.98737500e+05,\n'
 '        -6.86395875e+05, -9.55674625e+05,  6.18683875e+05,\n'
 '         9.14001406e+04, -8.30046719e+04,  1.31030125e+05,\n'
 '         4.50891188e+05,  5.66117062e+05, -1.68535359e+05,\n'
 '        -8.88121562e+05,  1.67503016e+05,  3.41349531e+05,\n'
 '         6.49057031e+04, -3.90825312e+05,  8.18332438e+05,\n'
 '         3.64008375e+05, -9.04999688e+04,  1.17181625e+05,\n'
 '        -6.75900875e+05,  4.01612188e+05,  9.91419297e+04,\n'
 '         3.59268094e+05,  5.10459062e+04, -5.46201625e+05,\n'
 '        -3.01847598e+04,  9.75440000e+05,  9.97370125e+05,\n'
 '        -5.99285875e+05]])')
'test_inceptionnet | batch_shape is: [1]'
'test_inceptionnet | logits.shape is: ivy.Shape(1, 1000)'
'||'
'test_inceptionnet | device is: cpu'
'test_inceptionnet | fw is: tensorflow'
'test_inceptionnet | load_weights is: True'
'InceptionV3 | build | layer 1/22 built'
'InceptionV3 | build | layer 2/22 built'
'layer 3/22 built'
'InceptionV3 | build | layer 4/22 built'
'InceptionV3 | build | layer 5/22 built'
'InceptionV3 | build | layer 6/22 built'
'InceptionV3 | build | layer 7/22 built'
'InceptionV3 | build | layer 8/22 built'
'InceptionV3 | build | layer 9/22 built'
'InceptionV3 | build | layer 10/22 built'
'InceptionV3 | build | layer 11/22 built'
'InceptionV3 | build | layer 12/22 built'
'InceptionV3 | build | layer 13/22 built'
'InceptionV3 | build | layer 14/22 built'
'InceptionV3 | build | layer 15/22 built'
'InceptionV3 | build | layer 17/22 built'
'InceptionV3 | build | layer 18/22 built'
'InceptionV3 | build | layer 19/22 built'
'InceptionV3 | build | layer 20/22 built'
'InceptionV3 | build | layer 21/22 built'
'InceptionV3 | build | layer 22/22 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/4 built'
'layer 2/4 built'
'layer 3/4 built'
'layer 4/4 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/6 built'
'layer 2/6 built'
'layer 3/6 built'
'layer 4/6 built'
'layer 5/6 built'
'layer 6/6 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'inceptionNet_v3 | building InceptionV3 model | done 1/3'
'inceptionNet_v3 | clearning pretrained weights | done 2/3'
'inceptionNet_v3 | loading pretrained weights | done 3/3'
'InceptionV3 | forward | input data_format is:NCHW | done 1/27'
'InceptionV3 | forward | data_format is going to be used is:NCHW | done 1/27'
'InceptionV3 | forward | input shape is:ivy.Shape(1, 224, 224, 3) | done 1/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 224, 224, 3) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 111, 111, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 111, 111, 32) | done 2/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 111, 111, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 32) | done 3/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 109, 109, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 64) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 64) | done 4/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 54, 54, 64) | done 5/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 54, 54, 80) | done 3/3'
'InceptionV3 | forward | is:ivy.Shape(1, 54, 54, 80) | done 6/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 80) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 52, 52, 192) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 52, 52, 192) | done 7/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 192) | done 8/27'
'input shape is:ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 32) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 32)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 25, 25, 256) | done 9/27'
'input shape is:ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 10/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 11/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 384) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 96) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 96)'
'one 20/20, output shape is:ivy.Shape(1, 12, 12, 288)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 12/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 12, 12, 768) | done 13/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 14/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 15/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 16/27'
'v3 16/27, output shape is:ivy.Shape(1, 12, 12, 768)'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 5, 5, 192)'
'one 7/20, output shape is:ivy.Shape(1, 5, 5, 768)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 1280) | done 17/27'
'input shape is:ivy.Shape(1, 5, 5, 1280)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 18/27'
'input shape is:ivy.Shape(1, 5, 5, 2048)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 19/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 20/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 5, 5) | done 21/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 1, 1) | done 22/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 27/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 24/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 25/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048) | done 26/27'
'InceptionV3 | forward | fc | done 27/27'
('test_inceptionnet | logits is: ivy.array([[-1.18528843e-01, -1.64001286e-02, '
 '-7.12564707e-01,\n'
 '         7.26789951e-01, -6.49405003e-01, -3.98331344e-01,\n'
 '         2.69486404e+00, -1.09921598e+00, -1.27329850e+00,\n'
 '        -2.32854891e+00,  4.31096196e-01, -3.95855129e-01,\n'
 '         2.08709383e+00,  5.32079935e-01,  2.67582321e+00,\n'
 '         1.07918656e+00, -1.80481780e+00,  4.05298471e-01,\n'
 '         5.85446060e-01,  8.43588531e-01,  2.32348013e+00,\n'
 '        -1.96828270e+00, -4.23562020e-01, -9.64094758e-01,\n'
 '        -5.09994663e-03, -9.29368257e-01, -1.62531829e+00,\n'
 '        -1.05048001e+00,  3.48399729e-01,  4.38030183e-01,\n'
 '        -8.29304695e-01, -1.00974035e+00,  4.69853878e-01,\n'
 '        -2.78169215e-02,  5.69988072e-01, -2.71030283e+00,\n'
 '         7.27639616e-01, -1.26690149e+00, -1.27095223e+00,\n'
 '         1.57465708e+00,  1.01544368e+00,  1.59343433e+00,\n'
 '         1.43873715e+00,  1.91563547e+00, -2.88655072e-01,\n'
 '        -9.19452190e-01, -4.77454632e-01,  9.92831409e-01,\n'
 '        -1.77198756e+00,  1.78969532e-01,  7.05952942e-01,\n'
 '         3.26329470e-02, -1.10392916e+00, -7.27256715e-01,\n'
 '         8.68569016e-01,  1.58490539e+00, -1.13567686e+00,\n'
 '         3.41560900e-01, -1.85565078e+00,  6.07038617e-01,\n'
 '        -1.18825507e+00,  1.77001822e+00, -6.15495145e-01,\n'
 '        -1.70024777e+00, -1.89667538e-01,  1.11233115e+00,\n'
 '         9.61557329e-02,  1.69962049e+00,  1.12416077e+00,\n'
 '        -8.59350920e-01,  5.78585625e-01, -9.62259769e-01,\n'
 '        -1.34784520e+00, -8.49604428e-01,  1.33829176e+00,\n'
 '        -3.38992685e-01, -1.01442546e-01,  9.99392211e-01,\n'
 '         3.08145165e-01,  5.42122006e-01, -1.72961545e+00,\n'
 '         1.63463402e+00, -1.43867731e-01,  7.95428753e-02,\n'
 '         3.00011754e+00, -4.55193818e-01, -1.67378688e+00,\n'
 '        -5.71549654e-01, -4.60095495e-01,  1.74933934e+00,\n'
 '         1.57328832e+00,  1.24864483e+00, -1.88861072e-01,\n'
 '         3.10071707e-02, -7.40542471e-01, -5.41085660e-01,\n'
 '         7.43062675e-01, -1.29962909e+00, -2.12252259e+00,\n'
 '         2.04481483e+00,  1.46799374e+00, -5.20152807e-01,\n'
 '        -1.61780500e+00, -7.91015625e-01,  3.08292198e+00,\n'
 '        -7.86463082e-01,  1.96777356e+00, -8.62704873e-01,\n'
 '         1.97404516e+00,  8.52988124e-01, -2.71641660e+00,\n'
 '        -4.61404133e+00,  5.11081338e-01,  2.75003099e+00,\n'
 '         5.23985088e-01, -5.09998858e-01, -2.50718212e+00,\n'
 '         6.80087089e-01, -1.24514174e+00,  1.38545513e+00,\n'
 '         7.57774413e-02, -1.37757802e+00, -8.19438696e-02,\n'
 '         1.18351543e+00, -7.71937549e-01, -5.20307183e-01,\n'
 '        -1.40391076e+00,  1.54084671e+00,  1.27967036e+00,\n'
 '         3.81995857e-01,  4.26607549e-01,  5.55288553e-01,\n'
 '         1.49196839e+00, -1.44054484e+00, -2.90901959e-01,\n'
 '        -3.21245194e-01,  7.28246629e-01, -4.43994492e-01,\n'
 '        -2.38217878e+00, -1.43004870e+00, -5.07528901e-01,\n'
 '         8.13680649e-01, -2.20568752e+00,  1.17933321e+00,\n'
 '         2.90442419e+00,  6.90720081e-01,  1.72009277e+00,\n'
 '        -8.28398287e-01,  1.85884619e+00,  1.39479771e-01,\n'
 '         3.36377740e-01, -6.52630568e-01,  2.40894794e+00,\n'
 '        -1.34233868e+00, -9.24474061e-01, -2.46738315e+00,\n'
 '        -1.65143895e+00,  3.55066037e+00, -1.75430429e+00,\n'
 '        -1.08833754e+00, -1.23327661e+00, -2.93808436e+00,\n'
 '        -1.27323484e+00,  9.80817676e-01,  1.28034443e-01,\n'
 '         9.60151255e-01, -3.78687412e-01, -5.20454049e-02,\n'
 '        -4.79027778e-01,  1.04927206e+00,  2.18481445e+00,\n'
 '        -1.79686689e+00, -7.46195793e-01, -1.30435491e+00,\n'
 '         3.05965996e+00, -1.17452359e+00, -3.65193188e-01,\n'
 '         4.37646121e-01,  3.58482570e-01, -1.73248738e-01,\n'
 '        -1.47510076e+00, -1.68516803e+00, -1.97847515e-01,\n'
 '        -1.85493636e+00,  7.42689788e-01,  7.13349104e-01,\n'
 '         2.94925094e+00, -1.33328044e+00, -2.54084587e+00,\n'
 '        -3.90374494e+00, -1.78246689e+00, -1.09222949e+00,\n'
 '        -1.91632211e-01, -1.71039891e+00, -2.93863559e+00,\n'
 '        -1.60189629e-01, -2.55070782e+00,  2.05675030e+00,\n'
 '        -1.74727961e-01, -1.08895898e+00, -1.60987759e+00,\n'
 '        -4.03112698e+00, -1.57328486e+00,  3.98566985e+00,\n'
 '        -2.46202612e+00, -1.11983514e+00, -1.29505873e+00,\n'
 '         5.06576896e-01, -8.71892273e-01, -1.34883237e+00,\n'
 '        -1.38184452e+00, -1.12462163e+00, -7.05087841e-01,\n'
 '         1.02137733e+00,  1.08130205e+00, -6.48873210e-01,\n'
 '        -2.11168215e-01,  6.92561388e-01,  1.89715338e+00,\n'
 '        -4.60088301e+00, -7.73512602e-01, -1.84452701e+00,\n'
 '         2.45756412e+00,  1.64787006e+00,  4.90974093e+00,\n'
 '        -1.49563217e+00,  1.40091896e+00, -3.31383181e+00,\n'
 '         1.19158879e-01, -4.44352031e-01,  2.78668702e-01,\n'
 '         3.25354814e+00,  1.90595090e+00,  2.68787652e-01,\n'
 '         2.17862034e+00,  2.90487433e+00,  1.57703209e+00,\n'
 '         2.07839385e-02,  5.55977762e-01, -7.60732651e-01,\n'
 '         2.34243655e+00,  1.97620952e+00,  1.04681122e+00,\n'
 '        -2.22423029e+00, -1.90789139e+00, -1.03655803e+00,\n'
 '         1.23113000e+00,  5.30833125e-01,  9.59067535e+00,\n'
 '         7.35877276e+00,  6.06680441e+00,  8.09052765e-01,\n'
 '        -1.17722416e+00, -1.15815306e+00, -2.67986953e-01,\n'
 '         1.67068100e+00,  1.57321596e+00,  7.22179413e+00,\n'
 '         2.07255783e+01,  5.38477564e+00,  4.63302946e+00,\n'
 '         6.04972124e+00, -7.80442730e-02, -9.93082285e-01,\n'
 '         5.55106878e-01, -1.96450615e+00, -1.37508583e+00,\n'
 '        -3.65478337e-01, -5.49553573e-01,  2.03070497e+00,\n'
 '         1.25950384e+01, -3.90834189e+00, -1.06929827e+00,\n'
 '         9.98744428e-01,  3.12641352e-01, -7.43382156e-01,\n'
 '        -2.61526793e-01,  6.46440744e-01, -2.25349948e-01,\n'
 '         1.33745203e+01,  6.90489888e-01, -9.63830799e-02,\n'
 '        -1.25936961e+00,  3.98417640e+00,  3.73493791e-01,\n'
 '        -1.80600071e+00, -2.20849156e+00,  4.09517765e+00,\n'
 '         5.81809402e-01,  1.67323005e+00, -1.89106059e+00,\n'
 '         5.21288157e-01,  1.20381546e+00, -1.67491329e+00,\n'
 '        -1.45371890e+00, -2.12719226e+00,  3.16880655e+00,\n'
 '        -2.55550766e+00, -2.33607245e+00, -1.44919431e+00,\n'
 '        -4.57258999e-01, -7.81574249e-01,  3.62583458e-01,\n'
 '        -2.49537230e-01,  1.89830288e-01, -1.18602169e+00,\n'
 '         6.12672150e-01,  3.64917725e-01, -5.14454961e-01,\n'
 '        -8.56264472e-01, -1.85567725e+00,  3.13609958e-01,\n'
 '         8.74670148e-01,  7.67559826e-01,  5.95329166e-01,\n'
 '         2.08666921e+00, -5.61350346e-01,  1.06583536e+00,\n'
 '        -1.07681370e+00,  3.68094534e-01,  9.69392896e-01,\n'
 '         1.26216412e-01,  7.93827355e-01,  1.86293757e+00,\n'
 '        -2.82493138e+00,  1.31488740e-02,  1.00664890e+00,\n'
 '         2.33869696e+00,  1.39650047e+00, -9.56112146e-01,\n'
 '        -5.71487904e-01,  2.52516746e+00,  3.72504950e+00,\n'
 '        -4.75298464e-01, -3.18731606e-01, -1.56202543e+00,\n'
 '        -4.36698317e-01, -6.31505609e-01,  2.09012747e+00,\n'
 '        -1.61930060e+00,  5.62381566e-01, -6.25016451e-01,\n'
 '        -9.76334810e-01, -2.63705516e+00, -1.20083308e+00,\n'
 '        -2.31658027e-01, -6.37239516e-02, -4.53006446e-01,\n'
 '        -1.22608888e+00, -2.46659207e+00, -8.99084032e-01,\n'
 '        -1.98755050e+00, -1.07898355e+00,  4.70393598e-02,\n'
 '        -8.66631806e-01,  1.67252636e+00,  3.49861145e+00,\n'
 '         7.75799811e-01,  1.43474484e+00,  8.43333751e-02,\n'
 '        -2.21652842e+00, -3.00560668e-02,  5.31123757e-01,\n'
 '         3.92336309e-01, -1.83397639e+00, -3.74127889e+00,\n'
 '        -3.49956608e+00, -2.58578801e+00, -1.41958571e+00,\n'
 '        -2.58418059e+00, -9.19870019e-01, -2.49523330e+00,\n'
 '        -3.50772047e+00, -2.12666243e-01, -1.98621249e+00,\n'
 '        -1.89860964e+00, -2.17550921e+00, -2.07832932e+00,\n'
 '        -1.74525106e+00, -3.97482204e+00, -4.23222828e+00,\n'
 '        -3.57612467e+00, -1.95552623e+00,  5.85257053e-01,\n'
 '        -1.66039801e+00, -1.42487812e+00, -1.14395213e+00,\n'
 '         5.40751815e-01, -3.82002860e-01, -1.94077229e+00,\n'
 '         5.44145644e-01, -1.66084611e+00,  1.50413036e+00,\n'
 '         1.59540200e+00, -1.27275777e+00, -1.19272366e-01,\n'
 '         1.92956090e+00,  4.96215403e-01,  2.95247507e+00,\n'
 '         1.27279496e+00,  1.05270155e-01, -3.72094929e-01,\n'
 '        -1.12294102e+00,  1.68219060e-02,  1.85675824e+00,\n'
 '         4.59396958e-01, -1.76716790e-01, -2.64012241e+00,\n'
 '        -2.36970186e-03, -5.71190834e-01, -2.26683211e+00,\n'
 '        -1.37352705e+00, -3.02972674e+00, -1.74930608e+00,\n'
 '         3.74943733e-01, -1.22888994e+00, -1.09273815e+00,\n'
 '         1.06887197e+00, -1.78242350e+00, -2.53139734e-01,\n'
 '        -1.28067470e+00, -7.35500395e-01,  1.78112102e+00,\n'
 '        -1.86147261e+00, -1.63767839e+00,  1.99292016e+00,\n'
 '        -5.79677701e-01,  3.09818685e-02,  8.42430770e-01,\n'
 '        -1.24699271e+00,  1.19194877e+00, -8.48743320e-01,\n'
 '         6.79929972e-01, -8.04651022e-01, -1.05299190e-01,\n'
 '         1.12964168e-01, -9.05831933e-01,  8.10593247e-01,\n'
 '        -4.96818751e-01, -2.29010016e-01,  1.42531884e+00,\n'
 '        -4.14735913e-01,  1.60336405e-01, -1.47512496e+00,\n'
 '        -1.54969251e+00,  1.45630169e+00, -1.22534323e+00,\n'
 '        -1.69541645e+00,  2.39916635e+00,  1.87532496e+00,\n'
 '        -1.01019323e-01,  1.02212906e+00, -5.99892199e-01,\n'
 '        -2.07942396e-01, -1.28175724e+00, -8.12456012e-01,\n'
 '         1.25713277e+00, -1.28027880e+00,  1.04575992e+00,\n'
 '         1.37291110e+00,  2.21482039e-01, -2.00188398e+00,\n'
 '         1.45484078e+00,  1.18105710e+00,  1.00504232e+00,\n'
 '        -1.44334388e+00,  1.98301137e-01, -8.71321022e-01,\n'
 '        -9.79257882e-01,  2.52780652e+00,  7.96545684e-01,\n'
 '         1.78530121e+00, -1.04477838e-01,  1.78373599e+00,\n'
 '        -5.45217335e-01, -2.76842982e-01,  3.74329042e+00,\n'
 '        -2.19465685e+00,  2.56602907e+00,  9.99762118e-01,\n'
 '        -1.61091232e+00, -1.47598600e+00, -3.12100768e+00,\n'
 '         9.64547336e-01, -5.17929673e-01, -2.04228759e+00,\n'
 '        -1.60564292e+00,  2.49763593e-01, -7.80560553e-01,\n'
 '         4.22596127e-01,  5.07786274e-02,  1.15394163e+00,\n'
 '        -4.59238172e-01, -1.12270343e+00, -1.01560938e+00,\n'
 '        -4.63512123e-01,  1.28100967e+00, -1.49888861e+00,\n'
 '        -1.17384028e+00, -1.34173298e+00, -2.05786061e+00,\n'
 '         2.31485653e+00, -1.72051132e-01, -2.70286173e-01,\n'
 '        -2.12961245e+00,  7.87074685e-01,  2.34377790e+00,\n'
 '         1.07029289e-01, -9.13641870e-01,  2.26815700e+00,\n'
 '        -7.41190732e-01,  1.67337656e-02, -2.38660008e-01,\n'
 '        -1.49322343e+00,  3.30030024e-01, -8.69321153e-02,\n'
 '        -1.84213579e+00, -2.37782299e-03, -2.67116809e+00,\n'
 '        -7.11512685e-01, -2.21569136e-01,  2.82297313e-01,\n'
 '         1.51657629e+00, -2.17911863e+00,  2.32932627e-01,\n'
 '         6.11395240e-02, -4.17295515e-01, -1.78140116e+00,\n'
 '        -8.88629496e-01, -1.23251033e+00, -1.39233679e-01,\n'
 '         1.07121182e+00,  4.85993326e-01, -1.05206704e+00,\n'
 '        -1.69845849e-01,  4.70725477e-01, -2.46478462e+00,\n'
 '         2.05049801e+00,  3.49572033e-01,  2.32230043e+00,\n'
 '        -1.49986613e+00, -7.19341636e-02,  3.82424474e-01,\n'
 '         1.42040718e+00,  1.42761600e+00, -3.04208875e-01,\n'
 '         2.36082196e-01,  2.12834492e-01, -6.60786688e-01,\n'
 '        -8.19522381e-01, -3.06342721e-01,  3.33882332e-01,\n'
 '        -1.96228635e+00, -2.87202859e+00, -8.34239602e-01,\n'
 '        -1.27251136e+00,  4.97805536e-01,  1.14433682e+00,\n'
 '        -1.60190070e+00,  1.56141901e+00, -4.32578325e-01,\n'
 '        -1.11390626e+00,  2.92519450e+00,  2.09913075e-01,\n'
 '         1.55310965e+00, -1.26041734e+00,  2.17487669e+00,\n'
 '        -1.68208033e-01,  8.60901952e-01, -2.34915328e+00,\n'
 '         5.06994784e-01, -1.77736509e+00,  1.10057306e+00,\n'
 '         2.18423986e+00,  4.08840478e-01, -2.72468924e-01,\n'
 '         6.60639286e-01, -3.20453048e-01,  1.89433420e+00,\n'
 '         4.40548092e-01,  8.24780047e-01,  2.29126185e-01,\n'
 '         5.34670591e-01,  7.18843103e-01,  2.08998561e+00,\n'
 '         1.15945148e+00, -2.40083194e+00,  1.69395936e+00,\n'
 '         1.45982575e+00, -2.50476408e+00,  6.28516018e-01,\n'
 '        -8.20688903e-01,  1.46127307e+00,  2.82778978e-01,\n'
 '         1.76877856e+00, -1.74183226e+00,  1.31437123e-01,\n'
 '        -2.05810368e-02, -1.24141920e+00, -1.26302147e+00,\n'
 '        -2.85374308e+00, -1.57212603e+00, -8.32873881e-02,\n'
 '        -5.58458984e-01,  2.00924253e+00, -4.62917209e-01,\n'
 '         4.20519972e+00, -1.88301936e-01,  1.83837593e-01,\n'
 '        -6.34268343e-01,  6.48019552e-01, -6.89080596e-01,\n'
 '         6.54402733e-01,  2.44629070e-01,  2.34542155e+00,\n'
 '        -9.19397473e-01, -2.36714745e+00, -1.53328240e+00,\n'
 '         3.65901887e-01, -7.37998188e-01, -2.74928856e+00,\n'
 '         3.18158388e+00,  9.61260080e-01, -5.95775366e-01,\n'
 '         6.35458827e-01, -3.09392870e-01,  1.41889417e+00,\n'
 '        -1.88148153e+00,  1.35511899e+00, -3.14700604e-01,\n'
 '        -4.11284924e-01,  1.44915506e-02, -6.70511603e-01,\n'
 '        -5.06269217e-01, -5.59706569e-01, -2.63324737e+00,\n'
 '        -1.36175871e+00, -1.75107801e+00,  4.72436845e-01,\n'
 '         1.28091288e+00, -3.79693419e-01,  2.46573850e-01,\n'
 '        -4.27541673e-01, -8.50831628e-01,  1.47566462e+00,\n'
 '         1.35201168e+00,  1.63266993e+00, -4.26051408e-01,\n'
 '        -1.26233876e-01,  9.84975219e-01, -1.54944360e+00,\n'
 '         1.32328778e-01,  7.88265646e-01, -6.51851892e-01,\n'
 '        -1.64004934e+00, -2.48798752e+00,  1.30489790e+00,\n'
 '        -2.08553505e+00, -5.69777489e-01, -5.88175356e-02,\n'
 '        -3.58315051e-01,  3.20505768e-01,  1.18499958e+00,\n'
 '        -6.14854574e-01, -1.70792055e+00, -8.43661904e-01,\n'
 '        -3.56711537e-01,  1.40041649e-01, -3.64434719e-02,\n'
 '         1.85481024e+00,  3.01970601e-01, -2.92205810e-01,\n'
 '         4.07345724e+00,  2.76828647e-01,  9.14274454e-01,\n'
 '        -2.51169890e-01,  4.35655356e-01, -3.55833858e-01,\n'
 '        -5.18565714e-01, -8.33047152e-01, -2.31036615e+00,\n'
 '        -3.47606516e+00,  3.53446794e+00, -1.52266145e-01,\n'
 '        -1.15015900e+00, -2.40378365e-01, -1.68336809e+00,\n'
 '         1.05716455e+00, -1.28509319e+00, -7.62203872e-01,\n'
 '        -3.25639248e-01, -3.25657988e+00,  1.49564016e+00,\n'
 '        -2.54393101e+00,  2.13839102e+00,  1.42539072e+00,\n'
 '         7.34965324e-01, -3.57787609e-02,  2.14996958e+00,\n'
 '         7.27481842e-02, -2.34242654e+00, -1.07260501e+00,\n'
 '        -3.27158809e+00,  2.32958484e+00, -9.22065318e-01,\n'
 '        -2.78962898e+00,  3.27847672e+00,  2.86833942e-01,\n'
 '        -1.31659687e-01, -1.20201206e+00,  2.78337240e+00,\n'
 '         1.60301292e+00, -2.39119291e+00, -2.78297710e+00,\n'
 '         1.15216768e+00, -3.95960212e-01,  3.46838832e-01,\n'
 '        -8.69399309e-01,  1.32270908e+00,  1.82102728e+00,\n'
 '         3.45434368e-01, -1.15091455e+00,  1.66199386e-01,\n'
 '         1.58271563e+00,  2.16462874e+00, -1.33870050e-01,\n'
 '        -1.14615393e+00, -1.79301947e-01, -3.26680958e-01,\n'
 '        -9.81701255e-01, -2.50960970e+00,  3.40292186e-01,\n'
 '        -1.18493926e+00,  7.71464288e-01, -1.27288246e+00,\n'
 '        -5.98246932e-01, -3.78366113e-02, -3.16919416e-01,\n'
 '         2.37262583e+00, -1.29641366e+00,  1.71935988e+00,\n'
 '         1.57336533e+00, -1.27406550e+00, -6.52717829e-01,\n'
 '        -1.53594708e+00, -1.61347938e+00,  4.68102884e+00,\n'
 '        -3.35699290e-01, -1.27464831e+00, -2.11447790e-01,\n'
 '        -1.76425159e+00,  3.96852434e-01, -7.15789944e-03,\n'
 '        -4.47714716e-01, -1.13702130e+00,  1.00148074e-01,\n'
 '        -7.58737504e-01, -7.12281346e-01,  2.29344988e+00,\n'
 '        -1.21911573e+00, -1.49764109e+00, -3.22815716e-01,\n'
 '        -1.20286381e+00, -1.85102359e-01, -1.87214255e+00,\n'
 '         1.34681389e-01, -1.51926589e+00,  3.53979921e+00,\n'
 '         4.14689124e-01,  2.51753759e+00, -4.35747534e-01,\n'
 '        -2.83151925e-01,  8.45486760e-01,  1.23209115e-02,\n'
 '         8.88505280e-01,  9.35635150e-01,  8.84725600e-02,\n'
 '        -1.91522930e-02,  4.17272180e-01, -3.33446443e-01,\n'
 '         2.89927650e+00,  2.85320878e-01, -7.07459688e-01,\n'
 '         1.12496161e+00, -1.29784870e+00,  2.13507354e-01,\n'
 '        -5.91802836e-01,  1.51337218e+00,  2.13210797e+00,\n'
 '         5.77695549e-01,  2.02343821e-01, -8.94561410e-03,\n'
 '         2.35818848e-01, -1.65013909e+00, -1.77438128e+00,\n'
 '        -2.44343567e+00, -1.97640693e+00, -1.43319380e+00,\n'
 '        -2.56266922e-01,  1.69703710e+00,  1.22660208e+00,\n'
 '        -1.38467228e+00,  7.99537152e-02, -1.32315910e+00,\n'
 '        -8.82859826e-01, -3.75218481e-01, -1.45116734e+00,\n'
 '         3.82894874e-01,  4.14704800e-01,  6.04821205e-01,\n'
 '         7.61077523e-01, -5.12765646e-01,  6.46744013e-01,\n'
 '         1.28336275e+00,  9.43799138e-01,  1.43489647e+00,\n'
 '         6.61796808e-01,  6.59435153e-01, -2.45293808e+00,\n'
 '         8.27426314e-01, -1.07977366e+00, -1.64331746e+00,\n'
 '         2.80435145e-01, -2.86417186e-01,  8.79330456e-01,\n'
 '         1.18282020e-01,  4.49135750e-01,  4.83180314e-01,\n'
 '         2.14478373e+00, -3.61770153e-01, -4.39619511e-01,\n'
 '         1.25251126e+00,  1.78436220e+00, -4.90295470e-01,\n'
 '        -1.15136194e+00, -3.70128781e-01,  2.00663507e-01,\n'
 '        -1.07786584e+00,  8.12426806e-01,  5.47194034e-02,\n'
 '        -1.26625443e+00,  1.33627152e+00,  1.51041198e+00,\n'
 '         1.17553091e+00, -6.99235141e-01, -8.40292275e-01,\n'
 '        -1.70102215e+00, -2.50017762e+00, -5.56875408e-01,\n'
 '         1.11516499e+00,  2.39822054e+00, -8.64492357e-03,\n'
 '        -1.77663565e-03,  1.43086791e+00,  1.28493464e+00,\n'
 '        -1.41419816e+00, -2.15878916e+00,  2.50226259e+00,\n'
 '         1.18132246e+00, -3.99877906e-01, -8.17270160e-01,\n'
 '         1.15573928e-01, -1.04018951e+00,  8.68580639e-02,\n'
 '        -1.65480041e+00,  3.37332279e-01, -1.70690572e+00,\n'
 '         1.20479429e+00, -3.06065774e+00,  4.47679013e-02,\n'
 '        -8.05361271e-01, -7.05862641e-01,  2.06034327e+00,\n'
 '        -6.63575888e-01, -1.51202285e+00, -1.55168307e+00,\n'
 '        -6.21313155e-01, -2.99979806e+00,  1.41120172e+00,\n'
 '         5.05730867e-01, -1.14941990e+00, -6.98856533e-01,\n'
 '         5.57358146e-01,  1.33426452e+00,  3.79633963e-01,\n'
 '        -1.56543541e+00,  1.78967029e-01, -3.00690949e-01,\n'
 '         1.77235156e-03, -1.66580689e+00, -2.31560636e+00,\n'
 '        -1.60059869e-01, -1.87712371e+00,  1.21719742e+00,\n'
 '        -4.02520597e-02, -1.43382156e+00,  6.27054393e-01,\n'
 '        -2.74143517e-01,  1.40325344e+00,  2.08729172e+00,\n'
 '         2.37363875e-01, -5.94494343e-01, -2.70449370e-01,\n'
 '        -3.00681162e+00,  4.62611139e-01, -1.82477689e+00,\n'
 '        -1.68895388e+00,  7.28032053e-01,  2.14357138e-01,\n'
 '         2.62988567e+00,  9.01419163e-01, -9.34561610e-01,\n'
 '         2.27585792e+00,  3.19742441e-01,  1.60521522e-01,\n'
 '         2.82679319e+00, -1.57630491e+00, -1.40762269e+00,\n'
 '         6.33577108e-01, -1.33686650e+00, -2.47782946e+00,\n'
 '         6.35446072e-01,  3.03123504e-01, -1.09106553e+00,\n'
 '        -2.81689316e-01, -1.50688425e-01,  5.22002518e-01,\n'
 '        -1.03776681e+00,  7.41216421e-01, -5.23410738e-02,\n'
 '         5.04549742e-01, -1.73315752e+00, -7.55406916e-01,\n'
 '        -3.69014192e+00, -3.45597291e+00, -1.60679555e+00,\n'
 '        -2.41199636e+00,  6.86793506e-01, -7.65813470e-01,\n'
 '         6.72692418e-01, -1.89839363e+00, -1.81509733e+00,\n'
 '         4.00134057e-01,  3.45860064e-01,  4.16981757e-01,\n'
 '         1.37848520e+00,  7.89885759e-01,  6.79321587e-01,\n'
 '         1.64296985e+00,  1.01996914e-01,  2.56444383e+00,\n'
 '         1.94165933e+00,  2.23154187e+00,  9.58311439e-01,\n'
 '         1.31957471e+00,  5.58042169e-01,  1.55218470e+00,\n'
 '         1.21060085e+00,  7.35312223e-01,  2.77863800e-01,\n'
 '        -1.51812434e+00, -2.73119330e-01, -1.49379027e+00,\n'
 '        -1.59131551e+00, -1.92938387e+00, -1.41463625e+00,\n'
 '         7.70769358e-01, -1.05429292e-02, -1.67960274e+00,\n'
 '         1.88507661e-01, -7.65773416e-01,  1.49595272e+00,\n'
 '         6.84363902e-01, -1.58052415e-01, -7.09590435e-01,\n'
 '        -1.19278169e+00, -7.34260321e-01,  2.27480340e+00,\n'
 '         5.58174550e-01, -5.56672216e-01, -1.65355563e+00,\n'
 '        -5.83749592e-01,  2.84537971e-01,  6.37023985e-01,\n'
 '        -5.81841528e-01, -1.10163498e+00, -1.76706403e-01,\n'
 '         1.39696407e+00,  1.43500686e+00,  2.46158409e+00,\n'
 '         8.48643660e-01,  3.89288664e-01, -3.07151049e-01,\n'
 '        -3.28763866e+00, -1.85848987e+00,  1.79313743e+00,\n'
 '        -1.56244516e+00, -1.39368534e+00, -5.77526808e-01,\n'
 '         3.27729553e-01]])')
'test_inceptionnet | batch_shape is: [1]'
'test_inceptionnet | logits.shape is: ivy.Shape(1, 1000)'
'||'
'test_inceptionnet | indices_test | true_indices is: [258 270 279]'
'test_inceptionnet | indices_test | calc_indices is: [258 279 270]'
'test_inceptionnet | device is: cpu'
'test_inceptionnet | fw is: torch'
'test_inceptionnet | load_weights is: False'
'InceptionV3 | build | layer 1/22 built'
'InceptionV3 | build | layer 2/22 built'
'layer 3/22 built'
'InceptionV3 | build | layer 4/22 built'
'InceptionV3 | build | layer 5/22 built'
'InceptionV3 | build | layer 6/22 built'
'InceptionV3 | build | layer 7/22 built'
'InceptionV3 | build | layer 8/22 built'
'InceptionV3 | build | layer 9/22 built'
'InceptionV3 | build | layer 10/22 built'
'InceptionV3 | build | layer 11/22 built'
'InceptionV3 | build | layer 12/22 built'
'InceptionV3 | build | layer 13/22 built'
'InceptionV3 | build | layer 14/22 built'
'InceptionV3 | build | layer 15/22 built'
'InceptionV3 | build | layer 17/22 built'
'InceptionV3 | build | layer 18/22 built'
'InceptionV3 | build | layer 19/22 built'
'InceptionV3 | build | layer 20/22 built'
'InceptionV3 | build | layer 21/22 built'
'InceptionV3 | build | layer 22/22 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/4 built'
'layer 2/4 built'
'layer 3/4 built'
'layer 4/4 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/6 built'
'layer 2/6 built'
'layer 3/6 built'
'layer 4/6 built'
'layer 5/6 built'
'layer 6/6 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'inceptionNet_v3 | building InceptionV3 model | done 1/3'
'InceptionV3 | forward | input data_format is:NHWC | done 1/27'
'InceptionV3 | forward | data_format is going to be used is:NHWC | done 1/27'
'InceptionV3 | forward | input shape is:ivy.Shape(1, 224, 224, 3) | done 1/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 224, 224, 3) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 111, 111, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 111, 111, 32) | done 2/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 111, 111, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 32) | done 3/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 109, 109, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 64) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 64) | done 4/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 54, 54, 64) | done 5/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 54, 54, 80) | done 3/3'
'InceptionV3 | forward | is:ivy.Shape(1, 54, 54, 80) | done 6/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 80) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 52, 52, 192) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 52, 52, 192) | done 7/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 192) | done 8/27'
'input shape is:ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 32) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 32)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 25, 25, 256) | done 9/27'
'input shape is:ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 10/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 11/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 384) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 96) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 96)'
'one 20/20, output shape is:ivy.Shape(1, 12, 12, 288)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 12/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 12, 12, 768) | done 13/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 14/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 15/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 16/27'
'v3 16/27, output shape is:ivy.Shape(1, 12, 12, 768)'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 5, 5, 192)'
'one 7/20, output shape is:ivy.Shape(1, 5, 5, 768)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 1280) | done 17/27'
'input shape is:ivy.Shape(1, 5, 5, 1280)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 18/27'
'input shape is:ivy.Shape(1, 5, 5, 2048)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 19/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 20/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 5, 5) | done 21/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 1, 1) | done 22/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 27/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 24/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 25/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048) | done 26/27'
'InceptionV3 | forward | fc | done 27/27'
('test_inceptionnet | logits is: ivy.array([[ 2.02390250e+06, '
 '-5.69233625e+05,  6.22553125e+05,\n'
 '        -2.88001719e+05, -2.01686800e+06, -3.73196438e+05,\n'
 '        -9.68281250e+05, -6.51095000e+05,  2.07786250e+04,\n'
 '        -2.35763094e+05, -9.49222250e+05, -7.77666250e+04,\n'
 '        -7.96631250e+04,  2.81890031e+05, -5.95852438e+05,\n'
 '        -5.05954000e+05,  3.46348219e+05, -4.48416719e+05,\n'
 '        -8.26415875e+05, -3.96602125e+05,  1.03751069e+06,\n'
 '        -2.58257500e+04,  1.05257525e+06,  7.04773000e+05,\n'
 '         8.71087375e+05, -1.37127750e+05, -2.21415438e+05,\n'
 '         5.29194500e+05, -3.91504344e+05, -4.41753125e+04,\n'
 '         6.09627812e+04,  1.90523400e+06, -4.73902781e+05,\n'
 '         3.01686125e+05,  1.43961475e+06, -6.32682625e+05,\n'
 '         1.19989219e+05, -4.01257562e+05, -1.08275462e+06,\n'
 '         7.56524062e+05, -1.07371462e+06,  4.75747125e+05,\n'
 '        -7.82803625e+05, -1.58053038e+06,  2.24054188e+05,\n'
 '         2.90780125e+05,  1.36612950e+06,  5.88540312e+04,\n'
 '         4.92400500e+05,  7.51846250e+04, -2.18975375e+05,\n'
 '         4.05364156e+05,  8.36204375e+04,  3.67661031e+05,\n'
 '        -2.81830000e+04, -1.35135425e+06,  9.06947500e+05,\n'
 '        -9.19719500e+05,  8.29121375e+05, -1.41047175e+06,\n'
 '         7.56416500e+05, -1.44002525e+06,  1.60556781e+05,\n'
 '         9.32511125e+05,  4.18982594e+05, -4.81372156e+05,\n'
 '        -9.66087062e+05, -9.67705062e+05, -3.41310812e+05,\n'
 '         6.33141750e+05,  3.37474375e+04, -2.13235050e+06,\n'
 '        -2.30838344e+05,  1.04550359e+05,  1.17898375e+06,\n'
 '         1.44711250e+06, -1.06426638e+06, -2.26648125e+06,\n'
 '        -6.91513000e+05,  6.80329188e+05,  9.46088562e+05,\n'
 '         1.42652025e+06,  4.47633000e+05,  2.62007125e+05,\n'
 '        -3.60944969e+05,  1.01676019e+06,  1.32767359e+05,\n'
 '        -3.39463000e+05, -6.00419188e+05,  2.46813609e+05,\n'
 '        -1.16909400e+06,  1.50654175e+06, -4.91218312e+05,\n'
 '         2.67682688e+05,  1.46601538e+06, -7.06122500e+05,\n'
 '        -7.86624438e+05,  1.41590612e+06, -1.06491250e+06,\n'
 '         3.75156000e+05, -2.08962812e+04,  1.93448012e+06,\n'
 '        -5.72957500e+05, -5.54448250e+05,  1.26233512e+06,\n'
 '         7.27183000e+05,  2.22246656e+05, -6.19050750e+05,\n'
 '        -3.05928812e+05, -1.17812525e+06, -1.68933962e+06,\n'
 '         1.75418088e+06,  1.46834250e+05, -7.23591688e+05,\n'
 '        -6.42643438e+04,  1.15532250e+05,  3.69917438e+05,\n'
 '        -8.37002812e+05, -2.94961844e+05,  4.79555656e+05,\n'
 '        -9.42340125e+05, -6.30773500e+05,  1.27089400e+06,\n'
 '         7.36332750e+05,  1.34614688e+05, -1.59734281e+05,\n'
 '         1.37118375e+05, -2.82398625e+05, -3.66414188e+05,\n'
 '        -4.07716938e+05,  2.42420781e+05, -4.86932281e+05,\n'
 '         4.96168531e+05, -1.38648050e+06, -9.78358938e+05,\n'
 '         1.08798688e+05,  2.92795938e+05, -2.01995625e+05,\n'
 '        -1.22490788e+06,  9.10231312e+05, -1.53388725e+06,\n'
 '         1.18667000e+06,  1.07800312e+06,  7.70985562e+05,\n'
 '        -1.16315400e+06,  3.45463938e+05,  2.10782375e+05,\n'
 '         4.18188000e+05,  6.86585562e+05,  1.26695125e+05,\n'
 '        -9.58206125e+05, -1.66084975e+06, -2.04715000e+05,\n'
 '         5.78300812e+05,  2.89779400e+06, -7.50854125e+05,\n'
 '        -1.76017750e+06,  6.32340750e+05, -1.88001500e+05,\n'
 '         3.08595250e+05,  5.97702188e+04, -2.60445938e+05,\n'
 '         1.00750994e+06,  7.61537250e+05,  8.84151000e+05,\n'
 '        -2.69373094e+05,  3.95895375e+05,  1.08794488e+06,\n'
 '         4.01942750e+05, -7.59878812e+05, -2.79008525e+06,\n'
 '         5.77224500e+05,  7.83208250e+05, -4.70567844e+05,\n'
 '        -2.47140688e+05,  1.14150188e+06,  1.72621438e+06,\n'
 '         8.22709625e+05, -5.48010875e+05, -1.16730225e+06,\n'
 '         8.31428438e+05, -4.80079844e+05,  2.00278453e+05,\n'
 '        -9.85358625e+05,  2.68183906e+05, -5.18774750e+05,\n'
 '        -5.50208812e+05,  1.07317762e+06,  9.87785250e+05,\n'
 '         1.45932412e+06,  4.49998375e+05,  9.62347375e+05,\n'
 '         2.50548266e+05, -1.16574212e+06,  1.92557562e+05,\n'
 '        -1.11538750e+05,  4.01985938e+04, -1.43459762e+06,\n'
 '         6.22655875e+05, -4.15585688e+05, -5.15927438e+05,\n'
 '         2.64769094e+05, -1.89419538e+06,  3.66863250e+05,\n'
 '        -9.16196875e+05, -1.15044600e+06, -6.17042969e+04,\n'
 '        -2.81526688e+05, -3.00889500e+05,  9.81581812e+05,\n'
 '         1.01106225e+06,  2.82514156e+05,  1.07081500e+06,\n'
 '        -1.99781250e+04, -8.68789375e+05,  7.54660125e+05,\n'
 '        -3.01495000e+05, -8.91621875e+04,  1.49828938e+06,\n'
 '         7.60079297e+04,  1.42415350e+06, -1.25916906e+05,\n'
 '         2.76538219e+05, -4.35848625e+05, -2.47659188e+05,\n'
 '        -3.37319406e+05, -7.88643875e+05, -9.82529750e+05,\n'
 '         5.16900781e+05, -6.28950250e+05,  5.49700938e+05,\n'
 '         4.43540250e+05,  5.66572500e+05,  7.98629250e+05,\n'
 '        -7.59365234e+04, -7.58983688e+05, -2.37419531e+05,\n'
 '        -5.28881875e+05,  1.87746250e+05, -9.46324750e+05,\n'
 '         1.20780075e+06,  8.15339750e+05, -2.60205675e+06,\n'
 '         2.61242000e+05,  4.90264750e+05, -2.85307969e+04,\n'
 '         6.52630625e+04,  8.14097188e+04,  4.70150875e+05,\n'
 '         1.06339838e+06, -1.00144369e+06,  6.70360562e+05,\n'
 '         1.83818888e+06, -1.15488500e+06, -7.58701250e+04,\n'
 '        -2.62189094e+05,  4.21661281e+05,  7.89645625e+04,\n'
 '         2.91940562e+05,  1.24530075e+06,  4.12627312e+05,\n'
 '        -8.94620750e+05, -3.77804844e+05,  1.46078000e+06,\n'
 '        -2.70633562e+05,  1.21714750e+06, -3.70424062e+05,\n'
 '         4.62008438e+04, -1.09312050e+06,  3.58405000e+05,\n'
 '         4.06228688e+05, -9.19507812e+05,  1.14749812e+06,\n'
 '        -5.55909125e+05, -2.26172925e+06, -1.21600138e+06,\n'
 '        -2.20301312e+05,  1.40646250e+05,  2.75434688e+05,\n'
 '        -8.80547500e+04,  1.30449662e+06, -4.56152312e+05,\n'
 '        -5.24953125e+04, -1.70747000e+05, -4.25010562e+05,\n'
 '        -1.08624812e+06,  2.04452062e+05, -3.68644188e+05,\n'
 '         1.28923078e+05, -8.63667375e+05, -3.88251250e+04,\n'
 '        -1.26726425e+06,  4.55392812e+05, -1.03983338e+06,\n'
 '         2.07065800e+06, -6.22726562e+05,  1.27583162e+06,\n'
 '         1.54792500e+06,  1.33757875e+05,  9.50532438e+05,\n'
 '        -7.12717062e+05, -2.32929688e+04, -3.36784125e+05,\n'
 '         2.48702750e+05, -1.22944700e+06, -4.68222781e+05,\n'
 '         9.66339062e+04, -1.27394172e+05, -5.11558562e+05,\n'
 '         8.56849375e+05, -9.65454500e+05,  2.63078469e+05,\n'
 '         6.58214250e+05,  1.78726012e+06, -8.91012875e+05,\n'
 '         9.55019812e+05,  1.52910038e+06, -1.53645094e+05,\n'
 '         7.46704250e+05, -5.63756438e+05, -7.12163125e+05,\n'
 '        -1.42085800e+06, -4.27039125e+05, -6.82049375e+05,\n'
 '        -7.73092125e+05, -1.29865312e+05,  1.01218394e+06,\n'
 '         7.86833625e+05, -1.70201925e+06,  2.19673047e+05,\n'
 '         2.87328750e+04, -1.32232112e+06,  1.16860150e+06,\n'
 '         1.05617612e+06,  1.02304144e+06,  6.19777875e+05,\n'
 '         3.86664375e+05,  5.63278688e+05,  1.56354388e+06,\n'
 '         6.13250250e+05, -1.03162575e+06,  1.16656425e+06,\n'
 '         5.60710750e+05,  1.36828225e+06,  2.02297625e+05,\n'
 '        -7.95363750e+05, -6.82766250e+05, -5.34513500e+05,\n'
 '        -1.56363600e+06,  1.06058938e+05,  1.36015550e+06,\n'
 '        -5.14245656e+05,  5.77167500e+04, -1.07170375e+05,\n'
 '        -6.87683125e+04, -3.66606188e+05,  5.34402812e+04,\n'
 '         1.40803675e+06, -7.55579188e+05,  7.35041250e+05,\n'
 '         7.90944141e+04, -1.55585825e+06, -4.27319844e+04,\n'
 '         1.67193500e+06, -1.59210800e+06,  1.67475312e+05,\n'
 '         1.47508725e+06, -8.32008125e+05, -1.38106562e+06,\n'
 '        -9.62755000e+04, -1.51368484e+05, -2.03969062e+06,\n'
 '        -5.84419188e+05,  9.64875188e+05, -7.13068750e+04,\n'
 '         1.71484188e+05,  1.25488175e+06,  3.51423188e+05,\n'
 '        -1.01276231e+06,  7.66143562e+05,  5.78260875e+05,\n'
 '         1.72022588e+06,  7.82260438e+05,  5.54189000e+05,\n'
 '         1.32957238e+06,  2.95916594e+05, -2.38872531e+05,\n'
 '         9.84816062e+05, -2.64548500e+05,  1.52001219e+05,\n'
 '        -4.00055812e+05, -8.65644500e+05, -6.12625500e+05,\n'
 '        -1.14228012e+06,  3.14108531e+05, -1.27321109e+05,\n'
 '         3.81850938e+05, -2.44549344e+05,  5.05898125e+04,\n'
 '        -2.77834969e+05, -5.07094375e+04,  1.52191162e+06,\n'
 '        -5.12759375e+05, -9.51943500e+05,  6.58285500e+05,\n'
 '        -9.66702562e+05, -2.78187300e+06,  1.88022000e+05,\n'
 '        -3.38476875e+05,  4.85910719e+05, -4.08502875e+05,\n'
 '        -1.52170438e+05,  1.83868825e+06, -1.12178838e+06,\n'
 '        -6.91251625e+05,  2.64069800e+06, -1.88038750e+04,\n'
 '         7.91721375e+05, -5.39843250e+05, -7.84467562e+05,\n'
 '        -1.49996325e+06,  5.93825875e+05, -5.45477562e+05,\n'
 '         2.20246812e+05, -2.70450781e+05,  4.83173438e+05,\n'
 '        -2.77535250e+05,  1.64299000e+06, -1.92339844e+05,\n'
 '         6.13683125e+04, -5.62600000e+05, -4.24717000e+05,\n'
 '        -7.53276125e+05,  9.97466750e+05,  7.14407062e+05,\n'
 '         1.75372375e+05, -1.36030062e+06, -1.63835688e+06,\n'
 '        -5.46964727e+04, -3.36771500e+05,  2.47426844e+05,\n'
 '         1.25794962e+06,  1.73440650e+06,  1.15630538e+06,\n'
 '         3.32636938e+05, -1.07521950e+06,  1.63271775e+06,\n'
 '        -4.61894875e+05,  8.48877750e+05,  9.27984750e+05,\n'
 '        -3.95835281e+05, -2.24530062e+05, -5.00326875e+04,\n'
 '        -1.20613375e+06,  2.28649062e+05,  3.03462438e+05,\n'
 '        -1.60239475e+06, -2.32762531e+05, -2.62793656e+05,\n'
 '        -1.46295500e+06, -2.07865012e+06, -9.40962500e+05,\n'
 '        -2.26094300e+06,  1.16220775e+06, -6.02118438e+04,\n'
 '         1.41800000e+05, -1.27895875e+06, -7.32814812e+05,\n'
 '         4.27970219e+05,  6.47253000e+05, -1.12041338e+06,\n'
 '        -2.08359906e+05,  6.52105938e+04,  8.91036812e+05,\n'
 '        -6.73653906e+04,  1.88480088e+06, -1.59793825e+06,\n'
 '        -3.16613250e+05,  9.92785625e+04, -1.68522562e+05,\n'
 '        -2.92587562e+05, -2.05409219e+05,  3.77549625e+05,\n'
 '         4.57309031e+05,  1.40368738e+06,  1.89844250e+05,\n'
 '         1.14798200e+06,  5.42928000e+05,  5.88871125e+05,\n'
 '         1.67006531e+05, -3.97596062e+05,  2.32017141e+05,\n'
 '        -2.71037500e+04, -5.47326562e+05, -1.44763175e+06,\n'
 '        -1.92326925e+06,  8.08152938e+05, -8.65637500e+04,\n'
 '         2.38581562e+04,  1.28397850e+06, -1.09411112e+06,\n'
 '         3.30812875e+05,  1.11706675e+06, -5.02721875e+05,\n'
 '        -1.10190775e+06,  8.01312250e+05,  7.02761500e+05,\n'
 '         1.36629062e+05,  1.17940500e+06, -1.21546225e+06,\n'
 '        -5.75564375e+05,  6.62070875e+05, -1.17085900e+06,\n'
 '        -3.15427875e+05,  9.72017000e+05,  1.74431875e+05,\n'
 '        -9.36968312e+05,  8.07833688e+05,  2.76652000e+05,\n'
 '        -7.00378312e+05, -8.46097750e+05, -3.39263906e+05,\n'
 '        -1.52309162e+06,  1.05132688e+06,  1.22826662e+06,\n'
 '         4.43641781e+05, -2.76824438e+05, -8.75496875e+04,\n'
 '         3.02233438e+04, -2.90939297e+04,  3.58170312e+03,\n'
 '         6.08329125e+05, -2.69908281e+05,  2.38592781e+05,\n'
 '         2.10943350e+06,  1.01028169e+06, -1.72945738e+06,\n'
 '         4.56064250e+05, -8.87952375e+05, -5.56866438e+05,\n'
 '         7.09271188e+05, -7.40067656e+04, -6.39424188e+05,\n'
 '        -2.64768719e+05, -1.67270969e+05, -2.48773094e+05,\n'
 '         1.15753750e+06,  1.37509312e+06,  1.08615800e+06,\n'
 '        -5.48367188e+05, -1.27294212e+06,  1.61624238e+06,\n'
 '        -6.21220250e+05,  5.89857062e+05,  4.86191031e+05,\n'
 '        -1.36400375e+05,  2.24816675e+06,  1.20293838e+06,\n'
 '         8.91432375e+05,  1.14449975e+06,  5.03194281e+05,\n'
 '         1.49524188e+06,  3.71476781e+05, -6.16195500e+05,\n'
 '         1.62872775e+06,  1.14417312e+05,  6.78966688e+05,\n'
 '        -2.45398156e+05, -9.70959625e+05, -7.67527000e+05,\n'
 '        -6.59731812e+05, -1.38576650e+06, -1.56647000e+05,\n'
 '        -9.93281375e+05,  2.65482562e+05, -1.29722188e+04,\n'
 '        -1.24527200e+06, -2.55554525e+06, -1.83216969e+05,\n'
 '        -3.36492812e+05, -3.21297125e+05, -1.73274875e+06,\n'
 '        -4.54501156e+05,  5.34959250e+05,  2.73176062e+05,\n'
 '        -1.43358562e+05, -7.45146312e+05,  1.28815188e+06,\n'
 '        -2.28874125e+05,  1.80713175e+06,  1.36182250e+05,\n'
 '         1.65659600e+06,  8.09579500e+05, -2.59285625e+05,\n'
 '        -7.55654562e+05,  9.77120312e+03, -9.60791875e+04,\n'
 '        -1.97550391e+05,  7.40781875e+04, -3.14708031e+05,\n'
 '        -9.99723188e+05, -1.48924525e+06, -5.45106750e+05,\n'
 '         1.94146488e+06,  6.97077938e+05,  9.60341812e+05,\n'
 '        -7.33057500e+05,  7.33739688e+05, -6.77540500e+05,\n'
 '        -6.56207312e+05, -8.88952312e+05,  1.44251638e+06,\n'
 '        -8.53512125e+05, -8.08560500e+05, -7.67290125e+05,\n'
 '        -3.96994438e+05, -1.80470688e+05, -1.32206600e+06,\n'
 '        -5.18977125e+05,  9.37633500e+05, -5.99708594e+04,\n'
 '        -2.58749000e+05,  2.44797950e+06, -1.33472762e+06,\n'
 '         2.24629344e+05, -5.64540000e+04,  2.43733750e+05,\n'
 '         5.91091562e+05, -3.82567250e+05, -1.02880788e+06,\n'
 '        -1.55128156e+05, -4.29330062e+05, -7.67694375e+05,\n'
 '         1.23558025e+06,  1.06377609e+05,  1.35690725e+06,\n'
 '         2.45915575e+06,  1.07439688e+06, -8.04973375e+05,\n'
 '        -3.42277219e+05, -7.68535125e+05,  8.60000312e+05,\n'
 '         6.45090125e+05, -1.15541388e+06,  9.94635375e+05,\n'
 '        -3.51893750e+04, -3.77297031e+05,  1.01662862e+06,\n'
 '         1.08664950e+06, -2.21686094e+04,  1.75066641e+05,\n'
 '         1.18141975e+06,  3.38413125e+04,  3.23852938e+05,\n'
 '         3.71891750e+05, -1.22111450e+06, -4.50859000e+05,\n'
 '         1.88509250e+05, -1.06710750e+05, -3.75047875e+05,\n'
 '         6.71838188e+05,  9.76342812e+04,  1.35541594e+05,\n'
 '        -1.45446875e+04, -1.35382100e+06,  2.17165000e+06,\n'
 '         1.09646812e+05, -2.24169719e+05,  6.80552000e+05,\n'
 '        -2.08485575e+06,  1.37514700e+06, -7.02463750e+05,\n'
 '        -2.58168094e+05, -7.41841562e+04, -3.67462062e+05,\n'
 '        -3.06935250e+05,  8.93096250e+04, -1.66894875e+06,\n'
 '        -2.40579250e+05, -4.89220094e+05,  2.80128500e+05,\n'
 '         8.94569500e+05,  7.40054875e+05,  4.45777000e+05,\n'
 '        -1.87302656e+05, -1.23885312e+04,  3.50877688e+05,\n'
 '         9.60669625e+05, -1.69505300e+06, -8.53106938e+05,\n'
 '        -1.08619850e+06,  4.50557281e+05, -1.50379512e+06,\n'
 '        -4.02636438e+05,  3.49280500e+05, -2.56070672e+05,\n'
 '        -1.43308888e+06,  7.50273375e+05, -6.47596750e+05,\n'
 '        -7.37288438e+04,  2.50489875e+05, -1.90424450e+06,\n'
 '        -6.10664375e+04,  7.99543875e+05,  9.42915000e+04,\n'
 '        -9.20811438e+05,  8.36786688e+05, -6.91834375e+05,\n'
 '         9.74099250e+05, -4.09756875e+05,  1.25515925e+06,\n'
 '        -1.27516488e+06,  6.24230750e+05, -1.91335531e+05,\n'
 '        -1.64204300e+06,  3.77016000e+05,  1.22283538e+06,\n'
 '        -9.40694688e+04,  1.11072538e+06, -2.05549388e+06,\n'
 '        -1.54704062e+04,  1.14097588e+06, -1.59938750e+04,\n'
 '         1.81671312e+05, -4.16132812e+04,  8.02455625e+05,\n'
 '         1.28985100e+06, -1.67566688e+05, -6.22813375e+05,\n'
 '         6.19857031e+04, -4.72938250e+05, -1.78651612e+06,\n'
 '        -1.14946350e+06,  3.58143719e+05, -1.37474062e+06,\n'
 '         3.32705656e+05,  4.59086156e+05, -4.68148438e+04,\n'
 '        -1.11517862e+06, -8.25836562e+05,  7.51273438e+04,\n'
 '        -1.51224400e+06,  1.14747025e+06,  7.46783000e+05,\n'
 '        -1.22878225e+06, -1.53483750e+04, -1.05292650e+06,\n'
 '         1.15741975e+06, -7.73834938e+05,  1.19585575e+06,\n'
 '        -3.59508312e+05,  9.70040875e+05,  1.39522575e+06,\n'
 '         1.02909012e+06, -1.55929750e+05,  8.43252312e+05,\n'
 '        -1.16511462e+06,  3.38916781e+05,  2.90809281e+05,\n'
 '        -1.33376550e+06,  5.36840375e+05,  8.18661750e+05,\n'
 '        -8.62071750e+05, -5.88903500e+05, -7.32823750e+05,\n'
 '        -1.06416438e+06,  6.06318875e+05, -9.28567875e+05,\n'
 '        -5.42396375e+05, -2.11141531e+05, -1.56614750e+05,\n'
 '         3.47984531e+05,  1.21124975e+06,  1.07336912e+06,\n'
 '         6.99845000e+05, -6.45391188e+05,  2.65883438e+04,\n'
 '        -3.94982844e+05, -3.16679562e+05, -2.38644188e+05,\n'
 '         1.03954712e+06, -6.72597000e+05, -5.83963438e+04,\n'
 '        -2.29639812e+05,  1.26201225e+06,  1.29415300e+06,\n'
 '         6.11356750e+05, -4.76264000e+05,  7.17054875e+05,\n'
 '        -8.82030812e+05,  4.46641250e+04, -9.63468125e+05,\n'
 '        -8.72184250e+05, -4.93699500e+05, -1.27031988e+06,\n'
 '         3.56437656e+05, -1.12686975e+06, -1.24156250e+05,\n'
 '         2.32439750e+05, -1.02639300e+06,  2.20125000e+04,\n'
 '         1.59872750e+05, -3.27682250e+05, -1.26637656e+05,\n'
 '         1.47841638e+06, -2.18469375e+05, -6.63012375e+05,\n'
 '         5.27906250e+05,  7.97081812e+05,  8.44445000e+05,\n'
 '         1.47091906e+05,  1.32935250e+06,  6.78210625e+05,\n'
 '         1.58216400e+06, -1.35078312e+06, -4.18165500e+05,\n'
 '         3.43096594e+05,  1.38734531e+04, -2.85515625e+03,\n'
 '        -1.02801862e+06, -1.72748453e+05,  1.11852612e+06,\n'
 '         5.99766875e+05, -7.01355000e+04,  4.91902000e+05,\n'
 '         1.84177812e+05,  7.28380625e+05, -8.98498875e+05,\n'
 '         5.25206500e+05, -5.64295438e+05,  1.37488900e+06,\n'
 '         1.33253288e+06,  6.82316719e+04,  4.10153469e+05,\n'
 '         5.38756875e+05,  1.48725775e+06, -4.21264250e+06,\n'
 '         6.52369531e+04,  3.91028438e+05, -9.01223875e+05,\n'
 '         8.98404500e+05,  5.50705688e+05, -6.12675875e+05,\n'
 '         4.05691625e+05,  1.11481275e+06, -5.92989875e+05,\n'
 '         4.02982750e+05,  2.37500625e+04, -1.13784000e+06,\n'
 '        -4.96645219e+05,  2.40912812e+04, -1.13531462e+06,\n'
 '        -4.24044125e+05, -1.24860500e+05,  2.75506844e+05,\n'
 '        -7.83990750e+05,  6.13935000e+05,  1.11667062e+05,\n'
 '        -1.21517050e+06,  1.34713750e+06, -7.60547000e+05,\n'
 '        -1.88591500e+06, -1.54570281e+05,  1.26881900e+06,\n'
 '         1.55615812e+05, -8.28109312e+05, -5.82889188e+05,\n'
 '         5.86672938e+05, -7.77963375e+05, -6.87655547e+04,\n'
 '         9.09005188e+05,  4.20494062e+05, -1.39868325e+06,\n'
 '         5.89045625e+05, -2.07347734e+05,  8.27698594e+04,\n'
 '         2.79597969e+05, -8.28871875e+05, -6.46609062e+04,\n'
 '        -5.54710062e+05,  1.01142731e+06,  1.43088925e+06,\n'
 '         1.19069988e+06, -1.29779675e+06,  1.18973562e+06,\n'
 '        -1.16466412e+06, -3.66796688e+05,  9.90266750e+05,\n'
 '        -8.23072938e+05,  4.24708125e+04,  1.36183000e+06,\n'
 '        -4.15696250e+04,  6.49152875e+05, -8.70736250e+05,\n'
 '         7.97585875e+05, -3.23395812e+05,  1.01664812e+06,\n'
 '        -1.57377925e+06,  2.56254688e+05,  1.19290438e+05,\n'
 '         5.63063625e+05, -6.53734938e+05, -6.11075062e+05,\n'
 '         1.50074412e+06,  2.43799375e+05,  7.06630875e+05,\n'
 '        -6.14419562e+05, -4.65685156e+05, -1.04177125e+06,\n'
 '         6.67435750e+05, -1.85007000e+06, -7.28755938e+05,\n'
 '        -1.13979062e+04,  2.31664000e+05, -1.91734175e+06,\n'
 '         1.00957912e+06,  4.00721812e+05, -3.55063281e+05,\n'
 '        -7.38054688e+04, -9.63857188e+04, -1.69562200e+06,\n'
 '         7.08446938e+05,  3.85743188e+05, -6.33432062e+05,\n'
 '        -1.19363969e+05,  9.13527812e+05,  1.05573000e+06,\n'
 '        -9.11276000e+05, -5.19573812e+05, -4.44533781e+05,\n'
 '         5.06744844e+05, -5.89074938e+05,  6.99279250e+05,\n'
 '        -9.25286188e+05, -5.99842812e+04, -4.69326688e+05,\n'
 '        -1.50982050e+06, -6.54348562e+05, -1.52113000e+06,\n'
 '         2.93462656e+05,  1.77157850e+06,  8.48036625e+05,\n'
 '         1.88117062e+05, -1.12485962e+06, -7.45394688e+05,\n'
 '        -5.25981312e+05, -4.07760250e+05, -8.93320125e+05,\n'
 '         2.00064266e+05,  1.33140100e+06,  9.53796250e+04,\n'
 '         2.16400175e+06,  7.55840750e+05,  2.79834062e+05,\n'
 '        -6.14140750e+05, -5.49686250e+05, -1.55879062e+05,\n'
 '         4.04496875e+04,  1.99605288e+06,  7.01877812e+05,\n'
 '         1.61290062e+05, -4.03247312e+05, -2.21398312e+05,\n'
 '        -9.63318188e+05, -8.04045812e+05, -3.90310031e+05,\n'
 '        -4.76609812e+05,  4.35692906e+05, -3.58215656e+05,\n'
 '         3.20067312e+05,  5.24664375e+05,  9.66520500e+05,\n'
 '        -2.67455250e+05,  3.78835750e+05,  4.48496875e+05,\n'
 '        -1.77071850e+06, -1.72998275e+06, -8.85916406e+04,\n'
 '        -8.92280812e+05,  5.77672875e+05, -5.63640125e+05,\n'
 '         1.73799016e+05,  2.00139375e+04,  2.04682138e+06,\n'
 '        -5.62083500e+05, -6.77514438e+05,  5.48489938e+05,\n'
 '        -4.60597219e+05,  5.13297500e+05,  6.21797750e+05,\n'
 '         9.83248438e+05,  9.55842812e+05,  1.04396394e+06,\n'
 '        -1.87189988e+06, -5.62876500e+05, -6.77738938e+05,\n'
 '         2.36332312e+05, -8.68880000e+04, -1.09422088e+06,\n'
 '         7.51896750e+05]])')
'test_inceptionnet | batch_shape is: [1]'
'test_inceptionnet | logits.shape is: ivy.Shape(1, 1000)'
'||'
'test_inceptionnet | device is: cpu'
'test_inceptionnet | fw is: torch'
'test_inceptionnet | load_weights is: True'
'InceptionV3 | build | layer 1/22 built'
'InceptionV3 | build | layer 2/22 built'
'layer 3/22 built'
'InceptionV3 | build | layer 4/22 built'
'InceptionV3 | build | layer 5/22 built'
'InceptionV3 | build | layer 6/22 built'
'InceptionV3 | build | layer 7/22 built'
'InceptionV3 | build | layer 8/22 built'
'InceptionV3 | build | layer 9/22 built'
'InceptionV3 | build | layer 10/22 built'
'InceptionV3 | build | layer 11/22 built'
'InceptionV3 | build | layer 12/22 built'
'InceptionV3 | build | layer 13/22 built'
'InceptionV3 | build | layer 14/22 built'
'InceptionV3 | build | layer 15/22 built'
'InceptionV3 | build | layer 17/22 built'
'InceptionV3 | build | layer 18/22 built'
'InceptionV3 | build | layer 19/22 built'
'InceptionV3 | build | layer 20/22 built'
'InceptionV3 | build | layer 21/22 built'
'InceptionV3 | build | layer 22/22 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/4 built'
'layer 2/4 built'
'layer 3/4 built'
'layer 4/4 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/6 built'
'layer 2/6 built'
'layer 3/6 built'
'layer 4/6 built'
'layer 5/6 built'
'layer 6/6 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'inceptionNet_v3 | building InceptionV3 model | done 1/3'
'inceptionNet_v3 | clearning pretrained weights | done 2/3'
'inceptionNet_v3 | loading pretrained weights | done 3/3'
'InceptionV3 | forward | input data_format is:NHWC | done 1/27'
'InceptionV3 | forward | data_format is going to be used is:NHWC | done 1/27'
'InceptionV3 | forward | input shape is:ivy.Shape(1, 224, 224, 3) | done 1/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 224, 224, 3) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 111, 111, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 111, 111, 32) | done 2/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 111, 111, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 32) | done 3/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 109, 109, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 64) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 64) | done 4/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 54, 54, 64) | done 5/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 54, 54, 80) | done 3/3'
'InceptionV3 | forward | is:ivy.Shape(1, 54, 54, 80) | done 6/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 80) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 52, 52, 192) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 52, 52, 192) | done 7/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 192) | done 8/27'
'input shape is:ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 32) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 32)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 25, 25, 256) | done 9/27'
'input shape is:ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 10/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 11/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 384) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 96) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 96)'
'one 20/20, output shape is:ivy.Shape(1, 12, 12, 288)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 12/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 12, 12, 768) | done 13/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 14/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 15/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 16/27'
'v3 16/27, output shape is:ivy.Shape(1, 12, 12, 768)'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 5, 5, 192)'
'one 7/20, output shape is:ivy.Shape(1, 5, 5, 768)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 1280) | done 17/27'
'input shape is:ivy.Shape(1, 5, 5, 1280)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 18/27'
'input shape is:ivy.Shape(1, 5, 5, 2048)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 19/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 20/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 5, 5) | done 21/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 1, 1) | done 22/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 27/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 24/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 25/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048) | done 26/27'
'InceptionV3 | forward | fc | done 27/27'
('test_inceptionnet | logits is: ivy.array([[-1.34131536e-01,  '
 '6.82141781e-01,  1.35002613e-01,\n'
 '         5.26647210e-01,  2.89609939e-01, -1.32592082e-01,\n'
 '         2.41263914e+00,  3.77539903e-01, -2.14797735e-01,\n'
 '        -1.65831912e+00, -7.58018196e-01, -6.26099884e-01,\n'
 '        -5.61826110e-01,  1.02304411e+00,  1.14780295e+00,\n'
 '         2.80692607e-01, -1.41463673e+00,  1.01092076e+00,\n'
 '        -4.61831093e-01,  1.51436925e+00,  1.57579112e+00,\n'
 '        -2.40583491e+00, -2.64921880e+00, -6.43270850e-01,\n'
 '         6.77502871e-01, -2.73922300e+00, -2.74477392e-01,\n'
 '        -1.76324844e+00, -3.79006326e-01, -1.41218066e+00,\n'
 '        -3.85825038e-01, -2.60140449e-02,  4.67804551e-01,\n'
 '         4.27579641e-01,  2.14744830e+00, -2.40691155e-01,\n'
 '         7.40075648e-01, -1.51292610e+00, -1.29802227e+00,\n'
 '         1.60208023e+00,  5.44568956e-01,  4.81015593e-01,\n'
 '         3.66123229e-01,  1.34239614e+00, -1.67380822e+00,\n'
 '        -1.54973268e+00, -8.44269693e-02,  7.88188875e-01,\n'
 '        -1.51543009e+00,  5.97590804e-01, -5.33173084e-01,\n'
 '         6.99705482e-01, -1.13235593e+00, -2.13069773e+00,\n'
 '        -4.43892598e-01,  6.55819655e-01, -1.90165663e+00,\n'
 '        -1.29606950e+00,  8.11467886e-01, -8.10287714e-01,\n'
 '        -2.45494753e-01, -2.78948754e-01, -1.32110226e+00,\n'
 '        -5.59319258e-01, -8.79751801e-01, -3.54209930e-01,\n'
 '        -1.07189131e+00,  5.14556050e-01,  5.66141248e-01,\n'
 '        -9.77962092e-02,  1.47713214e-01,  4.24996942e-01,\n'
 '        -1.26512074e+00, -8.00276279e-01, -3.52427274e-01,\n'
 '         1.26376700e+00,  1.19561553e+00,  1.99445263e-01,\n'
 '        -7.30316639e-01,  1.28767455e+00, -2.23598146e+00,\n'
 '         2.60621101e-01, -5.34867883e-01, -5.11529863e-01,\n'
 '         1.98238945e+00, -6.83567703e-01, -4.06099379e-01,\n'
 '        -4.78745371e-01,  1.43972623e+00,  1.64471412e+00,\n'
 '         4.36763197e-01,  2.21665406e+00,  5.31519175e-01,\n'
 '         8.29325318e-02, -7.81537354e-01, -8.13498557e-01,\n'
 '         1.04328823e+00, -4.22049403e-01, -1.48148239e+00,\n'
 '         1.20254290e+00,  2.70838475e+00,  8.35819900e-01,\n'
 '        -2.22475827e-01,  3.35442245e-01,  2.25665951e+00,\n'
 '        -1.86457622e+00,  3.43615145e-01,  2.20184183e+00,\n'
 '         2.37210536e+00,  2.15822530e+00, -7.78536141e-01,\n'
 '        -2.04787588e+00,  2.18515205e+00,  2.82428408e+00,\n'
 '         4.38715458e-01, -1.13902128e+00, -2.25568748e+00,\n'
 '        -1.74596250e-01, -1.08624488e-01,  4.69196677e-01,\n'
 '        -1.98490560e-01, -7.95695543e-01,  8.83018672e-02,\n'
 '         9.39028740e-01,  2.56472766e-01,  8.71981323e-01,\n'
 '        -1.61470520e+00,  1.91724014e+00,  2.05213398e-01,\n'
 '        -8.97307694e-03,  1.26872194e+00,  5.53073168e-01,\n'
 '         2.50172400e+00, -2.24706936e+00,  3.42450142e-01,\n'
 '         3.25206101e-01,  6.74082577e-01,  6.68106258e-01,\n'
 '        -1.97861862e+00, -1.79707646e+00, -8.65136266e-01,\n'
 '         3.05893326e+00, -1.21028292e+00, -1.04820561e+00,\n'
 '         2.14831376e+00, -9.03924584e-01, -1.00815058e+00,\n'
 '         1.39633608e+00,  3.52725297e-01,  3.61548483e-01,\n'
 '         8.93508911e-01,  7.75546432e-01,  4.57804871e+00,\n'
 '        -6.14209056e-01,  1.09775650e+00, -2.75595927e+00,\n'
 '         2.00172877e+00,  6.36427498e+00, -8.93868446e-01,\n'
 '        -1.18127561e+00, -1.24114406e+00, -3.63596058e+00,\n'
 '        -1.47107387e+00, -8.86351466e-01, -1.66234165e-01,\n'
 '        -4.13728714e-01, -3.71502548e-01,  4.67444152e-01,\n'
 '        -2.40136814e+00,  1.20498538e+00, -1.43424487e+00,\n'
 '        -9.49274957e-01, -1.76823449e+00, -8.93148840e-01,\n'
 '        -9.60114300e-01, -1.77609086e+00, -1.24726582e+00,\n'
 '        -2.59561348e+00, -8.35052550e-01, -7.51479506e-01,\n'
 '        -1.73753786e+00,  5.97288966e-01, -2.22356677e+00,\n'
 '         5.35885751e-01, -2.24033403e+00,  1.79875374e+00,\n'
 '         3.78794384e+00,  7.77576149e-01, -8.33270133e-01,\n'
 '        -2.54618001e+00, -9.67878342e-01, -9.91884589e-01,\n'
 '         9.58332121e-01, -9.84990776e-01, -1.75260305e+00,\n'
 '        -1.19038272e+00, -2.24258757e+00,  1.83666193e+00,\n'
 '        -2.45707959e-01,  1.87594950e+00, -1.10266233e+00,\n'
 '        -4.10630417e+00, -1.68824530e+00,  6.10927629e+00,\n'
 '        -3.08471465e+00, -2.08051133e+00, -1.89803386e+00,\n'
 '         1.58021843e+00, -1.15188289e+00, -3.13625288e+00,\n'
 '        -1.34821618e+00, -1.50437188e+00, -1.47428334e+00,\n'
 '         3.81731898e-01,  1.75072944e+00, -1.17931283e+00,\n'
 '         8.60241055e-01,  4.93563771e-01,  1.11335635e+00,\n'
 '        -3.82934070e+00,  8.74093056e-01,  4.82629836e-02,\n'
 '         4.24806404e+00,  3.56121063e+00,  5.87474632e+00,\n'
 '        -2.23272490e+00,  1.08282077e+00, -3.71488833e+00,\n'
 '         2.37764406e+00,  1.54723692e+00,  4.39057493e+00,\n'
 '         3.86002564e+00,  4.93079233e+00,  7.02145696e-01,\n'
 '        -3.89399677e-01, -9.47005600e-02,  6.42262280e-01,\n'
 '        -6.93678141e-01, -6.52192950e-01,  1.88528097e+00,\n'
 '         8.75023425e-01,  1.40955257e+00, -4.96692419e-01,\n'
 '        -7.97044396e-01, -5.70285439e-01, -8.87163758e-01,\n'
 '        -1.55739605e+00,  2.04370928e+00,  8.25382423e+00,\n'
 '         5.16322994e+00,  5.19795132e+00,  4.92199182e-01,\n'
 '         1.64393377e+00, -8.06431830e-01, -3.09931278e-01,\n'
 '         2.26773679e-01,  2.82382321e+00,  9.46521092e+00,\n'
 '         1.89858036e+01,  9.60640717e+00,  6.44971800e+00,\n'
 '         5.56973314e+00,  1.14053941e+00,  2.57920176e-01,\n'
 '         7.29978323e-01, -6.85428560e-01, -1.71152067e+00,\n'
 '         5.43287218e-01, -1.19536197e+00,  2.24080634e+00,\n'
 '         1.11384945e+01, -1.97813928e+00,  1.14661539e+00,\n'
 '         1.25573373e+00,  9.27418590e-01, -4.07807732e+00,\n'
 '        -2.31084681e+00,  1.12016725e+00, -1.18502009e+00,\n'
 '         1.26999168e+01,  1.44550920e+00, -8.45975161e-01,\n'
 '        -1.04518354e+00,  3.07725453e+00, -1.12177682e+00,\n'
 '        -1.59080017e+00, -3.45889807e+00,  1.16610253e+00,\n'
 '         6.71532512e-01,  1.11246872e+00,  1.08269215e-01,\n'
 '        -1.38257420e+00,  3.01566362e-01, -1.32792008e+00,\n'
 '        -9.98636544e-01, -9.91365671e-01,  3.71616817e+00,\n'
 '         7.91149795e-01, -1.35450244e+00, -1.89741325e+00,\n'
 '        -1.48282504e+00, -2.54556090e-01, -1.91104412e-01,\n'
 '         2.75131494e-01, -7.60482430e-01, -9.55550551e-01,\n'
 '         1.08864415e+00,  9.52550769e-02,  1.14575326e-01,\n'
 '         1.06089640e+00, -7.26617157e-01, -1.47160327e+00,\n'
 '         2.21383750e-01,  3.87064874e-01,  5.01182497e-01,\n'
 '         2.37903357e+00, -1.82527375e+00,  6.15844727e-02,\n'
 '        -2.25784630e-01,  5.19080520e-01,  1.40011144e+00,\n'
 '         1.71786934e-01,  4.94204581e-01,  2.68464756e+00,\n'
 '        -1.26180577e+00,  1.00778747e+00,  1.25832355e+00,\n'
 '         1.95003557e+00,  2.85665822e+00,  2.28551581e-01,\n'
 '        -1.34020662e+00,  1.80468285e+00,  3.84380674e+00,\n'
 '         8.35808396e-01,  1.09601510e+00, -8.12500358e-01,\n'
 '        -4.84637857e-01, -3.20278108e-01,  1.52688575e+00,\n'
 '        -1.97006929e+00,  6.68867886e-01,  5.03726006e-02,\n'
 '         1.26580954e-01, -1.51509047e-02,  2.65380532e-01,\n'
 '        -5.83610296e-01,  1.82234287e-01,  1.18648326e+00,\n'
 '         2.52156329e+00, -5.14032006e-01, -1.28281629e+00,\n'
 '        -1.12373185e+00, -1.62450075e+00,  1.53846705e+00,\n'
 '        -1.22096074e+00,  1.96298647e+00,  1.94523156e+00,\n'
 '         1.12394869e+00,  2.81516862e+00,  1.04441583e+00,\n'
 '        -1.60052359e+00,  2.70751953e+00, -9.85798061e-01,\n'
 '         5.22232235e-01, -1.56728673e+00, -1.12693906e+00,\n'
 '        -1.64352536e+00, -8.61508399e-02,  1.45208037e+00,\n'
 '        -7.78528214e-01,  1.43959451e+00,  9.62531567e-01,\n'
 '        -2.16445923e+00,  2.49503106e-01, -2.34688357e-01,\n'
 '        -6.76921487e-01, -1.09856164e+00,  1.60040927e+00,\n'
 '         3.01547319e-01, -5.83504856e-01,  1.40384066e+00,\n'
 '         7.16816843e-01,  2.28513777e-03, -1.46805131e+00,\n'
 '        -1.16413343e+00,  8.77814069e-02, -1.69480467e+00,\n'
 '         5.76756418e-01,  1.48944929e-01, -2.01969171e+00,\n'
 '        -8.98535311e-01, -2.05542612e+00,  9.64210033e-02,\n'
 '         1.62127805e+00,  9.48235393e-02,  5.08137107e-01,\n'
 '         3.31331110e+00,  7.37672448e-01,  1.08752549e-02,\n'
 '         3.07168889e+00,  7.45604813e-01,  6.83301330e-01,\n'
 '         1.20867229e+00, -1.11481023e+00,  9.26028848e-01,\n'
 '        -1.05501938e+00,  1.36481881e-01, -2.40393591e+00,\n'
 '         3.66085708e-01, -1.89492181e-02,  1.27236187e-01,\n'
 '        -2.10741806e+00, -2.10440946e+00, -2.81201273e-01,\n'
 '         9.41929221e-03, -3.02470779e+00,  1.15614033e+00,\n'
 '        -4.17013466e-02, -2.80608964e+00, -7.29225874e-02,\n'
 '        -1.62929520e-01, -2.80397916e+00, -1.45392704e+00,\n'
 '         6.47758663e-01,  5.56956649e-01,  1.41994131e+00,\n'
 '         6.25649631e-01,  1.40347302e-01,  5.30683696e-02,\n'
 '         4.26172823e-01,  1.32933390e+00, -9.95368063e-01,\n'
 '         1.33509147e+00,  1.18001437e+00, -1.37264848e+00,\n'
 '         1.64934719e+00, -1.04599726e+00, -1.62542319e+00,\n'
 '         5.01459777e-01, -7.32320428e-01,  2.46170282e+00,\n'
 '        -2.62869477e-01,  1.78065419e+00, -2.12233448e+00,\n'
 '        -1.51439178e+00,  2.48570895e+00,  2.47958124e-01,\n'
 '        -9.66376960e-01,  7.81775892e-01, -9.41050425e-02,\n'
 '        -4.85677183e-01,  2.30482876e-01, -1.69396973e+00,\n'
 '        -1.26372904e-01,  1.24707627e+00,  3.12958330e-01,\n'
 '         1.41071796e+00, -6.64718986e-01, -8.90767813e-01,\n'
 '         6.98813796e-01,  1.77007329e+00, -1.10592794e+00,\n'
 '         3.00158560e-03,  9.54536617e-01,  2.15683746e+00,\n'
 '        -1.95168793e+00, -7.96604633e-01, -4.01086122e-01,\n'
 '        -7.30754972e-01, -6.39358044e-01,  1.54461968e+00,\n'
 '         1.43110991e-01,  7.65975296e-01,  9.98142302e-01,\n'
 '        -2.97191203e-01, -2.88432312e+00,  2.10248375e+00,\n'
 '        -1.14372086e+00,  2.52574849e+00,  2.25050116e+00,\n'
 '        -5.17526150e-01, -3.93823445e-01, -2.05065274e+00,\n'
 '         6.06007397e-01, -2.87785739e-01, -2.72274208e+00,\n'
 '         1.50779557e+00, -1.59181023e+00,  9.02479291e-01,\n'
 '         6.66005313e-01,  9.22517419e-01,  1.25967598e+00,\n'
 '        -1.31208956e-01, -2.39394218e-01,  7.36835837e-01,\n'
 '         3.19361019e+00, -1.51382887e+00, -1.47777069e+00,\n'
 '        -6.10856712e-02, -2.35127640e+00, -2.49958944e+00,\n'
 '         1.90444201e-01, -1.61157274e+00,  3.11710537e-01,\n'
 '        -2.11160231e+00,  1.88204229e-01,  6.06926322e-01,\n'
 '        -3.24387193e-01, -1.46402931e+00, -4.45416719e-01,\n'
 '         1.55369198e+00,  2.04452467e+00,  1.20256394e-01,\n'
 '         1.53125226e-01, -2.04330087e-02, -1.26916242e+00,\n'
 '        -1.18880665e+00, -3.99223626e-01, -2.38327503e+00,\n'
 '         7.28718266e-02, -5.72146773e-01, -1.58286869e+00,\n'
 '         2.07382202e+00, -2.42613125e+00, -3.76718014e-01,\n'
 '        -5.67565620e-01, -6.41253173e-01, -1.94960284e+00,\n'
 '        -2.41991743e-01, -2.21336079e+00, -1.94691217e+00,\n'
 '        -4.04444933e-02,  6.83008254e-01, -9.58759248e-01,\n'
 '        -2.28721666e+00, -9.87544835e-01, -1.93650389e+00,\n'
 '         2.40705872e+00,  8.87106061e-01, -1.24005914e+00,\n'
 '         2.85939991e-01, -8.59453082e-02, -1.35688257e+00,\n'
 '         8.72617066e-01, -2.89170075e+00, -9.54656184e-01,\n'
 '         1.48527837e+00, -3.55238378e-01, -3.94218445e-01,\n'
 '        -1.38369024e-01, -1.83133805e+00, -3.84911716e-01,\n'
 '         1.02457702e-02, -1.37830675e+00,  1.65603232e+00,\n'
 '        -2.54459929e+00,  1.46675289e-01, -6.60775065e-01,\n'
 '         1.48411501e+00,  7.71728307e-02,  4.64856654e-01,\n'
 '         8.79284024e-01,  2.76156044e+00, -1.17842794e-01,\n'
 '         1.73787761e+00, -2.51518822e+00,  2.02313805e+00,\n'
 '        -2.37873793e+00,  7.44789243e-01, -1.36277687e+00,\n'
 '         2.11104131e+00, -1.80444205e+00,  5.63387424e-02,\n'
 '         1.62505674e+00, -2.82776922e-01, -2.05005145e+00,\n'
 '        -5.07586837e-01,  7.36379623e-01,  1.52757859e+00,\n'
 '        -8.48788500e-01, -1.05884314e+00,  1.09589922e+00,\n'
 '         2.41633964e+00, -3.30675065e-01, -1.78805602e+00,\n'
 '         1.03142536e+00, -1.98170853e+00,  2.48237705e+00,\n'
 '        -2.68601954e-01, -2.39147306e+00,  1.31101370e+00,\n'
 '        -1.64981294e+00,  2.33924460e+00, -1.16808593e+00,\n'
 '         2.55797410e+00, -2.33778882e+00,  1.69743061e+00,\n'
 '        -1.85504937e+00, -5.67829788e-01,  2.33461082e-01,\n'
 '        -1.56424892e+00, -2.26036286e+00,  6.53077662e-01,\n'
 '        -1.13607621e+00,  1.91350853e+00, -1.82172632e+00,\n'
 '         3.31466079e+00, -1.06610012e+00, -7.19687939e-01,\n'
 '        -6.60325825e-01, -3.34931761e-01,  6.15617573e-01,\n'
 '        -1.24872005e+00, -1.27108681e+00,  7.93364584e-01,\n'
 '        -2.93599081e+00,  1.60899237e-01, -3.46678883e-01,\n'
 '         3.27303529e-01, -2.19899178e+00, -1.17450106e+00,\n'
 '         4.99348730e-01, -1.67647576e+00, -1.85830653e+00,\n'
 '         1.97110987e+00,  2.74198949e-01, -5.76070189e-01,\n'
 '        -1.44169939e+00,  1.90681648e+00, -6.50081694e-01,\n'
 '        -1.08400559e+00, -6.08907521e-01, -9.98326302e-01,\n'
 '        -9.70628858e-01, -4.73647922e-01, -1.05842924e+00,\n'
 '         4.49975163e-01, -2.45906353e+00,  6.73716068e-01,\n'
 '         2.42864752e+00, -2.80140012e-01, -2.41757941e+00,\n'
 '         1.11102581e-01,  3.68132293e-02,  7.14434385e-01,\n'
 '         2.29509383e-01,  2.68788767e+00, -1.19468474e+00,\n'
 '         1.63418341e+00,  1.91589928e+00, -3.73663306e-01,\n'
 '         2.94626474e-01, -1.84109256e-01, -1.59790897e+00,\n'
 '        -9.63052511e-01, -2.64592719e+00,  1.01855445e+00,\n'
 '        -1.09180880e+00, -7.31257021e-01, -5.06232917e-01,\n'
 '        -2.36655569e+00, -1.94730842e+00,  8.62135649e-01,\n'
 '        -2.48160791e+00,  4.56067294e-01, -4.04692978e-01,\n'
 '         1.45504940e+00, -2.67518967e-01, -2.50405788e+00,\n'
 '         1.10063040e+00, -5.95355630e-01,  2.21337080e-02,\n'
 '         2.34647512e-01, -1.31894171e+00,  8.92940164e-03,\n'
 '         1.01995945e+00,  1.16537023e+00,  1.45509565e+00,\n'
 '         8.02671909e-01,  2.86527306e-01,  9.18118536e-01,\n'
 '        -2.57009077e+00,  2.47799277e+00,  1.64318728e+00,\n'
 '         9.70489025e-01, -2.57261372e+00, -5.55705428e-01,\n'
 '         2.33070493e+00,  3.33205313e-02, -3.64546120e-01,\n'
 '         6.80394054e-01, -2.31125161e-01, -2.87418783e-01,\n'
 '        -1.28669488e+00, -2.93149173e-01,  1.94532961e-01,\n'
 '        -1.54906535e+00,  1.29325521e+00,  7.12303877e-01,\n'
 '         1.05545950e+00, -2.02486539e+00, -4.58972365e-01,\n'
 '        -1.26344967e+00,  6.55311942e-01, -2.41801310e+00,\n'
 '        -3.77516365e+00,  4.89330262e-01,  6.47309244e-01,\n'
 '        -1.42351115e+00, -3.85156512e+00,  7.27086902e-01,\n'
 '         1.63028657e+00,  1.95642245e+00, -2.10268879e+00,\n'
 '        -1.00719798e+00, -1.01113331e+00, -1.22497177e+00,\n'
 '         1.48721427e-01, -4.20246601e-01,  5.24339438e-01,\n'
 '        -1.55939788e-01, -2.57165980e+00,  6.50705814e-01,\n'
 '        -1.12484694e+00,  9.25167084e-01,  1.10484347e-01,\n'
 '         8.07402253e-01,  1.02063656e-01,  5.92423797e-01,\n'
 '        -1.66393638e-01, -1.82140738e-01, -1.99434906e-01,\n'
 '        -1.21827364e+00,  1.59343815e+00, -1.49653041e+00,\n'
 '        -1.08981216e+00, -5.77564716e-01, -2.60409474e-01,\n'
 '         1.18157339e+00, -6.36544347e-01,  1.65487468e-01,\n'
 '         1.09360564e+00, -3.06232393e-01, -1.87269342e+00,\n'
 '        -1.58095837e+00, -5.56560934e-01,  2.34306717e+00,\n'
 '        -2.10870117e-01, -2.71178818e+00,  8.60735893e-01,\n'
 '        -1.92315948e+00, -9.35421944e-01, -2.93196726e+00,\n'
 '        -1.51299083e+00, -1.28184319e+00, -1.64649725e-01,\n'
 '        -7.33041227e-01,  3.01149666e-01,  1.05988705e+00,\n'
 '        -9.20438290e-01, -2.70049930e+00, -2.20715094e+00,\n'
 '         9.36628580e-01, -5.58915734e-01, -1.29332542e+00,\n'
 '        -7.77215481e-01, -1.15367174e+00,  3.43139505e+00,\n'
 '        -9.27172959e-01, -4.86365557e-02, -1.62829447e+00,\n'
 '        -1.10461378e+00, -9.38714624e-01,  1.13525450e+00,\n'
 '        -2.63361931e+00,  2.30313468e+00,  1.64222926e-01,\n'
 '        -1.86039746e+00, -9.02392268e-01, -1.37841892e+00,\n'
 '         1.47620320e+00,  3.35586727e-01,  2.26089835e-01,\n'
 '        -1.03870153e-01, -2.40621710e+00, -4.15284443e+00,\n'
 '         1.54524803e-01,  7.31003582e-01,  2.07746223e-01,\n'
 '        -2.00361431e-01,  1.43165374e+00, -8.21667075e-01,\n'
 '        -3.87986869e-01,  9.34826136e-02, -4.10330296e-01,\n'
 '        -2.76217485e+00, -3.67953896e-01, -3.61332965e+00,\n'
 '        -1.82586640e-01, -1.39594328e+00,  6.01514280e-01,\n'
 '         2.16064143e+00, -4.87368226e-01, -2.31977031e-01,\n'
 '        -2.23529339e+00, -1.29957783e+00, -4.12490702e+00,\n'
 '        -1.83285201e+00, -8.93562079e-01, -6.19462192e-01,\n'
 '         1.19835746e+00, -2.37693977e+00,  5.63254535e-01,\n'
 '        -1.79124641e+00,  2.96603441e+00,  9.58998382e-01,\n'
 '         2.54806852e+00,  1.90850258e+00, -3.39763951e+00,\n'
 '         2.61896700e-01, -1.62216950e+00, -1.96095836e+00,\n'
 '         1.26442504e+00, -1.91247225e+00, -1.72178850e-01,\n'
 '        -3.02489698e-01, -8.21345389e-01, -1.66448653e+00,\n'
 '         2.00611091e+00, -1.85668302e+00, -2.62719345e+00,\n'
 '        -6.68818831e-01,  2.34933555e-01,  5.53050190e-02,\n'
 '        -1.17736280e+00, -5.49691916e-03,  1.17148650e+00,\n'
 '        -5.88251174e-01,  2.11269283e+00, -1.50146246e+00,\n'
 '         1.77960968e+00,  2.62714386e-01,  1.03912950e+00,\n'
 '         2.71903753e-01,  1.31142819e+00, -3.83610368e-01,\n'
 '        -1.45643818e+00, -2.28899050e+00, -1.10483623e+00,\n'
 '        -5.39174199e-01, -1.30326104e+00, -1.28580081e+00,\n'
 '         2.09758949e+00,  5.16715646e-01,  1.44830263e+00,\n'
 '        -5.75605571e-01, -3.01453161e+00,  2.38115120e+00,\n'
 '         1.12843251e+00, -1.21869206e+00,  1.00292075e+00,\n'
 '         4.89255160e-01,  1.71850801e-01,  4.10137773e-01,\n'
 '        -2.05361175e+00, -2.08766103e+00, -2.24487782e+00,\n'
 '         1.49433959e+00, -3.54974008e+00, -1.43148625e+00,\n'
 '         7.15262353e-01, -6.24775626e-02,  1.17399442e+00,\n'
 '        -2.02995944e+00, -1.36297941e+00, -6.72330499e-01,\n'
 '        -1.40684560e-01, -2.39654612e+00,  1.98455632e+00,\n'
 '        -9.51137066e-01, -1.32639825e+00,  1.16452944e+00,\n'
 '         8.04607391e-01, -1.45602202e+00,  1.12331486e+00,\n'
 '         1.81332231e-02,  1.43477356e+00,  2.27066803e+00,\n'
 '        -1.73574001e-01,  2.09936380e-01, -1.97803467e-01,\n'
 '        -6.47693157e-01, -4.15484786e-01, -1.37247384e-01,\n'
 '        -7.63280511e-01, -1.26328218e+00,  2.17931604e+00,\n'
 '        -7.83370316e-01,  2.79339218e+00,  1.15452123e+00,\n'
 '        -1.57203591e+00, -4.28851396e-01, -2.85424757e+00,\n'
 '        -2.83693123e+00, -1.73739386e+00, -2.47296190e+00,\n'
 '        -3.59139592e-01,  1.54545259e+00,  9.21683788e-01,\n'
 '         1.55491149e+00, -7.59282470e-01,  2.74313259e+00,\n'
 '         9.12354827e-01,  2.13743329e+00,  5.67607045e-01,\n'
 '         1.67429352e+00, -1.56750083e+00, -1.78428602e+00,\n'
 '         3.81517023e-01, -1.13814020e+00, -1.22276306e+00,\n'
 '         7.84230113e-01,  1.87030888e+00, -3.93532962e-01,\n'
 '        -7.54215002e-01, -2.76180565e-01, -1.37364343e-01,\n'
 '        -2.42354965e+00,  1.10320830e+00, -2.55439907e-01,\n'
 '        -7.89915502e-01, -2.61936355e+00, -1.08579898e+00,\n'
 '        -1.52185583e+00, -2.47385979e+00, -3.05254400e-01,\n'
 '        -1.08290493e+00, -3.07825327e-01, -1.41618216e+00,\n'
 '        -1.16245842e+00, -3.06309551e-01,  6.27564728e-01,\n'
 '        -2.02762425e-01,  2.23312318e-01, -2.73125291e-01,\n'
 '         9.23515856e-01, -1.41265559e+00, -1.19741702e+00,\n'
 '        -8.49170238e-03,  4.68665868e-01,  2.08382511e+00,\n'
 '         3.71697330e+00,  1.74350822e+00,  1.49172902e+00,\n'
 '         2.63044071e+00,  9.47957516e-01,  1.80095577e+00,\n'
 '         1.37296891e+00,  1.74906588e+00, -5.82322896e-01,\n'
 '         1.44014668e+00,  4.28393632e-02, -1.24866939e+00,\n'
 '        -2.45238876e+00, -2.01519442e+00, -1.37867677e+00,\n'
 '         1.12153149e+00, -3.39476347e-01, -3.33518648e+00,\n'
 '        -9.74119782e-01, -2.37337649e-01, -3.16446215e-01,\n'
 '         4.46324110e-01,  7.57373333e-01,  5.07196903e-01,\n'
 '        -1.49141789e-01, -1.21708989e+00,  1.32665420e+00,\n'
 '         3.45318884e-01, -2.16089010e-01,  6.30875170e-01,\n'
 '         8.88260081e-02, -5.05553246e-01, -3.97880614e-01,\n'
 '         5.75217009e-02, -1.33358431e+00,  5.18728271e-02,\n'
 '        -1.55941176e+00,  2.56420040e+00,  8.68327797e-01,\n'
 '         8.52177143e-01,  5.84891021e-01, -2.42075944e+00,\n'
 '        -1.95174766e+00, -2.41541767e+00, -1.06544626e+00,\n'
 '        -1.21421325e+00, -1.39359295e+00, -1.22220445e+00,\n'
 '         3.04901242e-01]])')
'test_inceptionnet | batch_shape is: [1]'
'test_inceptionnet | logits.shape is: ivy.Shape(1, 1000)'
'||'
'test_inceptionnet | indices_test | true_indices is: [258 270 279]'
'test_inceptionnet | indices_test | calc_indices is: [258 279 270]'
'test_inceptionnet | device is: cpu'
'test_inceptionnet | fw is: torch'
'test_inceptionnet | load_weights is: False'
'InceptionV3 | build | layer 1/22 built'
'InceptionV3 | build | layer 2/22 built'
'layer 3/22 built'
'InceptionV3 | build | layer 4/22 built'
'InceptionV3 | build | layer 5/22 built'
'InceptionV3 | build | layer 6/22 built'
'InceptionV3 | build | layer 7/22 built'
'InceptionV3 | build | layer 8/22 built'
'InceptionV3 | build | layer 9/22 built'
'InceptionV3 | build | layer 10/22 built'
'InceptionV3 | build | layer 11/22 built'
'InceptionV3 | build | layer 12/22 built'
'InceptionV3 | build | layer 13/22 built'
'InceptionV3 | build | layer 14/22 built'
'InceptionV3 | build | layer 15/22 built'
'InceptionV3 | build | layer 17/22 built'
'InceptionV3 | build | layer 18/22 built'
'InceptionV3 | build | layer 19/22 built'
'InceptionV3 | build | layer 20/22 built'
'InceptionV3 | build | layer 21/22 built'
'InceptionV3 | build | layer 22/22 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/4 built'
'layer 2/4 built'
'layer 3/4 built'
'layer 4/4 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/6 built'
'layer 2/6 built'
'layer 3/6 built'
'layer 4/6 built'
'layer 5/6 built'
'layer 6/6 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'inceptionNet_v3 | building InceptionV3 model | done 1/3'
'InceptionV3 | forward | input data_format is:NCHW | done 1/27'
'InceptionV3 | forward | data_format is going to be used is:NCHW | done 1/27'
'InceptionV3 | forward | input shape is:ivy.Shape(1, 224, 224, 3) | done 1/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 224, 224, 3) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 111, 111, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 111, 111, 32) | done 2/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 111, 111, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 32) | done 3/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 109, 109, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 64) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 64) | done 4/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 54, 54, 64) | done 5/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 54, 54, 80) | done 3/3'
'InceptionV3 | forward | is:ivy.Shape(1, 54, 54, 80) | done 6/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 80) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 52, 52, 192) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 52, 52, 192) | done 7/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 192) | done 8/27'
'input shape is:ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 32) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 32)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 25, 25, 256) | done 9/27'
'input shape is:ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 10/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 11/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 384) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 96) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 96)'
'one 20/20, output shape is:ivy.Shape(1, 12, 12, 288)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 12/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 12, 12, 768) | done 13/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 14/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 15/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 16/27'
'v3 16/27, output shape is:ivy.Shape(1, 12, 12, 768)'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 5, 5, 192)'
'one 7/20, output shape is:ivy.Shape(1, 5, 5, 768)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 1280) | done 17/27'
'input shape is:ivy.Shape(1, 5, 5, 1280)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 18/27'
'input shape is:ivy.Shape(1, 5, 5, 2048)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 19/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 20/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 5, 5) | done 21/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 1, 1) | done 22/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 27/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 24/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 25/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048) | done 26/27'
'InceptionV3 | forward | fc | done 27/27'
('test_inceptionnet | logits is: ivy.array([[-5.16959188e+05,  4.00473000e+05, '
 '-5.69507969e+04,\n'
 '        -1.14277281e+05,  3.91037281e+05, -1.35246891e+05,\n'
 '         7.72630156e+04, -5.42144250e+05,  3.36378219e+05,\n'
 '        -3.83649219e+05, -1.97214375e+04, -6.91452000e+05,\n'
 '         1.83265062e+05,  2.81597719e+05, -2.59301422e+05,\n'
 '        -5.29195938e+05, -4.78909438e+05, -4.64114500e+05,\n'
 '         3.98823125e+04,  3.58430938e+05,  3.09894031e+05,\n'
 '        -4.01728344e+05,  6.74870000e+04, -3.87812656e+04,\n'
 '        -4.00552625e+05, -2.03328625e+05,  2.93863625e+05,\n'
 '         1.42894453e+05,  2.18775281e+05,  1.84333375e+05,\n'
 '        -2.02151406e+05, -8.70847109e+04,  2.79116469e+05,\n'
 '        -2.13288266e+05, -6.71261125e+05,  1.30708852e+05,\n'
 '        -1.75091562e+05, -7.02328000e+05,  3.75202500e+04,\n'
 '        -4.76141812e+05,  2.02763375e+05, -1.24824047e+05,\n'
 '         3.27641312e+05, -1.20509766e+04,  5.55697188e+04,\n'
 '        -6.33635938e+04, -6.22683562e+05,  1.52792688e+05,\n'
 '         4.16330469e+03,  5.46320500e+05,  8.28112500e+04,\n'
 '         3.20768555e+04, -5.09604406e+05,  3.33377188e+05,\n'
 '         6.31133164e+04, -3.88528250e+05, -1.60518781e+05,\n'
 '        -2.53895984e+05, -4.46110781e+05,  1.06082703e+05,\n'
 '        -3.33471000e+05,  2.81799312e+05,  2.86468750e+05,\n'
 '        -1.60707461e+04, -2.98357750e+05,  7.00137500e+04,\n'
 '         3.11807594e+05, -1.21862086e+05,  8.55172812e+04,\n'
 '        -8.65926875e+04,  1.84023234e+05, -3.93671406e+05,\n'
 '        -6.76048828e+04,  1.63823156e+05, -6.70450000e+04,\n'
 '        -4.82716812e+05,  1.66772844e+05,  1.96924438e+05,\n'
 '         1.20538969e+05,  3.06863719e+05, -3.66698156e+05,\n'
 '         9.82869062e+04,  5.84416094e+04, -2.63886656e+05,\n'
 '        -4.31014609e+04,  8.03259062e+04,  9.41200375e+05,\n'
 '         2.46062141e+05, -1.21975828e+05, -1.25037062e+05,\n'
 '        -3.36824469e+05,  4.31431719e+04,  1.12986047e+05,\n'
 '        -3.63668562e+05,  3.13327422e+04,  3.61825391e+04,\n'
 '         4.37650219e+05,  2.98298656e+05,  4.03018406e+05,\n'
 '        -4.03312375e+05, -2.41765094e+05,  5.65288938e+05,\n'
 '        -4.58056031e+05,  3.55592188e+04,  2.10371859e+05,\n'
 '         8.55932500e+04, -2.60912375e+05, -2.68801000e+05,\n'
 '         3.43919469e+05,  2.65142625e+05,  1.60276438e+05,\n'
 '         3.85557094e+05,  2.63056938e+05,  2.06175625e+04,\n'
 '        -3.62357812e+05,  3.10441812e+05,  2.39302062e+05,\n'
 '        -2.76688688e+05,  6.98239062e+03,  3.83327344e+05,\n'
 '         4.98486688e+05, -2.65626125e+05, -3.72021875e+03,\n'
 '        -4.53672656e+05,  2.62682031e+05,  4.80789297e+04,\n'
 '         9.88697969e+04,  7.46318125e+04,  6.44623625e+05,\n'
 '        -3.73298094e+05, -3.66461281e+05, -4.19656250e+02,\n'
 '         2.01553125e+03,  3.36003672e+04,  4.62224648e+04,\n'
 '        -3.31393250e+05, -6.85428000e+05, -5.53265750e+05,\n'
 '        -3.07894656e+05, -5.92732125e+05,  1.57572750e+05,\n'
 '         2.18603406e+05,  7.43913672e+04,  6.12357000e+05,\n'
 '         4.94588781e+05,  5.16347219e+05,  1.85439484e+05,\n'
 '        -2.37055781e+05, -9.71455781e+04,  4.86574000e+05,\n'
 '        -1.45540234e+05,  3.31306875e+04, -2.01610031e+05,\n'
 '         4.72070125e+05, -2.27085125e+05,  4.99772688e+05,\n'
 '        -1.28957062e+05, -6.03015125e+05,  2.23329875e+05,\n'
 '        -1.49091031e+05,  2.69136812e+05,  5.36594531e+04,\n'
 '        -1.36256250e+05, -4.15039406e+05, -1.73001875e+05,\n'
 '        -4.48052812e+04, -1.10188617e+05,  2.25414156e+05,\n'
 '        -1.64107500e+05,  8.25219375e+04,  1.18396344e+05,\n'
 '         2.31833688e+05,  2.92956812e+05,  1.05957375e+05,\n'
 '         2.48817469e+05, -6.51905312e+04, -2.25191516e+05,\n'
 '         3.74899062e+04,  1.33837750e+05,  4.49315656e+05,\n'
 '         1.35696531e+05, -5.73821250e+04,  2.97830391e+04,\n'
 '         1.57858391e+05,  2.69556188e+05,  3.45728906e+05,\n'
 '         3.58247219e+05, -3.66093781e+05,  2.59248922e+05,\n'
 '         2.39396172e+05, -3.74550000e+05,  2.13325781e+05,\n'
 '         2.39479219e+05,  2.43181500e+05,  3.04332625e+05,\n'
 '        -8.83487109e+04,  8.82318438e+04,  3.56202438e+05,\n'
 '         2.92835344e+05,  5.26982062e+05,  3.48706125e+05,\n'
 '         2.43663734e+05, -4.44162500e+03,  3.93899031e+05,\n'
 '         4.21560594e+05, -6.72695156e+04,  5.22410812e+05,\n'
 '         1.84680625e+04,  1.13038219e+05,  7.22580703e+04,\n'
 '         4.85771250e+04, -5.25669375e+05,  8.60896562e+04,\n'
 '         2.19526266e+05,  8.02110750e+05,  1.54342734e+05,\n'
 '        -8.29170938e+04,  6.80658906e+04,  2.50266234e+05,\n'
 '         1.46633406e+05,  3.26071969e+05, -1.57894594e+05,\n'
 '        -1.03812500e+05, -2.23309375e+03, -6.24656875e+04,\n'
 '        -2.48474750e+05,  3.10884562e+05,  2.18116188e+05,\n'
 '        -1.73627531e+05,  3.07291938e+05,  2.93095438e+05,\n'
 '        -1.23809141e+05,  1.85003531e+05, -2.60733172e+05,\n'
 '         3.04912188e+04,  1.24638750e+04,  2.67049562e+05,\n'
 '         1.45791344e+05,  3.31258625e+05, -6.53034500e+05,\n'
 '         3.75188312e+05, -1.99550250e+05,  1.12266156e+05,\n'
 '         2.36832938e+05,  3.26835812e+05,  4.61402891e+04,\n'
 '         2.79010703e+04,  1.34293328e+05, -3.67264875e+05,\n'
 '         2.28300797e+05, -3.46179688e+04, -3.74478250e+05,\n'
 '         3.06106656e+05, -2.10924281e+05, -4.24300469e+04,\n'
 '        -2.05494828e+05,  1.15078875e+05, -3.82893633e+04,\n'
 '         2.01312766e+05,  1.31081562e+04,  1.39341133e+04,\n'
 '        -1.63096922e+05, -9.26238281e+03, -4.79943938e+05,\n'
 '         2.08209297e+04,  6.44425438e+05,  1.63963391e+05,\n'
 '        -1.56775352e+04,  1.00356719e+05, -1.27909234e+05,\n'
 '        -1.48789648e+04,  5.52892125e+05,  5.79338750e+05,\n'
 '         3.41965188e+05,  8.49016000e+05, -9.17609375e+02,\n'
 '        -5.48420312e+05,  8.12330469e+03,  1.68503391e+05,\n'
 '        -5.92908938e+05,  4.16009406e+05, -1.58298859e+05,\n'
 '        -8.75115703e+04, -6.08096562e+05, -2.58636922e+05,\n'
 '        -6.83292812e+04,  8.78196562e+04, -3.02987000e+05,\n'
 '         1.07199648e+04,  3.44545281e+05, -1.43012000e+05,\n'
 '        -3.77634375e+05, -8.87436328e+04, -8.75108281e+04,\n'
 '        -3.50275875e+05,  1.16222008e+05, -3.42760938e+05,\n'
 '        -3.97640031e+05,  5.51249625e+05, -2.68930812e+05,\n'
 '         5.84994875e+05, -2.38645469e+04, -2.62487812e+05,\n'
 '        -2.80719188e+05,  2.48708594e+05, -1.06442525e+06,\n'
 '        -3.66091250e+04, -2.97312594e+05,  1.94518688e+05,\n'
 '        -1.75286438e+05,  2.40759547e+05,  6.06139500e+05,\n'
 '        -4.48428500e+05, -2.94864750e+05, -4.81094688e+04,\n'
 '         5.85490234e+03, -7.28281250e+02,  2.02341344e+05,\n'
 '        -2.52818750e+03, -6.77558984e+04,  2.43258781e+05,\n'
 '         1.34387656e+04, -5.95236797e+04, -1.13601344e+05,\n'
 '        -3.14850594e+05, -1.79551156e+05,  1.85835625e+05,\n'
 '        -2.97447250e+05, -1.07580445e+05, -5.04557500e+04,\n'
 '        -2.03134922e+04,  2.60244672e+05, -1.40957016e+05,\n'
 '         4.76839719e+05, -1.46921156e+05, -2.19406953e+05,\n'
 '         1.26217812e+04, -1.93101406e+05, -3.22772375e+05,\n'
 '         2.07593281e+04, -2.01218188e+05,  1.46590594e+05,\n'
 '        -3.45421875e+04,  1.11898375e+05, -3.65531875e+05,\n'
 '        -2.70561438e+05,  4.07200312e+05,  1.30432383e+05,\n'
 '        -4.72421328e+04,  2.34222344e+04, -8.10027812e+04,\n'
 '        -3.73621562e+04, -2.97271031e+05,  3.83573125e+05,\n'
 '         1.19410906e+05, -1.82072828e+05,  7.06115547e+04,\n'
 '         1.40779484e+05, -6.19026500e+05, -3.35470375e+05,\n'
 '        -2.86062438e+05,  4.80836531e+05, -7.21353125e+03,\n'
 '         1.24904164e+05,  1.58667359e+05,  4.60432125e+05,\n'
 '         1.66524375e+05,  6.62917438e+05, -1.58397391e+05,\n'
 '        -7.41486250e+05, -7.12155625e+04, -3.20350062e+05,\n'
 '        -4.97300500e+05,  1.95415984e+05,  4.32278938e+05,\n'
 '        -4.76366469e+05,  3.78945688e+05,  2.47838797e+05,\n'
 '        -1.37942109e+05, -1.08425516e+05,  3.25985688e+05,\n'
 '         1.18426734e+05,  2.14465312e+04,  1.46973500e+05,\n'
 '         2.94926895e+04,  7.05157500e+04, -3.11277062e+05,\n'
 '        -1.66547797e+05, -4.01645000e+05, -2.68008781e+05,\n'
 '        -7.51463938e+05, -1.40450781e+05,  2.42809312e+05,\n'
 '         8.08262812e+04,  5.23811188e+05,  4.82308594e+04,\n'
 '         8.23417422e+04, -2.70344531e+05, -1.77924094e+05,\n'
 '        -1.72554641e+05,  1.67983125e+05,  3.04095312e+05,\n'
 '         4.41418125e+05,  3.43180875e+05, -1.04246938e+05,\n'
 '        -1.43628828e+05, -2.13643906e+04,  2.58592781e+05,\n'
 '        -2.85295125e+05,  3.73061094e+05, -1.50108344e+05,\n'
 '        -2.78640781e+05, -5.52703562e+05, -5.15698719e+05,\n'
 '        -9.36108125e+04,  8.94498594e+04, -2.70188812e+05,\n'
 '        -6.24922125e+05, -1.54157547e+05,  2.11655742e+04,\n'
 '         5.81265375e+05,  4.62348656e+05, -3.58574938e+05,\n'
 '         3.04952156e+05,  5.40414812e+05,  1.76556641e+05,\n'
 '         2.42791953e+05, -7.64403250e+05, -5.69489312e+05,\n'
 '        -1.47839531e+05,  4.14238094e+05,  5.17737250e+05,\n'
 '         4.27049312e+05, -4.97913875e+05, -3.44634344e+05,\n'
 '         5.96480250e+05,  2.31636156e+05,  6.94366406e+04,\n'
 '         1.13336930e+05, -1.62689016e+05, -2.97769336e+04,\n'
 '         2.36938516e+04, -2.12047156e+05,  1.57185609e+05,\n'
 '        -6.98940625e+04,  4.31749344e+05, -4.01860344e+05,\n'
 '        -2.50203281e+04, -1.44203266e+05,  2.09216562e+05,\n'
 '         2.89653000e+05,  3.97314500e+05,  5.53181500e+05,\n'
 '         2.79562438e+05, -1.54425766e+05,  4.19608562e+05,\n'
 '        -2.96326938e+05,  2.31200562e+05,  1.14349422e+05,\n'
 '         3.70275562e+05,  3.22078094e+05, -5.52557031e+04,\n'
 '        -5.49524531e+04, -2.45481297e+05,  1.70691219e+05,\n'
 '         3.49074500e+05, -2.85088562e+05,  5.11350000e+04,\n'
 '        -5.21285500e+05,  1.96180531e+05,  2.25447938e+05,\n'
 '         2.20140031e+05, -1.03051281e+05, -4.01155438e+05,\n'
 '        -1.95201516e+05,  2.13271875e+04, -1.03079914e+05,\n'
 '        -5.79332031e+04, -3.73837688e+05,  2.37788500e+05,\n'
 '        -1.17933695e+05,  7.62475781e+03, -5.17487312e+05,\n'
 '        -4.17075438e+05,  1.72726109e+05,  2.71311750e+05,\n'
 '        -1.96765297e+05, -1.07613836e+05, -1.83926719e+05,\n'
 '        -7.36130000e+04, -3.33194656e+05, -5.56485438e+05,\n'
 '         1.24055453e+05, -9.73921719e+04,  5.13764844e+05,\n'
 '         2.32687109e+05,  3.92539781e+05,  3.78104250e+05,\n'
 '         2.16277109e+05, -5.51135781e+04,  1.92982250e+05,\n'
 '        -5.87468812e+05, -1.53832219e+05,  2.24742344e+05,\n'
 '         1.34989641e+05, -1.82042031e+05, -1.65798203e+05,\n'
 '        -6.31227148e+04,  1.02820070e+05, -2.71548688e+05,\n'
 '         8.11065469e+04, -3.38048406e+05,  1.13854461e+05,\n'
 '         2.99841219e+05, -1.96099141e+05, -2.65391062e+05,\n'
 '        -3.26979156e+05, -2.04666938e+05, -2.56240422e+05,\n'
 '        -4.86463219e+05, -3.81935000e+05,  4.01681625e+05,\n'
 '        -3.84195875e+05,  2.64247031e+05,  6.52456250e+04,\n'
 '         2.09672812e+04,  2.97203125e+04, -5.72065938e+05,\n'
 '         6.10976250e+05, -9.34688906e+04,  3.84131750e+05,\n'
 '        -6.05772875e+05, -3.90109312e+05,  3.36362812e+05,\n'
 '        -8.66767109e+04, -2.09087375e+05,  3.77968875e+05,\n'
 '        -2.16866328e+05,  1.49994406e+05, -4.84008906e+05,\n'
 '        -4.23713438e+04, -3.72615688e+05, -1.45001844e+05,\n'
 '        -2.28507984e+05, -3.90063438e+05, -6.38690000e+05,\n'
 '         6.16146250e+04,  3.55640438e+05, -2.23045969e+05,\n'
 '         2.27737625e+05, -4.01336250e+05, -9.43531719e+04,\n'
 '        -5.08690500e+05,  7.76900000e+04, -2.96566094e+04,\n'
 '        -1.34414938e+05,  5.28158828e+04, -8.55527500e+04,\n'
 '         3.81537188e+05,  6.79518562e+05, -1.09393484e+05,\n'
 '        -1.04055391e+04, -3.11298750e+04,  1.01979812e+06,\n'
 '         1.07884836e+05, -5.14173125e+05, -4.52772438e+05,\n'
 '        -4.44090391e+04,  1.09396094e+05, -1.66570938e+05,\n'
 '         1.95774562e+05, -3.57991328e+04, -1.55987953e+05,\n'
 '         9.72067578e+03, -2.96267844e+05, -3.45086312e+05,\n'
 '        -5.18960156e+03, -3.63105281e+05, -4.08722000e+05,\n'
 '         3.63605188e+05,  1.82594500e+05,  2.35125984e+05,\n'
 '         4.78621438e+05,  4.27915969e+05, -4.92359375e+02,\n'
 '         2.30380781e+05,  5.31530750e+05,  2.53361578e+05,\n'
 '         2.26012156e+05, -6.64142266e+04,  4.26138281e+04,\n'
 '        -4.26100703e+04, -1.34918641e+05, -4.19219781e+05,\n'
 '         1.03152984e+05, -2.64923031e+05, -3.53792250e+05,\n'
 '        -3.92325625e+04,  1.29578180e+05, -2.14711656e+05,\n'
 '        -4.89344219e+04, -1.62962031e+05, -9.55092188e+04,\n'
 '         2.32882719e+05, -2.47372969e+05,  1.71624672e+05,\n'
 '         4.78093312e+05, -9.45226562e+02, -2.49073094e+05,\n'
 '         1.92216562e+05, -2.93100250e+05,  2.45768375e+05,\n'
 '         1.19765516e+05,  3.24418219e+05,  2.58875594e+05,\n'
 '         9.30665703e+04, -7.47246625e+05, -2.60755812e+05,\n'
 '         2.61354016e+05,  8.10066406e+04, -1.63330125e+05,\n'
 '        -2.11523656e+05,  1.20809797e+05,  3.37834156e+05,\n'
 '        -2.98650812e+05, -1.22500547e+05, -2.18947938e+05,\n'
 '         2.75602656e+05, -2.00473281e+05,  2.31536109e+05,\n'
 '        -4.65119812e+05, -1.32034781e+05,  2.14943812e+05,\n'
 '        -6.70180625e+04, -7.31379141e+04, -3.27780375e+05,\n'
 '        -2.75241625e+05, -2.61886594e+05,  1.72599562e+05,\n'
 '        -4.10464844e+05, -2.95356562e+05,  1.03958234e+05,\n'
 '         7.42349922e+04,  1.14163641e+05,  6.30403438e+05,\n'
 '        -1.30527805e+05, -8.23789062e+04, -1.37575938e+05,\n'
 '         1.63313562e+05, -1.83845875e+05,  2.55547656e+03,\n'
 '         3.42761031e+05, -1.57624344e+05,  4.60891562e+05,\n'
 '        -3.66840219e+05,  1.38377000e+05, -1.73934531e+04,\n'
 '        -2.56515578e+05, -9.14798281e+04,  1.04277031e+05,\n'
 '        -3.50859406e+05,  3.35673031e+05, -4.85425000e+03,\n'
 '         1.72192984e+05, -1.42351625e+05, -2.41743438e+05,\n'
 '         5.78637578e+04, -2.41921250e+04,  3.21847125e+05,\n'
 '         2.25699328e+05, -4.17429281e+05, -3.39293250e+05,\n'
 '        -3.72124688e+04, -2.15682750e+05, -6.48468750e+02,\n'
 '        -8.69917188e+04,  2.10577719e+05, -2.54596578e+05,\n'
 '        -3.38934688e+04,  1.94282281e+05,  1.47965156e+05,\n'
 '        -1.52615812e+05,  1.00563633e+05,  4.67662844e+05,\n'
 '         2.13968766e+05, -1.85898953e+05,  1.96864766e+05,\n'
 '        -3.90313688e+05,  6.85178812e+05, -1.47708625e+05,\n'
 '         9.83786484e+04, -3.59425781e+05, -4.50618938e+05,\n'
 '        -1.92935531e+05, -2.13854703e+05, -5.64261625e+05,\n'
 '        -2.21958234e+05,  2.31702062e+05,  5.42510562e+05,\n'
 '         3.90093062e+05,  3.51625312e+05, -3.36716125e+05,\n'
 '         4.33604094e+05, -1.62842844e+05, -8.72118125e+04,\n'
 '         3.13244656e+05,  1.43155297e+05, -4.76007125e+05,\n'
 '         2.00479750e+05,  1.09682812e+05, -1.23080797e+05,\n'
 '        -2.19283844e+05,  6.92675156e+04, -9.19606875e+04,\n'
 '        -4.59124750e+05,  2.12312188e+04,  8.32843750e+04,\n'
 '        -1.94699000e+05,  1.12138953e+05,  5.73806562e+04,\n'
 '        -9.30249688e+04, -1.68273188e+05, -8.01677125e+05,\n'
 '         4.58873344e+05, -4.52945219e+05, -1.27364320e+05,\n'
 '        -1.30176367e+05, -1.98378594e+05, -1.92944359e+05,\n'
 '        -2.95064469e+05, -3.00807469e+05,  1.53990125e+05,\n'
 '         3.45204062e+04, -5.71055938e+05,  2.39480031e+05,\n'
 '         9.29531016e+04, -6.46260078e+04,  5.36249500e+05,\n'
 '         5.19743812e+05,  3.09909062e+05,  1.14966750e+05,\n'
 '         1.54019141e+05,  3.63837000e+05, -2.37700531e+05,\n'
 '        -3.44937781e+05,  5.72852875e+05,  4.04538203e+04,\n'
 '        -2.27111719e+04, -2.69620078e+04, -4.61758500e+05,\n'
 '        -9.68546875e+04, -1.88439250e+05, -4.33606906e+05,\n'
 '        -1.60396422e+05,  1.96637359e+05, -2.08563453e+05,\n'
 '        -2.11522266e+05,  1.28743828e+04, -1.13538531e+05,\n'
 '        -3.62953469e+05,  2.46713922e+05,  2.57876844e+05,\n'
 '         2.01387125e+05,  5.70524766e+04,  1.33489906e+05,\n'
 '        -1.88805625e+04,  2.25122656e+05, -6.22899609e+04,\n'
 '         6.32757031e+03,  1.45705469e+05,  2.76516219e+05,\n'
 '        -3.38385000e+05, -6.81444375e+04,  3.45524375e+05,\n'
 '        -1.36313297e+05, -6.42023438e+03,  1.33249562e+05,\n'
 '         1.14616906e+05,  9.93974688e+04, -1.59451406e+04,\n'
 '        -1.91932438e+05, -8.88095000e+04, -3.97682656e+04,\n'
 '         7.28292891e+04, -2.61968578e+05, -3.43933375e+05,\n'
 '        -4.23093500e+05, -1.57739141e+05,  7.87747969e+04,\n'
 '         3.96111688e+05,  2.61828938e+05,  6.32069844e+04,\n'
 '         2.61252531e+05, -5.60773875e+05,  7.61078125e+04,\n'
 '         2.30856219e+05, -3.52045094e+05,  6.31587188e+04,\n'
 '        -4.44813812e+05,  2.89821953e+04, -4.08267344e+05,\n'
 '         2.26086469e+05,  4.36045812e+05, -2.92061750e+05,\n'
 '        -2.73370000e+05, -9.69350938e+04,  2.06832516e+05,\n'
 '        -2.09607141e+05,  4.52287188e+05,  1.84557344e+05,\n'
 '        -2.47403438e+05, -1.25958875e+05,  9.78934219e+04,\n'
 '         1.38451531e+05,  1.90135516e+05,  3.71040078e+04,\n'
 '        -1.33823281e+04, -1.10878625e+05,  2.98349531e+04,\n'
 '         4.22695656e+05, -1.84844922e+05,  2.25419750e+05,\n'
 '         1.99296375e+05, -2.80009500e+05, -1.88334922e+04,\n'
 '        -1.96297016e+05,  5.83832500e+04, -1.63480938e+04,\n'
 '         4.56236469e+05, -3.95693656e+05,  3.46026625e+05,\n'
 '         1.98621031e+05,  2.51744875e+05,  9.09789125e+05,\n'
 '         5.81247500e+05,  1.29817648e+05,  2.30042906e+05,\n'
 '        -2.66570812e+05, -1.18955719e+05,  7.83320781e+04,\n'
 '         7.66552656e+04,  3.16470875e+05,  4.69241375e+05,\n'
 '         3.37508438e+05, -5.51316719e+04,  3.53612062e+05,\n'
 '         1.14080969e+05, -2.90371188e+05,  1.12548266e+05,\n'
 '        -2.35286078e+05, -1.58641203e+05, -1.16717625e+05,\n'
 '         6.28549219e+04, -8.49748312e+05,  1.13795000e+04,\n'
 '         4.40438312e+05, -8.74948125e+04, -9.35172578e+04,\n'
 '         1.16709094e+05, -6.05250156e+04, -4.14801562e+04,\n'
 '         1.49945469e+05, -1.81175844e+05, -1.87263969e+05,\n'
 '         1.36203422e+05,  4.60092562e+05,  2.71047969e+04,\n'
 '         2.31858406e+05,  2.23434344e+05, -1.56409719e+05,\n'
 '         1.23419773e+05, -2.12750094e+05, -1.10913711e+05,\n'
 '        -4.86906312e+05, -1.00350844e+05,  5.19754625e+05,\n'
 '         8.13617625e+05, -7.10248281e+04,  2.05554094e+05,\n'
 '        -1.75404375e+04, -2.04831500e+05,  3.11027500e+05,\n'
 '         2.16111156e+05,  2.32940312e+05,  2.82555656e+05,\n'
 '        -1.30687914e+05, -1.88946125e+05,  4.16210000e+05,\n'
 '        -1.94626688e+05,  2.93112375e+05, -2.03278125e+03,\n'
 '        -3.18717031e+04, -9.69946406e+04, -9.57353125e+03,\n'
 '        -8.98649375e+04, -1.72575625e+04,  5.15175156e+05,\n'
 '        -8.73461875e+04,  2.37985906e+05,  1.18256109e+05,\n'
 '         4.59545781e+04, -5.23699906e+05,  1.08005828e+05,\n'
 '        -2.10958609e+05,  2.33000922e+05, -5.18892312e+05,\n'
 '         1.77867750e+05,  2.60028730e+04, -4.21795625e+04,\n'
 '        -1.98545125e+05,  2.06495812e+05,  2.12621188e+05,\n'
 '        -2.96777562e+05, -2.18759312e+05, -1.70169344e+05,\n'
 '        -1.86721406e+04,  3.92460969e+05, -3.82728938e+05,\n'
 '        -3.86377625e+05,  5.09182812e+04,  8.24610781e+04,\n'
 '         1.43137953e+05,  1.36840859e+04, -2.53997781e+05,\n'
 '         1.47529562e+05,  9.17551094e+04, -8.02725312e+04,\n'
 '        -2.25168516e+05, -1.76400672e+05,  1.02305000e+05,\n'
 '         2.95753500e+05,  1.07168867e+05, -8.98266812e+05,\n'
 '        -3.08672062e+05, -9.75653125e+03,  3.20958438e+05,\n'
 '        -7.75948594e+04, -4.16689375e+05, -4.41436156e+05,\n'
 '        -2.48635141e+05,  4.18049062e+04,  8.16709312e+05,\n'
 '         4.59314906e+05,  1.33441250e+05,  2.49558844e+05,\n'
 '        -1.76534469e+05, -5.33823688e+05,  5.99689438e+05,\n'
 '         5.56652688e+05, -1.21945023e+05, -6.99317188e+04,\n'
 '        -2.06611625e+05,  1.14393797e+05,  2.27830594e+05,\n'
 '         4.24831125e+05, -7.20669000e+05,  3.05841156e+05,\n'
 '         2.13886797e+04,  4.81078242e+04,  3.57253906e+05,\n'
 '        -2.73702625e+05, -7.15519609e+04,  1.36274281e+05,\n'
 '         2.00557797e+05, -3.86667562e+05, -3.10496531e+05,\n'
 '         5.12644781e+05, -3.64816812e+05, -4.84887156e+05,\n'
 '        -1.50247109e+04,  4.85729062e+05,  3.72765000e+04,\n'
 '        -1.88127938e+05, -4.19014000e+05, -2.49807094e+05,\n'
 '         4.13487031e+04, -2.32528609e+05, -1.00509531e+04,\n'
 '        -1.24635781e+05,  2.21511875e+05, -3.62437344e+05,\n'
 '         6.54932500e+05, -2.08391969e+05, -3.74012938e+05,\n'
 '         4.87556875e+04, -5.95736875e+05,  2.78190125e+05,\n'
 '         1.85773750e+04,  8.15256016e+04,  6.98717031e+04,\n'
 '        -1.21211859e+05, -1.35034312e+05, -9.53154219e+04,\n'
 '         1.55669000e+05,  4.41063031e+05,  2.33510109e+05,\n'
 '         2.73229375e+05, -2.77903062e+05, -1.71349875e+05,\n'
 '        -2.04199656e+05]])')
'test_inceptionnet | batch_shape is: [1]'
'test_inceptionnet | logits.shape is: ivy.Shape(1, 1000)'
'||'
'test_inceptionnet | device is: cpu'
'test_inceptionnet | fw is: torch'
'test_inceptionnet | load_weights is: True'
'InceptionV3 | build | layer 1/22 built'
'InceptionV3 | build | layer 2/22 built'
'layer 3/22 built'
'InceptionV3 | build | layer 4/22 built'
'InceptionV3 | build | layer 5/22 built'
'InceptionV3 | build | layer 6/22 built'
'InceptionV3 | build | layer 7/22 built'
'InceptionV3 | build | layer 8/22 built'
'InceptionV3 | build | layer 9/22 built'
'InceptionV3 | build | layer 10/22 built'
'InceptionV3 | build | layer 11/22 built'
'InceptionV3 | build | layer 12/22 built'
'InceptionV3 | build | layer 13/22 built'
'InceptionV3 | build | layer 14/22 built'
'InceptionV3 | build | layer 15/22 built'
'InceptionV3 | build | layer 17/22 built'
'InceptionV3 | build | layer 18/22 built'
'InceptionV3 | build | layer 19/22 built'
'InceptionV3 | build | layer 20/22 built'
'InceptionV3 | build | layer 21/22 built'
'InceptionV3 | build | layer 22/22 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/4 built'
'layer 2/4 built'
'layer 3/4 built'
'layer 4/4 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/6 built'
'layer 2/6 built'
'layer 3/6 built'
'layer 4/6 built'
'layer 5/6 built'
'layer 6/6 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'inceptionNet_v3 | building InceptionV3 model | done 1/3'
'inceptionNet_v3 | clearning pretrained weights | done 2/3'
'inceptionNet_v3 | loading pretrained weights | done 3/3'
'InceptionV3 | forward | input data_format is:NCHW | done 1/27'
'InceptionV3 | forward | data_format is going to be used is:NCHW | done 1/27'
'InceptionV3 | forward | input shape is:ivy.Shape(1, 224, 224, 3) | done 1/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 224, 224, 3) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 111, 111, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 111, 111, 32) | done 2/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 111, 111, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 32) | done 3/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 109, 109, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 64) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 64) | done 4/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 54, 54, 64) | done 5/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 54, 54, 80) | done 3/3'
'InceptionV3 | forward | is:ivy.Shape(1, 54, 54, 80) | done 6/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 80) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 52, 52, 192) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 52, 52, 192) | done 7/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 192) | done 8/27'
'input shape is:ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 32) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 32)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 25, 25, 256) | done 9/27'
'input shape is:ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 10/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 11/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 384) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 96) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 96)'
'one 20/20, output shape is:ivy.Shape(1, 12, 12, 288)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 12/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 12, 12, 768) | done 13/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 14/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 15/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 16/27'
'v3 16/27, output shape is:ivy.Shape(1, 12, 12, 768)'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 5, 5, 192)'
'one 7/20, output shape is:ivy.Shape(1, 5, 5, 768)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 1280) | done 17/27'
'input shape is:ivy.Shape(1, 5, 5, 1280)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 18/27'
'input shape is:ivy.Shape(1, 5, 5, 2048)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 19/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 20/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 5, 5) | done 21/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 1, 1) | done 22/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 27/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 24/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 25/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048) | done 26/27'
'InceptionV3 | forward | fc | done 27/27'
('test_inceptionnet | logits is: ivy.array([[ 1.05373204e+00, '
 '-1.34872556e+00,  1.31500721e+00,\n'
 '         2.56904817e+00,  3.31805378e-01,  1.59997046e-01,\n'
 '         2.70123029e+00, -2.98901796e-01, -1.56995177e+00,\n'
 '        -2.13687182e+00, -2.17553973e+00, -7.14569867e-01,\n'
 '        -2.42899919e+00, -6.62863970e-01,  1.80075824e+00,\n'
 '        -2.15864372e+00, -4.23511803e-01,  2.03439295e-01,\n'
 '         1.18947148e-01, -1.96279436e-01,  7.91757345e-01,\n'
 '         5.67903936e-01,  1.46625030e+00,  1.27642655e+00,\n'
 '         6.26118064e-01, -1.18161726e+00, -5.98425508e-01,\n'
 '        -1.12544751e+00, -2.52201915e+00, -2.65317082e+00,\n'
 '        -3.21559906e-02,  6.98446751e-01,  2.15315223e+00,\n'
 '         1.33598292e+00,  1.22130275e+00, -1.00851774e+00,\n'
 '         7.78799832e-01, -2.12096810e+00, -4.35546577e-01,\n'
 '         1.36737657e+00,  4.56205785e-01,  5.64049184e-02,\n'
 '         7.96655655e-01,  4.62331414e-01, -8.80663633e-01,\n'
 '        -6.02721870e-02, -4.79306549e-01,  2.20949531e+00,\n'
 '        -2.04724670e-01,  2.82854289e-02, -5.83462596e-01,\n'
 '        -4.25584316e-01,  6.02094054e-01, -1.81360209e+00,\n'
 '         3.20458472e-01, -5.49183249e-01, -2.34544158e+00,\n'
 '        -1.19490051e+00,  3.88226688e-01, -3.35694045e-01,\n'
 '        -6.64038301e-01,  1.48805368e+00, -1.03999293e+00,\n'
 '        -5.91283679e-01, -2.25464582e+00, -1.81002104e+00,\n'
 '         7.23122597e-01,  2.57597470e+00,  1.00917912e+00,\n'
 '        -2.92841017e-01, -9.07811522e-01, -1.88882500e-01,\n'
 '        -6.62496090e-01, -1.09358597e+00, -7.05128312e-01,\n'
 '        -3.19149643e-01, -1.89754581e+00,  3.69871557e-01,\n'
 '        -7.87863374e-01,  1.01784456e+00, -1.51735043e+00,\n'
 '         2.17352843e+00, -9.17985082e-01,  1.18666744e+00,\n'
 '         2.92577767e+00, -1.04075158e+00, -5.38245320e-01,\n'
 '        -3.62483144e-01,  3.97617364e+00, -8.40952396e-02,\n'
 '        -4.18215781e-01,  2.34853911e+00,  4.05430794e-02,\n'
 '         1.18707323e+00, -8.16816092e-01, -1.02730155e-01,\n'
 '         9.28651035e-01, -1.15554774e+00, -3.10185647e+00,\n'
 '         8.74215484e-01, -1.39128947e+00,  2.29743791e+00,\n'
 '        -9.75058496e-01,  6.01263464e-01,  2.19012976e+00,\n'
 '        -2.15478921e+00, -1.03391743e+00, -1.24283421e+00,\n'
 '        -7.41610646e-01, -1.06904674e+00, -9.69664514e-01,\n'
 '        -1.16986740e+00, -1.00971192e-01,  9.57579255e-01,\n'
 '         1.02585232e+00, -2.78878093e+00, -1.62578762e+00,\n'
 '         4.82252836e-02, -1.61708129e+00, -5.61208963e-01,\n'
 '        -2.09675694e+00, -3.52416897e+00,  2.00316101e-01,\n'
 '        -2.14628029e+00, -3.00916076e+00, -3.32893300e+00,\n'
 '        -1.95887959e+00,  3.76783156e+00,  2.67512369e+00,\n'
 '        -2.03940415e+00, -3.28867912e-01,  8.50135088e-01,\n'
 '         2.03264379e+00,  3.50748867e-01,  6.67333245e-01,\n'
 '         1.16927040e+00,  2.04265094e+00, -1.32183015e+00,\n'
 '         7.51614988e-01, -1.26282871e+00, -1.63185394e+00,\n'
 '         1.72202587e-02, -2.93927908e+00, -8.78414810e-01,\n'
 '         2.67775536e+00,  1.06387508e+00,  4.54438031e-01,\n'
 '        -6.48227453e-01,  1.10278182e-01,  1.47110915e+00,\n'
 '         7.27211714e-01, -1.16145897e+00,  2.99628687e+00,\n'
 '        -1.96665287e-01,  9.23920810e-01, -1.37139630e+00,\n'
 '        -1.03058147e+00,  4.08199167e+00, -1.19625473e+00,\n'
 '        -5.81575990e-01,  1.34552622e+00, -1.42554617e+00,\n'
 '        -2.32882071e+00, -1.76193798e+00, -6.39156580e-01,\n'
 '        -2.12323213e+00, -2.86938131e-01, -1.51036608e+00,\n'
 '        -1.42004716e+00,  1.43132162e+00,  2.47993851e+00,\n'
 '        -6.72418714e-01, -1.45944846e+00, -8.34000766e-01,\n'
 '         7.07206249e-01, -6.02048218e-01, -1.43161237e+00,\n'
 '        -4.59889561e-01, -1.51717853e+00, -1.40509641e+00,\n'
 '        -1.16551256e+00, -4.54898804e-01, -2.50433326e+00,\n'
 '        -2.33318949e+00, -8.01010057e-02,  4.97994065e-01,\n'
 '         1.28904617e+00, -2.93748617e-01, -5.81933111e-02,\n'
 '        -2.83350277e+00, -1.95881772e+00, -7.63934493e-01,\n'
 '         1.72294331e+00, -9.02752101e-01, -1.36212337e+00,\n'
 '         6.32717088e-02, -1.72118390e+00, -1.02032363e+00,\n'
 '        -1.62655938e+00,  5.99793434e-01,  1.97312832e-02,\n'
 '        -2.60076070e+00, -1.21536088e+00,  3.65717816e+00,\n'
 '        -2.78614259e+00, -4.00886536e+00, -2.37078476e+00,\n'
 '         8.49252701e-01, -4.08005476e+00, -1.62910545e+00,\n'
 '        -1.70368683e+00, -1.13905644e+00, -1.03882444e+00,\n'
 '         7.48239458e-01, -1.69351712e-01, -1.50156128e+00,\n'
 '         1.33872306e+00,  3.73655856e-02,  1.87724805e+00,\n'
 '        -5.04593468e+00,  1.00413792e-01, -1.15053570e+00,\n'
 '         3.03283191e+00, -2.68753529e-01,  3.82017899e+00,\n'
 '         6.78855479e-02,  1.51160085e+00, -4.05102539e+00,\n'
 '        -9.27207529e-01,  8.33978116e-01,  9.06597495e-01,\n'
 '         2.15053654e+00,  1.39943254e+00,  4.19621408e-01,\n'
 '        -1.56226420e+00,  2.76109904e-01, -5.26224196e-01,\n'
 '        -2.13835335e+00, -2.09713340e+00, -2.09569836e+00,\n'
 '        -6.93776131e-01,  2.71020502e-01,  5.86126864e-01,\n'
 '         1.71198219e-01, -2.53135371e+00, -6.54102445e-01,\n'
 '        -1.67764694e-01,  1.18205142e+00,  7.85432100e+00,\n'
 '         5.79119348e+00,  3.51828098e+00, -5.52760363e-01,\n'
 '        -2.93105936e+00, -7.28017926e-01, -2.70695209e-01,\n'
 '         1.07077682e+00,  3.20462489e+00,  8.14770317e+00,\n'
 '         2.05130978e+01,  5.92525148e+00,  5.08872557e+00,\n'
 '         4.33065462e+00, -1.80905640e+00,  9.68784615e-02,\n'
 '        -9.16378021e-01, -1.09973669e+00, -7.57356823e-01,\n'
 '         5.30824959e-01, -7.37160444e-01,  2.43173122e+00,\n'
 '         1.19030428e+01, -1.85772288e+00,  5.10369420e-01,\n'
 '         1.04530513e-01,  1.49672437e+00, -1.82878566e+00,\n'
 '         1.26676929e+00,  3.02782488e+00, -1.77810681e+00,\n'
 '         1.24938927e+01,  1.44248068e+00, -1.21623290e+00,\n'
 '         1.18759796e-01,  3.56607270e+00, -1.10266030e+00,\n'
 '        -8.16143095e-01,  2.81542748e-01,  1.15468621e+00,\n'
 '         1.54563069e+00,  2.73410082e+00, -7.06077933e-01,\n'
 '         3.69009495e+00,  5.44880450e-01, -2.27851987e-01,\n'
 '         2.68604666e-01, -1.13179994e+00,  5.32176113e+00,\n'
 '        -9.19510365e-01, -2.05029464e+00, -1.86682796e+00,\n'
 '        -1.18752658e+00, -5.19450366e-01, -1.10449783e-01,\n'
 '         1.36672527e-01,  8.44216645e-02, -5.75665712e-01,\n'
 '        -1.15021491e+00,  7.68394709e-01,  2.59920448e-01,\n'
 '        -4.63062942e-01, -9.27995265e-01,  1.24717638e-01,\n'
 '        -7.20028222e-01, -5.04724026e-01, -9.95062709e-01,\n'
 '         9.52407420e-01, -1.87720025e+00,  5.18238544e-01,\n'
 '         3.08496565e-01, -2.76455522e-01,  1.20660865e+00,\n'
 '        -1.28043401e+00,  7.15747535e-01,  5.27567387e-01,\n'
 '        -2.65758038e+00,  2.10617781e-02,  1.32009089e+00,\n'
 '         1.28694868e+00, -1.04390752e+00, -1.66042626e+00,\n'
 '        -1.12471664e+00,  4.84885407e+00,  1.34736550e+00,\n'
 '         1.18089527e-01, -4.47354913e-01, -2.01652169e+00,\n'
 '        -1.30270231e+00,  6.25570953e-01,  2.41134620e+00,\n'
 '        -3.80091309e-01,  1.76930678e+00,  6.17517114e-01,\n'
 '        -1.02623570e+00, -4.24157977e-02,  3.34534913e-01,\n'
 '         6.61819935e-01,  1.20899284e+00,  3.92040700e-01,\n'
 '         9.22256768e-01, -1.10996497e+00,  3.50813568e-02,\n'
 '         1.10719013e+00,  1.83667451e-01,  3.80976796e-01,\n'
 '        -1.38498271e+00,  2.57887077e+00,  1.15809154e+00,\n'
 '         1.02158621e-01,  1.41673279e+00, -1.42640919e-02,\n'
 '        -2.56585216e+00, -1.59793282e+00, -9.35721934e-01,\n'
 '         6.37370944e-02, -2.48896122e+00, -8.80573213e-01,\n'
 '        -3.04686594e+00, -1.16939926e+00, -5.08950412e-01,\n'
 '        -2.30182433e+00, -9.94989872e-02, -1.90941000e+00,\n'
 '        -1.42451620e+00, -9.26804543e-02,  9.11884904e-01,\n'
 '        -1.36237788e+00, -1.23759162e+00, -4.22396332e-01,\n'
 '         5.92574626e-02, -1.73641324e+00, -9.81488079e-03,\n'
 '        -2.12634707e+00, -2.31338143e+00, -1.82069361e+00,\n'
 '        -2.24139309e+00,  1.44270611e+00, -2.95255244e-01,\n'
 '         4.34160307e-02,  4.57670629e-01, -2.71976113e+00,\n'
 '        -6.00340068e-01, -6.79293990e-01,  5.57959080e-03,\n'
 '        -2.04662561e-01,  1.16335958e-01,  2.07702845e-01,\n'
 '         2.01981783e+00, -1.04757845e+00,  2.73850846e+00,\n'
 '         1.47017169e+00, -2.24976957e-01,  4.31797653e-01,\n'
 '         3.55524123e-01,  2.54730797e+00,  1.19111729e+00,\n'
 '        -2.35686779e-01,  8.68235230e-01,  6.91041946e-01,\n'
 '        -8.86877298e-01, -1.64162254e+00,  3.23154748e-01,\n'
 '        -5.23393273e-01, -1.19888234e+00, -5.01460135e-01,\n'
 '        -1.55314660e+00,  8.52642953e-01, -1.69564605e+00,\n'
 '         2.23109102e+00, -1.11772823e+00, -5.11596918e-01,\n'
 '        -9.17033374e-01, -2.64983344e+00, -1.99166346e+00,\n'
 '        -2.80061781e-01, -1.72004879e-01,  1.31761420e+00,\n'
 '        -3.45857441e-01, -1.41870052e-01, -9.06555653e-02,\n'
 '        -6.46887049e-02, -1.58128107e+00,  1.85610712e-01,\n'
 '         9.59694385e-04, -3.14529002e-01, -6.90113604e-01,\n'
 '        -1.10557544e+00, -5.84010124e-01, -2.35119745e-01,\n'
 '        -2.19598651e+00,  1.40307218e-01, -1.12342119e+00,\n'
 '        -1.02108717e-02,  5.67555666e-01, -1.74722540e+00,\n'
 '         7.04189062e-01,  7.96227276e-01,  5.91398358e-01,\n'
 '        -1.64525616e+00,  1.05169797e+00, -1.29383922e+00,\n'
 '         8.70200396e-01,  3.92628372e-01,  1.23413050e+00,\n'
 '         3.89327705e-02,  4.05018538e-01, -6.71174288e-01,\n'
 '         1.57812691e+00,  2.89127499e-01,  8.61846745e-01,\n'
 '         4.57007587e-02, -6.29708648e-01, -1.21857083e+00,\n'
 '         2.86689073e-01, -1.39428899e-02,  1.25338018e+00,\n'
 '        -6.31957769e-01, -2.09138799e+00, -8.30884337e-01,\n'
 '         2.72577286e-01,  7.34522223e-01, -1.71047017e-01,\n'
 '        -6.34655714e-01, -1.34845638e+00, -4.34100390e-01,\n'
 '        -1.02544630e+00, -6.60897851e-01,  3.80197382e+00,\n'
 '        -1.40160894e+00,  3.90238762e-01, -2.85791993e-01,\n'
 '         4.01374370e-01,  1.75932288e+00, -2.52243280e+00,\n'
 '         7.72098243e-01, -1.58781135e+00, -1.28767109e+00,\n'
 '        -9.48200882e-01,  1.58668792e+00,  1.28309143e+00,\n'
 '         2.56754309e-01,  1.74565554e+00,  2.52627659e+00,\n'
 '        -1.68908095e+00, -1.68458104e+00, -8.88334990e-01,\n'
 '         2.01331568e+00,  3.99704575e-01,  6.74507767e-03,\n'
 '         1.65052921e-01,  2.04737759e+00, -1.91416788e+00,\n'
 '         1.31698835e+00, -1.62704289e+00,  1.47295237e-01,\n'
 '        -1.90943956e+00,  2.18472910e+00,  3.73497754e-01,\n'
 '        -7.88955033e-01, -4.86575842e-01,  3.29282552e-01,\n'
 '         1.81323957e+00, -1.42245293e-02, -4.85078722e-01,\n'
 '         9.30757642e-01, -1.75940681e+00, -3.44221443e-02,\n'
 '        -2.24359250e+00,  9.07210290e-01, -1.50336421e+00,\n'
 '        -2.65964031e+00, -1.14489341e+00, -5.30800164e-01,\n'
 '         9.85593855e-01, -1.19399071e+00,  8.56008112e-01,\n'
 '        -4.75892007e-01, -9.02073741e-01, -1.74787808e+00,\n'
 '        -6.53106570e-01, -2.34787083e+00,  2.72665888e-01,\n'
 '        -1.05747235e+00,  5.83888590e-01, -1.44619179e+00,\n'
 '        -3.09779733e-01, -2.09742975e+00, -2.90163040e+00,\n'
 '         3.19533777e+00, -3.16109329e-01, -3.91572774e-01,\n'
 '        -4.41361249e-01,  1.57467890e+00, -1.07391679e+00,\n'
 '         1.67818046e+00,  1.05463922e+00,  2.37686038e-01,\n'
 '         1.69963872e+00,  3.87357652e-01, -2.27742696e+00,\n'
 '         2.31132388e+00,  4.35107112e-01, -5.95764935e-01,\n'
 '        -1.71038806e-02, -1.36294138e+00,  1.40930557e+00,\n'
 '        -2.02122426e+00,  4.35339153e-01,  9.43340302e-01,\n'
 '         7.87265599e-01,  8.26873660e-01,  2.15347075e+00,\n'
 '        -1.13655639e+00,  2.97737622e+00,  7.38956571e-01,\n'
 '        -8.91052961e-01,  1.44805908e-02,  4.20976520e-01,\n'
 '        -1.39883924e+00,  1.42967522e+00, -6.21625781e-01,\n'
 '        -6.53249860e-01, -2.71267915e+00,  2.36078882e+00,\n'
 '         1.45777798e+00, -5.54706931e-01, -7.00308383e-01,\n'
 '         4.42607909e-01,  2.94955671e-01,  1.20914495e+00,\n'
 '        -2.67662454e+00, -2.95403093e-01,  1.02974510e+00,\n'
 '        -1.79555058e+00,  4.31552172e-01,  1.63014197e+00,\n'
 '         4.56735432e-01, -1.27367616e+00,  3.85344535e-01,\n'
 '        -3.02054465e-01, -6.86010242e-01,  2.68009663e+00,\n'
 '         4.41904217e-02,  2.35859322e+00,  1.19245827e+00,\n'
 '         1.95950103e+00, -1.57288766e+00, -1.46436560e+00,\n'
 '         1.29699945e+00, -2.22842693e+00,  4.91651833e-01,\n'
 '         1.25770271e+00, -1.33763587e+00, -2.00043368e+00,\n'
 '         2.44790316e-03,  1.93038976e+00, -8.71887684e-01,\n'
 '         5.52868891e+00,  1.22059012e+00,  2.39989877e-01,\n'
 '         2.63584226e-01,  9.18562889e-01,  2.09248543e+00,\n'
 '         4.48332459e-01,  4.84032095e-01,  5.99722087e-01,\n'
 '        -1.89971006e+00,  1.32308200e-01,  1.24090993e+00,\n'
 '         1.91672564e-01, -8.34171176e-01, -1.15112865e+00,\n'
 '         2.17742538e+00,  9.81647074e-01, -1.38534665e+00,\n'
 '         8.49351346e-01,  9.75607336e-01,  6.13743365e-01,\n'
 '        -1.38337040e+00,  2.92961597e+00,  1.35630631e+00,\n'
 '        -2.36908007e+00, -1.55735791e+00, -1.42671299e+00,\n'
 '        -9.66151118e-01, -2.91667652e+00, -1.91743636e+00,\n'
 '         1.34540820e+00,  2.01987386e-01, -1.72671044e+00,\n'
 '         3.74157190e-01, -1.47227597e+00, -1.75279832e+00,\n'
 '         1.77625179e+00,  7.30539083e-01, -1.12405348e+00,\n'
 '         3.57703376e+00,  1.66601908e+00, -1.93756080e+00,\n'
 '        -2.20285416e+00,  2.56575882e-01, -1.21874392e+00,\n'
 '        -1.41065314e-01,  2.04522657e+00, -1.55377340e+00,\n'
 '         6.04158163e-01, -3.29622698e+00,  8.70195866e-01,\n'
 '        -1.85542035e+00, -3.51809919e-01, -2.08019114e+00,\n'
 '        -2.00019765e+00, -6.74886763e-01,  2.82282662e+00,\n'
 '        -1.57306397e+00, -7.74664044e-01,  1.18683255e+00,\n'
 '         7.22757757e-01, -1.07635826e-01, -1.27847767e+00,\n'
 '         2.42314768e+00,  1.27125502e+00, -6.14584982e-01,\n'
 '         1.91579354e+00, -1.94284034e+00, -2.43435055e-01,\n'
 '         5.34450829e-01,  9.12567377e-01, -2.92535156e-01,\n'
 '         1.00348853e-01,  1.88075364e+00,  2.18588114e-03,\n'
 '        -4.01214647e+00,  3.67654705e+00, -8.89602363e-01,\n'
 '        -5.82856953e-01, -1.68358028e+00, -1.43180931e+00,\n'
 '         2.17728093e-01, -8.13567400e-01,  3.35369110e-01,\n'
 '         9.76935863e-01, -7.88264990e-01, -3.89000237e-01,\n'
 '        -1.64482284e+00, -1.37477446e+00,  2.79731131e+00,\n'
 '         8.15191388e-01,  1.83746100e-01, -1.27342135e-01,\n'
 '         6.73499703e-01, -3.29732537e+00,  4.44113076e-01,\n'
 '        -3.98395133e+00,  3.97175491e-01, -2.90954757e+00,\n'
 '        -2.96220493e+00,  2.55642343e+00,  1.00670636e-01,\n'
 '        -1.28560603e+00,  1.22519887e+00, -2.89116293e-01,\n'
 '         2.64739251e+00, -2.40608811e+00, -2.36052012e+00,\n'
 '         4.59253967e-01,  2.23976278e+00, -1.14170599e+00,\n'
 '         4.57305282e-01, -5.38426518e-01,  1.07755446e+00,\n'
 '        -6.57370090e-01, -3.08603525e-01, -1.11977351e+00,\n'
 '         2.19155621e+00,  2.30993724e+00,  1.13541675e+00,\n'
 '        -2.07557142e-01, -9.17374253e-01, -1.50166118e+00,\n'
 '         4.38098311e-02,  7.68576026e-01,  4.46145624e-01,\n'
 '         1.21330202e+00,  1.15949512e-01,  5.65922141e-01,\n'
 '         4.07859236e-01, -1.93044031e+00, -1.20257914e+00,\n'
 '         5.80834389e-01, -1.08555627e+00,  1.47113705e+00,\n'
 '        -6.89931661e-02, -3.17006499e-01, -1.19623840e+00,\n'
 '        -1.77667570e+00, -2.14717674e+00,  3.50585079e+00,\n'
 '        -8.72295946e-02, -1.44091845e-02, -7.89095879e-01,\n'
 '        -2.77559638e+00, -3.30019444e-02,  1.27102986e-01,\n'
 '        -2.14227819e+00, -2.59864497e+00, -7.08190858e-01,\n'
 '        -1.02838993e+00,  1.02203369e+00, -3.85403395e-01,\n'
 '        -1.72161293e+00, -1.60598898e+00, -5.31482339e-01,\n'
 '         6.06129527e-01,  7.09881067e-01, -1.62773943e+00,\n'
 '         3.26529950e-01, -4.87671256e-01,  1.15064776e+00,\n'
 '         2.70256102e-01,  2.38342857e+00, -2.20656574e-01,\n'
 '        -1.87395000e+00,  3.90400737e-01, -8.79226446e-01,\n'
 '        -4.62254733e-02,  2.45463300e+00,  1.57286096e+00,\n'
 '         1.64377773e+00, -1.58081138e+00,  7.93235064e-01,\n'
 '         6.96954012e-01,  1.95240483e-01, -4.10314918e-01,\n'
 '        -1.59457290e+00, -9.32356179e-01,  1.75846457e-01,\n'
 '         6.55565321e-01,  1.22997379e+00,  1.00385118e+00,\n'
 '        -5.18626690e-01,  5.90716124e-01,  1.22038376e+00,\n'
 '         1.37743306e+00, -1.85453683e-01, -4.52491522e-01,\n'
 '        -2.71013230e-01, -1.02640879e+00, -2.54082799e+00,\n'
 '        -2.73063093e-01,  3.41308892e-01,  1.14322281e+00,\n'
 '        -1.70044994e+00,  1.52796519e+00,  5.75450659e-01,\n'
 '        -2.42248440e+00,  1.02721751e-02, -4.00416899e+00,\n'
 '        -2.53572130e+00,  1.20172250e+00, -5.92203796e-01,\n'
 '         2.19586563e+00, -1.21504259e+00,  5.69312751e-01,\n'
 '         5.42291105e-02,  3.21577132e-01,  3.02533555e+00,\n'
 '         1.04164994e+00, -7.94047117e-01, -2.32993507e+00,\n'
 '        -1.20559394e+00, -4.22474652e-01, -1.81204843e+00,\n'
 '         7.66873181e-01,  1.87083125e+00, -2.55648315e-01,\n'
 '         1.43072486e+00, -2.53930315e-02,  3.24565262e-01,\n'
 '         1.33959198e+00, -3.07169437e-01, -6.59702599e-01,\n'
 '        -1.46220756e+00,  1.75697577e+00,  8.21301460e-01,\n'
 '        -2.60463190e+00, -9.12873745e-02,  5.89070082e-01,\n'
 '        -8.15571904e-01, -6.97605372e-01, -8.20997894e-01,\n'
 '         4.83263433e-01,  1.21220720e+00, -1.28401268e+00,\n'
 '         1.45114493e+00,  3.11997223e+00,  1.16447210e+00,\n'
 '        -2.06867290e+00, -1.36275625e+00,  4.46234465e-01,\n'
 '        -6.66999340e-01,  1.41325104e+00, -5.96520483e-01,\n'
 '         1.60062230e+00,  4.91879553e-01,  5.92558324e-01,\n'
 '        -4.03651953e-01, -2.95416188e+00,  1.49737740e+00,\n'
 '         1.52869153e+00, -1.47006869e+00,  1.40697932e+00,\n'
 '         1.28213298e+00, -5.93031466e-01,  2.48085761e+00,\n'
 '        -1.95075154e+00,  1.65014136e+00, -3.23511243e-01,\n'
 '        -2.69283205e-01, -2.79646778e+00, -1.70336211e+00,\n'
 '         1.48117864e+00, -5.63883722e-01,  5.21173000e-01,\n'
 '        -4.00083125e-01, -6.77520692e-01, -1.30702126e+00,\n'
 '        -2.47606087e+00, -3.27520490e+00,  2.56348014e+00,\n'
 '        -3.23649257e-01, -2.28872085e+00, -1.92802000e+00,\n'
 '         1.20854259e+00, -6.79614306e-01, -1.67037678e+00,\n'
 '        -1.12288976e+00,  2.53806376e+00,  2.25634337e+00,\n'
 '        -9.75874588e-02,  5.40374219e-01, -2.16926479e+00,\n'
 '         8.09994399e-01, -2.74093151e-01,  3.74925828e+00,\n'
 '        -2.05866861e+00, -4.17122722e-01,  1.76401377e+00,\n'
 '        -5.90439379e-01,  1.66787207e+00,  3.19953442e+00,\n'
 '         1.13808489e+00, -2.56252932e+00, -1.56051123e+00,\n'
 '        -1.14385748e+00, -1.02002358e+00, -1.96877789e+00,\n'
 '        -2.10816431e+00,  1.20633352e+00, -7.10331559e-01,\n'
 '         1.41417909e+00,  8.49552035e-01,  1.39997113e+00,\n'
 '         2.07268572e+00,  1.81965566e+00, -2.25428864e-01,\n'
 '         1.56042302e+00, -1.77685261e-01,  9.71341670e-01,\n'
 '         1.17446914e-01, -2.55310535e-02, -6.70495331e-01,\n'
 '         2.16340828e+00,  1.21919727e+00,  1.96190155e+00,\n'
 '        -1.66086495e+00, -1.24461606e-01,  2.16761515e-01,\n'
 '        -8.64194095e-01, -2.69242048e-01,  5.40230274e-01,\n'
 '         8.01036596e-01, -2.09935474e+00, -4.56921399e-01,\n'
 '        -8.35778236e-01, -1.31995535e+00, -1.73785782e+00,\n'
 '        -2.25787386e-02, -6.93170488e-01, -1.58150172e+00,\n'
 '         2.43656188e-01,  5.43989003e-01,  1.49071705e+00,\n'
 '         1.07111597e+00,  1.35745812e+00,  1.91238678e+00,\n'
 '         1.71492648e+00, -9.91118908e-01, -4.57567632e-01,\n'
 '         1.13473542e-01,  5.18216014e-01,  1.66872335e+00,\n'
 '         1.52934802e+00,  1.79187465e+00,  2.41662669e+00,\n'
 '        -2.06253856e-01,  1.83046973e+00,  2.47517943e+00,\n'
 '         1.03477788e+00,  4.55568135e-01, -9.46587264e-01,\n'
 '        -2.89797687e+00,  2.06761885e+00, -4.61459786e-01,\n'
 '        -1.25724435e+00, -8.91970992e-02, -1.86994290e+00,\n'
 '         1.90701771e+00,  2.09482610e-01, -7.44653106e-01,\n'
 '        -2.01343274e+00, -1.34011471e+00,  1.15701592e+00,\n'
 '         2.15822172e+00,  3.24751437e-02, -1.03129423e+00,\n'
 '        -1.56585216e+00,  2.74442673e-01,  2.92950153e+00,\n'
 '         9.99560654e-01,  7.46891677e-01, -1.68060207e+00,\n'
 '        -4.91031885e-01,  8.06875080e-02, -1.46544743e+00,\n'
 '        -1.08788204e+00, -1.31385350e+00,  1.93530226e+00,\n'
 '        -6.63578451e-01,  1.28844798e+00,  1.33949351e+00,\n'
 '        -4.50816453e-01, -2.52117324e+00, -1.53209913e+00,\n'
 '        -1.65308893e+00, -3.54209876e+00, -1.24533200e+00,\n'
 '        -1.23996526e-01,  3.34488094e-01,  7.59166479e-03,\n'
 '        -1.78554177e+00]])')
'test_inceptionnet | batch_shape is: [1]'
'test_inceptionnet | logits.shape is: ivy.Shape(1, 1000)'
'||'
'test_inceptionnet | indices_test | true_indices is: [258 270 279]'
'test_inceptionnet | indices_test | calc_indices is: [258 279 270]'
