'BasicConv2d | Test | input shape is: ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 128) | done 3/3'
'BasicConv2d | Test | Test Successfull!'
'||'
'InceptionAux | random_test_tensor shape is: ivy.Shape(1, 17, 17, 768)'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'InceptionAux | input shape is:ivy.Shape(1, 17, 17, 768)'
'InceptionAux | done 1/8, output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 128) | done 3/3'
'InceptionAux | done 2/8'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 1, 1, 768) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 1, 1, 768) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 1, 1, 768) | done 3/3'
'InceptionAux | done 3/8'
'InceptionAux | input shape to adaptive_avg_pool2d is:ivy.Shape(1, 1, 1, 768)'
('InceptionAux | permuted input shape to adaptive_avg_pool2d is:ivy.Shape(1, '
 '768, 1, 1)')
('InceptionAux | output shape from adaptive_avg_pool2d is:ivy.Shape(1, 768, 1, '
 '1)')
('InceptionAux | permuted output shape from adaptive_avg_pool2d '
 'is:ivy.Shape(1, 1, 1, 768)')
'InceptionAux | done 4/8'
'InceptionAux | done 5/8'
'InceptionAux | done 8/8'
'InceptionAux | Test Successfull!'
'random_test_tensor shape is: ivy.Shape(1, 35, 35, 192)'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'input shape is:ivy.Shape(1, 35, 35, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 35, 35, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 35, 35, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 35, 35, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 35, 35, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 35, 35, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 35, 35, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 35, 35, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 35, 35, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 35, 35, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 35, 35, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 35, 35, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 35, 35, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 35, 35, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 35, 35, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 35, 35, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 35, 35, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 35, 35, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 35, 35, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 35, 35, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 35, 35, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 35, 35, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 35, 35, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 35, 35, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 35, 35, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 35, 35, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 35, 35, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 35, 35, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 35, 35, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 35, 35, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 35, 35, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 35, 35, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 35, 35, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 35, 35, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 35, 35, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 35, 35, 32) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 35, 35, 32)'
'InceptionA | outputs 20/20'
'Test Successfull!'
'random_test_tensor shape is: ivy.Shape(1, 35, 35, 288)'
'layer 1/4 built'
'layer 2/4 built'
'layer 3/4 built'
'layer 4/4 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'input shape is:ivy.Shape(1, 35, 35, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 35, 35, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 17, 17, 384) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 17, 17, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 35, 35, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 35, 35, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 35, 35, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 35, 35, 64) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 35, 35, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 35, 35, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 35, 35, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 35, 35, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 35, 35, 96) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 35, 35, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 35, 35, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 17, 17, 96) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 17, 17, 96)'
'one 20/20, output shape is:ivy.Shape(1, 17, 17, 288)'
'one 20/20'
'Test Successfull!'
'random_test_tensor shape is: ivy.Shape(1, 17, 17, 768)'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'input shape is:ivy.Shape(1, 17, 17, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 17, 17, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 17, 17, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 17, 17, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 17, 17, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 17, 17, 128) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 17, 17, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 17, 17, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 17, 17, 128) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 17, 17, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 17, 17, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 17, 17, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 17, 17, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 17, 17, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 17, 17, 128) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 17, 17, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 17, 17, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 17, 17, 128) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 17, 17, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 17, 17, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 17, 17, 128) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 17, 17, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 17, 17, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 17, 17, 128) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 17, 17, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 17, 17, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 17, 17, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 17, 17, 192)'
'one 10/20, output shape is:ivy.Shape(1, 17, 17, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 17, 17, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 17, 17, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 17, 17, 192)'
'one 20/20'
'Test Successfull!'
'random_test_tensor shape is: ivy.Shape(1, 17, 17, 768)'
'layer 1/6 built'
'layer 2/6 built'
'layer 3/6 built'
'layer 4/6 built'
'layer 5/6 built'
'layer 6/6 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'input shape is:ivy.Shape(1, 17, 17, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 17, 17, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 17, 17, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 17, 17, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 17, 17, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 8, 8, 320) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 8, 8, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 17, 17, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 17, 17, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 17, 17, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 17, 17, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 17, 17, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 17, 17, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 17, 17, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 17, 17, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 17, 17, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 17, 17, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 8, 8, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 8, 8, 192)'
'one 7/20, output shape is:ivy.Shape(1, 8, 8, 768)'
'one 20/20'
'Test Successfull!'
'random_test_tensor shape is: ivy.Shape(1, 8, 8, 1280)'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'input shape is:ivy.Shape(1, 8, 8, 1280)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 8, 8, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 8, 8, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 8, 8, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 8, 8, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 8, 8, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 8, 8, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 8, 8, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 8, 8, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 8, 8, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 8, 8, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 8, 8, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 8, 8, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 8, 8, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 8, 8, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 8, 8, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 8, 8, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 8, 8, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 8, 8, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 8, 8, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 8, 8, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 8, 8, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 8, 8, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 8, 8, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 8, 8, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 8, 8, 192)'
'20/20'
'Test Successfull!'
'test_inceptionnet | device is: cpu'
'test_inceptionnet | fw is: numpy'
'test_inceptionnet | load_weights is: False'
'InceptionV3 | build | layer 1/22 built'
'InceptionV3 | build | layer 2/22 built'
'layer 3/22 built'
'InceptionV3 | build | layer 4/22 built'
'InceptionV3 | build | layer 5/22 built'
'InceptionV3 | build | layer 6/22 built'
'InceptionV3 | build | layer 7/22 built'
'InceptionV3 | build | layer 8/22 built'
'InceptionV3 | build | layer 9/22 built'
'InceptionV3 | build | layer 10/22 built'
'InceptionV3 | build | layer 11/22 built'
'InceptionV3 | build | layer 12/22 built'
'InceptionV3 | build | layer 13/22 built'
'InceptionV3 | build | layer 14/22 built'
'InceptionV3 | build | layer 15/22 built'
'InceptionV3 | build | layer 17/22 built'
'InceptionV3 | build | layer 18/22 built'
'InceptionV3 | build | layer 19/22 built'
'InceptionV3 | build | layer 20/22 built'
'InceptionV3 | build | layer 21/22 built'
'InceptionV3 | build | layer 22/22 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/4 built'
'layer 2/4 built'
'layer 3/4 built'
'layer 4/4 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/6 built'
'layer 2/6 built'
'layer 3/6 built'
'layer 4/6 built'
'layer 5/6 built'
'layer 6/6 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'inceptionNet_v3 | building InceptionV3 model | done 1/3'
'InceptionV3 | forward | input data_format is:NHWC | done 1/27'
'InceptionV3 | forward | data_format is going to be used is:NHWC | done 1/27'
'InceptionV3 | forward | input shape is:ivy.Shape(1, 224, 224, 3) | done 1/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 224, 224, 3) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 111, 111, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 111, 111, 32) | done 2/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 111, 111, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 32) | done 3/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 109, 109, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 64) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 64) | done 4/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 54, 54, 64) | done 5/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 54, 54, 80) | done 3/3'
'InceptionV3 | forward | is:ivy.Shape(1, 54, 54, 80) | done 6/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 80) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 52, 52, 192) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 52, 52, 192) | done 7/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 192) | done 8/27'
'input shape is:ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 32) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 32)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 25, 25, 256) | done 9/27'
'input shape is:ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 10/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 11/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 384) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 96) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 96)'
'one 20/20, output shape is:ivy.Shape(1, 12, 12, 288)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 12/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 12, 12, 768) | done 13/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 14/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 15/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 16/27'
'v3 16/27, output shape is:ivy.Shape(1, 12, 12, 768)'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 5, 5, 192)'
'one 7/20, output shape is:ivy.Shape(1, 5, 5, 768)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 1280) | done 17/27'
'input shape is:ivy.Shape(1, 5, 5, 1280)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 18/27'
'input shape is:ivy.Shape(1, 5, 5, 2048)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 19/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 20/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 5, 5) | done 21/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 1, 1) | done 22/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 27/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 24/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 25/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048) | done 26/27'
'InceptionV3 | forward | fc | done 27/27'
('test_inceptionnet | logits is: ivy.array([[-2.03690688e+05,  '
 '3.33609812e+05,  1.93169203e+05,\n'
 '         8.30093625e+05,  7.21999375e+05,  3.44274938e+05,\n'
 '        -1.15878656e+05, -3.09236938e+05, -8.58450125e+05,\n'
 '         1.35935375e+05, -4.17102719e+05, -6.94198688e+05,\n'
 '        -5.79127875e+05,  3.40805750e+05,  3.07628688e+05,\n'
 '        -1.29722188e+05,  7.64606438e+05,  5.04377938e+05,\n'
 '        -3.86779000e+05,  3.51329375e+05, -2.68402312e+05,\n'
 '         5.09294562e+05,  3.63595438e+05,  1.13498225e+06,\n'
 '         5.21865938e+05,  6.12691062e+05,  2.73024156e+05,\n'
 '         1.00472523e+05, -1.04222875e+05, -7.57259625e+05,\n'
 '         3.31673359e+04,  1.06726650e+06, -2.90239031e+05,\n'
 '        -6.75279500e+05,  4.09263781e+05,  1.51809188e+05,\n'
 '        -3.37796750e+05, -5.34924500e+05,  4.57878219e+05,\n'
 '         3.66043312e+05,  1.62346562e+05, -9.83889688e+04,\n'
 '         6.39291062e+05, -2.30137781e+05, -6.97692688e+05,\n'
 '         2.53913844e+05, -5.00747125e+05, -3.14199812e+05,\n'
 '        -4.70004688e+05, -1.79876250e+04,  8.09581375e+05,\n'
 '         1.18217000e+06,  3.42829344e+05, -4.81613469e+05,\n'
 '         4.30939500e+05,  7.05993625e+05, -2.25084656e+05,\n'
 '        -1.52838312e+05,  7.34073688e+05, -3.37734250e+05,\n'
 '         4.92272312e+05, -6.17081250e+05, -1.79754250e+05,\n'
 '        -2.72423375e+05,  1.98462188e+05,  7.28650250e+05,\n'
 '        -2.40993250e+05, -2.67410594e+05, -1.87400109e+05,\n'
 '        -9.61447000e+05,  6.38272938e+05,  8.69184375e+04,\n'
 '         5.11867375e+05, -4.03463938e+05, -6.04894625e+05,\n'
 '        -9.21831719e+04,  1.84219125e+05, -1.02189838e+06,\n'
 '        -8.88442000e+05,  8.84805688e+05,  1.12205867e+05,\n'
 '         8.28295000e+05,  1.34701925e+06,  5.91485188e+05,\n'
 '         4.33716719e+05,  3.25140625e+05,  4.17954469e+05,\n'
 '        -6.20220250e+05,  1.80618859e+05, -3.93025312e+05,\n'
 '         9.89386875e+04,  5.34358625e+05,  4.00135219e+05,\n'
 '        -2.45804250e+05,  7.18138500e+05, -3.08648688e+05,\n'
 '        -3.97011656e+05, -5.73770062e+05,  5.36767625e+05,\n'
 '         2.66471188e+05,  5.85474750e+05, -5.00850906e+05,\n'
 '         7.27894938e+05, -1.28018438e+06,  2.13971938e+05,\n'
 '        -4.11004062e+05,  3.33219562e+05,  3.53870375e+05,\n'
 '        -1.88237562e+05,  3.28574094e+05,  9.22405375e+05,\n'
 '        -2.57462938e+05, -1.05393900e+06, -6.15688250e+05,\n'
 '        -3.69745156e+05, -4.27006375e+05, -5.33711750e+05,\n'
 '         1.40698562e+05, -7.71548250e+05,  5.07986188e+05,\n'
 '        -3.88647406e+05, -2.55707609e+05, -1.15875469e+04,\n'
 '        -2.95879938e+05, -5.79071688e+05, -8.62254500e+05,\n'
 '         6.27404000e+05, -5.63580688e+05,  1.10685000e+04,\n'
 '        -2.84569344e+05, -1.95022188e+05,  1.01870852e+05,\n'
 '         1.17006641e+04, -2.74641688e+05,  1.36526612e+06,\n'
 '         8.72975625e+04,  2.52417797e+05,  1.56088891e+05,\n'
 '        -5.61985000e+04,  1.76668906e+05, -1.03470438e+05,\n'
 '         3.73972875e+05,  3.14466438e+05, -2.76330188e+05,\n'
 '        -4.74725750e+05,  3.32163438e+05,  3.90871812e+05,\n'
 '         8.02953312e+05, -2.85272312e+05, -8.07804312e+05,\n'
 '        -1.30687688e+05, -6.52988750e+05, -2.95307344e+05,\n'
 '        -8.20087438e+05, -8.17288125e+04, -5.98934938e+05,\n'
 '        -9.82057344e+04,  2.90938688e+05, -4.94914219e+04,\n'
 '        -3.28427312e+05, -5.19978844e+05, -7.25995375e+05,\n'
 '        -2.57222000e+05,  4.09263469e+05,  6.40489500e+05,\n'
 '        -1.59769531e+05, -8.95115625e+05,  8.93622625e+05,\n'
 '        -3.48531781e+05,  3.47490781e+05, -2.07079594e+05,\n'
 '        -1.35450500e+06,  4.03428375e+05,  3.90107125e+05,\n'
 '        -5.93594875e+05, -2.09458562e+05,  5.54846750e+05,\n'
 '         2.89330938e+05, -5.22700469e+05, -1.19468469e+05,\n'
 '        -3.27167812e+05,  1.04977325e+06, -2.94444250e+05,\n'
 '        -4.41167688e+05, -2.73419844e+05, -6.72716500e+05,\n'
 '        -5.06837938e+05, -1.00072812e+04,  6.85236094e+04,\n'
 '        -7.14995938e+05,  2.23991203e+05,  1.01972094e+06,\n'
 '         4.71048375e+05, -7.54486875e+04,  1.06622359e+05,\n'
 '         1.14851219e+05, -6.12511688e+05,  1.40481488e+06,\n'
 '         5.64483000e+05,  2.66324688e+05, -8.17095000e+05,\n'
 '         8.94230562e+05,  3.37549938e+05,  4.84631312e+05,\n'
 '        -6.56182688e+05, -9.51549000e+05,  3.12565500e+05,\n'
 '         2.06863125e+04, -1.38127562e+05, -6.18785938e+05,\n'
 '         5.03538875e+05, -1.70242781e+05,  3.93998094e+05,\n'
 '         2.55138188e+05,  1.86997650e+06, -2.85673969e+05,\n'
 '        -2.69183062e+05, -3.30672312e+05,  2.20079750e+05,\n'
 '         3.00862156e+05,  1.29239969e+05, -5.53876000e+05,\n'
 '         4.24582344e+04, -8.41493438e+05,  4.43929594e+05,\n'
 '        -3.43313500e+05, -4.83709156e+05, -7.19211562e+05,\n'
 '         1.68544219e+05,  6.43150312e+04,  2.90313750e+04,\n'
 '        -7.49910875e+05,  1.63902812e+05, -6.86858625e+05,\n'
 '        -1.09901516e+05, -2.93720656e+05, -2.73150531e+05,\n'
 '         1.94634297e+05, -1.31450500e+05,  9.49211250e+04,\n'
 '         8.94900438e+05,  2.26496719e+04, -2.63433531e+05,\n'
 '        -8.71141016e+04, -5.49488812e+05, -6.78806875e+05,\n'
 '         8.93460062e+05,  6.60511188e+05,  5.98042000e+05,\n'
 '         1.02644906e+05,  5.05178531e+05, -2.14326875e+04,\n'
 '         1.05327750e+05, -1.61674062e+05, -1.29710375e+05,\n'
 '        -2.57203578e+05, -3.51859375e+03,  5.09375000e+04,\n'
 '        -4.86415000e+05,  1.45436156e+05, -5.50591438e+05,\n'
 '         9.34169312e+05,  6.14277750e+05,  5.89004000e+05,\n'
 '        -2.65742656e+05, -6.96475438e+05,  6.95010500e+05,\n'
 '         1.88196641e+05,  8.78785625e+05,  8.50011875e+04,\n'
 '        -4.70815250e+05, -6.58430875e+05, -8.44907375e+05,\n'
 '         3.22638188e+05,  8.82645375e+05, -8.64894000e+05,\n'
 '        -5.66932250e+05, -4.42722875e+05, -8.20310438e+05,\n'
 '        -2.12347578e+05, -2.58182875e+05, -1.87821344e+05,\n'
 '         5.79672125e+05,  4.27079250e+05,  8.81952500e+04,\n'
 '        -1.33570719e+05, -5.15620562e+05,  7.31477875e+05,\n'
 '         4.42095000e+04,  1.93493188e+05,  9.34089062e+04,\n'
 '        -2.58523891e+05, -2.89593562e+05, -3.64656812e+05,\n'
 '         2.00129688e+04,  2.85677125e+05, -3.17785250e+05,\n'
 '        -4.41065062e+05, -5.59754375e+05,  3.08338312e+05,\n'
 '        -1.18986375e+05, -4.88829094e+05,  2.68644969e+05,\n'
 '        -8.44112250e+05, -1.97912266e+05,  8.06749188e+05,\n'
 '         7.85202344e+04, -8.86324062e+05, -1.28558712e+06,\n'
 '        -5.65131625e+05, -1.50784156e+05,  1.97137453e+05,\n'
 '        -1.24139562e+05,  9.15652312e+05, -1.68883531e+05,\n'
 '         1.59664625e+05, -9.41071500e+05, -1.14590781e+04,\n'
 '        -1.27423075e+06,  6.20782266e+04, -4.83519500e+05,\n'
 '         4.12024000e+05, -3.14523812e+05, -5.03119094e+05,\n'
 '         6.41582375e+05, -4.97724125e+05,  6.06355438e+05,\n'
 '        -2.44760031e+05,  1.63063438e+04,  5.63657000e+05,\n'
 '        -1.39552125e+05,  6.16207875e+05,  5.24514812e+05,\n'
 '        -8.05645312e+04,  7.19195750e+05,  8.63495000e+04,\n'
 '         6.42465312e+05, -4.16358750e+04, -3.88023375e+05,\n'
 '         7.25552062e+05,  1.65819562e+05, -5.38000125e+05,\n'
 '        -2.70460750e+05,  2.03041297e+05, -7.15549875e+05,\n'
 '         3.06823969e+05, -6.00710688e+05, -6.34918250e+05,\n'
 '         8.54445938e+04,  4.64982062e+05,  3.53586500e+05,\n'
 '         1.26272112e+06,  4.69135125e+05,  1.90917234e+05,\n'
 '         8.70721875e+03,  2.19480516e+05, -2.99635000e+05,\n'
 '        -6.30568125e+04, -3.48027969e+05, -3.41514594e+05,\n'
 '        -9.61050000e+04,  6.94666875e+05, -2.12558625e+05,\n'
 '        -2.37753496e+04, -5.39219750e+05, -1.32976438e+05,\n'
 '         7.54882125e+05, -1.48787891e+05,  1.14006875e+06,\n'
 '        -8.56251812e+05, -4.92664062e+03, -3.87731438e+05,\n'
 '         2.97357188e+05, -2.75014719e+05,  1.14871462e+06,\n'
 '         5.37577312e+05, -8.08370500e+05,  9.08436000e+05,\n'
 '         4.09423719e+05,  5.20094094e+05, -1.26333650e+06,\n'
 '        -3.39341062e+05, -3.92861438e+05,  1.69794188e+05,\n'
 '        -4.69508188e+05,  3.46348188e+05,  1.05820188e+05,\n'
 '         5.67210188e+05, -5.74257375e+05, -1.12176200e+06,\n'
 '        -1.40726575e+06, -5.55532188e+05,  8.26533500e+05,\n'
 '         9.44445375e+05, -1.17245234e+05, -1.04360325e+06,\n'
 '        -4.05763375e+05,  5.25503250e+05, -4.70693969e+05,\n'
 '        -3.35503000e+05,  1.18039875e+06, -1.21662375e+05,\n'
 '        -1.76202938e+05, -1.94296953e+05,  5.30590500e+05,\n'
 '         5.99589250e+05,  9.11991562e+05, -1.10551188e+05,\n'
 '         4.55018375e+05,  3.98750281e+05,  6.75759500e+05,\n'
 '        -6.48236062e+05,  2.92299062e+05,  2.76380062e+05,\n'
 '         1.85812156e+05,  4.33878062e+05, -2.98209688e+04,\n'
 '        -9.48840781e+04, -3.66373562e+05, -8.77029000e+05,\n'
 '        -1.21320375e+06, -2.66445625e+05,  4.66763531e+05,\n'
 '        -1.73294781e+05,  3.81438500e+05,  1.92357047e+05,\n'
 '         1.39961350e+06, -3.53132281e+05,  8.70065000e+04,\n'
 '         2.09843641e+05, -6.42275312e+04,  1.55394375e+04,\n'
 '        -3.11203125e+05, -7.51806875e+05,  7.54805078e+04,\n'
 '         2.93067812e+04,  6.85449125e+05, -6.66520781e+04,\n'
 '         3.13875156e+05, -5.76174750e+05, -3.32334375e+05,\n'
 '        -7.86001250e+05, -2.76316125e+05,  3.46693094e+05,\n'
 '        -8.20622656e+04, -3.15975656e+05, -3.67953688e+05,\n'
 '         5.75347000e+05, -6.14085500e+05, -8.14830938e+05,\n'
 '         2.74434406e+05,  3.03339875e+05, -1.74479672e+05,\n'
 '        -4.62971719e+04, -7.76410562e+05, -1.75761438e+05,\n'
 '        -4.30136938e+05, -3.81293750e+05, -4.44785500e+05,\n'
 '         2.61229984e+05, -7.44157188e+05, -4.61002562e+05,\n'
 '        -5.94853375e+05,  4.75249844e+04, -1.25536156e+05,\n'
 '        -1.53190375e+05,  5.29051125e+05,  7.66815938e+04,\n'
 '        -5.77760000e+05,  1.61864219e+05,  6.23476094e+04,\n'
 '         9.50535688e+05,  1.73866828e+05, -2.61580625e+04,\n'
 '         2.04845844e+05, -8.85550312e+05,  8.99511562e+05,\n'
 '         2.84174969e+05,  1.20892938e+05,  5.81122227e+04,\n'
 '         4.67246281e+05,  5.22768750e+05, -3.55536719e+04,\n'
 '        -1.67610312e+04, -5.09054844e+04, -1.44091406e+05,\n'
 '         4.10030062e+05, -6.24604375e+04,  1.65115844e+05,\n'
 '        -2.73270062e+05, -6.18223250e+05, -1.21051012e+06,\n'
 '         7.42576562e+05,  1.60252031e+05,  3.91784812e+05,\n'
 '         5.60102125e+05, -3.69967891e+04,  6.85126188e+05,\n'
 '        -1.00232188e+05,  9.18116000e+05,  6.69632250e+05,\n'
 '         1.30013734e+05,  9.16084500e+05, -5.21428906e+05,\n'
 '        -3.67365594e+05, -3.86621031e+05, -5.82017875e+05,\n'
 '         5.47035875e+05,  3.28409594e+05,  4.78341906e+05,\n'
 '        -4.67612625e+05, -2.75145656e+05, -3.09888250e+05,\n'
 '         5.21614500e+05, -1.00544831e+06, -4.43246562e+05,\n'
 '         5.13397500e+05, -1.11013138e+06, -7.92718750e+04,\n'
 '        -5.91014875e+05, -4.96480406e+05, -4.30326719e+05,\n'
 '         4.89544438e+05, -3.85253031e+05, -1.22872828e+05,\n'
 '        -7.86020750e+05, -5.57437812e+04, -4.09265344e+05,\n'
 '         1.11061297e+05,  4.01013688e+05,  2.98386406e+05,\n'
 '         5.70440125e+05,  9.17171938e+05,  1.60489438e+05,\n'
 '        -1.24378075e+06, -8.25192750e+05,  1.12434888e+06,\n'
 '         3.67889812e+05, -1.33943594e+05,  4.85624125e+05,\n'
 '         4.80318688e+05,  1.11197156e+05, -3.97374281e+05,\n'
 '         4.16432750e+05, -2.03381219e+05, -3.79711750e+05,\n'
 '         6.92556500e+05,  2.19050766e+05, -2.10294812e+05,\n'
 '        -4.90106188e+05,  2.55787594e+05,  2.01883219e+05,\n'
 '         3.73927156e+05, -6.15387812e+05,  3.84875594e+05,\n'
 '        -1.01350588e+06,  3.66570688e+05,  9.87710938e+05,\n'
 '        -1.57191188e+05,  2.51932844e+05,  2.82740531e+05,\n'
 '         4.85945625e+05,  3.80440875e+05, -2.42730609e+05,\n'
 '         3.91191656e+05, -2.66535781e+05,  2.39477688e+05,\n'
 '        -9.34692375e+05,  9.76645812e+05, -5.60578188e+05,\n'
 '         3.91682625e+05,  3.80122375e+05, -1.00105625e+04,\n'
 '         6.31349250e+05, -2.49477969e+05, -8.08770312e+05,\n'
 '        -1.89482500e+05,  4.75519750e+05, -6.52360938e+05,\n'
 '         5.40790875e+05, -1.36367812e+05,  3.20408688e+05,\n'
 '         3.52060000e+04, -7.32177750e+05,  6.87761438e+05,\n'
 '        -3.63284438e+05, -5.41194625e+05, -1.14725406e+05,\n'
 '        -8.02824438e+05,  9.23496812e+05,  6.38412969e+04,\n'
 '         2.76379625e+05,  9.17436250e+04,  7.01949562e+05,\n'
 '         1.97098406e+05,  6.85603250e+05, -2.15111266e+05,\n'
 '         3.65390688e+05, -2.28541297e+05, -1.24651600e+06,\n'
 '         2.28172703e+05,  4.14952562e+05,  5.68971562e+04,\n'
 '         2.39516312e+05,  6.73618938e+05,  4.68167875e+05,\n'
 '         2.13064000e+05,  1.35600100e+06, -1.46445078e+04,\n'
 '        -6.71717125e+05,  1.69823328e+05,  9.34577750e+05,\n'
 '        -7.82705312e+04, -2.15983875e+05, -3.59576531e+05,\n'
 '        -4.07796406e+05, -2.59099250e+05,  7.81723812e+05,\n'
 '        -1.82373656e+05, -2.64435438e+05, -5.79715188e+05,\n'
 '         8.64797938e+05, -1.21762734e+04, -7.15188750e+05,\n'
 '         7.08847812e+05,  9.90261750e+05,  8.45291250e+04,\n'
 '        -1.27980594e+05, -9.15059938e+05,  2.48042641e+05,\n'
 '         2.69265406e+05, -5.70787656e+04, -1.20873219e+05,\n'
 '        -3.60048250e+05, -8.71165375e+05, -1.20813025e+06,\n'
 '        -1.16805688e+05, -2.15795781e+05,  1.43765062e+05,\n'
 '         1.27245312e+04, -5.91449125e+05, -3.51371625e+05,\n'
 '         4.73665906e+05,  5.09909812e+05,  6.14577148e+04,\n'
 '         3.29336000e+05,  2.10155938e+05, -5.26915938e+05,\n'
 '         9.47079688e+04,  1.03115438e+06,  2.95690031e+05,\n'
 '         1.14307078e+05,  2.26353719e+05,  1.17523725e+06,\n'
 '         1.67390062e+05, -3.16655000e+05, -4.84098344e+05,\n'
 '         3.22702438e+05, -1.89364875e+05,  6.64588125e+05,\n'
 '         9.05170062e+05,  1.64509500e+06,  6.24437000e+05,\n'
 '         8.25843375e+05,  1.00125650e+06,  3.24366500e+05,\n'
 '         2.92759000e+05, -1.03574175e+06, -5.90816000e+05,\n'
 '        -3.35858562e+05, -5.98251500e+05,  5.19296469e+05,\n'
 '        -1.79595488e+06, -9.49423438e+04, -5.04725312e+04,\n'
 '        -6.98002500e+05, -3.05395562e+05,  1.81505312e+04,\n'
 '         1.89682859e+05, -8.57522812e+04, -1.22272312e+05,\n'
 '        -4.56192594e+05,  9.16181188e+05,  5.42935188e+05,\n'
 '         3.39559750e+05, -2.90282656e+05, -3.92383875e+05,\n'
 '        -3.52199031e+05,  3.76482656e+05, -5.09664625e+05,\n'
 '        -5.26061875e+05,  3.08708531e+05,  1.00810450e+06,\n'
 '         1.11032800e+06,  2.66272688e+05,  1.36391469e+05,\n'
 '         4.17581375e+05, -5.97753500e+05,  1.30644250e+06,\n'
 '         6.73851188e+05,  8.08529062e+05,  2.42274125e+05,\n'
 '         4.65732062e+05,  4.86180781e+05, -2.44634438e+05,\n'
 '         4.75327344e+05,  1.49114062e+05,  2.07477359e+05,\n'
 '        -7.05538000e+05,  1.06367750e+05, -9.26839688e+04,\n'
 '        -3.45338406e+05, -5.42763688e+05,  2.66257156e+05,\n'
 '        -6.99033125e+04, -1.72805625e+05, -1.18275312e+04,\n'
 '        -2.57978469e+05,  9.15682656e+04, -3.40556438e+05,\n'
 '         3.43807062e+05, -3.17751500e+05,  5.97592062e+05,\n'
 '        -6.86446719e+04,  3.22464469e+05,  1.86297734e+05,\n'
 '        -6.90106750e+05, -7.61281875e+04,  1.75381281e+05,\n'
 '         5.41646062e+05, -1.92233094e+05,  4.43204688e+05,\n'
 '         5.80570938e+04, -1.03221344e+05,  1.12070516e+05,\n'
 '        -4.78038984e+04,  3.05302062e+05, -1.33966656e+05,\n'
 '         8.36680062e+05,  9.96356406e+04, -1.19096625e+05,\n'
 '         2.95727531e+05,  1.06654550e+06,  7.79000312e+04,\n'
 '         2.72692094e+05,  1.02580625e+06,  5.79898438e+05,\n'
 '         5.25501250e+05, -5.98448500e+05, -1.72319609e+05,\n'
 '         7.84998125e+04,  9.68325000e+03,  6.45080000e+05,\n'
 '        -4.48270562e+05, -4.93018000e+05,  2.00727188e+04,\n'
 '         2.54898422e+05,  1.26883297e+05,  5.90773500e+05,\n'
 '        -4.47009938e+05, -5.71256375e+05,  6.95721875e+03,\n'
 '         4.25957594e+05, -2.17144875e+05,  4.21071812e+05,\n'
 '         4.96129531e+04,  1.19683450e+06, -7.08121688e+05,\n'
 '         1.35641438e+05, -6.24193688e+05,  1.99118797e+05,\n'
 '        -5.78762375e+05,  5.56196375e+05, -1.30778312e+06,\n'
 '         6.03280750e+05,  2.20055484e+05, -1.41529375e+05,\n'
 '         3.96343938e+05, -4.69063844e+05,  1.00819656e+06,\n'
 '         1.33081775e+06,  1.96622609e+05,  4.20527250e+05,\n'
 '         1.38276025e+06, -9.63186562e+05,  6.34921625e+05,\n'
 '        -5.06536438e+05, -1.77524922e+04, -2.79587344e+05,\n'
 '        -1.82496766e+05,  1.95167812e+05, -4.22194281e+05,\n'
 '        -3.24234844e+05,  4.66144875e+05, -5.65604750e+05,\n'
 '        -1.73824781e+05,  6.95272000e+05,  3.23663656e+05,\n'
 '        -4.01448344e+05, -3.74677625e+05, -1.20505031e+05,\n'
 '        -2.08138312e+05, -5.41259250e+05,  1.54784062e+05,\n'
 '         1.38929188e+05, -2.39311188e+05,  2.41920281e+05,\n'
 '         7.61194188e+05, -3.78915500e+05,  7.07603750e+05,\n'
 '         4.04242281e+05,  5.52061375e+05,  1.08063400e+06,\n'
 '         6.63214688e+05,  4.08506312e+05,  6.75154875e+05,\n'
 '         7.80857812e+04, -5.85025062e+05, -2.51289328e+05,\n'
 '         4.89284062e+05,  4.71746438e+05, -5.35307125e+05,\n'
 '        -5.80242688e+05, -4.31960688e+05, -1.32671125e+06,\n'
 '        -4.29710000e+05, -8.28124312e+05,  4.32301312e+05,\n'
 '        -4.36788000e+05, -2.16144094e+05,  4.61791875e+05,\n'
 '         4.07600219e+05, -2.08672250e+05, -3.95684375e+05,\n'
 '         3.60971781e+05,  4.28883000e+05, -6.75553688e+05,\n'
 '         3.87766656e+05, -3.63258000e+05,  2.90021438e+05,\n'
 '         7.99284625e+05,  1.69422594e+05,  2.17222688e+05,\n'
 '        -3.65811969e+05,  1.09424500e+05,  3.55621875e+05,\n'
 '        -4.17971625e+05, -1.22638062e+05,  5.88848375e+05,\n'
 '        -3.13768406e+05, -2.98889938e+05, -9.69694688e+04,\n'
 '         7.72983047e+04,  3.08074375e+05, -8.25293500e+05,\n'
 '        -5.15556344e+05,  8.69430625e+04, -4.16728750e+05,\n'
 '         7.88959125e+05, -2.99445188e+05,  8.93872438e+05,\n'
 '        -1.17643350e+06, -2.91336031e+05,  2.18314375e+04,\n'
 '         2.75164938e+05, -4.99114609e+04, -7.75313594e+04,\n'
 '        -4.17461719e+05, -2.46325375e+05,  4.20938344e+05,\n'
 '        -2.28759438e+05, -5.92233562e+05,  2.26685484e+05,\n'
 '        -5.12633719e+05, -4.45414688e+05,  1.08720562e+05,\n'
 '        -3.67996969e+05, -3.61223625e+05,  8.76193312e+05,\n'
 '         1.98265156e+05, -2.51736062e+05,  2.42646219e+05,\n'
 '        -6.97386375e+05, -6.56792625e+05, -1.09112383e+05,\n'
 '        -7.38633750e+05,  2.52607047e+05,  3.95541531e+05,\n'
 '         2.69064062e+05,  4.31253062e+05,  4.35799312e+05,\n'
 '        -1.82368094e+05,  4.28770312e+04,  6.56347031e+04,\n'
 '        -9.24224375e+04, -6.24760188e+05, -5.10809562e+05,\n'
 '         9.13075812e+05,  9.94028938e+05,  1.89833531e+05,\n'
 '        -2.42190531e+05,  7.57282500e+05, -9.26890375e+05,\n'
 '         1.87476688e+05, -1.12326391e+05, -4.97003062e+05,\n'
 '        -5.42625469e+04,  1.36451906e+05, -6.17681125e+05,\n'
 '        -8.46481312e+05, -2.97510469e+04, -5.45855000e+05,\n'
 '        -4.34740219e+05,  6.38198312e+05, -7.16903375e+05,\n'
 '        -3.14530625e+04,  6.37076125e+05, -2.37006219e+05,\n'
 '         4.94873062e+05,  5.06556156e+05, -3.51066500e+05,\n'
 '        -5.91096250e+05, -6.09969375e+04,  3.45941344e+05,\n'
 '         3.93312500e+02,  5.12420625e+05,  7.73044375e+04,\n'
 '        -4.41350938e+05, -4.29033406e+05, -6.67133750e+05,\n'
 '        -2.65354125e+05, -4.87615938e+05, -9.85306375e+05,\n'
 '         1.24712188e+04,  4.33658344e+05,  7.89285000e+04,\n'
 '         4.93968531e+05, -1.34503047e+05, -3.79851562e+04,\n'
 '        -1.04524250e+05,  5.98329609e+04,  2.89642781e+05,\n'
 '         5.47925250e+05, -1.12313781e+05, -4.51150875e+05,\n'
 '         2.11246844e+05, -8.49806500e+05,  6.63853562e+05,\n'
 '         4.90760719e+05,  1.26567828e+05,  7.40851125e+05,\n'
 '        -1.54591638e+06, -3.90221719e+05, -1.00271562e+06,\n'
 '         2.30597938e+05,  1.82769781e+05, -5.22692281e+05,\n'
 '        -4.72198438e+05,  3.97769500e+05, -4.39094406e+05,\n'
 '         2.98301438e+05, -2.15796250e+05, -4.12757688e+05,\n'
 '        -7.30416938e+05,  7.40893188e+05, -5.85483688e+05,\n'
 '         1.05794650e+06, -5.20120500e+05,  7.54538203e+04,\n'
 '         4.31601875e+04,  1.07531750e+06,  9.86474375e+04,\n'
 '         9.17023125e+04,  4.77362531e+05,  2.43162531e+05,\n'
 '         2.99714219e+04, -9.57507625e+05, -3.42171750e+05,\n'
 '         9.66039312e+05, -7.93692750e+05,  3.66616375e+05,\n'
 '        -1.22025825e+06, -6.09176750e+05, -3.72759875e+05,\n'
 '        -8.01984375e+03, -1.54369400e+06,  1.16368656e+05,\n'
 '        -6.34569219e+04, -7.05607438e+05,  2.18911094e+05,\n'
 '         1.00905938e+05, -1.11073900e+06,  3.08159312e+05,\n'
 '         1.99209766e+05,  4.03547875e+05,  4.94734156e+05,\n'
 '         5.15390938e+04, -1.71666578e+05,  9.18687438e+05,\n'
 '         1.21104781e+05]])')
'test_inceptionnet | batch_shape is: [1]'
'test_inceptionnet | logits.shape is: ivy.Shape(1, 1000)'
'||'
'test_inceptionnet | device is: cpu'
'test_inceptionnet | fw is: numpy'
'test_inceptionnet | load_weights is: True'
'InceptionV3 | build | layer 1/22 built'
'InceptionV3 | build | layer 2/22 built'
'layer 3/22 built'
'InceptionV3 | build | layer 4/22 built'
'InceptionV3 | build | layer 5/22 built'
'InceptionV3 | build | layer 6/22 built'
'InceptionV3 | build | layer 7/22 built'
'InceptionV3 | build | layer 8/22 built'
'InceptionV3 | build | layer 9/22 built'
'InceptionV3 | build | layer 10/22 built'
'InceptionV3 | build | layer 11/22 built'
'InceptionV3 | build | layer 12/22 built'
'InceptionV3 | build | layer 13/22 built'
'InceptionV3 | build | layer 14/22 built'
'InceptionV3 | build | layer 15/22 built'
'InceptionV3 | build | layer 17/22 built'
'InceptionV3 | build | layer 18/22 built'
'InceptionV3 | build | layer 19/22 built'
'InceptionV3 | build | layer 20/22 built'
'InceptionV3 | build | layer 21/22 built'
'InceptionV3 | build | layer 22/22 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/4 built'
'layer 2/4 built'
'layer 3/4 built'
'layer 4/4 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/6 built'
'layer 2/6 built'
'layer 3/6 built'
'layer 4/6 built'
'layer 5/6 built'
'layer 6/6 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'inceptionNet_v3 | building InceptionV3 model | done 1/3'
'inceptionNet_v3 | clearning pretrained weights | done 2/3'
'inceptionNet_v3 | loading pretrained weights | done 3/3'
'InceptionV3 | forward | input data_format is:NHWC | done 1/27'
'InceptionV3 | forward | data_format is going to be used is:NHWC | done 1/27'
'InceptionV3 | forward | input shape is:ivy.Shape(1, 224, 224, 3) | done 1/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 224, 224, 3) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 111, 111, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 111, 111, 32) | done 2/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 111, 111, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 32) | done 3/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 109, 109, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 64) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 64) | done 4/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 54, 54, 64) | done 5/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 54, 54, 80) | done 3/3'
'InceptionV3 | forward | is:ivy.Shape(1, 54, 54, 80) | done 6/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 80) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 52, 52, 192) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 52, 52, 192) | done 7/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 192) | done 8/27'
'input shape is:ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 32) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 32)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 25, 25, 256) | done 9/27'
'input shape is:ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 10/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 11/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 384) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 96) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 96)'
'one 20/20, output shape is:ivy.Shape(1, 12, 12, 288)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 12/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 12, 12, 768) | done 13/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 14/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 15/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 16/27'
'v3 16/27, output shape is:ivy.Shape(1, 12, 12, 768)'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 5, 5, 192)'
'one 7/20, output shape is:ivy.Shape(1, 5, 5, 768)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 1280) | done 17/27'
'input shape is:ivy.Shape(1, 5, 5, 1280)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 18/27'
'input shape is:ivy.Shape(1, 5, 5, 2048)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 19/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 20/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 5, 5) | done 21/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 1, 1) | done 22/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 27/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 24/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 25/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048) | done 26/27'
'InceptionV3 | forward | fc | done 27/27'
('test_inceptionnet | logits is: ivy.array([[-4.92045820e-01,  '
 '8.16249013e-01,  3.05822492e-01,\n'
 '         4.44224656e-01, -9.06346083e-01, -2.06293321e+00,\n'
 '         1.88441873e+00, -1.95546597e-01, -1.93248439e+00,\n'
 '        -4.01668978e+00, -9.25531447e-01, -5.87745845e-01,\n'
 '        -1.43593705e+00,  8.69729102e-01,  2.22726941e+00,\n'
 '         1.79153532e-01, -7.92335153e-01,  9.80178416e-02,\n'
 '         7.95733154e-01,  1.35055542e-01,  1.44552386e+00,\n'
 '         6.35075688e-01,  3.37332606e+00,  2.88523912e-01,\n'
 '         2.59274387e+00, -1.22755551e+00, -1.30883145e+00,\n'
 '        -4.60487694e-01, -8.54060054e-01, -2.34591818e+00,\n'
 '         1.05323196e-02,  7.29812861e-01, -3.29506517e-01,\n'
 '        -1.66962993e+00,  9.12253320e-01, -2.58298540e+00,\n'
 '         5.46399295e-01, -1.88513994e+00, -4.31556881e-01,\n'
 '         1.79150331e+00,  3.51256728e-01,  2.15584135e+00,\n'
 '        -9.30058837e-01,  8.88068080e-01, -7.40768790e-01,\n'
 '        -8.16847980e-02, -8.59076738e-01,  7.41935432e-01,\n'
 '        -5.97513139e-01, -1.42313182e+00, -4.60948572e-02,\n'
 '         5.04871368e-01,  4.79702175e-01, -1.87930238e+00,\n'
 '        -1.08547747e-01,  2.82530397e-01, -1.25659895e+00,\n'
 '        -7.94310451e-01, -5.22211909e-01, -1.73305345e+00,\n'
 '        -8.08795810e-01,  8.12661827e-01, -1.72025061e+00,\n'
 '        -1.89412546e+00, -6.28269613e-01, -5.47514200e-01,\n'
 '         6.51522756e-01,  1.68388319e+00,  1.97881532e+00,\n'
 '        -1.33330488e+00, -1.55371651e-02, -2.78192312e-01,\n'
 '        -1.12539172e+00, -1.43104005e+00, -1.09766471e+00,\n'
 '         5.86057424e-01, -1.29291391e+00, -3.24839205e-02,\n'
 '         5.70203304e-01,  2.62366486e+00,  1.87835813e-01,\n'
 '         2.56136084e+00,  4.73682016e-01,  1.55043602e+00,\n'
 '         1.13156390e+00, -1.27462053e+00, -4.87150550e-01,\n'
 '         2.23322094e-01,  2.73020434e+00,  6.77484751e-01,\n'
 '         2.31311560e+00,  2.62037492e+00,  5.36282361e-01,\n'
 '         4.59739447e-01,  4.63659704e-01, -6.29861474e-01,\n'
 '         2.94381213e+00, -1.28201091e+00, -1.94686103e+00,\n'
 '         1.35767996e+00,  1.00606155e+00,  1.15730429e+00,\n'
 '        -7.94100106e-01, -4.05864239e-01,  7.50231922e-01,\n'
 '        -2.17986315e-01, -1.07312977e+00, -7.74022579e-01,\n'
 '         6.62808836e-01,  1.58400071e+00, -3.96911442e-01,\n'
 '        -1.41611385e+00,  4.69257534e-02,  2.36827993e+00,\n'
 '         1.13345957e+00, -1.27808762e+00, -1.72678506e+00,\n'
 '        -3.43887806e-02, -1.90171492e+00, -6.15083650e-02,\n'
 '        -1.15475178e+00, -2.53733587e+00,  1.01907110e+00,\n'
 '         1.09150732e+00,  7.24644721e-01, -4.70366180e-01,\n'
 '        -8.81330729e-01,  2.26972675e+00,  4.84867215e-01,\n'
 '        -1.19387162e+00, -6.78508103e-01,  5.75704575e-01,\n'
 '         6.21964633e-01, -1.81374085e+00, -1.13316989e+00,\n'
 '         2.20089698e+00,  1.37271732e-01, -2.08499813e+00,\n'
 '        -1.86411715e+00, -2.46255517e+00, -2.51267004e+00,\n'
 '         1.05189824e+00, -2.08247948e+00, -9.16450620e-02,\n'
 '         2.44301295e+00, -2.71241099e-01,  2.78754067e+00,\n'
 '        -4.90046322e-01, -9.46955085e-01,  3.27396274e-01,\n'
 '        -1.21718073e+00, -5.94868898e-01,  3.38202214e+00,\n'
 '         5.14072299e-01,  9.14155006e-01, -2.45856595e+00,\n'
 '         4.00866985e-01,  5.04177856e+00, -1.64913785e+00,\n'
 '        -1.53008866e+00,  2.42096639e+00, -8.42313468e-01,\n'
 '        -2.52007890e+00, -2.84475178e-01, -3.17405492e-01,\n'
 '        -1.33233309e+00, -2.91144824e+00, -1.50145471e+00,\n'
 '        -1.00834203e+00,  1.98726702e+00,  2.78393078e+00,\n'
 '        -1.00013530e+00, -1.09802151e+00, -6.66650414e-01,\n'
 '         2.52075553e+00, -1.59046984e+00, -4.13886309e-01,\n'
 '        -4.75458056e-01,  2.11521697e+00,  2.07398629e+00,\n'
 '         4.37402725e-02,  3.36052746e-01, -6.38722420e-01,\n'
 '        -1.50569415e+00, -9.94284749e-01,  1.35645628e+00,\n'
 '         2.82534719e+00, -1.52095354e+00, -2.12770653e+00,\n'
 '        -4.06865835e+00, -5.34535885e-01, -1.20407045e+00,\n'
 '        -4.57767069e-01, -1.07066631e+00, -2.25317955e+00,\n'
 '         7.50466347e-01, -2.90158176e+00, -3.39946270e-01,\n'
 '        -4.83561486e-01, -1.65658504e-01, -1.85901499e+00,\n'
 '        -3.47892737e+00, -2.03573322e+00,  4.00726986e+00,\n'
 '        -2.12403345e+00, -2.48957515e+00, -8.86069477e-01,\n'
 '         8.99578512e-01, -1.71903968e+00, -5.28469682e-01,\n'
 '        -1.06841242e+00, -8.44764531e-01,  3.86044011e-02,\n'
 '         7.09870637e-01,  2.84922552e+00, -4.49324071e-01,\n'
 '         1.87456691e+00,  7.07550645e-01,  8.54476214e-01,\n'
 '        -3.85942697e+00,  3.10618907e-01,  1.42479491e+00,\n'
 '         4.04696894e+00,  2.08572102e+00,  6.52429295e+00,\n'
 '         1.59732073e-01,  1.17348325e+00, -2.41865206e+00,\n'
 '         2.09361363e+00,  1.28760982e+00,  2.63386989e+00,\n'
 '         3.59102058e+00,  3.56191087e+00, -8.06643963e-01,\n'
 '         7.91896164e-01,  1.12518179e+00,  5.80383360e-01,\n'
 '        -7.71232963e-01, -3.30764294e-01,  1.71629161e-01,\n'
 '         1.74384189e+00,  9.70139027e-01,  1.97411275e+00,\n'
 '         8.52878451e-01, -1.01116919e+00,  8.31740022e-01,\n'
 '        -2.37884462e-01,  4.51497972e-01,  8.63261414e+00,\n'
 '         7.13210201e+00,  3.87787938e+00,  1.79964709e+00,\n'
 '        -1.16393065e+00, -1.02397323e+00,  8.93134236e-01,\n'
 '         3.42857742e+00,  2.93790245e+00,  8.79573536e+00,\n'
 '         2.13758450e+01,  7.88252354e+00,  5.09417296e+00,\n'
 '         8.43238258e+00, -1.33427048e+00,  5.50479055e-01,\n'
 '        -6.71389461e-01,  9.62642252e-01, -1.31184196e+00,\n'
 '         2.07007861e+00, -7.80785084e-01,  3.42591453e+00,\n'
 '         1.35428038e+01, -1.97848570e+00,  1.41217291e-01,\n'
 '         2.49185622e-01, -1.41071081e+00, -6.79705083e-01,\n'
 '         4.46734190e-01,  1.06562364e+00, -1.92425549e+00,\n'
 '         1.41588764e+01,  8.89129341e-01, -1.93497586e+00,\n'
 '        -2.03415489e+00,  3.43028188e+00, -5.42278111e-01,\n'
 '        -1.24151015e+00, -1.45979369e+00,  2.67625785e+00,\n'
 '         6.13007665e-01,  2.71507359e+00, -2.20025015e+00,\n'
 '         2.18926406e+00, -2.18637437e-02, -1.38778830e+00,\n'
 '        -1.60809946e+00, -4.13863850e+00,  5.23035240e+00,\n'
 '        -8.51092100e-01, -3.02574372e+00, -1.82941294e+00,\n'
 '        -1.64543450e+00, -3.90966207e-01,  1.24524498e+00,\n'
 '        -7.60517240e-01,  1.92112654e-01,  9.72121954e-03,\n'
 '        -4.90813077e-01,  1.26947331e+00,  6.26806617e-02,\n'
 '        -1.12300277e-01, -5.67511618e-01, -2.29361773e-01,\n'
 '         1.05141997e+00, -6.41190410e-02,  1.56019080e+00,\n'
 '         1.64749861e+00, -1.06920290e+00,  1.50467992e+00,\n'
 '        -5.02587318e-01, -3.33755136e-01,  1.15151990e+00,\n'
 '         3.00841361e-01,  1.91898346e-01,  2.31806755e+00,\n'
 '        -2.13470054e+00, -1.57072574e-01,  2.68690467e+00,\n'
 '         1.59205198e+00,  1.83185160e+00, -2.26756334e+00,\n'
 '        -1.01548243e+00,  3.14906001e+00,  3.16642594e+00,\n'
 '         5.70029378e-01,  1.34895191e-01, -3.29352737e+00,\n'
 '        -2.16262627e+00, -1.42263556e+00,  3.54684091e+00,\n'
 '        -2.63013744e+00, -4.06778306e-02,  3.30558538e-01,\n'
 '        -2.10571217e+00, -2.02045989e+00, -1.78552890e+00,\n'
 '         1.62910640e-01, -3.29121351e-02,  3.46472025e-01,\n'
 '         1.40339446e+00, -1.20050836e+00, -1.02691591e+00,\n'
 '        -1.08641124e+00, -1.36382628e+00, -1.46313238e+00,\n'
 '        -7.26951182e-01,  1.68861795e+00,  1.53259802e+00,\n'
 '        -7.37967849e-01,  1.95651603e+00,  2.64017558e+00,\n'
 '        -2.57101321e+00,  8.63625169e-01,  9.38527703e-01,\n'
 '        -4.23126310e-01, -2.02343672e-01, -1.25224209e+00,\n'
 '        -2.07892394e+00, -1.34437287e+00, -1.39884695e-01,\n'
 '        -3.39458275e+00, -3.31753194e-01, -2.19654536e+00,\n'
 '         7.67414719e-02,  5.13190031e-01, -1.01504713e-01,\n'
 '        -9.74382997e-01, -1.27508426e+00, -1.39810056e-01,\n'
 '         9.43975329e-01, -9.57165599e-01, -1.68033630e-01,\n'
 '        -1.06719852e+00, -4.20859694e-01, -7.14892268e-01,\n'
 '        -2.19403768e+00, -7.47522041e-02, -1.12836778e+00,\n'
 '         1.63242197e+00,  9.21528190e-02, -2.22139335e+00,\n'
 '         2.87756443e-01, -2.35833454e+00,  1.15784514e+00,\n'
 '         2.30495381e+00, -2.30885792e+00, -2.77882409e+00,\n'
 '         1.86667943e+00,  2.93884277e-01,  7.31226921e-01,\n'
 '         7.55111575e-01, -6.95845663e-01, -1.63509166e+00,\n'
 '         1.39757109e+00,  7.10298181e-01,  2.30324411e+00,\n'
 '        -9.74654853e-02, -6.37435317e-01, -1.37558699e+00,\n'
 '        -1.70341849e+00, -1.73874140e+00, -9.69785631e-01,\n'
 '        -1.49674380e+00, -1.98773181e+00, -5.00137508e-01,\n'
 '        -2.43743563e+00, -1.96454120e+00, -7.93286502e-01,\n'
 '         7.28049278e-01, -1.83765817e+00, -3.93171907e-01,\n'
 '        -3.84325802e-01, -3.78712833e-01, -9.11920309e-01,\n'
 '        -1.04251242e+00,  1.96914554e-01,  1.86665583e+00,\n'
 '         6.57790124e-01,  1.50081813e+00, -2.50569880e-01,\n'
 '        -7.34180510e-01, -8.53334784e-01, -1.67240298e+00,\n'
 '         1.51091194e+00, -5.62090337e-01, -1.83294869e+00,\n'
 '        -1.69590330e+00,  5.28731227e-01, -5.69297731e-01,\n'
 '        -2.31295109e+00, -3.56620252e-02,  9.20608222e-01,\n'
 '         7.93464541e-01,  7.60034740e-01, -2.11949062e+00,\n'
 '         1.52285084e-01,  7.54518628e-01, -3.96566331e-01,\n'
 '        -1.62444138e+00,  5.51071763e-01, -1.46619213e+00,\n'
 '        -4.97159570e-01,  6.35364175e-01, -1.64838946e+00,\n'
 '        -2.63660955e+00, -5.85284471e-01,  7.75488377e-01,\n'
 '         5.36870658e-01, -1.58496249e+00,  9.35063243e-01,\n'
 '        -1.63244653e+00,  7.50677586e-02, -2.11488962e+00,\n'
 '         1.69940412e+00, -1.14123189e+00,  2.38712907e+00,\n'
 '        -2.97279954e+00, -8.06901813e-01, -2.11464500e+00,\n'
 '         1.37856746e+00,  1.17833674e+00,  8.58040571e-01,\n'
 '         3.62264067e-02, -2.82941032e+00,  1.05413961e+00,\n'
 '         2.47880101e-01,  6.16443872e-01,  3.19911146e+00,\n'
 '        -8.64948869e-01,  1.51901573e-01,  1.16019797e+00,\n'
 '         1.75010532e-01, -1.18671849e-01, -3.37449050e+00,\n'
 '         1.93267655e+00,  1.19819760e-01, -2.09704614e+00,\n'
 '        -1.35796249e+00,  2.45907992e-01,  1.31530702e+00,\n'
 '         7.16644883e-01,  7.75741339e-02,  1.80831599e+00,\n'
 '        -2.60632706e+00, -2.09741354e+00, -2.33141869e-01,\n'
 '         2.14797115e+00,  1.74742639e-01, -2.32730007e+00,\n'
 '         1.91071844e+00,  3.90885770e-01, -6.30931258e-01,\n'
 '         2.76090726e-02, -1.49735898e-01, -2.74020374e-01,\n'
 '        -1.31520271e+00, -1.28565156e+00, -1.19715428e+00,\n'
 '        -8.51867735e-01,  4.50412601e-01, -4.04979348e-01,\n'
 '         1.97711766e+00,  4.36066657e-01, -8.89474750e-02,\n'
 '        -1.75935757e+00,  1.06689167e+00, -1.07746398e+00,\n'
 '        -1.36572111e+00,  4.24653351e-01, -1.87056482e+00,\n'
 '        -1.77976894e+00, -9.56192970e-01, -4.05343175e-02,\n'
 '        -2.05847889e-01, -2.47606087e+00, -8.85305047e-01,\n'
 '        -3.16134095e-01, -1.71909702e+00, -2.17089117e-01,\n'
 '         9.91714299e-01, -2.56078816e+00,  6.03194952e-01,\n'
 '        -1.65483248e+00, -7.30657816e-01, -1.71433639e+00,\n'
 '        -6.56614661e-01, -1.16735244e+00, -1.53847074e+00,\n'
 '         2.89792967e+00, -1.48862362e+00,  7.61850834e-01,\n'
 '         5.53764254e-02, -2.06612682e+00, -1.28316462e+00,\n'
 '         1.32113695e+00,  2.30145961e-01,  1.01612210e-02,\n'
 '         2.42110681e+00, -1.57363161e-01, -1.64781463e+00,\n'
 '         9.49182987e-01,  4.17616904e-01,  1.25975311e-02,\n'
 '        -4.92805332e-01, -3.27293158e+00,  1.37146473e+00,\n'
 '        -1.03840387e+00, -7.44280815e-01,  2.03234553e+00,\n'
 '         8.53737831e-01,  1.00788879e+00,  8.41464996e-01,\n'
 '         9.19130683e-01,  3.04450440e+00,  6.96208775e-02,\n'
 '         1.94715261e-01, -3.81340146e-01,  9.71490592e-02,\n'
 '        -5.69770336e-01, -6.12705827e-01, -1.67352331e+00,\n'
 '        -5.88410735e-01, -1.36182511e+00,  8.39758873e-01,\n'
 '         3.15598798e+00, -9.14830208e-01, -1.23193216e+00,\n'
 '        -2.42024571e-01, -1.33692312e+00,  2.40861878e-01,\n'
 '        -1.20920730e+00,  1.59628570e+00,  8.78757834e-01,\n'
 '         2.01264963e-01,  2.84052908e-01,  5.73958643e-02,\n'
 '         3.43952358e-01, -1.28795934e+00,  5.95517218e-01,\n'
 '        -1.52211893e+00, -1.73619008e+00,  9.17418063e-01,\n'
 '        -7.14822769e-01,  2.32510614e+00, -5.31395197e-01,\n'
 '         1.74386621e+00, -9.87291753e-01,  2.30708742e+00,\n'
 '         5.79850137e-01, -6.55684292e-01, -1.31525445e+00,\n'
 '        -2.06019506e-02, -1.67129242e+00, -2.64019299e+00,\n'
 '        -8.24760795e-01,  7.03748822e-01, -9.52331185e-01,\n'
 '         5.05762768e+00,  2.15056372e+00, -8.06518436e-01,\n'
 '        -7.30511963e-01,  4.59853679e-01,  6.55894578e-01,\n'
 '        -2.35878515e+00,  1.01148114e-01, -4.85913575e-01,\n'
 '        -2.99976087e+00, -3.95367205e-01, -7.06791282e-01,\n'
 '         7.58991838e-02, -1.55725682e+00, -1.77797937e+00,\n'
 '         3.29453754e+00, -1.96685493e-01,  1.72479510e+00,\n'
 '         1.50026870e+00,  2.49954268e-01, -1.15244472e+00,\n'
 '        -2.39352679e+00,  3.78303480e+00, -1.02267384e+00,\n'
 '        -5.04451454e-01, -2.61551785e+00, -1.41580975e+00,\n'
 '        -8.71968389e-01, -1.19417751e+00, -9.89205420e-01,\n'
 '        -1.73257291e+00, -5.39637923e-01, -1.83276916e+00,\n'
 '         3.07087421e-01, -1.14326191e+00, -1.72745276e+00,\n'
 '        -2.08725786e+00, -4.47083265e-01, -8.27049255e-01,\n'
 '         1.69511342e+00,  2.53208351e+00, -1.97653151e+00,\n'
 '        -2.14331079e+00,  1.21484089e+00, -2.98805094e+00,\n'
 '         3.98937613e-02,  2.24251390e+00, -1.70823634e+00,\n'
 '        -1.24207950e+00, -1.94249463e+00,  8.28977764e-01,\n'
 '        -3.50962329e+00, -2.64832854e-01, -6.92463160e-01,\n'
 '        -9.18400228e-01,  9.69612420e-01, -1.22746736e-01,\n'
 '        -1.62484324e+00, -6.67717099e-01,  1.74360168e+00,\n'
 '         1.24476962e-01, -1.05264461e+00, -3.18306208e+00,\n'
 '         9.85972166e-01,  8.93032849e-01,  1.13990271e+00,\n'
 '         2.68965912e+00, -5.22800088e-01, -1.55245650e+00,\n'
 '         3.68325934e-02,  7.30804920e-01, -3.18296164e-01,\n'
 '        -7.84583569e-01, -8.74541283e-01,  1.29045868e+00,\n'
 '        -1.38585746e+00,  3.45804906e+00,  1.11856639e-01,\n'
 '        -4.82975215e-01, -8.76624465e-01, -3.20806313e+00,\n'
 '         1.97629347e-01, -1.46270525e+00, -1.18105555e+00,\n'
 '         4.28158849e-01, -1.95025575e+00, -1.19147038e+00,\n'
 '        -3.74973440e+00, -4.69902933e-01,  6.62731648e-01,\n'
 '         1.42770624e+00, -1.06895304e+00,  2.59276390e+00,\n'
 '        -6.04818821e-01, -4.78622818e+00,  2.89916933e-01,\n'
 '        -3.08250594e+00, -2.08364055e-01, -2.25821304e+00,\n'
 '        -7.05346763e-01,  1.94566703e+00,  1.42021990e+00,\n'
 '        -3.09698969e-01, -1.87181187e+00,  3.87381226e-01,\n'
 '         9.99106884e-01,  1.00751734e+00, -3.35329843e+00,\n'
 '        -2.01107830e-01, -3.22430134e-01,  7.18865037e-01,\n'
 '         5.29662490e-01,  1.26368535e+00,  1.23239350e+00,\n'
 '        -1.91700637e-01, -1.28063726e+00, -5.74895263e-01,\n'
 '         5.28896809e-01,  1.79337096e+00, -3.91775966e-01,\n'
 '        -4.63011324e-01,  1.49218380e-01,  1.05452108e+00,\n'
 '        -9.91189361e-01, -4.88715917e-01, -5.19748449e-01,\n'
 '        -1.11434901e+00,  3.30868244e-01, -2.11895371e+00,\n'
 '         5.33529043e-01, -2.14128941e-01,  2.77923673e-01,\n'
 '         1.58345592e+00, -1.62271190e+00,  4.17520702e-01,\n'
 '        -3.63254607e-01, -1.52934408e+00, -1.93732822e+00,\n'
 '        -7.87888527e-01, -5.02281368e-01,  4.27526522e+00,\n'
 '        -1.31224895e+00, -2.14486456e+00,  1.66988826e+00,\n'
 '        -1.74366081e+00,  7.20625341e-01, -1.50500941e+00,\n'
 '        -5.15830293e-02, -2.53201675e+00, -1.83064234e-03,\n'
 '         1.11283004e-01,  3.71191800e-01,  2.24831700e-01,\n'
 '        -9.13799524e-01, -3.06517100e+00, -1.11932981e+00,\n'
 '         1.09283459e+00, -2.22667798e-01, -2.34753585e+00,\n'
 '        -3.12964886e-01, -2.08173418e+00,  3.07815814e+00,\n'
 '         2.12759912e-01,  2.94902229e+00, -5.83249033e-01,\n'
 '        -1.92713928e+00, -6.64575934e-01, -8.57034251e-02,\n'
 '        -2.25247622e+00,  1.58088231e+00,  1.07954299e+00,\n'
 '        -3.17551941e-01, -2.23923063e+00, -4.85001892e-01,\n'
 '         1.78477359e+00, -1.37525272e+00,  2.24998498e+00,\n'
 '         3.94037604e-01, -2.39931956e-01, -2.35078049e+00,\n'
 '         1.99284553e-01,  1.03432250e+00,  4.86104608e-01,\n'
 '         3.70156944e-01, -2.24064231e+00,  2.34064519e-01,\n'
 '         1.74148965e+00, -9.82179046e-01, -1.45879388e+00,\n'
 '        -3.90855432e-01, -1.27731371e+00, -1.91042626e+00,\n'
 '        -2.76078373e-01,  1.90783703e+00,  1.73962379e+00,\n'
 '        -6.79811716e-01,  2.40544915e+00,  3.53549451e-01,\n'
 '        -2.68842268e+00,  6.26223087e-01, -2.71494365e+00,\n'
 '        -4.17049169e+00,  6.53062403e-01,  1.02982616e+00,\n'
 '         2.12198019e+00, -3.30994272e+00,  8.97131443e-01,\n'
 '         1.37661779e+00, -2.79380828e-01,  1.30883908e+00,\n'
 '         2.02107954e+00,  1.04991031e+00, -1.67395091e+00,\n'
 '         5.60343385e-01, -2.03554988e-01, -1.85732877e+00,\n'
 '         4.65109825e-01, -1.15714693e+00,  4.78871822e-01,\n'
 '         3.37527215e-01, -6.96168914e-02,  9.18544829e-02,\n'
 '         1.80412424e+00, -1.47276187e+00, -1.05678225e+00,\n'
 '        -3.77193510e-01,  2.69140863e+00,  1.43346024e+00,\n'
 '        -3.57926750e+00, -1.38777733e+00,  6.35018110e-01,\n'
 '        -1.44762444e+00, -8.63920450e-01,  4.12622094e-02,\n'
 '         1.25351405e+00,  2.79267836e+00, -1.42249429e+00,\n'
 '         5.03013015e-01,  2.19111323e-01, -1.14349127e-01,\n'
 '        -2.07978201e+00, -1.56009078e+00, -4.09908295e-01,\n'
 '        -1.36570394e-01,  1.22719431e+00, -5.30588031e-01,\n'
 '         5.61622858e-01,  3.38854164e-01,  2.32892132e+00,\n'
 '        -4.91033435e-01, -3.69604945e+00,  1.43003011e+00,\n'
 '         1.01640248e+00, -4.74402308e-01, -1.46303937e-01,\n'
 '         1.63479340e+00,  1.12512028e+00,  8.36325347e-01,\n'
 '        -6.99803412e-01, -1.41804993e+00, -5.58456778e-01,\n'
 '         1.41054571e+00, -1.58069014e+00, -4.85258162e-01,\n'
 '        -1.00312941e-01, -6.92228615e-01,  8.68795037e-01,\n'
 '        -7.18275964e-01, -2.00192404e+00, -1.96492982e+00,\n'
 '        -3.81320953e-01, -2.38707185e+00,  2.81614280e+00,\n'
 '        -5.66516101e-01, -1.31183219e+00, -3.86830807e-01,\n'
 '         2.91963130e-01, -5.86799681e-02, -1.06123257e+00,\n'
 '        -1.77985668e+00, -7.18510270e-01,  8.78355384e-01,\n'
 '        -5.14948308e-01, -1.25876605e-01, -1.76330936e+00,\n'
 '         8.12768340e-02, -1.10375869e+00,  3.44006538e-01,\n'
 '        -9.64263320e-01,  3.18082035e-01, -6.64316714e-01,\n'
 '        -2.21884084e+00,  1.29067421e+00,  8.02517593e-01,\n'
 '         7.33336091e-01, -1.91070676e+00, -4.52294320e-01,\n'
 '        -1.68554246e+00,  7.51214027e-02, -2.12190604e+00,\n'
 '        -2.70832348e+00,  7.50383675e-01,  6.04681790e-01,\n'
 '         1.16756189e+00,  5.49992561e-01, -5.76426148e-01,\n'
 '         1.12730372e+00,  9.58671391e-01,  3.54770124e-01,\n'
 '         2.71123886e+00, -4.71005440e-02, -1.72443557e+00,\n'
 '        -2.61221916e-01, -8.04373860e-01, -1.66621551e-01,\n'
 '         9.32314396e-02,  1.15229094e+00,  6.76544547e-01,\n'
 '         1.35252491e-01,  5.10172069e-01, -2.63095081e-01,\n'
 '         3.90155874e-02,  1.42679989e-01, -6.09671354e-01,\n'
 '         1.42227626e+00,  1.50575507e+00, -1.49497911e-01,\n'
 '        -3.86296809e-01, -1.16842103e+00, -8.61108005e-01,\n'
 '        -1.36465323e+00,  1.31641912e+00,  2.14114696e-01,\n'
 '         7.06026554e-01,  6.19388878e-01,  2.37147856e+00,\n'
 '         1.46996677e+00,  1.81719589e+00,  2.67600942e+00,\n'
 '         1.36916626e+00,  1.49503648e+00,  1.52137303e+00,\n'
 '         6.03946686e-01, -5.48438728e-02,  1.12178826e+00,\n'
 '         2.76526022e+00,  9.32349801e-01,  2.25428522e-01,\n'
 '        -7.58335829e-01,  9.17396903e-01,  8.46762180e-01,\n'
 '         1.98292160e+00,  8.27000618e-01,  6.21939659e-01,\n'
 '        -2.23107839e+00,  1.64604259e+00, -4.58416015e-01,\n'
 '         7.30589092e-01,  3.19595397e-01, -1.55467176e+00,\n'
 '         2.19301534e+00,  2.00555897e+00, -1.17828810e+00,\n'
 '        -2.81261539e+00, -4.77502584e-01,  4.53414887e-01,\n'
 '        -4.21254814e-01,  6.42006099e-02, -2.35808968e-01,\n'
 '        -1.34297872e+00, -1.69300509e+00,  2.07369328e+00,\n'
 '         1.65033102e+00, -4.32556391e-01,  2.22977102e-01,\n'
 '        -1.38332426e+00, -9.70716000e-01, -1.28603184e+00,\n'
 '         6.75132871e-02,  5.58079064e-01, -5.10277212e-01,\n'
 '         1.47289008e-01,  2.54788130e-01,  3.80860925e-01,\n'
 '        -4.76755470e-01, -4.37794030e-01, -6.54785097e-01,\n'
 '        -2.03856421e+00, -1.76400578e+00, -8.50705147e-01,\n'
 '         3.14873159e-02,  2.48323262e-01, -1.39852583e+00,\n'
 '        -6.59917355e-01]])')
'test_inceptionnet | batch_shape is: [1]'
'test_inceptionnet | logits.shape is: ivy.Shape(1, 1000)'
'||'
'test_inceptionnet | indices_test | true_indices is: [258 270 279]'
'test_inceptionnet | indices_test | calc_indices is: [258 279 270]'
'test_inceptionnet | device is: cpu'
'test_inceptionnet | fw is: numpy'
'test_inceptionnet | load_weights is: False'
'InceptionV3 | build | layer 1/22 built'
'InceptionV3 | build | layer 2/22 built'
'layer 3/22 built'
'InceptionV3 | build | layer 4/22 built'
'InceptionV3 | build | layer 5/22 built'
'InceptionV3 | build | layer 6/22 built'
'InceptionV3 | build | layer 7/22 built'
'InceptionV3 | build | layer 8/22 built'
'InceptionV3 | build | layer 9/22 built'
'InceptionV3 | build | layer 10/22 built'
'InceptionV3 | build | layer 11/22 built'
'InceptionV3 | build | layer 12/22 built'
'InceptionV3 | build | layer 13/22 built'
'InceptionV3 | build | layer 14/22 built'
'InceptionV3 | build | layer 15/22 built'
'InceptionV3 | build | layer 17/22 built'
'InceptionV3 | build | layer 18/22 built'
'InceptionV3 | build | layer 19/22 built'
'InceptionV3 | build | layer 20/22 built'
'InceptionV3 | build | layer 21/22 built'
'InceptionV3 | build | layer 22/22 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/4 built'
'layer 2/4 built'
'layer 3/4 built'
'layer 4/4 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/6 built'
'layer 2/6 built'
'layer 3/6 built'
'layer 4/6 built'
'layer 5/6 built'
'layer 6/6 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'inceptionNet_v3 | building InceptionV3 model | done 1/3'
'InceptionV3 | forward | input data_format is:NCHW | done 1/27'
'InceptionV3 | forward | data_format is going to be used is:NCHW | done 1/27'
'InceptionV3 | forward | input shape is:ivy.Shape(1, 224, 224, 3) | done 1/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 224, 224, 3) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 111, 111, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 111, 111, 32) | done 2/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 111, 111, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 32) | done 3/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 109, 109, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 64) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 64) | done 4/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 54, 54, 64) | done 5/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 54, 54, 80) | done 3/3'
'InceptionV3 | forward | is:ivy.Shape(1, 54, 54, 80) | done 6/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 80) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 52, 52, 192) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 52, 52, 192) | done 7/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 192) | done 8/27'
'input shape is:ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 32) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 32)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 25, 25, 256) | done 9/27'
'input shape is:ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 10/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 11/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 384) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 96) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 96)'
'one 20/20, output shape is:ivy.Shape(1, 12, 12, 288)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 12/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 12, 12, 768) | done 13/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 14/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 15/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 16/27'
'v3 16/27, output shape is:ivy.Shape(1, 12, 12, 768)'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 5, 5, 192)'
'one 7/20, output shape is:ivy.Shape(1, 5, 5, 768)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 1280) | done 17/27'
'input shape is:ivy.Shape(1, 5, 5, 1280)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 18/27'
'input shape is:ivy.Shape(1, 5, 5, 2048)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 19/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 20/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 5, 5) | done 21/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 1, 1) | done 22/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 27/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 24/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 25/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048) | done 26/27'
'InceptionV3 | forward | fc | done 27/27'
('test_inceptionnet | logits is: ivy.array([[ 8.51490625e+05, -3.83524844e+04, '
 '-3.72620250e+05,\n'
 '         1.38949734e+05, -1.38881125e+06,  6.87193250e+05,\n'
 '        -1.07272738e+06, -5.57274625e+05,  1.93141875e+06,\n'
 '        -1.08725050e+06, -6.09541062e+05, -1.19874150e+06,\n'
 '        -5.35276750e+05, -1.93839938e+05,  1.74019688e+06,\n'
 '        -1.00391900e+06,  5.41581000e+05,  3.48419656e+05,\n'
 '         5.59290500e+05, -4.31087719e+05, -1.34066525e+06,\n'
 '         9.59102438e+05,  8.15328125e+05, -2.01047875e+06,\n'
 '        -8.37538062e+05, -1.22400125e+06,  2.41678781e+05,\n'
 '        -2.53806250e+03,  4.35368125e+05,  1.97631344e+05,\n'
 '        -1.72725375e+05, -1.38476000e+06, -1.10057312e+05,\n'
 '        -5.98536500e+05, -5.58976000e+05,  2.17404075e+06,\n'
 '         8.36759875e+05,  3.91809812e+05, -4.80754500e+05,\n'
 '        -3.36562875e+05,  1.45241850e+06,  5.11862750e+05,\n'
 '        -1.30205656e+05, -6.46006688e+05,  1.81814250e+06,\n'
 '        -7.36778062e+05, -2.48641250e+04,  1.59141438e+06,\n'
 '        -9.88119188e+05, -1.74084719e+05,  6.22831625e+05,\n'
 '         1.41782656e+05, -7.10234125e+05, -1.32188000e+05,\n'
 '         5.57142125e+05,  3.59382281e+05, -4.24440625e+04,\n'
 '         8.90827000e+05,  1.31810325e+06,  2.04137138e+06,\n'
 '         4.44423906e+04, -7.79015938e+05,  1.20454838e+06,\n'
 '        -1.04674362e+06, -1.11326500e+05, -1.00187450e+06,\n'
 '         3.81408844e+05, -3.94493000e+05, -1.48122812e+06,\n'
 '        -7.50498250e+05,  2.24895500e+05, -1.01935312e+05,\n'
 '        -6.36464250e+05, -1.55691312e+06, -1.53160100e+06,\n'
 '         2.11393325e+06,  1.79072375e+05,  9.26025875e+05,\n'
 '         2.33776484e+05, -2.42188000e+06,  5.22806875e+05,\n'
 '         2.30219219e+05, -3.11413438e+05, -8.78004875e+05,\n'
 '         4.16194594e+05, -7.55642625e+05, -3.89769188e+05,\n'
 '         7.27405625e+05, -8.86548000e+05, -1.10257775e+06,\n'
 '        -9.21312500e+03,  2.43678438e+04, -2.48257172e+05,\n'
 '         1.28835500e+06, -9.53888312e+05,  1.18650609e+05,\n'
 '        -1.99704375e+05, -1.44234344e+05, -1.46182512e+06,\n'
 '        -1.48145288e+06, -2.34596562e+04, -1.32012275e+06,\n'
 '        -1.23247962e+06, -7.35673750e+04, -1.48916725e+06,\n'
 '        -1.54262125e+05,  6.37397750e+05, -3.20194938e+05,\n'
 '         1.14178112e+06, -2.45937600e+06,  9.15294000e+05,\n'
 '        -4.76402562e+05, -5.60941250e+05,  6.78415000e+05,\n'
 '         1.95982975e+06,  1.04914900e+06,  1.10563875e+05,\n'
 '         3.73295250e+05,  7.97447000e+05,  7.36789250e+05,\n'
 '         1.00717262e+06, -2.18210300e+06,  1.12308538e+06,\n'
 '         4.98578812e+05, -7.72969125e+05, -2.84883125e+05,\n'
 '        -1.11432888e+06, -4.39594594e+05, -1.03477088e+06,\n'
 '         9.51490938e+05, -4.53476188e+05, -7.64465000e+04,\n'
 '         9.09695125e+05, -7.28046250e+04,  8.10661188e+05,\n'
 '        -1.77303875e+05,  1.96406766e+05,  1.39430000e+06,\n'
 '        -4.65504500e+05,  1.36354675e+06, -6.64682312e+05,\n'
 '        -1.97418219e+05,  2.03033000e+06, -9.57687500e+02,\n'
 '         4.05588062e+05, -1.04974325e+06,  1.22836650e+06,\n'
 '        -8.22901406e+04, -1.98380712e+06, -3.24715562e+05,\n'
 '        -2.79511125e+06, -1.42582075e+06, -1.12821412e+06,\n'
 '         5.30833812e+05,  1.97378688e+05, -2.48657650e+06,\n'
 '         6.65670812e+05,  2.32194525e+06, -5.57512500e+04,\n'
 '         1.11609438e+06,  2.04466925e+06, -7.06996500e+05,\n'
 '        -4.75914125e+05,  2.33355984e+05, -5.05159156e+05,\n'
 '         5.73105625e+04, -2.39959531e+05, -4.44877750e+05,\n'
 '         1.50742350e+06, -1.26000312e+06,  8.53332500e+04,\n'
 '         8.48851250e+05,  1.10958775e+06,  5.03139906e+05,\n'
 '        -8.39977500e+04,  1.14983438e+06,  9.06528750e+05,\n'
 '        -4.34829219e+05,  6.71230875e+05,  3.58411469e+05,\n'
 '        -1.13503300e+06,  2.17130400e+06,  6.88871500e+05,\n'
 '        -3.62369875e+05, -6.77034125e+05,  1.38294500e+06,\n'
 '        -1.24456300e+06,  1.72661875e+06, -3.91283406e+05,\n'
 '         3.86132906e+05, -5.33798500e+05,  1.53028484e+05,\n'
 '         6.77175625e+05, -2.29416453e+05,  1.09917438e+05,\n'
 '         2.15048625e+06, -1.11861588e+06, -2.46046938e+05,\n'
 '         6.54140625e+05,  1.70494719e+05,  2.99699950e+06,\n'
 '        -1.84707038e+06, -4.46243000e+05,  4.07583375e+05,\n'
 '         7.43380562e+05, -1.33862225e+06, -1.11158125e+05,\n'
 '         1.23825188e+06, -3.19612312e+05, -3.78967812e+05,\n'
 '        -4.85656875e+05, -7.51697125e+05, -1.05844850e+06,\n'
 '         1.98725125e+06,  3.08055562e+05, -1.95069700e+06,\n'
 '        -5.43728250e+05,  1.92840925e+06,  1.13333725e+06,\n'
 '        -1.84526162e+06, -3.72500688e+05,  1.53270762e+06,\n'
 '        -7.28155875e+05, -4.46836094e+05,  5.32239750e+05,\n'
 '         8.55410000e+05, -4.39800062e+05, -4.04384750e+05,\n'
 '        -1.48705175e+06, -1.17904900e+06,  2.37706344e+05,\n'
 '         9.20061062e+05, -1.28228938e+05, -5.38454688e+04,\n'
 '         9.32786375e+05,  1.28101375e+06,  1.26929788e+06,\n'
 '         1.00467612e+06,  1.17874562e+05,  4.15751250e+05,\n'
 '        -1.18260888e+06, -8.99827125e+05,  2.49372188e+05,\n'
 '        -8.94065250e+05,  2.94845525e+06, -3.28359000e+05,\n'
 '        -1.12202538e+06,  3.10953125e+03, -2.27213800e+06,\n'
 '         5.46267062e+05, -3.00281172e+04,  2.56312375e+05,\n'
 '        -9.32928250e+05, -1.19114812e+05, -9.79237625e+05,\n'
 '         6.00068812e+05,  6.92845469e+04,  2.21360400e+06,\n'
 '         1.66774412e+06,  5.46408000e+05, -5.22827500e+05,\n'
 '        -1.64906188e+06,  6.28719938e+05, -2.78644125e+05,\n'
 '        -5.02271219e+05,  1.42399825e+06, -1.29679888e+06,\n'
 '         1.89806638e+06, -6.12013750e+04,  3.86281250e+03,\n'
 '         1.11051312e+06,  2.10010312e+05, -5.25583312e+05,\n'
 '         3.28739375e+04, -6.75201750e+05,  4.96157562e+05,\n'
 '        -3.73462500e+03,  1.49320350e+06, -6.61281250e+02,\n'
 '        -1.91555662e+06, -1.05523288e+06,  5.17692469e+05,\n'
 '         6.17143188e+05,  3.29118344e+05,  1.41569219e+05,\n'
 '         2.89561700e+06, -2.38825391e+05,  1.15829425e+06,\n'
 '        -4.14020938e+04, -1.14771312e+05,  3.27524719e+05,\n'
 '        -1.34381075e+06,  5.80493438e+05,  1.10726738e+06,\n'
 '        -1.90750150e+06,  5.47291062e+05,  9.77702000e+05,\n'
 '        -8.72124125e+05,  3.99545531e+05,  1.14917175e+06,\n'
 '        -4.04206656e+05, -1.20118500e+05, -1.39064462e+06,\n'
 '        -1.51284688e+06,  1.57375625e+06,  9.94985125e+05,\n'
 '         1.89460125e+05,  2.73386094e+05,  9.34368312e+05,\n'
 '         2.27090750e+05,  1.05928512e+06, -8.88460875e+05,\n'
 '        -1.68219625e+06,  2.71828438e+05,  3.79482375e+05,\n'
 '         1.12511600e+06,  5.95762375e+05,  1.13698088e+06,\n'
 '        -4.03639188e+05, -6.54614375e+05,  3.91431188e+05,\n'
 '        -7.47218062e+05,  1.40166550e+06,  1.67326138e+06,\n'
 '         4.57076250e+04,  2.17093975e+06,  5.64388312e+05,\n'
 '         7.18135875e+05, -1.11907638e+06,  2.07480375e+06,\n'
 '        -7.42019375e+05, -2.38408750e+05, -5.64019812e+05,\n'
 '        -5.43258375e+05,  1.61195488e+06, -6.80504125e+05,\n'
 '        -2.09990500e+05,  1.06021650e+06, -3.54572812e+05,\n'
 '         1.08116950e+06,  2.66961900e+06,  8.56113000e+05,\n'
 '         5.67031750e+05,  1.12543512e+06,  8.34963938e+05,\n'
 '        -9.39140500e+05, -1.69905425e+06, -4.52586250e+05,\n'
 '        -1.10998750e+05,  1.39530825e+06,  9.73450875e+05,\n'
 '         1.77726812e+05, -6.94098000e+05, -1.06766562e+05,\n'
 '        -2.73321875e+04, -5.29071188e+05,  9.66954625e+05,\n'
 '         4.32471781e+05, -2.98360156e+05, -5.75060375e+05,\n'
 '        -1.55711362e+06, -6.37003812e+05,  4.47191875e+04,\n'
 '         6.64794000e+05,  6.28232938e+05,  4.06174188e+05,\n'
 '         1.11492350e+06,  7.88270250e+05, -6.94952312e+05,\n'
 '         3.54381562e+05,  1.18973350e+06,  1.34324075e+06,\n'
 '        -3.07173125e+05, -2.53278531e+05,  1.60690050e+06,\n'
 '        -2.44814312e+05,  4.27625438e+05, -9.99782500e+04,\n'
 '         8.08371125e+05, -1.57714425e+06, -9.17298625e+05,\n'
 '         1.50583762e+06,  2.32391922e+05, -1.01867141e+05,\n'
 '         4.67138188e+05, -4.17053438e+04,  7.17295062e+05,\n'
 '         3.83468531e+05,  1.68689125e+06,  7.49886625e+05,\n'
 '        -1.11031000e+05, -1.82394975e+06, -4.00199000e+05,\n'
 '         6.15539000e+05, -5.26155188e+05,  4.96302500e+05,\n'
 '         1.69398438e+05,  7.19049438e+05, -5.09677375e+05,\n'
 '        -9.26722000e+05,  1.28886775e+06,  1.48053525e+06,\n'
 '         4.21449062e+05, -4.04647312e+05, -1.22444550e+06,\n'
 '         5.70370625e+05, -7.88097500e+05,  7.49316000e+05,\n'
 '         8.65558250e+05, -5.04753906e+04, -5.31574625e+05,\n'
 '        -1.19560275e+06,  2.16925900e+06,  2.58685141e+05,\n'
 '        -6.05484875e+05, -9.20820625e+05,  4.55395875e+05,\n'
 '        -5.53610500e+05, -4.95114312e+05, -7.08807750e+05,\n'
 '         2.31828047e+05, -2.18547975e+06, -6.97528125e+03,\n'
 '        -1.77982219e+05,  1.09110825e+06,  1.03436500e+05,\n'
 '        -1.70255825e+06, -6.73740188e+05, -3.53044812e+05,\n'
 '         1.31894475e+06,  1.57110762e+06,  2.07757750e+05,\n'
 '         7.03915000e+05,  2.56823281e+05, -7.14331938e+05,\n'
 '         8.78631375e+05, -1.48963800e+06,  6.14578250e+05,\n'
 '         1.24219138e+06,  4.80263469e+05,  1.28729525e+06,\n'
 '        -5.55794875e+05, -1.60712425e+06, -1.03402538e+06,\n'
 '         5.43591500e+05, -8.89096625e+05, -2.96090812e+05,\n'
 '        -1.57466875e+05, -1.52133438e+05,  8.27797750e+05,\n'
 '        -6.85140625e+05,  9.15179750e+05,  3.69016125e+05,\n'
 '        -1.15052500e+04,  6.16735625e+04,  4.86694250e+05,\n'
 '        -6.61257375e+05,  3.69825656e+05, -3.93990656e+05,\n'
 '        -1.65188075e+06,  1.97028725e+06,  5.06798531e+05,\n'
 '         7.59227812e+05,  4.29059250e+05, -7.86218500e+05,\n'
 '         2.93356375e+05, -7.88053750e+04,  2.98720031e+05,\n'
 '        -2.12146550e+06,  9.56423625e+05,  9.75984438e+05,\n'
 '        -4.06783562e+05, -3.38528875e+05,  1.15919462e+06,\n'
 '        -1.10348025e+06, -5.40841875e+05,  8.74242125e+05,\n'
 '         5.13751938e+05,  3.30661875e+04, -1.15364875e+05,\n'
 '         1.32331112e+06,  1.78688850e+06,  2.39255500e+05,\n'
 '         9.26541094e+04,  4.00096000e+05,  5.30385438e+05,\n'
 '         8.56884000e+05, -1.07275412e+06, -2.34051200e+06,\n'
 '        -7.76879875e+05, -2.42463125e+04,  6.17557875e+05,\n'
 '        -1.84869450e+06, -3.05920750e+05, -5.94362375e+05,\n'
 '        -1.21551625e+05, -4.38943125e+05, -1.66168300e+06,\n'
 '         2.13700938e+05,  1.85473888e+06, -2.28187750e+06,\n'
 '         2.59497219e+05, -1.30906188e+05,  1.16021575e+06,\n'
 '        -1.33000312e+04,  1.12180050e+06,  3.33251656e+05,\n'
 '        -1.44644588e+06, -1.05318700e+06,  1.05879050e+06,\n'
 '        -7.81123125e+05, -7.36881438e+05, -9.23750625e+05,\n'
 '         6.97832875e+05,  1.02046525e+06, -6.95344375e+04,\n'
 '         1.27779812e+05, -7.53560625e+05,  6.12538250e+05,\n'
 '        -7.55848500e+05,  5.90201375e+05, -1.44163875e+06,\n'
 '         5.97917188e+05,  6.44973000e+05, -1.48679825e+06,\n'
 '         5.02271688e+05, -5.03549812e+05, -1.38300062e+06,\n'
 '         3.01714594e+05, -9.68643500e+05, -2.22392675e+06,\n'
 '         4.76757000e+05, -4.10009375e+05,  1.58730538e+06,\n'
 '        -1.46996888e+06, -1.00252956e+06, -1.33259328e+05,\n'
 '         7.42370312e+05, -1.07405612e+06,  3.18651250e+05,\n'
 '        -1.91196850e+06,  9.17004875e+05, -1.48754600e+06,\n'
 '         5.70517938e+05, -3.16578375e+05,  1.61500900e+06,\n'
 '         7.04271688e+05,  6.14361250e+05, -1.80062800e+06,\n'
 '        -9.48059875e+05, -8.92150875e+05, -1.03097131e+06,\n'
 '        -1.15481350e+06,  7.57813938e+05, -1.18935288e+06,\n'
 '        -1.60770500e+06, -3.89325781e+05,  8.04463000e+05,\n'
 '        -2.95621875e+05, -1.17890800e+06,  9.11802750e+05,\n'
 '        -1.86727350e+06,  1.80871675e+06,  1.61865288e+06,\n'
 '        -4.31778500e+05, -1.22053588e+06,  4.82295562e+05,\n'
 '        -8.14281250e+05, -1.37364738e+06,  5.51600625e+04,\n'
 '         6.57980125e+05,  1.99511000e+06, -1.43896112e+06,\n'
 '         4.34859375e+04, -2.15740850e+06,  1.08507638e+06,\n'
 '        -7.15071812e+05, -9.79144500e+05, -8.83148875e+05,\n'
 '        -3.96738781e+05,  5.11464750e+05, -1.28453656e+05,\n'
 '        -1.86350225e+06, -1.02500888e+06,  6.76661250e+04,\n'
 '        -2.59108125e+05,  1.30901062e+05,  8.03625375e+05,\n'
 '        -1.47938650e+06,  1.02147581e+06, -1.73354906e+05,\n'
 '        -8.00946094e+04, -5.35211250e+05, -1.64219188e+06,\n'
 '        -1.09576588e+06, -4.31027000e+05, -5.61236062e+05,\n'
 '         1.20119750e+06, -4.31980188e+05, -1.10662469e+05,\n'
 '         2.31585781e+05,  1.82257500e+04,  6.37780750e+05,\n'
 '         1.61625250e+05, -1.68367188e+06, -8.66435000e+04,\n'
 '        -2.11799725e+06,  2.95496375e+05,  2.81418750e+05,\n'
 '         3.48100000e+04,  2.58622750e+05, -9.86285000e+04,\n'
 '         5.59755688e+05, -6.84199375e+05,  3.82629844e+05,\n'
 '        -2.28260650e+06,  7.70733500e+05,  1.28281725e+06,\n'
 '        -7.87363938e+05,  1.00586556e+06, -9.57075375e+05,\n'
 '        -3.30982875e+05, -7.23904875e+05, -7.26383125e+05,\n'
 '        -6.04957500e+04, -2.17479775e+06, -4.42796719e+05,\n'
 '        -9.36443906e+04,  8.35273000e+05,  7.77503625e+05,\n'
 '        -4.75321719e+05,  9.44456125e+05, -5.89922688e+05,\n'
 '        -1.56865900e+06, -1.08970725e+06, -8.28191500e+05,\n'
 '         3.95847125e+05, -3.32809562e+05,  6.13176875e+05,\n'
 '        -4.58589062e+04, -4.41226875e+04, -5.04343312e+05,\n'
 '        -8.60010375e+05, -4.61445812e+05,  1.39007800e+06,\n'
 '         3.21643781e+05, -2.32095750e+05,  2.07352750e+05,\n'
 '        -4.45423250e+05, -9.22972500e+05,  1.57813625e+05,\n'
 '         1.35195438e+05,  6.13784875e+05, -9.44994562e+05,\n'
 '        -1.32844375e+04, -1.33243450e+06,  2.14365350e+06,\n'
 '        -7.85638688e+05,  2.00786850e+06, -4.62028031e+05,\n'
 '         5.52597750e+05, -4.64597625e+05, -2.89241719e+05,\n'
 '         1.59489906e+05, -9.85716625e+05,  4.60767188e+05,\n'
 '        -2.38325025e+06,  1.17120000e+05,  3.17155469e+05,\n'
 '         1.95491125e+05, -9.74506250e+04,  9.28219500e+05,\n'
 '         1.36300812e+05,  7.21543938e+05,  1.37505750e+05,\n'
 '        -4.80397438e+05, -6.72611250e+05,  1.17212325e+06,\n'
 '        -2.47355094e+05, -2.95906875e+05,  1.20658150e+06,\n'
 '         1.23789750e+05,  8.69037812e+04, -3.79396500e+05,\n'
 '        -4.57925406e+05, -4.40609000e+05,  1.74426988e+06,\n'
 '         2.22610625e+04, -3.44355938e+04,  9.76628750e+05,\n'
 '        -1.24612094e+05,  3.79907875e+05, -6.70702688e+05,\n'
 '        -1.11937175e+06, -6.96945000e+05, -8.09203938e+05,\n'
 '         5.09394688e+05, -1.31738400e+06, -1.61424750e+06,\n'
 '        -5.18894375e+04,  3.20032125e+05,  9.24376875e+04,\n'
 '        -1.78367775e+06, -8.90887500e+05, -1.67352762e+06,\n'
 '        -1.96230100e+06,  5.43275125e+05,  6.61865000e+05,\n'
 '        -9.36929062e+05,  3.09723438e+05, -3.82682344e+05,\n'
 '        -2.58088062e+05,  4.98990312e+05, -1.00706312e+06,\n'
 '        -1.84832725e+06, -1.00658638e+06,  4.04264938e+05,\n'
 '        -2.44677250e+06,  1.40440938e+05, -1.45265000e+04,\n'
 '        -1.72155344e+05, -3.73737094e+05,  1.00035195e+05,\n'
 '        -2.40713275e+06, -5.05607375e+05, -8.32937500e+03,\n'
 '        -7.95311000e+05, -1.14104300e+06,  9.49522062e+05,\n'
 '         7.02320438e+05, -1.49226594e+05,  1.05110775e+06,\n'
 '         1.41594850e+06, -9.09530500e+05, -8.26961750e+05,\n'
 '         4.05795562e+05, -5.02922188e+04,  1.20367425e+06,\n'
 '         3.77248938e+05, -3.22095906e+05, -5.52854625e+05,\n'
 '        -1.25919719e+05,  1.90287062e+05,  3.38442000e+05,\n'
 '        -4.61092500e+05,  5.94107438e+05, -2.09037922e+05,\n'
 '         6.98270062e+05, -4.50478469e+05, -9.80276812e+05,\n'
 '         1.15954475e+06,  4.49873125e+05,  1.01466912e+06,\n'
 '        -5.96248125e+05,  1.19503969e+05, -3.58354969e+05,\n'
 '        -6.16309375e+03,  7.96377312e+05,  1.19137125e+05,\n'
 '         1.85207625e+06,  2.82677125e+06, -1.77714875e+05,\n'
 '        -8.70634375e+03,  4.74973750e+05, -1.82112000e+06,\n'
 '         4.19544250e+05, -1.47821475e+06, -6.89741938e+05,\n'
 '         3.74617656e+05,  1.07420650e+06, -4.71499500e+05,\n'
 '         8.19380375e+05, -1.29266300e+06, -7.98246000e+05,\n'
 '        -3.08316375e+05, -1.61531088e+06,  1.01313431e+06,\n'
 '        -2.14169550e+06, -1.16079625e+06, -1.14482175e+06,\n'
 '         6.60032375e+05, -1.03017078e+05, -4.39827719e+05,\n'
 '        -6.00652500e+05,  7.48566062e+05, -8.12937188e+04,\n'
 '        -4.99271688e+05, -4.10380781e+05, -1.09337300e+06,\n'
 '         6.83840125e+05,  2.97992312e+05,  1.60696912e+06,\n'
 '        -5.07261750e+05, -7.32070000e+05, -1.12947688e+05,\n'
 '         7.69509531e+04, -7.97058750e+05,  1.14943250e+05,\n'
 '        -1.19593975e+06, -6.26700125e+05,  1.89469425e+06,\n'
 '         1.01550325e+06, -5.71698625e+05, -6.22772188e+04,\n'
 '        -7.08544062e+04,  6.49690750e+05,  7.61664125e+05,\n'
 '        -1.11902825e+06,  2.94248344e+05,  2.87685000e+05,\n'
 '         1.48280000e+04,  1.28894050e+06,  3.63128531e+05,\n'
 '        -3.68299531e+05,  7.14546250e+05, -1.50621838e+06,\n'
 '        -1.90513575e+06, -7.78942375e+05,  7.06539375e+05,\n'
 '        -5.34392625e+05, -5.78486750e+05, -1.15973438e+05,\n'
 '         2.61568750e+03,  3.27291812e+05, -2.02134962e+06,\n'
 '        -7.47057500e+05, -1.29639850e+06,  4.45604312e+05,\n'
 '        -1.01000675e+06, -5.43662344e+04,  8.43317125e+05,\n'
 '        -1.03873289e+05,  2.46932594e+05,  4.34690000e+04,\n'
 '         2.32637575e+06, -3.31444250e+05,  7.82968562e+05,\n'
 '         2.13970906e+05,  4.86043875e+05,  1.03275656e+05,\n'
 '         4.72313875e+05,  8.72492125e+05,  8.35008188e+05,\n'
 '        -3.12677188e+05, -4.23216125e+05,  7.19742250e+05,\n'
 '        -9.86435125e+05,  5.16916062e+05,  5.91614625e+05,\n'
 '         7.63550500e+05, -4.73258094e+05, -2.15778500e+06,\n'
 '        -2.49216750e+05, -1.50148275e+06, -1.28946050e+06,\n'
 '        -2.12532600e+06, -1.62975662e+06,  1.69324500e+05,\n'
 '         1.10340550e+06, -5.75681750e+05,  3.38663000e+05,\n'
 '         2.02247650e+06, -2.92457625e+05,  1.50971062e+05,\n'
 '        -4.42609500e+05, -9.57250125e+05,  5.72451188e+05,\n'
 '        -6.41980625e+05,  6.46517188e+04, -1.08464375e+05,\n'
 '        -1.07484988e+06, -2.12786844e+05, -5.78915375e+05,\n'
 '        -3.66331406e+05, -6.24781328e+04, -4.81546484e+04,\n'
 '        -8.15716875e+04,  9.35490062e+05,  3.99868875e+05,\n'
 '        -8.99558125e+05, -1.00194675e+06,  1.39737438e+05,\n'
 '        -7.17197875e+05,  9.47494312e+05, -1.33381862e+06,\n'
 '        -1.94356500e+06,  1.17899500e+06,  4.29150594e+05,\n'
 '         4.72526625e+05,  1.97890250e+05,  4.91554625e+05,\n'
 '         1.62167162e+06, -7.56184062e+05,  8.57190000e+05,\n'
 '        -3.59382438e+05, -4.05684812e+05,  4.90006438e+05,\n'
 '         1.48084469e+05,  1.61918275e+06,  1.73686250e+04,\n'
 '         8.56021688e+05,  1.38616212e+06,  8.59222625e+05,\n'
 '         1.48161288e+06,  1.30996825e+06, -2.20376812e+05,\n'
 '        -1.72988031e+05, -1.90448262e+06,  1.20654150e+06,\n'
 '         1.86910525e+06,  6.18081625e+05, -1.03828012e+06,\n'
 '        -6.44327125e+05, -8.22548500e+05, -1.17821212e+06,\n'
 '        -1.73835938e+05,  6.21542500e+05, -7.82366375e+05,\n'
 '         1.29276062e+05, -1.35594388e+06, -8.99767500e+05,\n'
 '         1.49238825e+06,  8.19260000e+04,  1.00333256e+06,\n'
 '         1.37304900e+06, -7.46364812e+05,  6.84920000e+05,\n'
 '        -1.82780312e+04,  3.51117188e+04, -1.17601425e+06,\n'
 '        -1.21921875e+06, -1.69103538e+06,  8.77731250e+05,\n'
 '        -7.21767750e+05,  8.39228938e+05,  2.55295688e+05,\n'
 '         1.36773906e+05,  1.24317175e+06, -1.76148125e+06,\n'
 '         4.67907125e+05,  1.21124838e+06,  1.38359738e+06,\n'
 '        -3.11586125e+05, -1.69077812e+04,  1.24174850e+06,\n'
 '         6.53098188e+05,  5.64049188e+05,  1.77592250e+05,\n'
 '         4.99867250e+05, -3.46223750e+04,  9.67163625e+05,\n'
 '         2.10664200e+06,  1.93426975e+06, -2.89585125e+05,\n'
 '         5.54425000e+03,  1.30942338e+06,  1.02541306e+06,\n'
 '        -7.67701875e+04,  1.21243425e+06,  2.46856250e+03,\n'
 '         6.30455625e+04,  1.21110750e+06, -1.30949700e+06,\n'
 '         1.29213038e+06,  9.32685625e+05,  9.75744688e+05,\n'
 '         1.22076969e+05,  1.32354925e+06, -3.92779344e+05,\n'
 '        -3.83323781e+05, -1.42710400e+06, -1.17873612e+06,\n'
 '        -6.00124250e+05, -3.08132500e+05,  3.94306438e+05,\n'
 '         2.57141188e+05,  7.90362750e+05,  9.52587125e+05,\n'
 '        -8.07246562e+05,  2.78592950e+06,  8.19424375e+05,\n'
 '         3.18045150e+06, -9.52936812e+05,  2.07161025e+06,\n'
 '        -1.14240825e+06, -3.64384500e+05, -1.58306188e+05,\n'
 '         7.60950562e+05, -6.28787625e+05, -2.54328547e+05,\n'
 '        -1.29702516e+05,  8.11608750e+04,  1.08693469e+05,\n'
 '        -1.39300700e+06, -2.55770000e+05, -4.40281719e+05,\n'
 '         2.76870625e+04, -1.22058138e+06, -2.96338562e+05,\n'
 '         5.43323750e+04]])')
'test_inceptionnet | batch_shape is: [1]'
'test_inceptionnet | logits.shape is: ivy.Shape(1, 1000)'
'||'
'test_inceptionnet | device is: cpu'
'test_inceptionnet | fw is: numpy'
'test_inceptionnet | load_weights is: True'
'InceptionV3 | build | layer 1/22 built'
'InceptionV3 | build | layer 2/22 built'
'layer 3/22 built'
'InceptionV3 | build | layer 4/22 built'
'InceptionV3 | build | layer 5/22 built'
'InceptionV3 | build | layer 6/22 built'
'InceptionV3 | build | layer 7/22 built'
'InceptionV3 | build | layer 8/22 built'
'InceptionV3 | build | layer 9/22 built'
'InceptionV3 | build | layer 10/22 built'
'InceptionV3 | build | layer 11/22 built'
'InceptionV3 | build | layer 12/22 built'
'InceptionV3 | build | layer 13/22 built'
'InceptionV3 | build | layer 14/22 built'
'InceptionV3 | build | layer 15/22 built'
'InceptionV3 | build | layer 17/22 built'
'InceptionV3 | build | layer 18/22 built'
'InceptionV3 | build | layer 19/22 built'
'InceptionV3 | build | layer 20/22 built'
'InceptionV3 | build | layer 21/22 built'
'InceptionV3 | build | layer 22/22 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/4 built'
'layer 2/4 built'
'layer 3/4 built'
'layer 4/4 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/6 built'
'layer 2/6 built'
'layer 3/6 built'
'layer 4/6 built'
'layer 5/6 built'
'layer 6/6 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'inceptionNet_v3 | building InceptionV3 model | done 1/3'
'inceptionNet_v3 | clearning pretrained weights | done 2/3'
'inceptionNet_v3 | loading pretrained weights | done 3/3'
'InceptionV3 | forward | input data_format is:NCHW | done 1/27'
'InceptionV3 | forward | data_format is going to be used is:NCHW | done 1/27'
'InceptionV3 | forward | input shape is:ivy.Shape(1, 224, 224, 3) | done 1/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 224, 224, 3) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 111, 111, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 111, 111, 32) | done 2/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 111, 111, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 32) | done 3/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 109, 109, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 64) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 64) | done 4/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 54, 54, 64) | done 5/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 54, 54, 80) | done 3/3'
'InceptionV3 | forward | is:ivy.Shape(1, 54, 54, 80) | done 6/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 80) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 52, 52, 192) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 52, 52, 192) | done 7/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 192) | done 8/27'
'input shape is:ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 32) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 32)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 25, 25, 256) | done 9/27'
'input shape is:ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 10/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 11/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 384) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 96) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 96)'
'one 20/20, output shape is:ivy.Shape(1, 12, 12, 288)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 12/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 12, 12, 768) | done 13/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 14/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 15/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 16/27'
'v3 16/27, output shape is:ivy.Shape(1, 12, 12, 768)'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 5, 5, 192)'
'one 7/20, output shape is:ivy.Shape(1, 5, 5, 768)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 1280) | done 17/27'
'input shape is:ivy.Shape(1, 5, 5, 1280)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 18/27'
'input shape is:ivy.Shape(1, 5, 5, 2048)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 19/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 20/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 5, 5) | done 21/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 1, 1) | done 22/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 27/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 24/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 25/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048) | done 26/27'
'InceptionV3 | forward | fc | done 27/27'
('test_inceptionnet | logits is: ivy.array([[ 4.32216287e-01, '
 '-5.03492117e-01,  1.45362592e+00,\n'
 '         2.08346248e+00,  8.97076607e-01,  8.17419946e-01,\n'
 '         3.03073978e+00, -5.96072614e-01,  4.12403285e-01,\n'
 '        -2.56339455e+00, -1.56233347e+00, -1.53154388e-01,\n'
 '        -1.16772413e+00,  5.80002189e-01,  1.56596637e+00,\n'
 '        -7.81228125e-01, -7.08960533e-01,  4.25944686e-01,\n'
 '        -8.10333848e-01,  2.33412802e-01,  3.72179180e-01,\n'
 '        -1.64639521e+00, -2.14114129e-01,  9.81770873e-01,\n'
 '        -1.79391515e+00, -2.84278917e+00, -1.06712532e+00,\n'
 '        -2.05776620e+00, -1.87766051e+00, -1.50254297e+00,\n'
 '        -5.29390335e-01, -1.34422135e+00,  9.00639534e-01,\n'
 '         7.08362222e-01,  2.84347558e+00, -1.26146412e+00,\n'
 '         1.27789736e+00, -2.42996812e-02, -1.38933671e+00,\n'
 '         1.39867532e+00, -8.47985268e-01,  3.29283762e+00,\n'
 '         8.84907842e-02, -2.98184097e-01, -1.48726255e-01,\n'
 '        -1.12000072e+00, -2.48386192e+00,  5.29169261e-01,\n'
 '        -1.41650662e-01, -4.20162380e-01,  1.13484991e+00,\n'
 '        -3.06416094e-01,  5.53433776e-01, -1.91389358e+00,\n'
 '         1.10284364e+00, -8.84651661e-01, -1.98576093e+00,\n'
 '        -8.05999637e-01, -3.95724416e-01, -5.72038531e-01,\n'
 '        -1.44642556e+00, -1.10882945e-01, -1.88756657e+00,\n'
 '        -5.09480238e-01, -1.08907032e+00,  8.58957470e-02,\n'
 '         1.42100525e+00,  1.54123926e+00,  7.97434390e-01,\n'
 '         1.69674099e-01, -1.56033588e+00, -9.28121924e-01,\n'
 '        -1.80270898e+00, -2.41284990e+00, -8.50793421e-02,\n'
 '         4.74200100e-01, -6.63158596e-01, -1.19658315e+00,\n'
 '        -6.27189100e-01,  2.57528305e+00, -1.17418051e+00,\n'
 '         1.65680933e+00, -1.44886643e-01, -3.96832407e-01,\n'
 '         1.16480804e+00, -1.61029339e+00, -2.21363354e+00,\n'
 '         4.15655732e-01,  2.94792104e+00,  2.13922524e+00,\n'
 '        -2.35886365e-01,  1.76904535e+00, -5.63199163e-01,\n'
 '         2.29051900e+00, -8.66547823e-01,  2.66531825e-01,\n'
 '         2.38419414e+00, -2.38919067e+00, -2.47024178e+00,\n'
 '        -3.68371487e-01,  4.86047626e-01,  1.53834653e+00,\n'
 '        -1.43542588e-01,  7.81518370e-02,  1.34570777e+00,\n'
 '        -1.04259396e+00, -1.00360125e-01, -1.64078236e-01,\n'
 '         6.25306785e-01,  2.54708409e-01, -3.45374137e-01,\n'
 '        -3.00142670e+00,  1.71105790e+00,  2.48593283e+00,\n'
 '        -1.17911291e+00, -1.97037935e+00, -3.47908068e+00,\n'
 '        -8.73072028e-01, -2.30875111e+00, -6.93690896e-01,\n'
 '        -7.11240411e-01, -2.57631493e+00,  4.17265445e-01,\n'
 '         1.07163799e+00, -2.57905126e+00,  7.58341968e-01,\n'
 '        -2.13301325e+00,  2.49520159e+00,  2.92167544e-01,\n'
 '         1.58465967e-01,  7.53507435e-01,  1.07645899e-01,\n'
 '         1.73173046e+00, -3.08012056e+00, -1.19525850e+00,\n'
 '         2.03179479e+00, -3.62514079e-01, -1.62865102e+00,\n'
 '        -1.29644775e+00, -9.66005206e-01, -6.83780074e-01,\n'
 '         3.41511071e-02, -2.48908234e+00, -2.36548781e-02,\n'
 '         3.09244895e+00,  7.19088614e-02,  1.24873972e+00,\n'
 '         1.60917088e-01,  2.07056093e+00,  2.15063548e+00,\n'
 '         1.70221794e+00,  6.82228923e-01,  4.35143614e+00,\n'
 '         2.08443356e+00,  8.85816812e-01, -1.42455709e+00,\n'
 '         1.81026924e+00,  4.87216186e+00, -2.81174731e+00,\n'
 '         6.19499907e-02,  1.31437898e-01, -9.23009291e-02,\n'
 '        -1.39673352e+00, -7.04918742e-01, -4.81843740e-01,\n'
 '        -8.29808295e-01, -6.53382420e-01, -3.31099004e-01,\n'
 '        -1.62178540e+00,  1.20940471e+00,  5.90232670e-01,\n'
 '         4.42103982e-01,  6.26606643e-02,  3.48872423e-01,\n'
 '         5.34228265e-01, -2.18076062e+00,  9.15205926e-02,\n'
 '        -1.97390914e+00,  1.01676989e+00,  1.49441636e+00,\n'
 '         4.89265025e-01,  6.71239018e-01, -1.22843981e+00,\n'
 '         1.35755882e-01, -1.38432085e+00,  8.95007372e-01,\n'
 '         2.36970496e+00, -3.64169002e-01, -6.54647112e-01,\n'
 '        -9.10416126e-01, -1.24599981e+00, -1.44609833e+00,\n'
 '        -6.13359809e-02, -2.99922228e+00, -2.56011724e+00,\n'
 '        -2.65114486e-01, -2.06429291e+00,  6.90720201e-01,\n'
 '        -4.21522766e-01,  3.20301366e+00, -5.43513358e-01,\n'
 '        -3.57278919e+00, -1.13805652e+00,  6.16869974e+00,\n'
 '        -2.11102319e+00, -3.47465158e+00, -3.20234823e+00,\n'
 '        -2.06154376e-01, -1.67510104e+00, -3.47501326e+00,\n'
 '        -4.07400429e-01, -9.02087629e-01,  8.65948260e-01,\n'
 '         3.44889373e-01,  7.14109838e-03,  2.02854440e-01,\n'
 '         1.63481367e+00,  1.47952890e+00,  2.98955965e+00,\n'
 '        -1.82309759e+00, -3.57593924e-01,  4.64235812e-01,\n'
 '         3.19078374e+00,  3.17154503e+00,  5.23908424e+00,\n'
 '        -9.10148323e-01,  1.08606768e+00, -2.83608389e+00,\n'
 '         1.02929413e+00,  1.25509345e+00,  1.15320706e+00,\n'
 '         2.02047992e+00,  8.69146645e-01,  2.14958954e+00,\n'
 '        -1.77920198e+00, -4.67259645e-01,  1.87809169e-01,\n'
 '        -5.02181351e-01, -8.46116066e-01, -6.29266501e-02,\n'
 '         3.04264069e-01,  1.21705425e+00,  1.02805805e+00,\n'
 '         1.21079177e-01, -1.46884668e+00,  7.03956604e-01,\n'
 '         2.04851031e+00,  1.55631352e+00,  8.11883831e+00,\n'
 '         7.21126747e+00,  3.92322874e+00,  5.92439473e-01,\n'
 '        -1.98468655e-01,  3.80871296e-01,  1.28582382e+00,\n'
 '        -7.45699525e-01,  8.98358166e-01,  7.08937168e+00,\n'
 '         2.01630688e+01,  8.20059681e+00,  7.06520891e+00,\n'
 '         6.53319883e+00, -2.38529754e+00, -4.63497788e-01,\n'
 '        -2.20115155e-01,  1.21489382e+00, -1.17067766e+00,\n'
 '         1.77007496e+00, -1.26052713e+00,  2.02142954e+00,\n'
 '         1.21216526e+01, -2.27183151e+00, -8.91451478e-01,\n'
 '         4.84340608e-01, -1.02585912e-01, -3.22599959e+00,\n'
 '        -2.34590149e+00, -1.27848372e-01, -2.61680555e+00,\n'
 '         1.09249277e+01, -1.10056066e+00, -5.85221052e-02,\n'
 '        -2.13050365e+00,  3.91885066e+00, -5.79470575e-01,\n'
 '        -2.11907411e+00, -1.99488461e+00,  1.53283525e+00,\n'
 '         6.69397712e-01,  1.25036633e+00, -1.17675424e+00,\n'
 '         1.52199209e+00, -5.02247810e-01, -2.40486956e+00,\n'
 '        -1.74951518e+00, -2.78812599e+00,  3.06130981e+00,\n'
 '         9.61881727e-02, -2.54400611e+00, -1.21815181e+00,\n'
 '        -1.20836413e+00, -1.80677104e+00,  2.22540546e+00,\n'
 '        -3.60765487e-01, -7.15290606e-02,  6.52463317e-01,\n'
 '         1.73178375e-01, -2.77473629e-01,  4.19747978e-01,\n'
 '        -2.03260124e-01, -7.16836155e-01, -1.04289985e+00,\n'
 '        -1.40195489e+00, -8.77772987e-01, -3.23120236e-01,\n'
 '         1.72790897e+00, -3.37969518e+00, -1.63458419e+00,\n'
 '        -1.83097362e+00, -8.35292459e-01,  7.83536315e-01,\n'
 '        -1.10186803e+00,  1.15723062e+00,  2.06579304e+00,\n'
 '        -1.19084215e+00,  7.20987082e-01, -6.98782682e-01,\n'
 '         2.11863875e-01,  7.64325261e-03, -1.75090432e+00,\n'
 '        -3.98740917e-01,  1.94005525e+00,  3.63564515e+00,\n'
 '         7.52863526e-01,  4.02552597e-02, -2.78646660e+00,\n'
 '        -3.29872799e+00, -1.52256703e+00,  2.21478629e+00,\n'
 '        -1.44304621e+00, -7.35399842e-01,  3.31044793e-01,\n'
 '        -1.63177824e+00, -1.06556201e+00,  6.06849551e-01,\n'
 '         2.10535526e+00,  1.32386732e+00, -4.35605645e-01,\n'
 '        -5.35128772e-01, -1.57061672e+00, -1.42252588e+00,\n'
 '        -3.57652009e-01, -1.63098383e+00,  7.26817787e-01,\n'
 '        -6.23867750e-01,  1.87007844e-01,  3.03432035e+00,\n'
 '         1.65761367e-01,  2.33555245e+00,  1.54590094e+00,\n'
 '        -2.56153250e+00,  1.29473031e-01, -2.25887155e+00,\n'
 '         6.04195476e-01, -2.60702848e+00, -3.55473995e+00,\n'
 '        -2.68408823e+00, -2.43156147e+00,  2.27696613e-01,\n'
 '        -1.85738790e+00, -3.04488689e-01, -1.55576015e+00,\n'
 '        -1.76649439e+00, -5.46411753e-01,  3.77708167e-01,\n'
 '        -2.19073391e+00, -1.15392792e+00,  1.64549184e+00,\n'
 '        -7.89522767e-01, -5.23535609e-01,  8.24137986e-01,\n'
 '        -1.76517343e+00, -2.67250300e-01, -6.46348953e-01,\n'
 '        -6.05533719e-01,  3.26879323e-01, -2.78873849e+00,\n'
 '         1.49240029e+00, -2.49887437e-01, -8.15250456e-01,\n'
 '        -1.49926329e+00, -1.86405778e+00, -2.67034888e-01,\n'
 '        -3.67270440e-01,  1.71903968e+00, -4.52420563e-01,\n'
 '         9.89706457e-01, -1.03920484e+00,  1.16708243e+00,\n'
 '         2.09739041e+00, -4.21261728e-01, -5.65519631e-01,\n'
 '         9.62168932e-01,  1.06425011e+00,  1.70868158e+00,\n'
 '         8.29374790e-03, -7.15752363e-01, -8.79242539e-01,\n'
 '         1.32222080e+00, -1.56970882e+00, -2.77951092e-01,\n'
 '        -6.75298989e-01, -1.95861816e+00, -4.73702967e-01,\n'
 '        -7.50518501e-01, -2.35512066e+00, -3.86105925e-01,\n'
 '         4.65532243e-01, -1.36457777e+00, -5.93730927e-01,\n'
 '         7.21658170e-01, -3.63073134e+00, -1.48095274e+00,\n'
 '        -1.96923092e-01, -1.17399454e-01,  1.98372328e+00,\n'
 '        -1.31419823e-01,  5.80612779e-01,  2.64152348e-01,\n'
 '        -9.87823427e-01, -1.04688630e-01, -1.18494010e+00,\n'
 '         2.70979732e-01,  3.13357997e+00,  6.92130268e-01,\n'
 '        -1.19387612e-01, -1.17861676e+00,  1.05895549e-02,\n'
 '        -2.70234972e-01,  1.26013196e+00,  1.98522508e+00,\n'
 '         2.00085819e-01,  2.60652208e+00, -1.61334419e+00,\n'
 '         5.02133816e-02,  1.50687528e+00, -1.23808956e+00,\n'
 '        -1.21367502e+00, -4.06887889e-01, -7.01213777e-01,\n'
 '         1.03388298e+00, -5.92005432e-01,  2.95982570e-01,\n'
 '        -1.18475091e+00, -1.81927711e-01, -1.76104009e+00,\n'
 '         2.59228468e+00, -4.63512808e-01, -1.06418478e+00,\n'
 '         5.73344290e-01, -3.88000488e-01, -3.29952908e+00,\n'
 '         7.42469668e-01,  1.83550775e+00,  1.31004348e-01,\n'
 '        -5.04975319e-01, -1.08822334e+00, -1.48126578e+00,\n'
 '        -4.26781654e-01,  1.38221890e-01,  1.28545833e+00,\n'
 '        -6.81640506e-02,  1.90809220e-02,  2.25406504e+00,\n'
 '        -1.61401582e+00, -1.14583290e+00,  5.54223347e+00,\n'
 '        -1.40390444e+00,  1.62053525e+00, -1.24879360e+00,\n'
 '         1.85684121e+00,  2.95879662e-01, -2.80600810e+00,\n'
 '        -3.37560207e-01,  1.59385562e+00, -2.25605869e+00,\n'
 '         1.61060286e+00,  1.63878346e+00, -1.33643639e+00,\n'
 '         6.23517513e-01,  3.72088551e-01,  2.47773349e-01,\n'
 '        -1.86355066e+00, -1.53268957e+00, -6.48966432e-03,\n'
 '         2.78190756e+00, -1.58065569e+00, -3.83531260e+00,\n'
 '        -7.10874438e-01,  1.08980382e+00, -2.29512238e+00,\n'
 '         1.25596130e+00, -1.60883570e+00,  1.55732572e-01,\n'
 '        -6.81040585e-01,  1.67720544e+00, -7.81071544e-01,\n'
 '        -1.44513369e+00, -9.22301412e-02,  8.54960680e-01,\n'
 '         3.44775128e+00, -4.27874923e-02, -8.33690524e-01,\n'
 '        -6.54315710e-01, -8.68200064e-02,  1.34387851e-01,\n'
 '        -7.35022187e-01, -1.06411815e+00, -1.00688708e+00,\n'
 '        -2.54107118e+00, -5.95294476e-01, -3.40470970e-01,\n'
 '         5.95810592e-01, -2.71297550e+00, -5.97277582e-01,\n'
 '         2.39310861e-02, -5.20259261e-01, -1.11097741e+00,\n'
 '         4.77688789e-01, -1.28385198e+00,  5.06472230e-01,\n'
 '         8.61845613e-01,  1.96445537e+00, -1.36857081e+00,\n'
 '        -1.32552612e+00, -7.66959250e-01, -1.63630867e+00,\n'
 '         4.87498426e+00, -3.11283439e-01, -5.17389357e-01,\n'
 '         1.55082583e+00,  5.75291812e-01, -2.94176668e-01,\n'
 '        -6.45457208e-01,  5.18554330e-01, -1.38011384e+00,\n'
 '         2.10453653e+00, -4.51416224e-02, -2.64734554e+00,\n'
 '         1.19266164e+00, -3.32652867e-01,  2.74393225e+00,\n'
 '        -6.76487207e-01, -2.60635305e+00,  1.98176646e+00,\n'
 '        -1.06409383e+00,  3.54489267e-01,  2.71889567e+00,\n'
 '         1.21219099e+00,  3.45582545e-01,  1.28279400e+00,\n'
 '         1.17356217e+00,  2.16326213e+00,  1.53212058e+00,\n'
 '         1.52993965e+00, -6.80092335e-01,  8.88936758e-01,\n'
 '        -3.20601153e+00,  6.94774270e-01,  1.94847137e-01,\n'
 '         2.17475817e-01, -7.24601448e-02, -8.63700271e-01,\n'
 '         3.88468695e+00, -1.17438888e+00, -1.38416254e+00,\n'
 '         1.07844746e+00, -1.05555803e-01,  1.88506973e+00,\n'
 '        -1.22208846e+00,  2.05182338e+00, -2.01433599e-02,\n'
 '         7.47214973e-01,  1.10677075e+00,  2.72091270e-01,\n'
 '        -5.39833725e-01, -9.52873290e-01,  1.01057917e-01,\n'
 '        -4.69205618e-01, -2.78407407e+00,  1.70080566e+00,\n'
 '        -7.78639913e-01,  2.31503463e+00, -1.06612027e+00,\n'
 '         2.63416433e+00,  3.37333143e-01, -5.77689767e-01,\n'
 '        -1.08877659e+00, -1.99080181e+00, -2.55194449e+00,\n'
 '        -2.46993685e+00, -1.08827591e+00,  7.28446543e-02,\n'
 '         6.34374857e-01,  1.42928827e+00, -2.44968116e-01,\n'
 '         2.88465333e+00,  1.24517691e+00, -1.87597334e+00,\n'
 '         2.72346616e-01, -1.12285840e+00,  1.47815275e+00,\n'
 '         7.83275485e-01,  5.14925182e-01,  5.83760202e-01,\n'
 '        -1.79177773e+00, -1.30281532e+00, -2.47864038e-01,\n'
 '        -1.04485321e+00, -3.68890047e+00, -2.53361201e+00,\n'
 '         1.93971241e+00,  1.40911674e+00,  7.61622369e-01,\n'
 '         7.73389936e-01,  3.14298797e+00,  1.36687517e+00,\n'
 '        -2.15949750e+00,  3.51990676e+00,  2.39097655e-01,\n'
 '        -1.19529486e+00, -5.95654786e-01, -1.08678556e+00,\n'
 '         2.05561399e+00, -7.97448278e-01, -1.07490122e+00,\n'
 '         2.55276531e-01, -1.46219134e+00,  4.56467152e-01,\n'
 '         4.14762616e-01, -5.44059992e-01, -3.02918029e+00,\n'
 '        -9.64686096e-01, -2.00413013e+00, -1.99255753e+00,\n'
 '         3.07804918e+00,  1.57244289e+00, -7.25112021e-01,\n'
 '        -1.45939445e+00, -2.97288537e-01, -2.12096977e+00,\n'
 '         6.84331536e-01,  5.71794063e-02, -1.65073538e+00,\n'
 '        -1.13697314e+00, -3.33943677e+00,  9.72787440e-02,\n'
 '        -1.54092097e+00, -2.62148619e+00, -2.24220943e+00,\n'
 '        -1.95384169e+00,  8.33528400e-01,  4.34702128e-01,\n'
 '        -1.35586882e+00, -7.46111155e-01,  7.89756119e-01,\n'
 '         1.12481654e+00,  4.13076073e-01, -2.57809234e+00,\n'
 '         1.51998627e+00,  1.68201470e+00,  5.32171726e-01,\n'
 '         1.32351005e+00, -1.38932657e+00, -4.76891488e-01,\n'
 '         6.93132758e-01,  2.39751744e+00, -2.35556340e+00,\n'
 '        -6.15563244e-03, -4.77954119e-01,  8.43088031e-02,\n'
 '        -2.20109606e+00,  2.76056123e+00, -1.98084891e-01,\n'
 '        -7.22166300e-01, -7.88032770e-01, -2.26754999e+00,\n'
 '         3.00723970e-01, -4.22441602e-01, -5.29940367e-01,\n'
 '         2.94155288e+00, -1.79727745e+00,  6.80025280e-01,\n'
 '        -2.92411756e+00,  1.07489944e+00, -5.64055800e-01,\n'
 '         1.50885671e-01,  1.00566328e-01,  2.74354958e+00,\n'
 '        -1.98977783e-01, -1.52221143e+00,  1.05840516e+00,\n'
 '        -2.15356612e+00, -4.24312532e-01, -1.19498157e+00,\n'
 '        -2.60942626e+00,  8.08721840e-01,  2.56022048e+00,\n'
 '        -3.95387322e-01, -1.04948401e+00,  1.72170889e+00,\n'
 '         2.89778256e+00,  3.50421876e-01, -1.53518903e+00,\n'
 '        -1.50877535e-02,  1.70444477e+00, -1.08025444e+00,\n'
 '         1.12124681e+00,  1.47645429e-01,  8.97932172e-01,\n'
 '        -1.38497233e-01, -1.90451240e+00, -2.59265041e+00,\n'
 '         8.97112787e-02,  2.97147560e+00,  1.11937225e+00,\n'
 '        -2.75091827e-02, -7.48888850e-01, -1.58175677e-01,\n'
 '         8.63385796e-02,  1.22606087e+00, -1.56703591e-03,\n'
 '         3.46128613e-01, -2.53664136e-01, -5.10109842e-01,\n'
 '        -1.73271328e-01, -1.55424535e-01, -2.85692382e+00,\n'
 '         9.33105171e-01, -1.02339670e-01,  7.49079645e-01,\n'
 '        -2.18751267e-01,  4.75603074e-01, -7.24228263e-01,\n'
 '        -1.24132419e+00, -1.34188676e+00,  3.51926804e+00,\n'
 '        -2.37755626e-02, -2.68037820e+00,  1.19249654e+00,\n'
 '        -1.85413635e+00,  1.17010105e+00, -6.53414905e-01,\n'
 '        -3.42358828e+00, -3.06064701e+00,  2.15612114e-01,\n'
 '         6.82704508e-01,  1.02464402e+00, -1.45351112e-01,\n'
 '         3.56746912e-01, -4.54371452e+00, -7.39405513e-01,\n'
 '         1.88474238e+00, -1.50111186e+00, -1.06507242e+00,\n'
 '        -2.09013313e-01, -7.81865835e-01,  9.10835862e-02,\n'
 '         1.66527271e-01,  7.57110178e-01, -1.36914253e+00,\n'
 '        -1.03425312e+00, -1.11618376e+00,  1.38084757e+00,\n'
 '        -1.80820727e+00,  1.03013110e+00,  1.20629519e-01,\n'
 '        -1.54958141e+00, -1.11065423e+00,  1.21273124e+00,\n'
 '         1.34573948e+00, -3.13305378e-01,  1.82774544e-01,\n'
 '        -1.25829494e+00, -5.14903843e-01, -2.37184739e+00,\n'
 '        -6.30363584e-01, -1.18974018e+00,  2.35526252e+00,\n'
 '        -8.14132333e-01,  1.62624669e+00,  1.63390100e+00,\n'
 '         1.19518220e+00,  2.05161661e-01,  2.91287780e-01,\n'
 '        -5.90235703e-02, -1.22389114e+00, -2.81935763e+00,\n'
 '        -9.87609401e-02, -1.50118589e-01,  1.70896339e+00,\n'
 '         1.37431908e+00,  1.31381679e+00,  1.07274139e+00,\n'
 '        -8.29192698e-01, -1.23472345e+00, -3.04718876e+00,\n'
 '        -1.96929050e+00,  6.51436031e-01,  3.71055007e-02,\n'
 '         1.81587780e+00, -2.34815788e+00,  1.11132217e+00,\n'
 '        -1.94706607e+00,  2.17964244e+00, -1.14534617e-01,\n'
 '         2.21907043e+00, -7.67977595e-01, -3.09706473e+00,\n'
 '         4.34869319e-01,  1.59059060e+00, -2.39031458e+00,\n'
 '         6.47818625e-01, -1.01147699e+00,  4.56368923e-01,\n'
 '        -1.15018535e+00, -6.87538266e-01, -6.89374328e-01,\n'
 '         6.47392988e-01, -1.25273585e+00,  9.61625457e-01,\n'
 '        -4.40120041e-01,  1.86362851e+00,  2.29192138e+00,\n'
 '        -2.36773062e+00, -2.08299279e+00, -1.44005939e-01,\n'
 '         1.00043428e+00,  4.71750110e-01, -6.16518795e-01,\n'
 '         7.79133141e-01, -7.88272858e-01,  1.80879384e-01,\n'
 '         4.00585699e+00, -7.78808296e-01, -1.82618666e+00,\n'
 '        -1.73063707e+00, -1.99529600e+00,  6.01878226e-01,\n'
 '        -1.06264305e+00,  6.14698410e-01, -5.33623755e-01,\n'
 '         1.00840473e+00,  3.75812084e-01,  8.14380348e-01,\n'
 '        -1.09455323e+00,  8.98933947e-01,  3.02261758e+00,\n'
 '        -1.03210616e+00, -1.09418845e+00,  1.21784538e-01,\n'
 '         2.05754113e+00, -1.24001205e-02, -4.64283943e-01,\n'
 '        -1.22522664e+00, -1.53272182e-01,  1.50544092e-01,\n'
 '         5.53274155e-01, -1.94731200e+00, -2.30843759e+00,\n'
 '         1.84021807e+00,  6.00078940e-01,  1.47349274e+00,\n'
 '        -8.04253459e-01, -5.78875363e-01, -5.38029075e-01,\n'
 '        -1.16575360e+00, -1.80665076e+00,  2.53692842e+00,\n'
 '        -6.50772154e-01, -1.55197835e+00, -2.52314210e-02,\n'
 '         1.24801660e+00, -7.08066344e-01, -1.12496901e+00,\n'
 '        -8.24284732e-01,  8.95351768e-01,  1.72297847e+00,\n'
 '        -9.92346480e-02,  1.61923134e+00, -2.21301824e-01,\n'
 '        -2.47797310e-01, -3.64454269e-01,  1.32153368e+00,\n'
 '        -2.10622048e+00,  1.22870445e+00,  9.59612310e-01,\n'
 '        -5.43536246e-03,  8.26630950e-01,  5.33627272e-01,\n'
 '         3.59174788e-01, -6.75166488e-01, -8.83346915e-01,\n'
 '        -1.99885166e+00, -1.58819020e-01, -3.01470995e+00,\n'
 '        -3.00845838e+00,  6.64594293e-01, -4.58258390e-02,\n'
 '        -1.11349130e+00,  2.98762113e-01,  8.47515106e-01,\n'
 '         7.60207713e-01,  3.83380365e+00,  1.43156016e+00,\n'
 '         1.78316355e+00, -1.18993783e+00, -1.07858276e+00,\n'
 '         7.90824294e-01,  7.46510148e-01, -4.59166229e-01,\n'
 '         1.47684503e+00,  1.15117466e+00,  1.15789974e+00,\n'
 '        -1.90848276e-01,  1.49698031e+00, -1.02113116e+00,\n'
 '         6.92938268e-01,  1.60229588e+00,  2.16244012e-01,\n'
 '         3.59156668e-01, -1.73745859e+00, -1.70057332e+00,\n'
 '        -4.88063127e-01, -2.68671775e+00, -1.18956089e-01,\n'
 '        -2.38601238e-01, -1.47724211e+00, -2.34815264e+00,\n'
 '        -2.14923292e-01, -3.65087390e-01,  2.03526449e+00,\n'
 '         4.89775211e-01,  1.02978921e+00,  1.66062748e+00,\n'
 '         1.73271179e+00, -2.59752750e-01, -1.00482321e+00,\n'
 '        -7.68880308e-01, -7.39273906e-01,  1.99048996e-01,\n'
 '        -3.84460688e-01,  1.12737691e+00,  9.17516708e-01,\n'
 '         4.58663136e-01,  5.55522680e-01,  8.58351469e-01,\n'
 '         2.62417841e+00, -1.45410538e-01,  4.45125550e-01,\n'
 '        -1.07375574e+00,  1.01625812e+00, -6.32211089e-01,\n'
 '        -1.03982401e+00,  2.00102449e-01,  1.01684421e-01,\n'
 '        -1.72723949e-01,  1.70198798e+00, -2.32414246e+00,\n'
 '         8.59169364e-02, -4.45558906e-01, -1.32579637e+00,\n'
 '         1.94786358e+00, -8.30754638e-03,  5.85152030e-01,\n'
 '        -1.55880594e+00,  4.10791814e-01,  3.51029396e+00,\n'
 '         2.48573375e+00, -1.34753621e+00, -1.27622783e-01,\n'
 '        -3.67972046e-01, -2.55808663e+00,  3.06195468e-02,\n'
 '        -6.58536136e-01, -9.84725952e-01,  2.92740613e-01,\n'
 '        -7.48113617e-02, -5.16441941e-01, -5.80038190e-01,\n'
 '         4.05926377e-01, -1.61905193e+00, -1.31077445e+00,\n'
 '        -4.32823479e-01, -3.38802052e+00, -6.95903540e-01,\n'
 '        -5.27856112e-01, -1.45819187e+00, -2.01470685e+00,\n'
 '        -1.94220468e-01]])')
'test_inceptionnet | batch_shape is: [1]'
'test_inceptionnet | logits.shape is: ivy.Shape(1, 1000)'
'||'
'test_inceptionnet | indices_test | true_indices is: [258 270 279]'
'test_inceptionnet | indices_test | calc_indices is: [258 270 279]'
'test_inceptionnet | device is: cpu'
'test_inceptionnet | fw is: jax'
'test_inceptionnet | load_weights is: False'
'InceptionV3 | build | layer 1/22 built'
'InceptionV3 | build | layer 2/22 built'
'layer 3/22 built'
'InceptionV3 | build | layer 4/22 built'
'InceptionV3 | build | layer 5/22 built'
'InceptionV3 | build | layer 6/22 built'
'InceptionV3 | build | layer 7/22 built'
'InceptionV3 | build | layer 8/22 built'
'InceptionV3 | build | layer 9/22 built'
'InceptionV3 | build | layer 10/22 built'
'InceptionV3 | build | layer 11/22 built'
'InceptionV3 | build | layer 12/22 built'
'InceptionV3 | build | layer 13/22 built'
'InceptionV3 | build | layer 14/22 built'
'InceptionV3 | build | layer 15/22 built'
'InceptionV3 | build | layer 17/22 built'
'InceptionV3 | build | layer 18/22 built'
'InceptionV3 | build | layer 19/22 built'
'InceptionV3 | build | layer 20/22 built'
'InceptionV3 | build | layer 21/22 built'
'InceptionV3 | build | layer 22/22 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/4 built'
'layer 2/4 built'
'layer 3/4 built'
'layer 4/4 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/6 built'
'layer 2/6 built'
'layer 3/6 built'
'layer 4/6 built'
'layer 5/6 built'
'layer 6/6 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'inceptionNet_v3 | building InceptionV3 model | done 1/3'
'InceptionV3 | forward | input data_format is:NHWC | done 1/27'
'InceptionV3 | forward | data_format is going to be used is:NHWC | done 1/27'
'InceptionV3 | forward | input shape is:ivy.Shape(1, 224, 224, 3) | done 1/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 224, 224, 3) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 111, 111, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 111, 111, 32) | done 2/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 111, 111, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 32) | done 3/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 109, 109, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 64) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 64) | done 4/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 54, 54, 64) | done 5/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 54, 54, 80) | done 3/3'
'InceptionV3 | forward | is:ivy.Shape(1, 54, 54, 80) | done 6/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 80) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 52, 52, 192) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 52, 52, 192) | done 7/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 192) | done 8/27'
'input shape is:ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 32) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 32)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 25, 25, 256) | done 9/27'
'input shape is:ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 10/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 11/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 384) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 96) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 96)'
'one 20/20, output shape is:ivy.Shape(1, 12, 12, 288)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 12/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 12, 12, 768) | done 13/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 14/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 15/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 16/27'
'v3 16/27, output shape is:ivy.Shape(1, 12, 12, 768)'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 5, 5, 192)'
'one 7/20, output shape is:ivy.Shape(1, 5, 5, 768)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 1280) | done 17/27'
'input shape is:ivy.Shape(1, 5, 5, 1280)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 18/27'
'input shape is:ivy.Shape(1, 5, 5, 2048)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 19/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 20/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 5, 5) | done 21/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 1, 1) | done 22/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 27/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 24/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 25/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048) | done 26/27'
'InceptionV3 | forward | fc | done 27/27'
('test_inceptionnet | logits is: ivy.array([[ 2.27084395e+04,  9.02972500e+05, '
 '-1.48047031e+05,\n'
 '         1.50825562e+06,  7.02987812e+04,  2.68975719e+05,\n'
 '         6.10630688e+05,  6.24932812e+05,  1.30753211e+05,\n'
 '        -5.68577062e+05, -3.33157781e+05, -2.83188875e+05,\n'
 '         2.90093965e+04,  1.87509625e+05,  2.02536762e+06,\n'
 '         2.20257625e+05,  4.01504375e+05,  4.65943594e+04,\n'
 '        -1.58974672e+05,  9.40858875e+05,  4.19863281e+05,\n'
 '        -2.17941516e+05,  7.28214922e+04, -1.25830800e+06,\n'
 '        -7.19036484e+04,  3.19953594e+05,  1.62201538e+06,\n'
 '         7.42074062e+04,  5.88096438e+05, -1.70515750e+05,\n'
 '         4.23096133e+04,  2.08597375e+06, -1.19681888e+06,\n'
 '        -4.84080656e+05,  5.37465438e+05,  3.94377531e+05,\n'
 '         1.37637688e+06,  1.46621175e+06, -7.28789938e+05,\n'
 '         8.54831719e+04,  2.76134062e+05,  8.09559938e+05,\n'
 '         1.98899562e+05,  1.30644971e+04,  6.01807875e+05,\n'
 '         1.45819425e+06, -4.75434344e+05, -2.17449297e+05,\n'
 '         8.89954438e+05, -2.15412141e+05, -5.15748719e+05,\n'
 '        -8.10930688e+05,  1.21651850e+06, -7.21186062e+05,\n'
 '        -8.53000312e+05,  7.15168125e+04, -1.36163438e+05,\n'
 '         1.48243750e+05, -6.57639438e+05, -1.20536297e+05,\n'
 '        -1.18773075e+06, -5.68357250e+05, -8.83685312e+04,\n'
 '        -5.18229719e+05,  7.62716328e+04, -4.06820562e+05,\n'
 '        -4.36336656e+05,  1.60518675e+06, -3.06847469e+05,\n'
 '         6.21513562e+05,  5.66296750e+05,  8.42708516e+04,\n'
 '         9.35234625e+05, -2.00088172e+05,  1.16045050e+06,\n'
 '        -1.29850712e+06, -5.21900625e+05,  1.43596699e+04,\n'
 '         4.19007812e+05,  2.19740047e+05, -7.69785812e+05,\n'
 '         2.27287297e+05,  2.99672281e+05, -1.07860200e+06,\n'
 '        -9.58209125e+05,  1.23176609e+05,  6.40560062e+05,\n'
 '        -4.32720438e+05, -1.01383356e+06,  7.69803500e+05,\n'
 '        -4.29292906e+05,  2.63589875e+05,  1.24375112e+06,\n'
 '        -2.75201938e+05,  8.32796250e+05, -1.09594350e+06,\n'
 '         1.74809422e+05,  7.53624812e+05, -9.21690812e+05,\n'
 '        -1.21390875e+06,  8.20893625e+05,  9.73333500e+05,\n'
 '        -9.29228188e+05,  4.75898094e+05, -3.18229629e+04,\n'
 '        -3.21347312e+05, -1.85609638e+06,  1.43289750e+06,\n'
 '         7.85911484e+04, -6.27003250e+05, -1.78421825e+06,\n'
 '        -1.50463438e+06, -7.72830188e+05,  6.63451000e+05,\n'
 '        -5.87725438e+05,  1.36936212e+06,  1.04382150e+06,\n'
 '        -1.46193734e+05,  8.18876648e+02, -7.63183875e+05,\n'
 '         8.05949438e+05, -1.36493266e+05, -2.79889188e+05,\n'
 '         5.30569625e+05,  3.55141250e+05,  9.71362625e+05,\n'
 '        -7.56824125e+05,  6.17819625e+05, -8.90573594e+04,\n'
 '         5.77750703e+04, -6.86414688e+05,  8.09985312e+05,\n'
 '        -5.11538188e+05,  3.88458625e+05,  3.37547375e+05,\n'
 '         2.17688781e+05, -7.35891750e+05,  1.46289638e+06,\n'
 '         1.23493500e+06,  2.48038391e+05, -2.07810098e+04,\n'
 '        -9.59415188e+05,  2.65621062e+05,  2.43146609e+05,\n'
 '         1.22876212e+06, -9.83687750e+05, -3.88731094e+05,\n'
 '        -3.95030031e+05,  6.26916250e+05,  1.15571450e+06,\n'
 '         2.41193391e+05,  1.85555838e+06, -6.50659812e+05,\n'
 '         4.59495094e+05,  2.61582484e+05,  1.72828625e+06,\n'
 '        -1.02234769e+06, -4.56392656e+05,  5.22639281e+05,\n'
 '         8.57937125e+05,  8.31108438e+05,  2.33619359e+05,\n'
 '         4.92552422e+04,  4.39586812e+05, -1.35213238e+06,\n'
 '         7.16408500e+05,  3.20125449e+04,  2.40780906e+05,\n'
 '         6.80569625e+05,  7.89717812e+05, -1.15271175e+06,\n'
 '        -7.02726438e+05, -3.81885688e+05, -1.96929375e+05,\n'
 '        -2.92472875e+05,  1.30884212e+06, -3.95611125e+05,\n'
 '        -3.74716281e+05, -7.51081812e+05,  5.76059938e+05,\n'
 '        -5.64187109e+04, -6.60568438e+05, -7.08046000e+05,\n'
 '         7.78135562e+05,  2.18974453e+05,  7.40767125e+05,\n'
 '        -1.82856172e+05,  3.12592406e+05, -5.47137125e+05,\n'
 '         7.52161406e+04,  3.62288875e+05,  2.25959578e+05,\n'
 '         1.92623612e+06,  3.07432719e+05,  6.98658750e+05,\n'
 '         7.66415391e+04, -1.33137031e+05,  2.59632188e+05,\n'
 '         7.32712688e+05, -1.45349638e+06,  1.75446488e+06,\n'
 '         8.16790781e+04,  9.09932812e+05, -1.91672725e+06,\n'
 '        -4.99043438e+05, -1.13303212e+06, -2.00186469e+05,\n'
 '        -3.28237062e+05,  4.94655969e+05, -2.03303000e+06,\n'
 '         1.03794875e+05, -1.31923100e+06, -5.64653164e+04,\n'
 '         1.21348325e+06,  9.07457500e+05,  5.37380688e+05,\n'
 '         1.40278250e+05,  3.79335750e+05,  1.25540625e+06,\n'
 '         3.75894375e+05, -2.62877109e+04,  1.95657900e+06,\n'
 '        -1.46682812e+06, -1.08184250e+06,  9.01433312e+05,\n'
 '         1.54767281e+05, -3.73943688e+05,  1.07149412e+06,\n'
 '         1.04456856e+06,  1.78476609e+05, -6.26699188e+05,\n'
 '         1.04802531e+05, -4.39842750e+05, -4.61283281e+05,\n'
 '         4.22378312e+05,  8.72257125e+05, -4.11975719e+05,\n'
 '         5.51981938e+05, -5.99553938e+05, -3.97749594e+05,\n'
 '        -1.32340812e+06,  1.20767451e+04,  1.14941812e+06,\n'
 '        -1.07244797e+05, -7.22422062e+05,  2.61445547e+05,\n'
 '         1.37003450e+06, -6.91242875e+05,  4.60995219e+05,\n'
 '        -3.92568031e+05,  2.48722141e+05,  6.71538750e+04,\n'
 '        -1.44004312e+05,  2.88087781e+05, -6.22725062e+05,\n'
 '        -8.64359688e+05, -1.60492031e+05, -6.48684375e+05,\n'
 '         1.87939500e+05,  1.98981189e+03, -8.94329812e+05,\n'
 '        -1.01909269e+06, -1.84213531e+05,  1.48209450e+06,\n'
 '         1.39470075e+06,  1.37372850e+06,  2.15668691e+04,\n'
 '         6.27385750e+05,  1.09853012e+06, -2.86074219e+05,\n'
 '         5.03453781e+05, -1.60696062e+05,  2.05210200e+06,\n'
 '         5.86930500e+05,  1.40264038e+06, -2.50633422e+05,\n'
 '        -4.92803688e+05,  4.02463000e+05,  5.33786062e+05,\n'
 '        -3.05854719e+05, -7.87882375e+05, -5.14118969e+05,\n'
 '        -2.73146156e+05, -5.01138375e+05, -1.48372859e+05,\n'
 '        -1.15602388e+06,  1.47207641e+05, -5.15511062e+05,\n'
 '        -5.70746445e+04,  1.91043672e+05,  7.57703875e+05,\n'
 '         1.05512925e+06, -9.28310750e+05, -3.12541344e+05,\n'
 '        -1.90201100e+06, -4.62225664e+04, -9.08511062e+05,\n'
 '         1.09302539e+05, -4.85479438e+05, -1.02674269e+06,\n'
 '         3.36556062e+05, -7.47929141e+04, -4.60339656e+05,\n'
 '         3.89840500e+05,  2.05095266e+05, -2.60315750e+05,\n'
 '         5.35608000e+05, -1.56728712e+06,  7.43279750e+05,\n'
 '         3.97453250e+05,  4.54822031e+04,  1.36477850e+06,\n'
 '        -1.75557938e+05, -4.16768312e+05, -7.46268438e+05,\n'
 '        -5.54310000e+05, -1.00233606e+06,  1.68918050e+06,\n'
 '         1.00425431e+06,  3.55155250e+05,  6.23095188e+05,\n'
 '         2.92622250e+05, -1.06731125e+06,  2.08332219e+05,\n'
 '        -1.07421050e+06,  5.49440750e+05,  1.07688850e+06,\n'
 '         2.59701406e+05, -7.62969188e+05, -7.74702250e+05,\n'
 '         1.04487088e+06,  1.57227788e+06, -6.96917125e+05,\n'
 '         9.38282938e+05,  1.14312662e+06,  2.09476850e+06,\n'
 '         2.29207844e+05,  7.65937000e+05, -1.64462725e+06,\n'
 '        -5.71962383e+04,  1.37637688e+05, -1.05242800e+06,\n'
 '        -1.90963703e+05,  6.35949875e+05,  1.56954800e+06,\n'
 '        -1.26616612e+06,  3.95247812e+05,  1.99192297e+05,\n'
 '        -1.86013900e+06, -5.16028672e+04,  2.83365410e+04,\n'
 '         3.82021000e+05, -9.37556938e+05, -1.07378162e+06,\n'
 '         1.19848195e+05, -8.46073812e+05,  6.38205312e+05,\n'
 '         1.22826172e+05,  4.05804281e+05, -2.86442344e+05,\n'
 '         4.83463938e+05,  4.12525500e+05,  8.38660500e+05,\n'
 '        -1.14768638e+06,  3.76596000e+05,  5.48542500e+04,\n'
 '         7.93801000e+05,  6.86907000e+05, -4.52541219e+05,\n'
 '        -8.01828438e+05,  6.98008000e+05, -7.03807312e+05,\n'
 '         4.46524156e+05,  5.03399453e+04,  1.19284400e+06,\n'
 '        -1.37792912e+06, -5.55808375e+05,  1.76651297e+05,\n'
 '        -4.96840000e+05, -1.11596538e+06,  3.82885000e+05,\n'
 '        -1.41837875e+06,  1.65940312e+06,  4.12881188e+05,\n'
 '        -1.82565225e+06, -3.70386844e+05, -3.95065594e+05,\n'
 '        -1.20748488e+06, -4.21470812e+05,  8.45168688e+05,\n'
 '         5.56933750e+05, -6.94625812e+05, -1.14152266e+05,\n'
 '        -1.33040100e+06, -3.59714812e+05, -9.90715625e+05,\n'
 '        -7.71940562e+05,  7.21533188e+05, -1.27485462e+06,\n'
 '         1.72848300e+06, -1.53974188e+06,  5.98841375e+05,\n'
 '        -9.87896312e+05, -5.52485352e+04,  6.14740250e+05,\n'
 '         9.76677875e+05, -4.18782062e+05,  7.34768375e+05,\n'
 '         4.23655438e+05, -1.35882175e+06,  8.81446312e+05,\n'
 '         3.90757938e+05, -2.80798188e+05,  5.04923438e+05,\n'
 '        -6.51337438e+05,  1.90480656e+05,  2.95388156e+05,\n'
 '        -7.26610312e+04,  4.46717594e+05,  1.17269150e+06,\n'
 '         1.15506398e+05,  1.48547078e+05, -1.39120500e+05,\n'
 '         1.14865562e+06,  3.46532000e+05,  3.26983531e+05,\n'
 '        -5.15743156e+05,  4.13009594e+05, -6.02194375e+05,\n'
 '         1.42647725e+06,  1.07936836e+05, -6.82474438e+05,\n'
 '        -1.14221188e+05,  1.36054525e+06, -1.62322351e+03,\n'
 '         1.97578828e+05,  8.84178750e+05,  2.62142891e+05,\n'
 '        -3.95521094e+05,  5.83997812e+05, -1.06751912e+06,\n'
 '         4.21863625e+05,  7.49413750e+05, -1.07173212e+06,\n'
 '         8.22961719e+04, -3.07678531e+05, -2.22025975e+06,\n'
 '         1.40206875e+05, -8.68673438e+04, -7.31904453e+04,\n'
 '        -9.29801625e+05,  2.30731150e+06, -9.21194438e+05,\n'
 '         2.30537688e+05,  5.40924500e+05,  2.81615469e+05,\n'
 '         6.15488062e+05,  8.14787688e+05, -2.64272125e+05,\n'
 '         3.32288094e+05, -5.68552750e+05,  6.84758312e+05,\n'
 '         8.62265312e+05, -6.31073000e+05, -5.40629625e+05,\n'
 '         2.48431469e+05, -1.80827475e+06,  1.38531862e+06,\n'
 '         7.99734562e+05,  2.01591750e+06, -4.40999170e+03,\n'
 '         5.14470156e+05, -1.26430912e+06, -1.39299525e+06,\n'
 '         2.61358422e+05, -1.00200438e+06, -1.36715850e+06,\n'
 '         6.88174250e+05,  4.05390281e+05,  6.75570438e+05,\n'
 '        -2.13560273e+04, -1.15000412e+06,  1.55199953e+05,\n'
 '         5.30019688e+05,  7.71797062e+05, -1.58354859e+05,\n'
 '         1.79690844e+05,  1.50209512e+06,  4.19722344e+05,\n'
 '         3.62443062e+05, -7.28148250e+05,  3.49982422e+04,\n'
 '        -1.68797625e+06,  9.42571328e+04, -1.44442025e+06,\n'
 '         1.19755312e+04,  8.98598125e+05, -8.98940859e+04,\n'
 '         1.06205712e+06,  1.08757312e+06,  5.78625156e+04,\n'
 '         8.20948125e+04,  5.70025125e+05, -2.19163531e+05,\n'
 '        -3.58901938e+05,  1.78374297e+04, -2.43691484e+05,\n'
 '         2.49889531e+05, -6.41067125e+05,  4.87933250e+05,\n'
 '        -1.70969016e+05, -1.02148819e+06,  1.52062062e+06,\n'
 '        -7.30923188e+05,  6.97791875e+05, -5.50513188e+05,\n'
 '         1.80171138e+06,  4.45116188e+05, -1.85772359e+05,\n'
 '         1.16753800e+06, -3.94404500e+05, -1.00639300e+06,\n'
 '        -3.59689375e+05, -1.64956922e+05, -1.40841362e+06,\n'
 '        -5.53734424e+03, -3.62630094e+05, -1.17618088e+06,\n'
 '        -1.40571391e+05, -1.43034038e+06, -4.50712688e+05,\n'
 '        -7.96505938e+04,  1.50337362e+06, -1.49241975e+06,\n'
 '        -2.02633531e+05,  2.15233000e+05, -3.63074406e+05,\n'
 '        -6.14222383e+04, -4.22021523e+04, -8.65703375e+05,\n'
 '         8.11547375e+05, -1.60554312e+05,  6.22248625e+05,\n'
 '        -5.31342375e+05,  6.95865625e+04, -8.20804188e+05,\n'
 '        -7.52556688e+05,  8.02795812e+05, -5.64986812e+05,\n'
 '         7.06484219e+04, -2.75366969e+05, -1.13889062e+06,\n'
 '         3.96665219e+05, -1.65347462e+06,  3.81297070e+04,\n'
 '         4.02649438e+05,  1.25365138e+06,  1.27079462e+06,\n'
 '        -4.95469656e+05, -1.82857219e+05, -1.25939212e+06,\n'
 '         9.67801688e+05, -1.88724438e+05, -1.50761175e+06,\n'
 '        -1.44138562e+05,  4.24874594e+05, -2.61173625e+05,\n'
 '         8.08446625e+05, -9.50742188e+04, -4.42479812e+05,\n'
 '         4.68949125e+05, -3.39622250e+05,  1.70392350e+06,\n'
 '        -3.12471000e+05, -9.01093812e+05, -2.24732641e+05,\n'
 '         5.97289500e+05, -1.52318150e+06,  2.98857375e+05,\n'
 '        -4.96681688e+05, -1.03513012e+06,  8.90078188e+05,\n'
 '         1.94942391e+05,  6.13725742e+04,  5.47331812e+05,\n'
 '         1.34681650e+06, -2.97997594e+05, -1.22748075e+06,\n'
 '        -1.94616016e+05,  9.84827375e+05,  3.76015844e+05,\n'
 '        -1.00222258e+05,  8.62951688e+05, -5.93963984e+04,\n'
 '        -3.56981594e+05, -1.99279125e+05,  9.49325438e+05,\n'
 '         6.69539062e+05, -4.68403719e+05, -6.74919125e+05,\n'
 '        -3.62755594e+05, -7.91146562e+05,  7.08309453e+04,\n'
 '         8.74937188e+04,  2.34538125e+05,  1.15972212e+06,\n'
 '        -5.77441000e+05,  1.67352750e+05, -5.22249312e+05,\n'
 '         7.88284312e+05,  1.02704194e+06,  4.12872094e+05,\n'
 '         5.27219500e+05, -1.58521888e+06,  9.24713125e+05,\n'
 '         2.62229344e+05,  6.39620062e+05, -1.16177539e+04,\n'
 '        -9.08113500e+05,  1.32374750e+06,  1.33267512e+06,\n'
 '        -2.38153574e+04,  6.30908375e+05, -9.73825500e+05,\n'
 '         4.62256188e+05,  2.28857266e+05, -1.97358500e+06,\n'
 '        -8.12561500e+05, -3.02644219e+05,  1.46317262e+06,\n'
 '         1.50520359e+05, -2.09811625e+05,  1.26390175e+06,\n'
 '        -1.26793800e+06,  1.15505412e+06,  2.81820000e+05,\n'
 '        -5.39160625e+05,  3.16407250e+05,  3.12545312e+05,\n'
 '         9.06577750e+05,  2.00814094e+05,  1.35920812e+06,\n'
 '        -8.27918000e+05, -1.71361612e+06,  6.30509125e+05,\n'
 '         5.83808750e+05, -3.41343531e+05, -7.81941750e+05,\n'
 '         7.64577062e+05,  8.08521125e+05, -4.34193875e+05,\n'
 '        -9.24373125e+05, -9.30527266e+04,  9.15929812e+05,\n'
 '         6.43459000e+05, -2.95738594e+05,  1.96295900e+06,\n'
 '        -5.09570281e+05, -1.09431328e+05, -7.62834000e+05,\n'
 '        -6.15095875e+05,  1.03050594e+05,  1.90998516e+04,\n'
 '         1.08343262e+06, -5.23635500e+05,  9.90537938e+05,\n'
 '         1.42688969e+05,  7.10888000e+05, -4.29831094e+05,\n'
 '        -1.56238412e+06,  4.54556969e+05, -3.73602750e+05,\n'
 '         1.10121562e+06,  4.56195688e+05, -8.19388438e+05,\n'
 '         1.15271525e+06, -5.75328500e+05, -1.43965800e+06,\n'
 '         1.10569138e+06, -1.05508450e+06, -9.13289812e+05,\n'
 '         9.42776125e+05, -3.62666594e+05, -7.96357875e+05,\n'
 '        -8.21629938e+05, -4.77761094e+05,  6.06834312e+05,\n'
 '         6.28162750e+05,  1.69995031e+05,  8.14085750e+05,\n'
 '         1.15984788e+06,  9.15983750e+05, -3.11007812e+05,\n'
 '         4.72976469e+05, -1.01461844e+06,  4.52257594e+05,\n'
 '         3.23171406e+04,  4.91196250e+04, -7.91354062e+05,\n'
 '         4.44375531e+05, -7.17157562e+05,  3.11285906e+05,\n'
 '        -7.21715188e+05,  1.04439338e+06,  1.27689867e+05,\n'
 '        -3.63900781e+05,  1.38301312e+05, -6.27084258e+04,\n'
 '         5.22813469e+05, -1.23067100e+06,  6.40323750e+05,\n'
 '        -4.85705820e+04, -1.01203750e+05, -5.10921938e+05,\n'
 '        -1.68379350e+06,  9.37163250e+05,  9.11155156e+04,\n'
 '         2.58276525e+06,  2.70809500e+05, -8.14711312e+05,\n'
 '        -9.39403625e+05, -1.19054562e+06, -6.70934750e+05,\n'
 '         5.26936125e+05, -6.49491812e+05, -4.24938719e+05,\n'
 '         2.87811531e+05, -1.59637156e+05,  3.82491719e+05,\n'
 '        -7.78327000e+05,  2.75579750e+05,  1.84554297e+05,\n'
 '        -7.05086062e+05,  9.05459180e+03,  5.19070344e+05,\n'
 '         9.90307625e+05, -2.10956300e+06, -7.79882938e+05,\n'
 '         9.78354625e+05,  6.78559375e+04, -1.23904500e+06,\n'
 '        -5.19129453e+04,  3.49646094e+05, -1.62400612e+06,\n'
 '        -1.30687862e+06, -3.71802344e+04, -3.05626938e+05,\n'
 '         2.87357562e+05,  3.63732188e+05, -2.90001688e+05,\n'
 '        -2.14320859e+05,  2.62651062e+05,  6.12501875e+05,\n'
 '        -1.15810312e+06, -7.06190938e+05, -1.35722862e+06,\n'
 '         2.85307406e+05,  3.00312188e+05, -6.41766438e+05,\n'
 '         5.37723062e+05,  3.93349219e+05,  2.55418859e+05,\n'
 '         4.43621781e+05, -1.03633275e+06,  7.47406445e+03,\n'
 '        -1.34847656e+05,  7.42764812e+05, -6.93185625e+04,\n'
 '         1.14048975e+06, -8.91111000e+05, -1.69679988e+06,\n'
 '        -1.05524212e+06, -6.32073688e+05,  2.79687969e+05,\n'
 '         8.63609938e+05,  1.52908734e+05, -4.88472094e+05,\n'
 '        -1.41315662e+06,  5.87635812e+05, -7.01594438e+05,\n'
 '         1.22973641e+05, -1.02577109e+05, -4.33570469e+05,\n'
 '        -2.58075000e+05, -7.32435812e+05,  7.20186938e+05,\n'
 '         7.23285688e+05,  1.26857700e+06,  1.87966750e+05,\n'
 '        -1.50135550e+06, -8.80149219e+03, -8.79030875e+05,\n'
 '        -1.06649844e+05, -2.60005516e+05,  1.88685406e+05,\n'
 '        -3.44751125e+05, -2.37459688e+05, -1.13153938e+06,\n'
 '        -1.21080950e+06,  2.60553812e+05,  1.19474900e+06,\n'
 '        -7.92677875e+05,  2.24565109e+05, -3.66438188e+05,\n'
 '         8.72658906e+04,  1.44445225e+06, -3.66013469e+05,\n'
 '        -1.36231088e+06,  2.07035547e+05,  3.91077979e+03,\n'
 '         6.53184312e+05,  6.14978125e+05,  9.27509750e+05,\n'
 '         1.00306644e+06, -9.52440688e+05, -9.21691250e+05,\n'
 '        -3.92921594e+05, -7.02343125e+05,  1.88907719e+05,\n'
 '        -2.70035375e+05,  1.02456150e+06, -8.77804188e+05,\n'
 '        -3.50133359e+04,  1.20166900e+06,  7.93501875e+05,\n'
 '         2.72854469e+05, -2.92181125e+05,  7.85173984e+04,\n'
 '         1.49869162e+06,  4.47160594e+05, -3.92792812e+04,\n'
 '        -2.76478789e+04,  8.07951438e+05, -9.71275625e+05,\n'
 '        -1.28009338e+06,  1.68594062e+06,  6.24214562e+05,\n'
 '         9.38662312e+05, -5.50984938e+05,  6.90251625e+05,\n'
 '        -2.76022719e+05, -2.46431250e+05, -3.78154719e+05,\n'
 '        -9.16080188e+05, -7.42604688e+05, -5.56462734e+04,\n'
 '        -4.98757688e+05, -1.42557612e+06, -7.74051688e+05,\n'
 '         3.73114219e+05,  2.33265797e+05, -9.99750062e+05,\n'
 '         1.23287325e+06,  5.41457891e+04, -2.35233234e+05,\n'
 '         6.80171062e+05,  5.55091812e+05,  5.69809062e+05,\n'
 '         5.59522688e+05,  3.94537750e+05,  1.43355525e+06,\n'
 '         7.53863750e+05,  6.07625469e+04,  1.90707094e+05,\n'
 '        -7.83863750e+05,  2.32183578e+05,  4.87705469e+05,\n'
 '        -9.46947031e+04,  1.35413300e+06, -9.26950234e+04,\n'
 '        -1.21672088e+06,  6.07823125e+05, -2.47102828e+05,\n'
 '         2.50762363e+04, -1.30039388e+06, -8.11621500e+05,\n'
 '        -3.15730977e+04,  5.31300750e+05, -2.80446312e+05,\n'
 '         4.78108281e+05, -9.10854938e+05,  4.94714938e+05,\n'
 '        -5.23183375e+05, -3.58921656e+05, -6.45320742e+04,\n'
 '         5.42101750e+05,  2.02089359e+05,  9.63581562e+05,\n'
 '         1.00533419e+06, -3.22790156e+05, -5.21668469e+05,\n'
 '         7.52662625e+05, -3.05606750e+05,  4.05685281e+05,\n'
 '        -1.46442188e+05,  4.56535078e+04,  9.13729250e+05,\n'
 '         7.58584250e+05,  1.42608375e+06,  3.12428438e+05,\n'
 '         1.37281362e+06,  7.23585938e+05, -4.44447375e+05,\n'
 '         6.82772688e+05, -9.09513938e+05,  2.46396641e+05,\n'
 '        -5.53683938e+05,  9.13081000e+05, -1.80966516e+05,\n'
 '         1.60022734e+04, -6.64700438e+05,  4.35639453e+04,\n'
 '         4.51118656e+05, -3.98245906e+05,  2.30071031e+05,\n'
 '         1.66656588e+06,  8.22070312e+05, -5.96871375e+05,\n'
 '        -8.96781625e+05,  3.68316602e+04,  4.17928062e+05,\n'
 '        -3.45903094e+05, -1.18205438e+05, -1.27579775e+06,\n'
 '         1.36796975e+06,  8.40630750e+05,  8.79737891e+03,\n'
 '         1.45047922e+05, -7.05771719e+04, -2.26442312e+05,\n'
 '        -6.96615625e+05, -9.20170688e+05,  1.99631047e+05,\n'
 '        -5.19155625e+05, -4.46190688e+05, -3.21601844e+05,\n'
 '        -6.15022562e+05, -1.55029619e+04,  9.06098688e+05,\n'
 '         1.32059000e+06, -3.10154188e+05,  8.19848938e+05,\n'
 '        -7.84361562e+04,  3.17137637e+04,  3.58130656e+05,\n'
 '         1.25313338e+06, -7.57740312e+05,  6.55118688e+05,\n'
 '        -8.03117125e+05,  9.42087562e+05, -8.47913250e+05,\n'
 '        -1.42983875e+06,  1.35585250e+05,  1.44066925e+06,\n'
 '         4.65618469e+05, -4.46187188e+04,  2.53913984e+05,\n'
 '        -1.76670734e+05, -1.01574469e+06, -2.78105750e+05,\n'
 '        -1.23381047e+05, -8.18085438e+05, -8.10626312e+05,\n'
 '        -1.58370609e+05, -1.29610175e+06,  2.61925891e+05,\n'
 '        -1.90716700e+06,  1.17159225e+06, -1.13790075e+06,\n'
 '         4.74739750e+05, -2.67889250e+05, -7.38362438e+05,\n'
 '         6.44241750e+05, -3.56749344e+05, -1.97098425e+06,\n'
 '        -4.14758633e+04,  1.27711025e+06, -8.10065812e+05,\n'
 '         1.84526938e+06, -1.30830250e+06, -1.22108662e+06,\n'
 '        -1.91218328e+05,  1.41957312e+06, -2.65781781e+05,\n'
 '         2.88492938e+05, -6.63087625e+05,  9.88722625e+05,\n'
 '        -4.27766656e+05, -7.56106125e+05, -1.67167234e+05,\n'
 '         1.23355262e+06, -3.22191375e+05,  6.43785438e+05,\n'
 '        -3.03078250e+05,  2.05577225e+06,  1.38688825e+06,\n'
 '        -5.44754258e+04,  1.21694100e+06,  2.35964656e+05,\n'
 '        -8.22704812e+05]])')
'test_inceptionnet | batch_shape is: [1]'
'test_inceptionnet | logits.shape is: ivy.Shape(1, 1000)'
'||'
'test_inceptionnet | device is: cpu'
'test_inceptionnet | fw is: jax'
'test_inceptionnet | load_weights is: True'
'InceptionV3 | build | layer 1/22 built'
'InceptionV3 | build | layer 2/22 built'
'layer 3/22 built'
'InceptionV3 | build | layer 4/22 built'
'InceptionV3 | build | layer 5/22 built'
'InceptionV3 | build | layer 6/22 built'
'InceptionV3 | build | layer 7/22 built'
'InceptionV3 | build | layer 8/22 built'
'InceptionV3 | build | layer 9/22 built'
'InceptionV3 | build | layer 10/22 built'
'InceptionV3 | build | layer 11/22 built'
'InceptionV3 | build | layer 12/22 built'
'InceptionV3 | build | layer 13/22 built'
'InceptionV3 | build | layer 14/22 built'
'InceptionV3 | build | layer 15/22 built'
'InceptionV3 | build | layer 17/22 built'
'InceptionV3 | build | layer 18/22 built'
'InceptionV3 | build | layer 19/22 built'
'InceptionV3 | build | layer 20/22 built'
'InceptionV3 | build | layer 21/22 built'
'InceptionV3 | build | layer 22/22 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/4 built'
'layer 2/4 built'
'layer 3/4 built'
'layer 4/4 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/6 built'
'layer 2/6 built'
'layer 3/6 built'
'layer 4/6 built'
'layer 5/6 built'
'layer 6/6 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'inceptionNet_v3 | building InceptionV3 model | done 1/3'
'inceptionNet_v3 | clearning pretrained weights | done 2/3'
'inceptionNet_v3 | loading pretrained weights | done 3/3'
'InceptionV3 | forward | input data_format is:NHWC | done 1/27'
'InceptionV3 | forward | data_format is going to be used is:NHWC | done 1/27'
'InceptionV3 | forward | input shape is:ivy.Shape(1, 224, 224, 3) | done 1/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 224, 224, 3) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 111, 111, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 111, 111, 32) | done 2/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 111, 111, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 32) | done 3/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 109, 109, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 64) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 64) | done 4/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 54, 54, 64) | done 5/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 54, 54, 80) | done 3/3'
'InceptionV3 | forward | is:ivy.Shape(1, 54, 54, 80) | done 6/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 80) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 52, 52, 192) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 52, 52, 192) | done 7/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 192) | done 8/27'
'input shape is:ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 32) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 32)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 25, 25, 256) | done 9/27'
'input shape is:ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 10/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 11/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 384) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 96) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 96)'
'one 20/20, output shape is:ivy.Shape(1, 12, 12, 288)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 12/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 12, 12, 768) | done 13/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 14/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 15/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 16/27'
'v3 16/27, output shape is:ivy.Shape(1, 12, 12, 768)'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 5, 5, 192)'
'one 7/20, output shape is:ivy.Shape(1, 5, 5, 768)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 1280) | done 17/27'
'input shape is:ivy.Shape(1, 5, 5, 1280)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 18/27'
'input shape is:ivy.Shape(1, 5, 5, 2048)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 19/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 20/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 5, 5) | done 21/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 1, 1) | done 22/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 27/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 24/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 25/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048) | done 26/27'
'InceptionV3 | forward | fc | done 27/27'
('test_inceptionnet | logits is: ivy.array([[ 1.31299067e+00, '
 '-9.10785675e-01,  3.29865634e-01,\n'
 '         2.95258331e+00,  8.10467839e-01, -1.74668193e-01,\n'
 '         3.33803892e+00, -4.99150723e-01,  3.54579031e-01,\n'
 '        -2.29515171e+00, -8.64671648e-01, -1.98412105e-01,\n'
 '        -3.90140653e-01,  7.65480340e-01,  1.74564564e+00,\n'
 '        -2.13141465e+00, -7.49898195e-01, -5.30144215e-01,\n'
 '        -8.65069032e-02,  7.65097320e-01,  2.37927437e+00,\n'
 '        -1.88421369e+00,  2.49732637e+00, -1.08412588e+00,\n'
 '        -4.48239707e-02, -1.80822110e+00, -1.82645321e+00,\n'
 '        -1.37985373e+00, -1.37592447e+00, -2.46960449e+00,\n'
 '         3.62911224e-01,  2.09339738e+00,  2.26349568e+00,\n'
 '         2.32192755e-01,  1.15667307e+00, -2.12245965e+00,\n'
 '         1.59595132e+00, -4.85648304e-01, -1.03329372e+00,\n'
 '         1.12369633e+00,  2.13360620e+00,  8.51906762e-02,\n'
 '        -2.22364634e-01, -8.22054446e-02, -1.68499076e+00,\n'
 '        -2.53725553e+00,  3.35364044e-01,  2.46555448e-01,\n'
 '        -6.07675493e-01, -7.94708192e-01, -6.19937956e-01,\n'
 '        -1.70803368e-01, -2.56604493e-01, -2.32648611e+00,\n'
 '        -6.46273255e-01,  1.80998161e-01, -2.00289607e+00,\n'
 '        -1.29700410e+00, -3.74266028e-01, -1.41839993e+00,\n'
 '         1.94198862e-01,  1.05324566e+00, -2.64131141e+00,\n'
 '        -2.48587108e+00, -1.18723214e+00, -1.12153977e-01,\n'
 '        -1.62936866e+00,  3.90243769e-01, -7.47307062e-01,\n'
 '        -7.88031340e-01, -3.14520538e-01, -7.76716471e-01,\n'
 '         6.24767959e-01, -3.83098424e-01,  5.94073296e-01,\n'
 '        -1.92174941e-01, -9.85341787e-01,  7.41531908e-01,\n'
 '         4.97027725e-01,  5.51002264e-01, -1.69560388e-01,\n'
 '         7.84854651e-01, -3.09239179e-02,  7.80681789e-01,\n'
 '         2.94969416e+00, -2.50253499e-01, -1.36229396e+00,\n'
 '        -9.51480746e-01, -5.76352656e-01, -1.02229804e-01,\n'
 '        -1.15596259e+00,  1.81373286e+00, -4.51190352e-01,\n'
 '         1.76809371e-01,  6.65757060e-03, -1.17695928e+00,\n'
 '         1.18426228e+00, -1.24287569e+00, -2.47133231e+00,\n'
 '         2.64641666e+00,  4.80793059e-01, -6.29718900e-02,\n'
 '        -1.69238162e+00, -3.68132055e-01,  2.51331478e-02,\n'
 '        -3.57979584e+00, -2.13572502e+00, -1.47107136e+00,\n'
 '        -3.67922246e-01,  7.73108006e-02,  7.72117734e-01,\n'
 '        -1.33344305e+00,  3.25181222e+00,  2.34909773e+00,\n'
 '         2.54470634e+00, -1.09623992e+00, -1.46703267e+00,\n'
 '         7.89947748e-01, -1.55221403e+00,  7.41268873e-01,\n'
 '         6.34541392e-01, -2.41852617e+00,  1.27628958e+00,\n'
 '         2.69252658e-01, -3.58522153e+00, -1.62909090e-01,\n'
 '         6.48843884e-01,  1.82130682e+00,  6.06242530e-02,\n'
 '        -5.22779077e-02,  1.23804069e+00,  1.93971109e+00,\n'
 '         1.81441760e+00, -2.88097322e-01,  1.18351400e+00,\n'
 '         1.01108658e+00,  2.07667398e+00,  2.81822771e-01,\n'
 '         2.80646443e-01, -1.04469299e+00,  1.24296546e-02,\n'
 '        -3.98072630e-01, -2.22682929e+00, -1.52165949e-01,\n'
 '         3.02570128e+00, -6.50846600e-01,  1.45742750e+00,\n'
 '        -1.76012969e+00,  2.83863872e-01,  8.52133572e-01,\n'
 '         2.07457352e+00, -5.65059721e-01,  2.64077449e+00,\n'
 '         3.31345797e-02,  1.51128924e+00, -3.20420456e+00,\n'
 '        -1.04575205e+00,  2.29367566e+00, -2.14352274e+00,\n'
 '        -1.43027484e-01,  1.52774191e+00, -1.16168821e+00,\n'
 '        -2.65519500e+00,  5.28248429e-01, -4.31282371e-01,\n'
 '         1.10443793e-01, -1.95469415e+00,  4.07777756e-01,\n'
 '        -3.58594283e-02,  2.39306212e+00,  1.20718598e+00,\n'
 '        -7.08570301e-01, -1.38096297e+00,  6.67411625e-01,\n'
 '         2.00255465e+00, -7.56753445e-01,  6.92432106e-01,\n'
 '         3.13523412e-02,  1.53631449e+00, -5.89829803e-01,\n'
 '        -8.13118577e-01,  8.87891769e-01, -1.78675127e+00,\n'
 '        -7.75644302e-01, -7.57714331e-01,  1.58457935e+00,\n'
 '         2.83245373e+00, -1.06754446e+00, -1.07357359e+00,\n'
 '        -3.35644245e+00, -7.28168726e-01, -2.97324002e-01,\n'
 '         6.30246818e-01, -1.64007974e+00, -1.11458659e+00,\n'
 '        -1.01202786e+00, -1.58511639e+00,  1.41391706e+00,\n'
 '        -1.13703072e+00,  4.65241894e-02, -5.28113306e-01,\n'
 '        -6.40718996e-01, -2.75182873e-01,  4.22725916e+00,\n'
 '        -1.78423560e+00, -1.76112258e+00, -2.05757666e+00,\n'
 '         1.09190285e+00, -1.29299629e+00, -9.01336670e-01,\n'
 '        -3.43763739e-01, -2.77540278e+00,  4.84750420e-01,\n'
 '         6.86079264e-01,  1.78497672e+00, -4.74998415e-01,\n'
 '         6.69976592e-01, -2.74188906e-01,  1.61644006e+00,\n'
 '        -3.11041594e+00, -3.58595073e-01,  5.54959893e-01,\n'
 '         4.12714243e+00,  1.60246134e+00,  2.92876053e+00,\n'
 '        -2.00099921e+00,  1.15416884e+00, -2.76475000e+00,\n'
 '        -2.85969615e-01,  4.27217752e-01, -8.16433489e-01,\n'
 '         1.22574461e+00,  1.16542137e+00,  1.19505251e+00,\n'
 '        -3.03234965e-01,  5.01928210e-01,  5.65953851e-01,\n'
 '        -2.18483543e+00,  5.79733491e-01,  6.46641254e-02,\n'
 '         8.06972146e-01,  5.15662193e-01,  7.23054409e-01,\n'
 '        -2.46766615e+00, -2.19184780e+00, -4.98505682e-01,\n'
 '        -7.70313322e-01,  1.89824730e-01,  7.47451925e+00,\n'
 '         5.33715677e+00,  3.57476711e+00, -5.85550487e-01,\n'
 '        -2.40829658e+00, -1.38735032e+00, -1.58301556e+00,\n'
 '         1.08667254e+00,  8.84922862e-01,  8.00869846e+00,\n'
 '         1.86811581e+01,  5.27261925e+00,  5.41108274e+00,\n'
 '         7.16846991e+00, -2.35829353e+00, -1.51112580e+00,\n'
 '        -9.16061759e-01, -3.91483307e-01, -7.69016683e-01,\n'
 '         1.72555733e+00, -7.60342300e-01,  2.46913552e+00,\n'
 '         1.30873938e+01, -1.09022427e+00,  1.53984040e-01,\n'
 '         1.07574791e-01,  5.75494409e-01, -1.79728949e+00,\n'
 '         5.41732788e-01,  2.76693296e+00,  4.58031595e-02,\n'
 '         1.14548016e+01,  4.72625434e-01, -1.26451135e+00,\n'
 '        -7.22915232e-01,  3.83806276e+00, -4.54343468e-01,\n'
 '        -1.82099319e+00, -1.46204531e+00,  1.23415029e+00,\n'
 '         4.09051090e-01,  6.75023913e-01, -5.92758417e-01,\n'
 '         9.47472453e-01,  6.45741969e-02, -1.80035740e-01,\n'
 '        -8.68863344e-01, -1.30519807e+00,  4.78442478e+00,\n'
 '        -1.01080978e+00, -1.25170791e+00, -3.40994310e+00,\n'
 '        -6.45140350e-01, -1.59595239e+00,  7.79892683e-01,\n'
 '        -3.89477611e-02,  7.37080455e-01,  7.20574141e-01,\n'
 '         1.91789538e-01,  1.95250988e+00, -2.82944798e-01,\n'
 '        -6.86722279e-01, -1.11642837e+00,  5.44559717e-01,\n'
 '         1.27283311e+00, -9.63974297e-01, -4.01734650e-01,\n'
 '        -1.21175826e-01, -7.24398911e-01,  6.01847291e-01,\n'
 '        -5.64895153e-01, -1.42287087e+00,  1.83003068e+00,\n'
 '         1.06475651e-02,  5.55099964e-01, -8.66380334e-03,\n'
 '        -2.55518651e+00, -7.32988715e-01,  9.79528248e-01,\n'
 '         6.38596356e-01,  1.58810270e+00, -5.13626337e-01,\n'
 '        -1.02179825e+00,  3.04675841e+00,  2.72728872e+00,\n'
 '        -6.01510108e-01,  2.21661493e-01, -1.81530941e+00,\n'
 '        -1.89841116e+00,  1.00948143e+00,  3.34566474e+00,\n'
 '        -1.97105551e+00,  1.10418093e+00, -5.04382849e-01,\n'
 '        -2.12546140e-01,  7.99889684e-01, -7.32955337e-01,\n'
 '        -8.72524977e-02,  1.73876002e-01,  1.90280581e+00,\n'
 '        -2.09559023e-01, -9.66729343e-01, -6.75118491e-02,\n'
 '         7.48282433e-01,  4.70520139e-01,  8.34827959e-01,\n'
 '        -1.49499810e+00,  1.20835495e+00,  1.91914117e+00,\n'
 '        -1.08129948e-01,  1.28818119e+00,  9.15043354e-01,\n'
 '        -8.54649365e-01, -4.04508650e-01, -1.37287772e+00,\n'
 '         6.25299215e-01, -1.75490856e+00, -2.63772321e+00,\n'
 '        -2.72249723e+00, -2.24484778e+00, -1.42087948e+00,\n'
 '        -2.89774680e+00, -4.41263258e-01, -1.85462749e+00,\n'
 '        -2.26076558e-01, -2.43480146e-01,  1.01193786e-03,\n'
 '        -1.52000487e+00, -1.49550355e+00,  3.14483374e-01,\n'
 '         7.26479590e-01, -2.40330315e+00,  1.92579776e-01,\n'
 '        -2.77527118e+00, -1.40981698e+00, -2.29490447e+00,\n'
 '        -1.14794582e-01,  1.32535055e-01, -1.15686202e+00,\n'
 '         9.58482802e-01,  6.36359453e-01, -4.60347116e-01,\n'
 '        -1.22729570e-01, -1.24424684e+00,  1.11992538e+00,\n'
 '         5.71606457e-01, -5.41466325e-02, -1.19493484e-01,\n'
 '         2.31377578e+00,  9.46654797e-01,  2.04292726e+00,\n'
 '         4.52802539e-01, -5.46546936e-01, -1.79551744e+00,\n'
 '        -5.34612358e-01,  3.94421578e-01,  2.10508084e+00,\n'
 '         7.37293840e-01,  3.27955753e-01,  1.18199587e+00,\n'
 '         7.41559088e-01,  6.45167410e-01, -2.10318708e+00,\n'
 '        -5.73161721e-01, -2.42679572e+00, -1.12600243e+00,\n'
 '        -3.43039012e+00, -6.08257830e-01,  3.82181972e-01,\n'
 '         1.26612282e+00, -1.76849031e+00, -1.27043378e+00,\n'
 '        -7.66261518e-01, -2.94174981e+00, -1.49211407e+00,\n'
 '        -7.64558137e-01, -5.93529105e-01,  1.88867891e+00,\n'
 '        -5.09509027e-01,  8.63235474e-01, -6.52929544e-01,\n'
 '        -3.48426029e-02, -1.08903933e+00, -2.07611006e-02,\n'
 '        -4.17091519e-01,  1.17070401e+00, -1.21371615e+00,\n'
 '        -3.49706471e-01,  3.09930325e-01,  3.45139742e-01,\n'
 '        -2.12601447e+00,  9.35607314e-01,  3.82426321e-01,\n'
 '        -1.20760131e+00,  9.27040696e-01, -4.55548585e-01,\n'
 '        -5.51223099e-01,  1.52782249e+00, -2.85784245e+00,\n'
 '        -1.59772277e+00,  1.41056967e+00,  5.26244760e-01,\n'
 '         2.21086907e+00,  6.93734050e-01,  1.02244687e+00,\n'
 '        -1.21651757e+00,  8.88054967e-01, -1.37543631e+00,\n'
 '         8.11694324e-01, -7.69364834e-02, -2.18104982e+00,\n'
 '         4.87872399e-02, -4.58546281e-01, -9.25517678e-01,\n'
 '         1.95290148e+00,  1.00871146e+00,  9.84572172e-01,\n'
 '        -1.73531139e+00, -7.47951865e-01, -8.86001587e-01,\n'
 '         2.37438607e+00,  9.70177889e-01, -8.71894777e-01,\n'
 '        -3.62190366e-01, -1.62679410e+00,  1.23366380e+00,\n'
 '         1.05515420e-02,  9.16512907e-02,  4.42933083e+00,\n'
 '        -2.01546359e+00,  4.99840707e-01,  4.22400117e-01,\n'
 '        -2.05364972e-01, -1.50577456e-01, -1.04025876e+00,\n'
 '         6.19859934e-01,  6.12926364e-01, -2.16588473e+00,\n'
 '        -1.22494757e+00, -9.42519307e-01, -1.90435350e-03,\n'
 '        -3.46736252e-01,  5.38926959e-01,  1.72458291e+00,\n'
 '        -2.77202904e-01, -1.01548994e+00, -8.93109918e-01,\n'
 '         3.51765603e-01,  4.30259526e-01, -1.58520126e+00,\n'
 '         2.35348299e-01,  2.24259257e+00, -1.96689534e+00,\n'
 '        -1.28541261e-01,  3.36222708e-01, -1.76920295e+00,\n'
 '        -2.18321145e-01,  1.23644805e+00,  2.26640773e+00,\n'
 '         5.95559359e-01,  7.05029666e-02, -2.08216011e-01,\n'
 '         1.85138428e+00,  1.08320981e-01,  8.04521024e-01,\n'
 '        -1.16623962e+00, -1.21253228e+00, -9.98358309e-01,\n'
 '        -2.16863131e+00, -2.54282951e-01, -3.33209562e+00,\n'
 '        -2.98506141e+00, -1.53341103e+00,  4.45210576e-01,\n'
 '        -8.99410784e-01, -1.88145673e+00,  1.37210679e+00,\n'
 '        -9.40194130e-01, -1.61517215e+00, -3.60559773e+00,\n'
 '        -1.03777111e+00, -1.44762313e+00,  2.38241982e+00,\n'
 '         2.44416094e+00, -2.55858958e-01, -7.51895010e-01,\n'
 '         1.45174396e+00, -1.34915328e+00, -1.14940572e+00,\n'
 '         3.80013847e+00,  1.71430957e+00, -2.47186804e+00,\n'
 '         6.39586866e-01,  1.23334205e+00, -1.57204628e-01,\n'
 '         1.53114402e+00, -8.68448764e-02,  1.88791871e-01,\n'
 '        -2.45802879e-01,  2.20388323e-02, -2.79334021e+00,\n'
 '        -1.96329206e-01,  1.29788160e+00,  2.10646331e-01,\n'
 '        -1.30698085e-01, -4.02968836e+00,  7.97784925e-01,\n'
 '        -5.22951305e-01, -1.83197951e+00,  7.25605488e-01,\n'
 '        -7.82709777e-01,  2.15402991e-01,  4.86574799e-01,\n'
 '        -1.97193336e+00,  5.20665216e+00,  2.11060691e+00,\n'
 '         9.99555051e-01, -6.38246894e-01, -1.45385697e-01,\n'
 '         5.69691658e-01,  1.96416128e+00, -4.38162595e-01,\n'
 '         1.06997383e+00,  7.67360330e-01,  3.52091193e-01,\n'
 '         1.93418050e+00, -4.68877763e-01,  6.91629589e-01,\n'
 '         1.61171091e+00, -1.33255112e+00,  5.97281754e-01,\n'
 '        -1.17914844e+00,  8.56694341e-01,  1.53494984e-01,\n'
 '         8.56296659e-01, -1.22157717e+00,  1.12803507e+00,\n'
 '         3.69907439e-01, -2.45175457e+00, -7.25715041e-01,\n'
 '        -1.35353637e+00,  1.74381733e-02, -4.47029918e-02,\n'
 '         8.11541319e-01, -1.87433943e-01,  4.35248643e-01,\n'
 '         5.52488565e-02,  8.07267129e-01,  1.13799918e+00,\n'
 '        -1.17867017e+00, -1.92569923e+00, -1.55909824e+00,\n'
 '        -2.23679805e+00, -1.10633659e+00, -1.06066585e+00,\n'
 '         1.10950172e-01,  1.78208780e+00, -2.82214850e-01,\n'
 '         3.15347481e+00,  4.59222227e-01,  1.67374444e+00,\n'
 '        -3.65418285e-01,  2.26554275e-01, -7.31410742e-01,\n'
 '         1.89347744e+00,  7.48301566e-01,  5.99203885e-01,\n'
 '        -2.41923034e-01, -1.16421258e+00,  1.38349473e-01,\n'
 '        -9.19864953e-01, -8.62855494e-01, -1.59739566e+00,\n'
 '         1.66514122e+00,  1.29912662e+00, -9.26990747e-01,\n'
 '        -3.80122691e-01,  2.17164755e+00, -3.85546803e-01,\n'
 '         1.18578517e+00,  3.80796528e+00, -6.27548993e-02,\n'
 '        -3.48472500e+00, -1.56139171e+00, -2.60830689e+00,\n'
 '         7.48721242e-01, -3.77193856e+00, -1.73276877e+00,\n'
 '        -1.14822602e+00,  6.82441473e-01, -6.29153401e-02,\n'
 '         1.75510013e+00, -1.38898528e+00, -1.09769499e+00,\n'
 '         5.44754624e-01,  5.33089042e-01, -9.76034641e-01,\n'
 '        -4.06620651e-01,  1.59488380e+00, -8.10146630e-01,\n'
 '        -6.45726740e-01, -1.75891876e-01, -2.38749742e+00,\n'
 '         8.79703462e-03,  1.00060821e+00, -1.01359093e+00,\n'
 '        -3.10292363e-01, -6.98265016e-01,  1.18437898e+00,\n'
 '        -9.25673366e-01, -1.02924514e+00, -5.15683651e-01,\n'
 '        -1.06816244e+00,  5.87226510e-01,  1.08612084e+00,\n'
 '        -1.72632694e+00, -2.29405356e+00,  4.58127916e-01,\n'
 '        -2.04894280e+00,  2.30146378e-01,  7.48086274e-01,\n'
 '         1.17469037e+00,  7.94919074e-01, -1.41706419e+00,\n'
 '         2.57762766e+00, -2.27460074e+00, -1.09097838e+00,\n'
 '         3.07076484e-01,  3.02782536e-01, -1.36510932e+00,\n'
 '         1.20123673e+00,  8.30039144e-01,  1.86558962e-01,\n'
 '        -2.26777697e+00,  2.63456607e+00,  1.64245391e+00,\n'
 '        -4.65218663e-01, -4.84273672e-01, -1.16817188e+00,\n'
 '         6.33337438e-01, -2.10849690e+00,  2.77711451e-01,\n'
 '        -6.16892219e-01, -1.38678706e+00, -1.17077434e+00,\n'
 '        -1.60248280e+00,  9.66425121e-01,  2.56386280e+00,\n'
 '         1.50455213e+00,  1.16721720e-01,  1.06051052e+00,\n'
 '         8.36043477e-01, -3.69278288e+00, -7.28323340e-01,\n'
 '        -9.62186456e-01,  2.33851477e-01, -2.36694002e+00,\n'
 '        -3.58564973e+00,  7.86804915e-01, -1.93159175e+00,\n'
 '         1.49680167e-01, -1.64785516e+00,  1.28804743e+00,\n'
 '        -1.13643333e-01, -3.11974049e+00, -2.90349746e+00,\n'
 '        -1.57857612e-02,  1.19122302e+00, -1.05485237e+00,\n'
 '        -4.04773206e-01,  1.74457049e+00,  5.37680447e-01,\n'
 '         4.06473935e-01, -1.47137070e+00, -4.30740267e-01,\n'
 '         1.91788971e+00,  2.31595564e+00, -2.16161579e-01,\n'
 '        -2.75379241e-01, -4.11452502e-01, -1.42050064e+00,\n'
 '         1.07995200e+00, -7.72465468e-01,  2.08955121e+00,\n'
 '        -6.16471656e-02, -1.86309910e+00, -7.17742443e-01,\n'
 '        -2.05390406e+00, -1.97069228e+00, -3.49157602e-01,\n'
 '         2.13319674e-01,  4.52322736e-02,  8.81628573e-01,\n'
 '         4.86824930e-01,  7.00780809e-01, -1.90915144e+00,\n'
 '        -4.48268235e-01, -2.32732320e+00,  4.72917604e+00,\n'
 '        -3.76894951e-01,  3.09840024e-01,  6.39951169e-01,\n'
 '        -5.76846898e-01,  1.15659058e+00,  2.81492639e+00,\n'
 '        -3.64059115e+00, -3.06490159e+00, -5.41360200e-01,\n'
 '        -2.37523055e+00,  3.74071836e-01,  2.58048773e+00,\n'
 '        -2.17918301e+00, -3.15875268e+00, -2.13588905e+00,\n'
 '         2.62106925e-01,  1.54182649e+00, -1.99269652e+00,\n'
 '         1.29388082e+00,  5.44114828e-01, -1.26740491e+00,\n'
 '        -1.34050155e+00,  1.34792352e+00, -1.07968235e+00,\n'
 '        -6.11343622e-01, -1.19404209e+00, -2.42637420e+00,\n'
 '        -1.17271566e+00,  1.42386103e+00,  1.41675639e+00,\n'
 '        -5.26624203e-01, -1.86013329e+00, -7.11946428e-01,\n'
 '         2.98758173e+00,  2.02285782e-01, -5.98860979e-01,\n'
 '        -9.68651652e-01, -1.68987215e+00, -2.59272516e-01,\n'
 '         7.87679553e-02, -8.43708873e-01,  1.22300279e+00,\n'
 '         3.58421773e-01,  7.46525526e-01,  1.92916191e+00,\n'
 '         9.07877088e-01, -9.94392633e-01,  1.58759579e-01,\n'
 '        -1.05808639e+00, -2.41876721e+00, -1.90979838e+00,\n'
 '        -8.94129753e-01,  9.23582554e-01,  8.67985904e-01,\n'
 '         5.15782833e-01,  2.46541405e+00,  3.13095760e+00,\n'
 '        -2.15584064e+00,  1.09284759e+00, -3.47852564e+00,\n'
 '        -2.16483545e+00,  9.58190560e-01, -6.25417531e-01,\n'
 '         4.30167317e-01, -1.25430083e+00,  2.03081465e+00,\n'
 '         2.43094587e+00,  8.21640372e-01,  2.49755406e+00,\n'
 '         6.92541122e-01, -2.45759964e-01, -6.29885793e-01,\n'
 '         7.34316349e-01, -9.19881463e-02, -1.39759970e+00,\n'
 '         1.29274368e+00, -1.01905656e+00, -5.07230163e-01,\n'
 '        -7.56654799e-01,  5.36950290e-01,  1.10946655e+00,\n'
 '         2.80049729e+00, -5.38586974e-01,  4.44006264e-01,\n'
 '        -8.83946300e-01,  2.05146694e+00,  1.04112184e+00,\n'
 '        -6.18576288e-01, -1.32607788e-01,  1.09340298e+00,\n'
 '         1.88622922e-01,  2.83685327e-02, -7.64781535e-01,\n'
 '         3.64699721e-01, -5.10282330e-02,  1.92943132e+00,\n'
 '         3.07792902e+00,  4.33655620e-01, -2.91050076e-01,\n'
 '        -1.81725287e+00, -1.18990552e+00,  1.31468844e+00,\n'
 '         3.26648980e-01,  7.34665513e-01, -7.59813547e-01,\n'
 '         1.92051828e+00,  1.43334895e-01, -6.02307796e-01,\n'
 '        -1.24796927e-02, -1.66539502e+00,  4.65485096e-01,\n'
 '         4.20420915e-01, -3.94917905e-01,  1.30495143e+00,\n'
 '         1.40560079e+00,  1.97081476e-01,  1.22592568e+00,\n'
 '        -3.61966038e+00,  2.34814429e+00,  1.02485144e+00,\n'
 '         6.58562660e-01, -2.72794581e+00, -1.97141305e-01,\n'
 '         1.84729433e+00,  6.37867689e-01,  1.36250511e-01,\n'
 '        -7.06490278e-01, -1.17657936e+00, -6.39389276e-01,\n'
 '         9.72281814e-01, -3.83395553e+00,  1.44216371e+00,\n'
 '        -4.03670222e-01, -2.34627938e+00, -1.42738128e+00,\n'
 '        -2.04205364e-02, -2.05985904e+00,  8.34638357e-01,\n'
 '        -1.93759143e-01, -2.07830250e-01,  1.45636427e+00,\n'
 '        -1.24094689e+00,  8.80069137e-02,  8.02767932e-01,\n'
 '         1.33108520e+00, -2.00015736e+00,  4.86477554e-01,\n'
 '        -3.42551899e+00, -4.95351195e-01,  1.59944892e+00,\n'
 '        -7.85257220e-01,  1.69209301e-01,  4.32604253e-01,\n'
 '         1.52945840e+00, -3.12261319e+00,  1.88201666e-04,\n'
 '        -1.96887028e+00, -1.31541944e+00, -1.74799776e+00,\n'
 '        -1.24985170e+00,  7.69946575e-01,  2.34138161e-01,\n'
 '         4.11963731e-01,  5.49046934e-01, -2.03019738e-01,\n'
 '        -7.94441760e-01,  2.79753303e+00,  8.20819139e-01,\n'
 '         5.25583804e-01,  4.10407782e-03, -1.02674544e+00,\n'
 '        -2.50772893e-01, -1.05710357e-01, -3.15211952e-01,\n'
 '        -2.51639962e-01, -7.33663857e-01,  1.60687673e+00,\n'
 '        -1.65173638e+00,  1.72040284e+00, -8.01921129e-01,\n'
 '        -1.05521095e+00,  2.49657452e-01, -3.97244364e-01,\n'
 '         1.33953166e+00, -8.48071516e-01, -1.67218184e+00,\n'
 '        -1.17528021e+00, -1.60594881e+00, -6.40400112e-01,\n'
 '         9.71419215e-01,  1.12058687e+00, -2.49036372e-01,\n'
 '         5.57493210e-01, -8.38624597e-01,  8.91080856e-01,\n'
 '         1.45268047e+00,  8.01752210e-02,  1.39021075e+00,\n'
 '         3.11084628e-01, -3.68387937e-01, -2.98150003e-01,\n'
 '         2.98545152e-01, -1.21998859e+00, -1.47188187e-01,\n'
 '         1.10657299e+00,  1.63822102e+00,  4.69196320e-01,\n'
 '         1.26743209e+00,  1.83261001e+00,  1.70370841e+00,\n'
 '         5.25117934e-01,  3.63950133e-01, -3.59097183e-01,\n'
 '        -1.98337054e+00,  2.27274513e+00, -2.50685191e+00,\n'
 '        -2.09353685e-01,  3.04510891e-01, -1.01166213e+00,\n'
 '        -6.03046715e-01,  1.84628940e+00, -3.75565767e-01,\n'
 '        -8.51219058e-01, -1.93185031e+00,  1.44500208e+00,\n'
 '         1.13336349e+00, -9.60518360e-01, -8.01165462e-01,\n'
 '        -1.58961749e+00, -3.12870145e-01,  2.16207242e+00,\n'
 '         4.43394244e-01, -1.25083160e+00, -2.31580448e+00,\n'
 '        -7.15183497e-01, -3.27821255e-01,  5.62845051e-01,\n'
 '        -9.26003456e-02, -4.27219272e-02,  1.05260801e+00,\n'
 '        -5.60662270e-01,  6.35895729e-01, -1.49478689e-01,\n'
 '        -3.31471920e-01,  3.48633915e-01, -2.98962784e+00,\n'
 '        -1.24465060e+00, -3.55747294e+00,  5.79241514e-01,\n'
 '        -6.73242435e-02, -4.90707070e-01, -6.67316675e-01,\n'
 '        -2.36328125e+00]])')
'test_inceptionnet | batch_shape is: [1]'
'test_inceptionnet | logits.shape is: ivy.Shape(1, 1000)'
'||'
'test_inceptionnet | indices_test | true_indices is: [258 270 279]'
'test_inceptionnet | indices_test | calc_indices is: [258 270 279]'
'test_inceptionnet | device is: cpu'
'test_inceptionnet | fw is: jax'
'test_inceptionnet | load_weights is: False'
'InceptionV3 | build | layer 1/22 built'
'InceptionV3 | build | layer 2/22 built'
'layer 3/22 built'
'InceptionV3 | build | layer 4/22 built'
'InceptionV3 | build | layer 5/22 built'
'InceptionV3 | build | layer 6/22 built'
'InceptionV3 | build | layer 7/22 built'
'InceptionV3 | build | layer 8/22 built'
'InceptionV3 | build | layer 9/22 built'
'InceptionV3 | build | layer 10/22 built'
'InceptionV3 | build | layer 11/22 built'
'InceptionV3 | build | layer 12/22 built'
'InceptionV3 | build | layer 13/22 built'
'InceptionV3 | build | layer 14/22 built'
'InceptionV3 | build | layer 15/22 built'
'InceptionV3 | build | layer 17/22 built'
'InceptionV3 | build | layer 18/22 built'
'InceptionV3 | build | layer 19/22 built'
'InceptionV3 | build | layer 20/22 built'
'InceptionV3 | build | layer 21/22 built'
'InceptionV3 | build | layer 22/22 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/4 built'
'layer 2/4 built'
'layer 3/4 built'
'layer 4/4 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/6 built'
'layer 2/6 built'
'layer 3/6 built'
'layer 4/6 built'
'layer 5/6 built'
'layer 6/6 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'inceptionNet_v3 | building InceptionV3 model | done 1/3'
'InceptionV3 | forward | input data_format is:NCHW | done 1/27'
'InceptionV3 | forward | data_format is going to be used is:NCHW | done 1/27'
'InceptionV3 | forward | input shape is:ivy.Shape(1, 224, 224, 3) | done 1/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 224, 224, 3) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 111, 111, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 111, 111, 32) | done 2/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 111, 111, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 32) | done 3/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 109, 109, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 64) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 64) | done 4/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 54, 54, 64) | done 5/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 54, 54, 80) | done 3/3'
'InceptionV3 | forward | is:ivy.Shape(1, 54, 54, 80) | done 6/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 80) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 52, 52, 192) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 52, 52, 192) | done 7/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 192) | done 8/27'
'input shape is:ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 32) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 32)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 25, 25, 256) | done 9/27'
'input shape is:ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 10/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 11/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 384) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 96) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 96)'
'one 20/20, output shape is:ivy.Shape(1, 12, 12, 288)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 12/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 12, 12, 768) | done 13/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 14/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 15/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 16/27'
'v3 16/27, output shape is:ivy.Shape(1, 12, 12, 768)'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 5, 5, 192)'
'one 7/20, output shape is:ivy.Shape(1, 5, 5, 768)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 1280) | done 17/27'
'input shape is:ivy.Shape(1, 5, 5, 1280)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 18/27'
'input shape is:ivy.Shape(1, 5, 5, 2048)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 19/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 20/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 5, 5) | done 21/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 1, 1) | done 22/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 27/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 24/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 25/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048) | done 26/27'
'InceptionV3 | forward | fc | done 27/27'
('test_inceptionnet | logits is: ivy.array([[ 6.91111125e+05,  '
 '6.97916562e+05,  1.00593289e+05,\n'
 '        -1.04020469e+06,  2.09222453e+05, -8.65960562e+05,\n'
 '         9.52952188e+05, -1.63872625e+05,  5.10722969e+05,\n'
 '         2.16652703e+05, -1.14759047e+05,  2.13934438e+05,\n'
 '        -1.72311203e+05,  1.22441102e+05,  2.16106531e+05,\n'
 '        -9.65645703e+04,  7.63063625e+05, -2.39239141e+05,\n'
 '         1.36962250e+05, -4.99238562e+05,  2.85963344e+05,\n'
 '        -5.39946688e+05, -3.42197906e+05, -3.46465219e+05,\n'
 '         5.11760375e+05,  2.39466547e+05, -1.61599953e+05,\n'
 '        -6.01601875e+05, -2.19410625e+05, -1.03032477e+05,\n'
 '         4.00213438e+05, -5.22400469e+05, -1.21420672e+05,\n'
 '         8.10527688e+05, -3.64317406e+05, -2.41157219e+05,\n'
 '        -7.36430625e+05,  1.40438297e+05, -3.92841156e+05,\n'
 '        -2.72358906e+05, -2.50959082e+04, -1.46741500e+05,\n'
 '        -3.08612062e+05, -7.58349125e+05, -1.68389312e+05,\n'
 '         1.49064875e+05,  2.89368812e+05, -1.04474984e+05,\n'
 '        -2.09837312e+05,  1.04539925e+06,  1.03648328e+05,\n'
 '         4.12260188e+05,  1.97076000e+05,  5.33259250e+05,\n'
 '         1.92255508e+04,  3.49268812e+05,  4.82508000e+05,\n'
 '         6.01188000e+05,  6.00840688e+05, -3.81917422e+04,\n'
 '         4.36226719e+04, -3.95942500e+05,  2.73540188e+05,\n'
 '        -1.01333219e+05,  5.58091953e+04, -2.28374172e+05,\n'
 '         2.05016156e+05, -8.08033438e+05, -9.52965500e+05,\n'
 '         2.18289492e+04, -6.11254688e+05, -3.95732406e+05,\n'
 '        -1.77364812e+05, -3.04718938e+05, -1.14263888e+06,\n'
 '         2.08783984e+05,  5.66119688e+05, -3.02483781e+05,\n'
 '        -4.65311281e+05,  2.93462734e+04,  4.75022094e+05,\n'
 '        -8.78002500e+04,  4.99897594e+05, -2.49959688e+04,\n'
 '         1.07474500e+05,  1.96696891e+05, -9.17279375e+04,\n'
 '         3.03508812e+05, -2.74975312e+05,  5.87497062e+05,\n'
 '         6.97827688e+05,  2.12908130e+03,  4.66263031e+05,\n'
 '         3.16162125e+05,  1.06751800e+06, -1.74441219e+05,\n'
 '        -1.21270227e+05, -2.21223438e+05, -4.85719281e+05,\n'
 '        -8.13200938e+05, -4.88628375e+05,  1.64464844e+05,\n'
 '        -4.31886344e+05,  3.61700156e+04, -2.37039031e+05,\n'
 '         6.22786250e+05, -6.38087375e+05, -2.37811312e+05,\n'
 '        -9.24290430e+03,  6.71951625e+05,  3.07062375e+05,\n'
 '        -7.08157188e+05,  3.22851250e+05,  2.54397688e+05,\n'
 '        -2.72882188e+05, -1.45144078e+05,  7.11682438e+05,\n'
 '        -2.29158609e+05,  2.94980250e+05,  3.48934094e+05,\n'
 '         6.66750469e+04, -1.95967109e+05, -6.61425250e+05,\n'
 '        -2.14322141e+05, -3.24274844e+05,  1.51451469e+05,\n'
 '         4.54900594e+05, -3.27037969e+05,  2.06713516e+05,\n'
 '         4.11132000e+05,  4.38470500e+05, -3.77669844e+05,\n'
 '         6.37791562e+05, -1.02829619e+06, -3.74319023e+04,\n'
 '         4.63425062e+05, -8.97691062e+05,  4.48056750e+05,\n'
 '         7.81133312e+05, -7.82965375e+05,  2.82989219e+05,\n'
 '         1.91052562e+05,  9.66953250e+05, -7.03584000e+05,\n'
 '        -8.40799938e+05,  3.87705812e+05,  2.16431828e+05,\n'
 '         3.43302094e+05,  1.82190844e+05, -3.38377281e+05,\n'
 '        -1.92044641e+05,  1.14983500e+06,  5.64262500e+05,\n'
 '        -6.69351812e+05, -4.25936992e+04,  1.97760215e+04,\n'
 '         3.98573125e+04,  5.22194312e+05,  1.12758588e+06,\n'
 '        -1.36205150e+06, -6.70110438e+05,  3.24635156e+05,\n'
 '        -8.21170000e+05,  8.70118203e+04,  6.59536625e+05,\n'
 '         2.58780906e+05, -4.83925969e+05, -4.79831000e+05,\n'
 '        -8.40101797e+04, -2.80312844e+05,  6.02533398e+04,\n'
 '         4.69315844e+05, -2.40496953e+05, -9.96466438e+05,\n'
 '        -1.15359125e+06,  3.21451969e+05, -7.85060562e+05,\n'
 '         2.62921719e+05, -3.33601312e+05,  2.96774927e+03,\n'
 '        -7.82079609e+04,  6.01216758e+04,  2.93432469e+05,\n'
 '         4.12514312e+05,  8.52346188e+05, -9.63773281e+04,\n'
 '        -4.07576641e+04,  1.23121953e+05,  1.05960662e+06,\n'
 '         9.07036188e+05,  6.20135562e+05, -3.40036406e+05,\n'
 '        -2.30355359e+05,  6.41425352e+04, -5.70522125e+05,\n'
 '        -4.24551781e+05, -5.42585000e+05, -4.98339625e+05,\n'
 '        -3.03502656e+05, -1.82919938e+05,  4.45221750e+05,\n'
 '         1.68496844e+05, -7.98816125e+05,  2.85454219e+05,\n'
 '         1.00390325e+06, -5.03073984e+04,  2.32295195e+04,\n'
 '         5.23770812e+05,  7.15508562e+05, -2.37044750e+05,\n'
 '        -6.88841000e+05,  7.69621688e+05, -5.46202188e+05,\n'
 '         4.04354844e+05, -9.23090625e+04, -2.91572375e+05,\n'
 '         1.56807625e+05,  2.99019719e+05, -8.89782500e+04,\n'
 '        -4.87451500e+05, -2.27599922e+05, -1.23864344e+05,\n'
 '         2.88934938e+05, -5.24175688e+05,  3.10165449e+04,\n'
 '         7.28041375e+05,  9.10543250e+05, -2.56576953e+05,\n'
 '        -2.51341406e+05, -2.59470516e+05,  9.29484938e+05,\n'
 '        -2.60717438e+05, -5.01381875e+04, -3.31249875e+05,\n'
 '         6.75494938e+05, -1.23492633e+05,  3.66191125e+05,\n'
 '        -3.01138812e+05, -1.46449538e+06,  2.33138125e+05,\n'
 '         5.68060500e+05, -3.60520969e+05,  1.32998375e+05,\n'
 '         1.99457844e+05,  7.56797625e+05,  2.73096500e+05,\n'
 '        -1.77503375e+05, -2.04922859e+05, -1.83681328e+05,\n'
 '        -2.54339750e+05,  2.16070938e+05,  5.06467781e+05,\n'
 '        -4.06771656e+05, -6.97845562e+05, -7.57565125e+05,\n'
 '        -7.01767750e+05, -4.03351281e+05, -1.28176412e+06,\n'
 '         3.39443406e+05, -2.78906660e+04,  2.24095125e+05,\n'
 '         5.88920938e+05, -2.90976250e+05, -1.33468938e+05,\n'
 '        -4.34027750e+05,  4.01083156e+05, -8.30775703e+04,\n'
 '        -1.06281508e+05, -7.84010812e+05,  6.99220062e+05,\n'
 '        -6.05013875e+05,  3.62283688e+05, -3.49516719e+05,\n'
 '        -7.34060375e+05,  2.63437969e+05,  6.59530062e+05,\n'
 '        -9.75368984e+04, -5.55870438e+05,  3.31055312e+05,\n'
 '         1.07438789e+05,  2.71749188e+05, -2.34556141e+05,\n'
 '        -2.38020797e+05, -1.69459953e+05,  1.75334297e+04,\n'
 '        -1.52317703e+05,  2.65562625e+05, -7.73759938e+05,\n'
 '        -5.38300188e+05, -2.90482000e+05,  5.04643516e+04,\n'
 '         2.38711484e+05,  8.55448312e+05, -3.71877383e+04,\n'
 '         7.83601125e+05, -2.56994000e+05,  2.16534531e+05,\n'
 '         2.59588172e+05,  5.02755750e+05,  2.61583730e+04,\n'
 '        -3.58474727e+04, -1.37119844e+05,  1.50099844e+05,\n'
 '         9.60059688e+05, -1.11808375e+06, -1.10153027e+04,\n'
 '         7.42269562e+05,  3.22952656e+05, -5.26158062e+05,\n'
 '        -1.51316875e+05, -6.93057250e+05, -1.17380289e+05,\n'
 '         4.51964531e+05, -3.36348094e+05, -3.84339031e+05,\n'
 '         1.08987988e+06, -8.53444812e+05,  3.11408094e+05,\n'
 '         3.77761375e+05,  3.09014668e+04,  5.82055117e+04,\n'
 '         4.17815500e+05,  4.84105438e+05, -9.52197312e+05,\n'
 '        -5.16099812e+05,  1.85913027e+04,  4.84936125e+05,\n'
 '        -8.38414922e+04, -4.95038320e+04,  6.83303375e+05,\n'
 '         1.18985638e+06,  3.97789500e+05, -2.46699453e+05,\n'
 '        -5.92818562e+05, -3.58676656e+05,  3.35121375e+05,\n'
 '         8.24449219e+04,  3.11634344e+05,  2.00962250e+05,\n'
 '        -4.21585781e+05,  2.60423938e+05,  2.87795219e+05,\n'
 '         5.97941062e+05,  1.13530375e+06,  8.94438250e+05,\n'
 '         3.44222906e+05, -5.08633188e+05,  3.64940812e+05,\n'
 '         5.30486812e+05, -7.43078750e+05, -3.16557715e+04,\n'
 '         5.85355188e+05, -6.56493000e+05,  5.46474258e+04,\n'
 '         3.65252156e+05, -7.65153625e+05, -1.26595875e+05,\n'
 '        -2.23423297e+05, -5.80201625e+05,  4.57374812e+05,\n'
 '        -8.36078125e+05,  4.77198719e+05, -5.86735125e+05,\n'
 '        -2.72221562e+05,  3.06420125e+05,  5.74085039e+04,\n'
 '        -4.76728781e+05, -3.56244344e+05, -3.57684625e+05,\n'
 '        -1.28685109e+05, -4.49433625e+05,  4.32281188e+05,\n'
 '         2.81300719e+05, -1.91685844e+05, -5.35282875e+05,\n'
 '         1.81914590e+04, -5.02855625e+05,  2.74798344e+05,\n'
 '         3.81160906e+05, -8.62521484e+04, -3.94231781e+05,\n'
 '         3.41770938e+05, -3.35433312e+05, -4.13071094e+05,\n'
 '         3.34124750e+05,  4.02680656e+05,  2.69761375e+05,\n'
 '        -5.54796688e+05, -7.72458188e+05,  7.21371500e+05,\n'
 '        -4.89357266e+04,  1.26795150e+06, -3.36237156e+05,\n'
 '         4.56120906e+05, -6.30508062e+05, -1.02454681e+06,\n'
 '        -1.18732050e+06,  1.20962562e+06, -3.82055250e+05,\n'
 '        -1.54714594e+05,  5.88838188e+05,  4.53770750e+05,\n'
 '        -4.45927588e+03,  1.57530656e+05,  2.67601750e+05,\n'
 '        -6.61657750e+05,  7.79614750e+05, -5.30982562e+05,\n'
 '         3.12245728e+03,  7.15325938e+05,  4.39785375e+05,\n'
 '         5.95582500e+05, -5.03142734e+04,  3.33386406e+05,\n'
 '        -8.43867312e+05, -3.84886438e+05, -3.53207750e+05,\n'
 '        -5.22731103e+03,  4.96843531e+05,  2.65094469e+05,\n'
 '        -9.73314875e+05,  7.38570625e+04, -2.43387266e+05,\n'
 '        -4.79870094e+05, -1.95328766e+05,  1.92529812e+05,\n'
 '         3.93366812e+05, -2.56520562e+05,  1.61081547e+05,\n'
 '         2.91747031e+05, -1.69551156e+05,  3.59306000e+05,\n'
 '        -3.88892773e+04, -6.54255938e+05, -1.86528000e+05,\n'
 '        -1.07724365e+04,  1.06281492e+05,  2.46644141e+05,\n'
 '        -4.03860562e+05,  5.65199438e+05,  5.47011836e+04,\n'
 '        -1.40812109e+05, -5.94935438e+05, -3.12208781e+05,\n'
 '        -8.53933125e+05, -1.48703775e+06,  8.42786562e+05,\n'
 '        -5.24867812e+05, -2.59227891e+05,  7.83628875e+05,\n'
 '        -1.98716281e+05, -1.34583672e+05, -2.76637000e+05,\n'
 '        -3.22616625e+05,  4.27357688e+05, -9.00460062e+05,\n'
 '         1.08992828e+05, -2.15160047e+05,  3.49051656e+05,\n'
 '        -1.39885594e+05,  4.02069344e+05,  8.80140688e+05,\n'
 '         3.60214594e+05,  2.37476594e+05, -1.62503953e+05,\n'
 '        -5.93947125e+05, -1.94964125e+05,  5.90145625e+05,\n'
 '        -3.04811594e+05, -1.36571484e+05, -2.99986562e+05,\n'
 '        -1.93459547e+05, -5.55154375e+05, -1.02933138e+06,\n'
 '        -5.25588625e+05,  4.94570531e+05,  6.41542125e+05,\n'
 '         1.78637891e+05, -2.01613281e+04, -2.13828188e+05,\n'
 '        -3.94469219e+05,  1.28913289e+05, -5.00009562e+05,\n'
 '        -1.34667578e+05,  3.23235281e+05, -1.94322375e+05,\n'
 '        -4.62075312e+05,  5.15527312e+05, -1.25484453e+05,\n'
 '         1.39218859e+05, -3.63176602e+04, -2.66473625e+05,\n'
 '         1.17297836e+05,  1.59039000e+06,  6.22684375e+05,\n'
 '         2.82784219e+04, -4.17143500e+05,  3.91838625e+05,\n'
 '        -6.71957688e+05, -1.23358914e+05, -5.62560812e+05,\n'
 '         9.97454844e+04,  3.79793156e+05, -4.90302719e+05,\n'
 '        -7.17770234e+04, -3.84384688e+04, -4.43478555e+04,\n'
 '        -3.93895156e+05,  5.84234438e+05, -5.52894062e+05,\n'
 '        -1.44661906e+05, -9.58500875e+05,  1.44265500e+05,\n'
 '         3.82804344e+05,  3.26870531e+05, -1.88794922e+05,\n'
 '         8.19725125e+05,  3.49749844e+05,  2.58505031e+05,\n'
 '         3.79118203e+04,  7.44672938e+05, -4.71233000e+05,\n'
 '        -4.50235656e+05,  6.94743938e+05,  1.52477562e+05,\n'
 '        -5.42516688e+05, -1.40665078e+05, -3.24930469e+05,\n'
 '         2.23226438e+05,  1.19040615e+04,  1.27739150e+04,\n'
 '        -3.91430031e+05,  1.30772812e+06, -4.38324406e+05,\n'
 '        -3.93393250e+05, -1.64873362e+06, -4.50188656e+05,\n'
 '         2.46929641e+05,  3.59151250e+05, -1.06868570e+05,\n'
 '        -3.55594312e+05,  3.05355293e+04,  5.22063188e+05,\n'
 '         4.57888344e+05, -9.36985312e+04, -1.43428625e+05,\n'
 '        -6.29508320e+04,  4.65436250e+05,  1.46392281e+05,\n'
 '         6.70603938e+05,  5.34882125e+05, -1.97850344e+05,\n'
 '         8.26004062e+05, -1.03120578e+05, -3.08121719e+05,\n'
 '         7.38631172e+04, -9.53044500e+05, -5.25403477e+04,\n'
 '        -5.91686500e+05, -7.25327562e+05,  7.11045625e+04,\n'
 '         2.30729609e+05, -5.82289062e+05,  3.52878500e+05,\n'
 '         2.33503781e+05,  2.36374434e+04, -5.86151438e+05,\n'
 '        -3.13507188e+05, -2.57330625e+05, -8.55889531e+04,\n'
 '        -1.33794734e+05, -2.34769547e+05, -1.04446195e+05,\n'
 '        -3.77852062e+05,  4.06205156e+05, -7.20894688e+05,\n'
 '         2.77184281e+05,  2.07382672e+05,  3.80188375e+05,\n'
 '         3.55859375e+05, -7.13890875e+05, -2.89685781e+05,\n'
 '        -4.70539502e+03,  2.51902234e+05,  3.63798438e+04,\n'
 '         9.86424938e+05, -5.21264062e+05, -6.59055562e+05,\n'
 '        -3.18718250e+05, -1.31991462e+06, -8.38304375e+05,\n'
 '        -8.23358828e+04,  2.78740062e+05,  1.15098953e+05,\n'
 '         2.02434290e+03, -2.37024609e+05, -6.77935625e+05,\n'
 '        -2.07798109e+05, -6.84734812e+05,  4.07151844e+05,\n'
 '        -1.73537070e+04, -3.66065594e+05,  2.05152266e+04,\n'
 '         4.64283344e+05,  2.78773625e+05, -4.90666875e+05,\n'
 '         2.75790594e+05,  6.21382578e+04,  4.67078344e+05,\n'
 '        -5.29213000e+05, -5.94753812e+05,  2.23709750e+05,\n'
 '         2.86455406e+05, -6.26588062e+05,  4.55774062e+04,\n'
 '        -6.50514750e+05,  6.16558500e+05, -1.05529258e+05,\n'
 '        -9.38263750e+05, -5.41155688e+05, -1.34250094e+05,\n'
 '         2.85784750e+05,  6.79012266e+04,  2.45426969e+05,\n'
 '         5.74989688e+04, -3.24179250e+05,  1.82747150e+06,\n'
 '        -2.14915734e+05, -7.13276250e+05,  3.21146688e+05,\n'
 '        -1.23424641e+05, -1.43049812e+05,  3.23138031e+05,\n'
 '        -4.80061562e+05,  6.19166312e+05,  7.19977188e+04,\n'
 '         8.21330062e+05,  1.10220742e+05, -5.92148250e+05,\n'
 '         2.64284281e+05, -3.87458906e+04,  3.96766500e+05,\n'
 '         7.71109562e+05,  2.47360484e+05,  4.35344766e+04,\n'
 '         5.88010062e+05,  8.37281125e+05,  1.84388906e+05,\n'
 '         3.58925375e+05,  6.96707500e+04,  2.52850703e+05,\n'
 '        -2.04954953e+05, -8.56673125e+05,  2.56360750e+05,\n'
 '         1.78263938e+05, -3.64680031e+05, -6.49302250e+05,\n'
 '         2.07967938e+05, -2.63213438e+05, -8.46588625e+05,\n'
 '        -1.51070953e+05, -5.54441312e+05, -4.61154625e+05,\n'
 '         2.79210969e+05,  2.61089250e+05,  1.39349266e+05,\n'
 '        -3.96328250e+05,  2.53667188e+04, -3.68630281e+05,\n'
 '         9.58219688e+05, -2.72074188e+05,  8.66387344e+04,\n'
 '        -7.24571750e+05,  7.79923906e+04,  7.77615312e+04,\n'
 '        -6.48711562e+05, -2.61920820e+04, -4.57680469e+05,\n'
 '         2.47479453e+04, -7.40612734e+04, -4.45710312e+05,\n'
 '        -1.10887432e+04, -4.54056875e+05,  9.27826250e+05,\n'
 '        -2.31966156e+05, -1.08815188e+05, -6.56767422e+04,\n'
 '         1.33131922e+05,  8.00559312e+05, -1.95410453e+05,\n'
 '        -9.57049500e+05, -3.89608555e+04,  1.96526594e+05,\n'
 '         1.72661125e+05,  1.79150250e+05, -5.43258398e+03,\n'
 '         1.39955500e+05, -2.97484812e+05,  5.80203375e+05,\n'
 '        -1.39412207e+04, -8.12491062e+05, -1.75795344e+05,\n'
 '        -6.95159875e+05,  6.62301938e+05,  5.63714188e+05,\n'
 '        -6.68388750e+05,  1.67402031e+05,  1.81414328e+05,\n'
 '        -9.17884863e+03, -2.77252844e+05,  1.87151344e+05,\n'
 '        -4.27636875e+05, -3.87707812e+05,  9.12121188e+05,\n'
 '         2.10078484e+05,  3.92350742e+04, -6.01462875e+05,\n'
 '         4.71375469e+05,  3.22675996e+04,  3.38871844e+05,\n'
 '        -6.61842125e+05,  1.63752812e+05, -1.18477945e+05,\n'
 '         1.28383875e+05,  4.99588469e+05,  3.80183938e+05,\n'
 '         1.10380703e+05,  8.50233359e+04, -2.23638422e+05,\n'
 '        -5.29376312e+05, -5.70713250e+05,  8.21777750e+05,\n'
 '        -6.47703438e+05,  8.20933938e+05,  3.24806484e+04,\n'
 '        -9.13112188e+04,  9.48883812e+05,  3.97751594e+05,\n'
 '         8.83550547e+04,  1.06369609e+05,  7.44442312e+05,\n'
 '        -3.74067422e+04, -5.25815000e+05,  1.00262086e+05,\n'
 '        -5.30286312e+05,  1.67108438e+05,  1.04308925e+06,\n'
 '         8.36778203e+04,  2.68804125e+05,  3.05935156e+05,\n'
 '         7.80784141e+04,  1.86117562e+05,  8.18356688e+05,\n'
 '         7.70493250e+05,  2.38172500e+05, -6.06623375e+05,\n'
 '        -2.37480098e+04, -7.67904000e+05, -5.18656438e+05,\n'
 '         5.09917688e+05,  4.89643562e+05,  5.45869453e+04,\n'
 '         7.79687938e+05,  5.09285812e+05, -5.74693875e+05,\n'
 '         3.07094344e+05, -6.68067250e+05,  2.78621188e+05,\n'
 '        -5.12534453e+04, -2.80576125e+05,  6.45668625e+05,\n'
 '         3.57239219e+05, -2.97244344e+05, -4.22378406e+05,\n'
 '        -7.20461312e+05, -9.78925703e+04,  7.10165438e+05,\n'
 '         6.82739219e+04,  3.63917688e+05, -6.71442656e+04,\n'
 '         4.53399125e+05,  7.76155938e+05, -5.64647438e+05,\n'
 '        -3.14059875e+05,  6.27887625e+05, -1.22566641e+05,\n'
 '         8.11144219e+04,  3.62639250e+05,  7.50813312e+05,\n'
 '         1.66388469e+05,  3.05784250e+05, -8.28695125e+05,\n'
 '         1.19338852e+05,  4.47400656e+05, -3.42914453e+04,\n'
 '         5.89032344e+04,  3.62466906e+05,  4.98188164e+04,\n'
 '         5.24995820e+04, -2.23097016e+05,  6.25927750e+05,\n'
 '         1.32674828e+05, -1.86517891e+04,  3.70881500e+05,\n'
 '        -1.78117719e+05, -2.39076109e+05,  5.67159125e+05,\n'
 '         3.63190750e+05,  1.05841852e+05, -2.58893156e+05,\n'
 '        -4.83341406e+04,  3.49477156e+05, -4.50259180e+04,\n'
 '         5.23453156e+05,  3.91312750e+05,  6.85068125e+05,\n'
 '        -1.59864062e+05,  3.78582562e+05, -5.50667625e+05,\n'
 '         8.87206312e+05, -3.94877438e+05, -1.06097225e+06,\n'
 '         4.61677375e+05, -2.61096344e+05, -1.09530625e+05,\n'
 '        -4.83575656e+05, -7.16949297e+04, -3.25141531e+05,\n'
 '        -6.78281250e+05,  4.76905273e+04, -3.81902531e+05,\n'
 '        -1.64988109e+05, -8.09887344e+04,  1.00410600e+06,\n'
 '         4.08144156e+05, -1.51591062e+05,  6.02591750e+05,\n'
 '         5.62745188e+05,  1.22502023e+05, -1.87222562e+05,\n'
 '         4.27080531e+05, -2.38158141e+05,  1.09889138e+06,\n'
 '        -1.90137531e+05, -1.12716888e+06, -3.01812094e+05,\n'
 '         5.73995688e+05,  1.38636250e+05,  3.90652375e+05,\n'
 '         2.22861984e+05,  1.14456738e+06, -3.78716219e+05,\n'
 '         1.08713242e+05, -3.07185938e+04,  3.30151062e+05,\n'
 '         3.32874562e+05, -1.53168000e+05, -8.64857562e+05,\n'
 '         1.20721734e+05,  4.48600531e+05, -6.80231438e+05,\n'
 '         2.29680094e+05,  1.47202859e+05,  2.50864000e+05,\n'
 '         3.24862719e+05,  6.81595000e+05, -4.95154156e+05,\n'
 '        -4.13514062e+04,  9.99490938e+05,  5.39348938e+05,\n'
 '         2.46723969e+05, -3.84838125e+05,  1.70307266e+05,\n'
 '        -1.60089922e+05, -4.73765688e+05,  2.57710219e+05,\n'
 '         5.33157578e+04, -2.72705375e+05,  4.02196219e+05,\n'
 '        -7.06357375e+05, -4.29995375e+05, -9.09906438e+05,\n'
 '        -1.03222913e+03, -7.01895812e+05, -5.02457852e+04,\n'
 '         2.49606516e+05, -2.54769719e+05, -1.09339512e+06,\n'
 '        -2.22914828e+05,  2.86235410e+04, -1.25676398e+05,\n'
 '        -2.91606000e+05,  1.00615112e+06, -7.23071562e+04,\n'
 '         3.27889344e+05,  1.69310430e+04, -2.95821906e+05,\n'
 '        -3.78563688e+05,  9.54532375e+05,  3.84054875e+05,\n'
 '        -2.01228953e+05, -2.96307344e+05, -1.47486709e+04,\n'
 '         1.19434016e+05,  2.08240844e+05,  3.27476719e+05,\n'
 '        -3.17631062e+05, -4.00836562e+05,  1.72435719e+05,\n'
 '        -4.11182344e+05,  4.72720906e+05, -3.97018938e+05,\n'
 '         2.30965984e+05,  4.50233312e+05, -9.10677344e+04,\n'
 '        -8.41606641e+04,  1.02375146e+04, -2.96352812e+05,\n'
 '         1.65239750e+05, -3.73026156e+05, -8.12904062e+05,\n'
 '         8.58357562e+05,  4.33756750e+05, -5.96546312e+05,\n'
 '         2.39152031e+05, -7.28657312e+05, -5.93700812e+05,\n'
 '        -1.97670938e+05, -4.71130742e+04, -2.75873500e+05,\n'
 '         1.74152188e+05,  2.57893453e+05,  7.62842891e+04,\n'
 '         1.17713875e+05, -1.33005578e+05, -3.50132250e+05,\n'
 '         1.13634992e+05,  8.94893203e+04, -9.93266188e+05,\n'
 '         2.73179812e+05, -1.40488766e+05,  3.45086906e+05,\n'
 '         7.24627295e+03, -4.09376844e+05, -3.48669492e+04,\n'
 '         1.02065188e+06,  4.90924875e+05, -8.11794250e+05,\n'
 '        -3.81638188e+05, -8.30406172e+04, -5.09952500e+05,\n'
 '        -3.94208375e+05,  9.27456812e+05, -8.60364625e+05,\n'
 '         2.63980188e+05,  6.26281172e+04,  4.27055125e+05,\n'
 '         9.51624297e+04,  1.68459297e+05, -6.89469609e+04,\n'
 '        -3.38481750e+05,  7.51912125e+05, -2.44882484e+05,\n'
 '         6.60299688e+05, -6.74445688e+05, -8.62290438e+05,\n'
 '         1.02667773e+05,  2.83779625e+05,  5.45979000e+05,\n'
 '         5.88722750e+05, -1.07847125e+06, -4.85714125e+05,\n'
 '         8.93721875e+04, -8.55656250e+04, -7.66428750e+05,\n'
 '         2.86465562e+05, -7.70293375e+05, -3.85858531e+05,\n'
 '        -8.35550781e+04,  2.80386438e+05,  2.42681812e+05,\n'
 '         3.11802844e+05, -2.84915656e+05, -2.89026062e+05,\n'
 '         2.72310219e+05,  1.35608594e+05, -1.23416662e+06,\n'
 '         2.99332637e+04,  2.78616344e+05,  2.41805266e+05,\n'
 '        -2.42771094e+05,  5.79468562e+05,  2.51325250e+05,\n'
 '        -6.25331562e+05, -2.13106656e+05,  5.59794750e+05,\n'
 '        -2.98182844e+05, -6.61834875e+05,  8.43617688e+05,\n'
 '        -1.27015688e+05]])')
'test_inceptionnet | batch_shape is: [1]'
'test_inceptionnet | logits.shape is: ivy.Shape(1, 1000)'
'||'
'test_inceptionnet | device is: cpu'
'test_inceptionnet | fw is: jax'
'test_inceptionnet | load_weights is: True'
'InceptionV3 | build | layer 1/22 built'
'InceptionV3 | build | layer 2/22 built'
'layer 3/22 built'
'InceptionV3 | build | layer 4/22 built'
'InceptionV3 | build | layer 5/22 built'
'InceptionV3 | build | layer 6/22 built'
'InceptionV3 | build | layer 7/22 built'
'InceptionV3 | build | layer 8/22 built'
'InceptionV3 | build | layer 9/22 built'
'InceptionV3 | build | layer 10/22 built'
'InceptionV3 | build | layer 11/22 built'
'InceptionV3 | build | layer 12/22 built'
'InceptionV3 | build | layer 13/22 built'
'InceptionV3 | build | layer 14/22 built'
'InceptionV3 | build | layer 15/22 built'
'InceptionV3 | build | layer 17/22 built'
'InceptionV3 | build | layer 18/22 built'
'InceptionV3 | build | layer 19/22 built'
'InceptionV3 | build | layer 20/22 built'
'InceptionV3 | build | layer 21/22 built'
'InceptionV3 | build | layer 22/22 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/4 built'
'layer 2/4 built'
'layer 3/4 built'
'layer 4/4 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/6 built'
'layer 2/6 built'
'layer 3/6 built'
'layer 4/6 built'
'layer 5/6 built'
'layer 6/6 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'inceptionNet_v3 | building InceptionV3 model | done 1/3'
'inceptionNet_v3 | clearning pretrained weights | done 2/3'
'inceptionNet_v3 | loading pretrained weights | done 3/3'
'InceptionV3 | forward | input data_format is:NCHW | done 1/27'
'InceptionV3 | forward | data_format is going to be used is:NCHW | done 1/27'
'InceptionV3 | forward | input shape is:ivy.Shape(1, 224, 224, 3) | done 1/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 224, 224, 3) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 111, 111, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 111, 111, 32) | done 2/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 111, 111, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 32) | done 3/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 109, 109, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 64) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 64) | done 4/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 54, 54, 64) | done 5/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 54, 54, 80) | done 3/3'
'InceptionV3 | forward | is:ivy.Shape(1, 54, 54, 80) | done 6/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 80) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 52, 52, 192) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 52, 52, 192) | done 7/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 192) | done 8/27'
'input shape is:ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 32) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 32)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 25, 25, 256) | done 9/27'
'input shape is:ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 10/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 11/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 384) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 96) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 96)'
'one 20/20, output shape is:ivy.Shape(1, 12, 12, 288)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 12/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 12, 12, 768) | done 13/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 14/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 15/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 16/27'
'v3 16/27, output shape is:ivy.Shape(1, 12, 12, 768)'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 5, 5, 192)'
'one 7/20, output shape is:ivy.Shape(1, 5, 5, 768)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 1280) | done 17/27'
'input shape is:ivy.Shape(1, 5, 5, 1280)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 18/27'
'input shape is:ivy.Shape(1, 5, 5, 2048)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 19/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 20/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 5, 5) | done 21/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 1, 1) | done 22/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 27/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 24/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 25/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048) | done 26/27'
'InceptionV3 | forward | fc | done 27/27'
('test_inceptionnet | logits is: ivy.array([[-1.55690461e-01, -1.34749949e+00, '
 '-2.29122728e-01,\n'
 '         1.32712638e+00, -1.75874412e-01,  8.83178353e-01,\n'
 '         2.57571626e+00, -9.02108252e-02, -4.15482611e-01,\n'
 '        -2.71436500e+00, -4.66130048e-01,  3.17997813e-01,\n'
 '        -2.53521204e-02,  1.09315550e+00,  2.44289398e+00,\n'
 '         1.04927278e+00, -2.94063401e+00, -4.62971807e-01,\n'
 '        -8.88365507e-02,  1.28523183e+00,  3.09394908e+00,\n'
 '        -2.50446606e+00,  9.20041442e-01, -2.09793186e+00,\n'
 '        -6.61274552e-01, -3.59484792e-01, -5.39409816e-02,\n'
 '        -9.46308851e-01,  6.57562614e-01, -1.29101825e+00,\n'
 '         7.82457709e-01,  1.07118130e+00,  1.77567279e+00,\n'
 '         3.30164909e-01,  1.58258212e+00, -5.55502057e-01,\n'
 '         1.77217579e+00, -5.40360749e-01, -8.25820506e-01,\n'
 '         1.90413821e+00,  1.00089443e+00,  1.51032341e+00,\n'
 '         1.27386761e+00,  1.24244869e+00,  3.48232090e-02,\n'
 '         1.01748872e+00, -8.05178165e-01,  1.04030609e+00,\n'
 '        -6.40948862e-02, -2.03059480e-01,  4.84178096e-01,\n'
 '         9.88848448e-01,  1.76331329e+00, -7.25564957e-01,\n'
 '         2.15007162e+00,  1.00783348e+00, -1.48189211e+00,\n'
 '         2.90979147e-01,  1.23690295e+00,  4.10424173e-01,\n'
 '        -1.03432953e+00,  2.24872160e+00, -3.94010484e-01,\n'
 '        -4.04884636e-01, -1.18568993e+00, -1.47191560e+00,\n'
 '         1.53627837e+00,  2.02963424e+00,  2.02145362e+00,\n'
 '        -1.43864214e+00, -4.18877691e-01, -2.11823314e-01,\n'
 '        -1.50273430e+00, -1.25624466e+00,  3.02458972e-01,\n'
 '         3.47002924e-01, -1.48169398e+00, -2.74914742e-01,\n'
 '         4.84958887e-01,  1.10505056e+00, -1.56978512e+00,\n'
 '         2.29398704e+00, -1.48685977e-01, -7.60322452e-01,\n'
 '        -3.98541749e-01, -3.35930407e-01, -8.40928078e-01,\n'
 '        -2.04742885e+00, -1.56885952e-01,  5.44519186e-01,\n'
 '        -2.56128758e-01,  1.44498634e+00, -3.79516602e-01,\n'
 '         2.69466758e-01, -1.81954050e+00, -1.63965344e+00,\n'
 '         1.14338350e+00,  6.17472529e-01, -4.08521175e-01,\n'
 '         1.32309771e+00,  1.75311804e+00,  6.47935391e-01,\n'
 '         1.05589867e-01, -8.34159493e-01,  2.35403109e+00,\n'
 '        -2.37211108e+00, -9.30327773e-01,  1.91537964e+00,\n'
 '         1.85091257e+00, -9.62257624e-01, -1.75616354e-01,\n'
 '        -2.41782761e+00,  4.05317783e+00,  3.49199057e+00,\n'
 '        -4.27045882e-01, -1.85975599e+00, -6.26547217e-01,\n'
 '        -1.55318439e+00, -1.39259839e+00,  1.17750548e-01,\n'
 '        -1.22674358e+00, -1.58035553e+00,  1.66510534e+00,\n'
 '        -6.27899170e-02, -2.64008880e+00,  5.36227643e-01,\n'
 '        -1.86392331e+00,  2.03045082e+00,  4.42157060e-01,\n'
 '         3.51360917e-01,  6.00007415e-01,  7.11022377e-01,\n'
 '         1.56178689e+00, -2.29236627e+00, -7.13864922e-01,\n'
 '         5.97521007e-01,  7.00696826e-01,  1.57659686e+00,\n'
 '        -1.28999257e+00, -1.57233691e+00, -5.94553113e-01,\n'
 '        -1.87454343e-01, -1.00100958e+00,  4.99954402e-01,\n'
 '         2.91480112e+00,  7.82355666e-01,  1.15550220e-01,\n'
 '        -7.86914051e-01,  8.64458978e-01,  6.36390388e-01,\n'
 '        -4.44640934e-01,  1.25342607e-03,  2.96652055e+00,\n'
 '        -1.46553516e-02, -5.32614052e-01, -2.25715089e+00,\n'
 '         8.68773103e-01,  4.19426155e+00, -2.83502936e+00,\n'
 '        -7.04241753e-01,  9.03651535e-01, -2.89957690e+00,\n'
 '        -1.87093043e+00,  4.41654384e-01, -1.43621266e-01,\n'
 '        -1.44805944e+00, -9.40699577e-01, -6.85455144e-01,\n'
 '        -2.38997459e+00,  2.89691186e+00,  8.66189659e-01,\n'
 '        -8.22011948e-01,  1.02412367e+00,  2.05593085e+00,\n'
 '         5.07771671e-01, -1.32701492e+00, -1.29840910e+00,\n'
 '        -9.54409316e-02,  7.23320723e-01,  1.49142659e+00,\n'
 '         1.09172940e+00,  6.20460630e-01, -1.21655655e+00,\n'
 '         1.23654902e+00,  1.19210049e-01,  1.31056440e+00,\n'
 '         2.54025006e+00, -8.51049900e-01, -1.34687281e+00,\n'
 '        -2.03535032e+00,  4.35728073e-01, -4.30508137e-01,\n'
 '        -1.61951613e+00, -6.34601593e-01, -3.42008233e+00,\n'
 '        -1.40272641e+00, -2.15741777e+00,  2.00123739e+00,\n'
 '        -2.90094465e-01,  4.29021359e-01,  1.01915824e+00,\n'
 '        -2.64845061e+00, -9.16265786e-01,  6.60368872e+00,\n'
 '        -2.35786319e+00, -2.55337262e+00, -1.64892971e+00,\n'
 '         4.42462504e-01, -2.62020445e+00, -1.28119183e+00,\n'
 '        -1.67500997e+00, -1.25733113e+00, -1.18572152e+00,\n'
 '        -3.74090344e-01,  2.28325605e+00,  2.49217823e-01,\n'
 '         1.96238124e+00,  7.31784105e-01,  5.08507609e-01,\n'
 '        -3.07913470e+00, -1.50003219e+00,  5.59717655e-01,\n'
 '         3.79429150e+00,  2.64576960e+00,  5.64156055e+00,\n'
 '        -2.83059645e+00,  2.07682347e+00, -3.19174600e+00,\n'
 '         1.40263879e+00,  9.35061038e-01,  2.18201184e+00,\n'
 '         3.63821053e+00,  3.21190500e+00,  2.22467351e+00,\n'
 '        -2.43039101e-01, -4.73717116e-02,  3.58646214e-01,\n'
 '        -1.77016282e+00, -8.30522180e-01, -9.44413662e-01,\n'
 '         3.29590112e-01, -2.02002740e+00,  2.15504313e+00,\n'
 '         3.23327780e-01, -8.71000290e-01,  2.36212879e-01,\n'
 '        -2.69963116e-01,  1.38608718e+00,  7.90899992e+00,\n'
 '         4.30811453e+00,  3.67498374e+00,  7.27693379e-01,\n'
 '        -2.30351210e+00,  5.89714468e-01, -8.62499952e-01,\n'
 '        -9.46907818e-01,  1.87682772e+00,  7.68573570e+00,\n'
 '         1.95489960e+01,  5.78779411e+00,  3.76320052e+00,\n'
 '         4.26566887e+00, -2.06913209e+00, -5.04994512e-01,\n'
 '        -1.18178010e+00, -6.20411634e-01, -1.86133838e+00,\n'
 '         2.16914868e+00,  2.62937069e-01,  1.12844276e+00,\n'
 '         1.02186174e+01, -2.46654010e+00, -1.30088997e+00,\n'
 '        -9.23619449e-01, -1.30390906e+00, -2.77049589e+00,\n'
 '         2.94787973e-01, -4.65063453e-01, -3.00087094e+00,\n'
 '         9.63316250e+00,  1.92381203e-01, -1.81962684e-01,\n'
 '        -8.50308180e-01,  2.08346939e+00, -3.13149309e+00,\n'
 '        -8.97578359e-01, -9.84556317e-01,  3.42324227e-01,\n'
 '         1.81816578e+00,  6.85901046e-01,  6.01755828e-02,\n'
 '         6.91633701e-01,  7.57953703e-01, -2.09911203e+00,\n'
 '        -1.09276116e-01, -2.23958611e-01,  4.72809792e+00,\n'
 '         3.79210413e-02, -3.61047316e+00, -1.84027553e+00,\n'
 '        -1.25795439e-01,  1.12062439e-01,  1.20316112e+00,\n'
 '         1.98727226e+00,  5.36049962e-01,  1.51048601e-02,\n'
 '         3.16786915e-01,  1.68610096e+00,  1.32323301e+00,\n'
 '         1.01806927e+00, -3.95073414e-01,  3.34124789e-02,\n'
 '        -4.50305402e-01, -2.27124524e+00, -2.13618889e-01,\n'
 '        -3.70038390e-01, -1.98508215e+00,  5.59354007e-01,\n'
 '        -7.28308320e-01, -5.37769675e-01,  4.81452435e-01,\n'
 '        -8.23228210e-02, -4.95840967e-01,  3.03514433e+00,\n'
 '        -2.77630782e+00,  1.08321559e+00,  1.47431648e+00,\n'
 '         1.30431581e+00,  4.49147254e-01, -4.55608308e-01,\n'
 '         2.16490999e-01,  2.32537222e+00,  1.43296349e+00,\n'
 '        -1.60099649e+00, -1.99959862e+00, -2.56230044e+00,\n'
 '        -2.18704748e+00, -2.36226887e-01,  9.73025441e-01,\n'
 '         1.05876178e-02, -4.74515319e-01,  2.54361772e+00,\n'
 '        -1.66842103e-01,  5.11542440e-01, -3.75320166e-01,\n'
 '         2.39049244e+00,  1.41211700e+00,  2.62213230e-01,\n'
 '         1.86515140e+00,  6.77424073e-02, -1.54334712e+00,\n'
 '        -9.91216481e-01, -2.18377876e+00, -8.47474694e-01,\n'
 '        -3.40276003e-01,  1.63825917e+00,  3.41205537e-01,\n'
 '        -5.98539770e-01,  1.55066538e+00, -1.50998938e+00,\n'
 '        -1.26681948e+00, -1.25371504e+00, -2.26692796e+00,\n'
 '         1.01829171e+00, -2.76500440e+00, -4.09727049e+00,\n'
 '        -1.89442718e+00,  5.94475865e-01, -1.87830818e+00,\n'
 '        -3.41062760e+00, -1.20861685e+00, -1.91311502e+00,\n'
 '        -1.01732636e+00,  1.78923666e-01, -9.62748051e-01,\n'
 '        -2.72869587e+00, -1.40412808e+00, -2.12281299e+00,\n'
 '        -3.18119430e+00, -3.20257950e+00, -3.21349597e+00,\n'
 '        -2.33127356e+00, -3.16365075e+00, -2.31568742e+00,\n'
 '        -3.16668534e+00,  3.95886272e-01, -4.25716400e-01,\n'
 '        -6.47887587e-01, -6.15427375e-01,  8.22816610e-01,\n'
 '        -7.89180577e-01, -2.98597813e-01,  4.84454632e-03,\n'
 '         6.56776130e-01,  1.48626232e+00, -1.43677795e+00,\n'
 '         1.94620276e+00, -9.57698703e-01,  1.55498838e+00,\n'
 '         1.22989941e+00, -2.78439546e+00,  4.41262811e-01,\n'
 '         1.54485774e+00,  2.69894695e+00,  1.57762849e+00,\n'
 '         1.50775218e+00, -2.57656455e-01, -1.96914554e+00,\n'
 '        -7.24841654e-02, -1.45338273e+00, -1.48837364e+00,\n'
 '        -3.41987801e+00, -3.78314209e+00, -2.31231189e+00,\n'
 '        -8.51143122e-01,  6.88358367e-01, -2.00367856e+00,\n'
 '         3.09602439e-01, -5.91362298e-01, -9.63716507e-01,\n'
 '         2.58202553e-01, -3.13608336e+00, -7.24562049e-01,\n'
 '         1.31144774e+00,  3.05701065e+00,  3.72355700e+00,\n'
 '        -3.40120971e-01, -7.12665796e-01,  1.17753387e+00,\n'
 '        -2.05744147e-01,  9.81129885e-01, -3.46721262e-01,\n'
 '         9.31122303e-01, -9.39743757e-01, -1.39242959e+00,\n'
 '        -1.80533603e-01, -4.91996616e-01, -8.13870072e-01,\n'
 '        -4.27271068e-01, -1.03467500e+00,  7.28947639e-01,\n'
 '        -7.00390339e-01, -2.08405018e+00, -1.98671961e+00,\n'
 '        -1.00968718e+00,  1.24759173e+00, -1.46670055e+00,\n'
 '        -1.60079026e+00,  4.07704711e-01, -1.43521667e-01,\n'
 '        -8.74258995e-01,  1.01703393e+00, -2.21395469e+00,\n'
 '        -9.24805105e-02,  7.06991315e-01,  2.46617421e-01,\n'
 '        -3.96257818e-01,  1.35719895e+00,  7.54067481e-01,\n'
 '        -1.44191122e+00, -1.16390228e+00, -1.98292208e+00,\n'
 '         6.79522514e-01, -6.80368841e-01,  1.00719380e+00,\n'
 '        -3.40731311e+00,  1.54411864e+00,  6.80826783e-01,\n'
 '         4.62212682e-01,  1.07596791e+00,  1.49213600e+00,\n'
 '        -2.85292983e+00, -1.03081358e+00,  2.43530989e+00,\n'
 '        -2.17429519e-01, -3.42431426e+00,  3.18943834e+00,\n'
 '        -3.04495752e-01,  3.80071282e+00, -7.65214443e-01,\n'
 '        -1.27274013e+00, -1.75114080e-01,  2.63639569e-01,\n'
 '        -5.71413934e-01,  9.37602520e-01, -1.34805751e+00,\n'
 '         2.57172287e-01,  2.33730465e-01,  2.62023497e+00,\n'
 '         2.61384416e+00,  1.23096275e+00,  2.71241021e+00,\n'
 '        -1.19882774e+00, -7.86568522e-01, -2.07373047e+00,\n'
 '         3.87128234e-01, -1.98279524e+00, -2.79346824e+00,\n'
 '         1.00978064e+00, -8.50936696e-02, -1.84849477e+00,\n'
 '        -1.05712509e+00, -7.53391027e-01, -6.59563780e-01,\n'
 '        -1.60158360e+00,  7.80439377e-01, -1.86700356e+00,\n'
 '         4.07612175e-02,  1.29148197e+00, -1.34350336e+00,\n'
 '         6.14990234e-01,  1.39013529e-02,  1.80820778e-01,\n'
 '         6.60944700e-01,  9.28133786e-01,  5.55834293e-01,\n'
 '        -8.72404456e-01,  1.26794970e+00, -3.47319722e+00,\n'
 '        -4.78054464e-01,  4.31086659e-01,  1.65635765e-01,\n'
 '         1.08887427e-01, -5.94040871e-01, -1.44530487e+00,\n'
 '        -2.15777159e-02, -3.68749678e-01, -2.36998129e+00,\n'
 '        -7.51074254e-01, -1.88555324e+00,  4.39608634e-01,\n'
 '         3.58324111e-01,  2.10942611e-01, -9.64421451e-01,\n'
 '        -1.58969307e+00, -5.95203400e-01, -1.06678367e+00,\n'
 '         1.93636072e+00, -1.62456715e+00,  1.86980796e+00,\n'
 '        -3.89579773e-01, -3.75549376e-01, -7.14078426e-01,\n'
 '         9.06935632e-01,  1.32448113e+00, -5.96781731e-01,\n'
 '         3.35896349e+00,  2.15624884e-01, -1.31897378e+00,\n'
 '        -3.81023556e-01, -3.79433811e-01, -1.32786202e+00,\n'
 '        -1.19901395e+00, -1.40154684e+00, -3.71968806e-01,\n'
 '        -1.58724976e+00,  9.56450105e-02, -2.88746893e-01,\n'
 '        -6.15669191e-01, -3.92640650e-01, -1.05631709e+00,\n'
 '        -4.12028938e-01,  3.78069520e+00,  1.42555952e+00,\n'
 '         5.44037938e-01, -9.19098377e-01,  9.76515532e-01,\n'
 '        -2.49850631e+00, -1.76468387e-01, -1.60944462e+00,\n'
 '        -1.23403990e+00,  1.73711062e-01,  5.83981931e-01,\n'
 '         2.21329141e+00, -1.13369751e+00, -8.07337880e-01,\n'
 '         4.47293848e-01, -1.37685549e+00, -7.42877424e-02,\n'
 '        -1.43828440e+00,  2.44322920e+00,  2.30714321e-01,\n'
 '         2.68762851e+00, -4.09757853e-01,  1.43022358e+00,\n'
 '         6.70477331e-01, -3.41152549e+00, -5.65106511e-01,\n'
 '        -1.16220903e+00,  6.68446422e-01,  9.45520461e-01,\n'
 '        -6.99756384e-01,  2.05701923e+00,  1.16161275e+00,\n'
 '         2.38984513e+00,  2.20290884e-01,  9.74937081e-01,\n'
 '         1.73018098e-01, -2.36248660e+00, -5.25720716e-02,\n'
 '        -7.54700899e-01, -1.71240628e+00, -1.90575147e+00,\n'
 '         8.08175683e-01,  2.00760484e+00, -1.52074587e+00,\n'
 '         4.25806236e+00,  8.11961293e-01,  1.34986150e+00,\n'
 '        -5.23151338e-01, -1.54518688e+00,  2.54418445e+00,\n'
 '         1.08452618e+00,  2.55256176e-01, -5.90255678e-01,\n'
 '        -4.12076092e+00, -2.30382979e-01, -9.52136278e-01,\n'
 '        -1.70390630e+00, -9.11825716e-01, -1.03573918e+00,\n'
 '         1.02513254e+00,  5.27280688e-01, -3.14616382e-01,\n'
 '         9.56770062e-01,  1.77596939e+00,  1.05133224e+00,\n'
 '        -1.11331391e+00,  2.98325992e+00, -1.00259751e-01,\n'
 '        -9.19739902e-01, -2.12366867e+00, -1.89166522e+00,\n'
 '        -2.72811413e+00, -1.42025387e+00, -2.07952428e+00,\n'
 '         5.07039964e-01, -3.88683766e-01, -8.86802673e-01,\n'
 '        -6.14159882e-01,  3.52865756e-01, -8.90391767e-01,\n'
 '        -6.22681528e-02,  5.56643605e-01, -2.25764900e-01,\n'
 '        -3.25918108e-01,  3.68192673e-01, -1.10081220e+00,\n'
 '         4.39622402e-02,  2.43921638e-01, -4.81998324e-02,\n'
 '        -2.85028148e+00, -1.02032647e-01, -2.34630394e+00,\n'
 '        -7.31400847e-01, -3.43023848e+00,  9.13357616e-01,\n'
 '        -3.46161914e+00,  1.66708380e-02, -1.71665204e+00,\n'
 '        -1.11007965e+00,  6.51731908e-01,  2.78090692e+00,\n'
 '        -2.96796083e+00,  6.12292886e-01,  6.33430362e-01,\n'
 '        -1.61078548e+00, -1.72219682e+00, -2.65268183e+00,\n'
 '         1.66099012e+00,  1.09689689e+00, -1.37936044e+00,\n'
 '         2.18875468e-01, -2.61322439e-01,  8.45392346e-01,\n'
 '        -1.46878445e+00,  1.05476677e+00, -1.74721062e-01,\n'
 '         1.19118381e+00, -1.60379231e-01, -9.26069021e-02,\n'
 '        -3.92814684e+00,  2.65476870e+00,  1.32832623e+00,\n'
 '         1.65311313e+00,  1.01579860e-01, -1.06426036e+00,\n'
 '         2.66438901e-01, -5.17610669e-01, -3.03424336e-02,\n'
 '         5.47456741e-01, -1.08623993e+00, -4.83728886e-01,\n'
 '        -3.60781383e+00, -6.09067500e-01,  2.49455428e+00,\n'
 '         6.49657011e-01, -5.23370326e-01,  1.42945015e+00,\n'
 '        -3.38666767e-01, -6.09259069e-01, -5.16079187e-01,\n'
 '        -3.93927789e+00, -1.97660044e-01, -2.74061203e+00,\n'
 '        -3.69574189e+00,  9.60658371e-01,  2.69750953e+00,\n'
 '        -1.49507701e+00, -1.73025286e+00,  4.55238134e-01,\n'
 '         9.03205037e-01, -1.70440924e+00, -3.12844706e+00,\n'
 '         2.24356628e+00, -1.28061891e-01, -5.54203749e-01,\n'
 '         1.38507500e-01,  1.46957803e+00,  1.12630582e+00,\n'
 '        -1.76694393e+00, -2.07893610e+00, -1.07859123e+00,\n'
 '        -8.58241439e-01,  2.41948462e+00,  6.75721243e-02,\n'
 '         4.21703219e-01, -1.81593388e-01,  2.73982501e+00,\n'
 '        -4.17822599e-01,  4.29186314e-01, -1.42118156e-01,\n'
 '        -1.92798460e+00, -2.67598689e-01, -1.15798855e+00,\n'
 '        -7.56928205e-01, -1.25063455e+00, -4.94182676e-01,\n'
 '         3.51388097e-01,  5.75810850e-01,  2.23860335e+00,\n'
 '         6.11863196e-01, -1.42103410e+00, -8.18053246e-01,\n'
 '        -1.38980460e+00, -2.47237921e+00,  2.56332064e+00,\n'
 '        -2.25593018e+00,  3.08616161e-02, -1.31671512e+00,\n'
 '        -1.53279030e+00,  2.44906202e-01, -1.68078974e-01,\n'
 '        -4.85572591e-02, -1.72003937e+00,  1.36598265e+00,\n'
 '        -1.29999447e+00,  4.56296802e-02,  8.08907747e-01,\n'
 '        -1.82670331e+00, -2.53185844e+00, -3.97090912e-02,\n'
 '         9.68993604e-02, -3.23041201e-01, -2.97157931e+00,\n'
 '         9.07546639e-01, -3.93778294e-01,  1.74622130e+00,\n'
 '         1.14614248e-01,  1.14306092e+00,  1.02980614e+00,\n'
 '        -8.41693640e-01, -9.78214979e-01, -1.84291041e+00,\n'
 '         9.51609075e-01, -3.12264889e-01,  2.06993341e+00,\n'
 '         1.69098723e+00, -1.34645665e+00, -7.77048886e-01,\n'
 '         3.28800130e+00,  1.27575362e+00,  6.44402087e-01,\n'
 '        -1.46532393e+00, -2.13571572e+00, -1.05452895e+00,\n'
 '         1.38603878e+00,  6.94946349e-01,  1.39833689e+00,\n'
 '        -7.66764045e-01,  1.43920541e+00,  1.86765230e+00,\n'
 '         2.74494600e+00,  5.51329851e-01, -9.49951053e-01,\n'
 '        -5.40592849e-01, -1.69732600e-01, -3.43809032e+00,\n'
 '         8.71499419e-01,  1.55860972e+00,  4.39164817e-01,\n'
 '         9.33746338e-01,  3.22923708e+00,  9.45041657e-01,\n'
 '        -2.37353039e+00, -3.38634580e-01, -2.69999242e+00,\n'
 '         1.68948069e-01,  5.91681242e-01, -4.96268272e-01,\n'
 '         1.86996520e+00,  1.75178516e+00,  1.47251666e+00,\n'
 '        -6.64904237e-01,  1.31802797e+00,  1.28579426e+00,\n'
 '         8.77466440e-01, -8.60124111e-01, -1.90422428e+00,\n'
 '         4.51957017e-01, -5.93046248e-01, -2.20820713e+00,\n'
 '         1.06064534e+00, -2.38721311e-01, -3.86187136e-01,\n'
 '         2.44910121e-02,  1.41889191e+00,  2.78206676e-01,\n'
 '         1.59040523e+00, -1.05946338e+00, -2.78129458e-01,\n'
 '         5.90336174e-02,  8.70527506e-01,  8.63460660e-01,\n'
 '        -8.59676242e-01, -1.11567485e+00,  1.32257426e+00,\n'
 '        -1.11651945e+00,  1.76647091e+00, -3.30788463e-01,\n'
 '        -3.21054280e-01, -7.05313802e-01, -6.27530217e-01,\n'
 '         2.44509125e+00,  2.51754522e+00, -1.61750841e+00,\n'
 '        -1.30769992e+00, -2.12887406e+00,  1.47295308e+00,\n'
 '         3.15493673e-01, -4.82030779e-01, -2.90556699e-02,\n'
 '         1.18366194e+00,  5.36060691e-01, -1.07455218e+00,\n'
 '        -7.87571371e-01, -3.06211293e-01,  1.99166584e+00,\n'
 '         1.49495113e+00,  1.20158708e+00,  2.15443921e+00,\n'
 '         3.65256429e-01, -6.27708435e-01, -9.11599040e-01,\n'
 '        -1.92245817e+00, -1.22757947e+00,  3.32443476e-01,\n'
 '         1.35693061e+00, -1.87586009e+00, -1.54457331e+00,\n'
 '         3.98792386e-01,  2.66971558e-01,  3.56329620e-01,\n'
 '        -7.78558314e-01, -1.77457750e+00, -6.06437385e-01,\n'
 '         6.90107644e-01, -2.44554114e+00,  2.44047141e+00,\n'
 '        -2.91465372e-01, -3.35316777e+00, -1.72140288e+00,\n'
 '         2.01139998e+00, -1.17475939e+00, -1.69899130e+00,\n'
 '        -1.83821011e+00,  1.81918228e+00, -5.24143696e-01,\n'
 '        -1.09083950e+00,  5.06289840e-01, -8.12597930e-01,\n'
 '         2.78618753e-01, -1.51498330e+00,  1.65994084e+00,\n'
 '        -5.65867066e-01, -8.93425584e-01,  2.04470396e+00,\n'
 '        -2.66922426e+00,  9.58201349e-01,  1.99640727e+00,\n'
 '        -3.29829186e-01,  6.47778869e-01,  3.06030095e-01,\n'
 '        -2.37959290e+00, -8.09842765e-01,  4.70839232e-01,\n'
 '        -2.07179815e-01,  8.61163974e-01,  1.16905308e+00,\n'
 '         4.39831883e-01, -4.66402441e-01, -6.38777018e-02,\n'
 '         5.66368341e-01,  2.65078473e+00, -5.42195439e-01,\n'
 '         1.38700283e+00, -5.17255306e-01, -6.16508841e-01,\n'
 '         1.46953329e-01,  4.11149949e-01, -2.01759648e+00,\n'
 '         3.32998872e-01,  2.40370393e+00,  1.37558997e+00,\n'
 '        -1.56275690e+00, -1.29140839e-01, -1.32636285e+00,\n'
 '        -2.54887152e+00,  1.28765082e+00, -9.95887160e-01,\n'
 '         1.38675451e+00, -1.10216475e+00, -1.77493012e+00,\n'
 '        -1.95359564e+00, -1.75644743e+00, -1.50208902e+00,\n'
 '         4.15880531e-01,  4.76945341e-01,  2.63124168e-01,\n'
 '         1.39474422e-01,  3.55637670e-01,  1.30753040e+00,\n'
 '         1.89863372e+00,  2.86276484e+00,  8.29124272e-01,\n'
 '         1.06025112e+00,  9.68182862e-01, -3.38979125e-01,\n'
 '        -1.44085634e+00, -6.04110658e-02,  1.83592606e+00,\n'
 '         1.72915816e+00,  2.34097123e+00,  8.26344788e-02,\n'
 '         1.28770506e+00,  2.45842314e+00,  2.57669330e+00,\n'
 '         2.95367241e+00, -2.16753900e-01, -7.95834303e-01,\n'
 '        -3.44852149e-01,  1.03267098e+00, -1.01094603e+00,\n'
 '        -8.36148202e-01, -1.58683682e+00, -1.69613123e+00,\n'
 '         1.44474602e+00,  1.10909176e+00, -1.58744132e+00,\n'
 '        -5.99977970e-01,  1.29846370e+00,  1.41766000e+00,\n'
 '        -8.69199634e-02, -1.46985006e+00,  1.24610603e-01,\n'
 '        -4.04729783e-01, -1.94686794e+00,  2.92417193e+00,\n'
 '         1.54665041e+00, -5.14898658e-01, -7.76035607e-01,\n'
 '        -2.06747341e+00, -1.41792929e+00,  1.28920197e+00,\n'
 '        -7.36820698e-02, -2.11389661e-02, -1.86054945e-01,\n'
 '         8.01777124e-01,  1.09913123e+00,  1.04084289e+00,\n'
 '        -5.78327417e-01, -1.62814450e+00, -1.46645784e+00,\n'
 '        -1.86250448e+00, -1.41805696e+00,  1.21591508e+00,\n'
 '        -1.45819283e+00, -1.13771474e+00,  4.21664089e-01,\n'
 '         1.11385018e-01]])')
'test_inceptionnet | batch_shape is: [1]'
'test_inceptionnet | logits.shape is: ivy.Shape(1, 1000)'
'||'
'test_inceptionnet | indices_test | true_indices is: [258 270 279]'
'test_inceptionnet | indices_test | calc_indices is: [258 270 279]'
'test_inceptionnet | device is: cpu'
'test_inceptionnet | fw is: tensorflow'
'test_inceptionnet | load_weights is: False'
'InceptionV3 | build | layer 1/22 built'
'InceptionV3 | build | layer 2/22 built'
'layer 3/22 built'
'InceptionV3 | build | layer 4/22 built'
'InceptionV3 | build | layer 5/22 built'
'InceptionV3 | build | layer 6/22 built'
'InceptionV3 | build | layer 7/22 built'
'InceptionV3 | build | layer 8/22 built'
'InceptionV3 | build | layer 9/22 built'
'InceptionV3 | build | layer 10/22 built'
'InceptionV3 | build | layer 11/22 built'
'InceptionV3 | build | layer 12/22 built'
'InceptionV3 | build | layer 13/22 built'
'InceptionV3 | build | layer 14/22 built'
'InceptionV3 | build | layer 15/22 built'
'InceptionV3 | build | layer 17/22 built'
'InceptionV3 | build | layer 18/22 built'
'InceptionV3 | build | layer 19/22 built'
'InceptionV3 | build | layer 20/22 built'
'InceptionV3 | build | layer 21/22 built'
'InceptionV3 | build | layer 22/22 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/4 built'
'layer 2/4 built'
'layer 3/4 built'
'layer 4/4 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/6 built'
'layer 2/6 built'
'layer 3/6 built'
'layer 4/6 built'
'layer 5/6 built'
'layer 6/6 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'inceptionNet_v3 | building InceptionV3 model | done 1/3'
'InceptionV3 | forward | input data_format is:NHWC | done 1/27'
'InceptionV3 | forward | data_format is going to be used is:NHWC | done 1/27'
'InceptionV3 | forward | input shape is:ivy.Shape(1, 224, 224, 3) | done 1/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 224, 224, 3) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 111, 111, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 111, 111, 32) | done 2/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 111, 111, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 32) | done 3/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 109, 109, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 64) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 64) | done 4/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 54, 54, 64) | done 5/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 54, 54, 80) | done 3/3'
'InceptionV3 | forward | is:ivy.Shape(1, 54, 54, 80) | done 6/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 80) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 52, 52, 192) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 52, 52, 192) | done 7/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 192) | done 8/27'
'input shape is:ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 32) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 32)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 25, 25, 256) | done 9/27'
'input shape is:ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 10/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 11/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 384) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 96) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 96)'
'one 20/20, output shape is:ivy.Shape(1, 12, 12, 288)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 12/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 12, 12, 768) | done 13/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 14/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 15/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 16/27'
'v3 16/27, output shape is:ivy.Shape(1, 12, 12, 768)'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 5, 5, 192)'
'one 7/20, output shape is:ivy.Shape(1, 5, 5, 768)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 1280) | done 17/27'
'input shape is:ivy.Shape(1, 5, 5, 1280)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 18/27'
'input shape is:ivy.Shape(1, 5, 5, 2048)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 19/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 20/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 5, 5) | done 21/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 1, 1) | done 22/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 27/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 24/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 25/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048) | done 26/27'
'InceptionV3 | forward | fc | done 27/27'
('test_inceptionnet | logits is: ivy.array([[-6.00436500e+05,  '
 '3.05970594e+05,  2.42452531e+05,\n'
 '         2.23526000e+05,  1.13148138e+06, -2.69974406e+05,\n'
 '         1.91640862e+06, -3.70203938e+05, -1.12194781e+05,\n'
 '        -2.48891938e+05, -1.39064088e+06,  2.43395266e+05,\n'
 '         1.84713750e+04,  9.04585859e+04,  1.04909662e+06,\n'
 '         8.59249844e+04, -4.58013312e+05,  1.20626975e+06,\n'
 '         1.32608484e+05,  2.15397225e+06,  1.26091325e+06,\n'
 '         1.14370133e+05,  3.45003188e+05, -1.78958788e+06,\n'
 '         7.45777688e+05, -5.88160625e+05, -8.12436562e+05,\n'
 '        -3.69372562e+05,  7.25530312e+05,  5.61425812e+05,\n'
 '        -2.24352300e+06,  8.76174750e+05, -5.57646438e+05,\n'
 '         6.71959938e+05,  6.95095312e+04, -4.24559844e+05,\n'
 '         1.91013075e+06, -1.21265912e+06, -3.44585125e+05,\n'
 '         1.55077225e+06,  1.59717475e+06, -1.51684312e+05,\n'
 '        -1.45991750e+06,  2.88997188e+05,  1.08413250e+05,\n'
 '         5.20523812e+05, -2.77605406e+05,  3.24109336e+04,\n'
 '         1.11920031e+05,  1.06926133e+04, -1.41495350e+06,\n'
 '         4.33545062e+05, -9.95389625e+05,  5.27761562e+05,\n'
 '        -2.51178500e+05,  6.62365703e+04,  1.05637488e+06,\n'
 '         5.58999500e+05,  1.73813250e+06, -1.72140550e+06,\n'
 '         8.47708938e+05,  3.98823500e+05, -1.41321812e+06,\n'
 '        -1.29325175e+06,  5.79793562e+05, -1.21129875e+06,\n'
 '        -1.56875156e+05, -1.07117425e+06,  1.12720562e+06,\n'
 '         5.66012500e+05,  4.83151094e+05, -1.36242112e+06,\n'
 '        -1.06125125e+06, -1.77165375e+06, -1.50611225e+06,\n'
 '         1.26515172e+05, -1.44272338e+06,  1.48254912e+06,\n'
 '         2.22388359e+05, -7.51905625e+05, -5.81034562e+05,\n'
 '        -3.39505078e+03,  8.47709062e+05,  5.93996938e+05,\n'
 '         1.51806088e+06,  3.82788312e+05,  1.39299762e+06,\n'
 '        -5.81562375e+05,  1.34837488e+06, -8.07947750e+05,\n'
 '         8.10985781e+04,  3.01825125e+05, -1.49788062e+06,\n'
 '        -6.97228062e+05,  1.33419350e+06, -2.28268225e+06,\n'
 '        -9.76286500e+05,  8.01795750e+05, -1.72896469e+05,\n'
 '        -1.25790962e+06,  4.62822125e+05, -1.20404992e+05,\n'
 '         1.19949050e+06, -4.52637625e+05,  1.19949262e+06,\n'
 '        -1.50299562e+05, -1.22535125e+06,  5.12162156e+05,\n'
 '         4.92167625e+05,  1.41941762e+06, -8.26903562e+05,\n'
 '         2.07218775e+06,  1.79753867e+04, -4.11485625e+05,\n'
 '        -2.57837070e+04, -2.14411975e+06, -1.37660075e+06,\n'
 '         5.76573340e+03,  1.86879200e+06,  1.26961425e+06,\n'
 '        -1.21346438e+06, -5.15921062e+05, -1.65132094e+05,\n'
 '        -1.19440725e+06,  3.47290250e+05,  6.23817250e+05,\n'
 '        -1.90234953e+05,  5.85812688e+05, -1.00768425e+06,\n'
 '         1.93570475e+06, -3.81547227e+04, -4.36684562e+05,\n'
 '        -3.82779594e+05,  1.75185531e+05, -2.28017775e+06,\n'
 '         9.93240625e+05, -6.62717625e+05,  1.73978359e+05,\n'
 '         1.38647238e+06, -4.15429031e+05, -1.77699362e+06,\n'
 '        -3.17099375e+05,  8.58923281e+04, -2.88061594e+05,\n'
 '        -2.28109594e+05, -2.04452812e+06,  5.90644062e+05,\n'
 '         1.57600125e+05,  1.52762412e+06,  3.69607188e+05,\n'
 '        -6.50419875e+05,  7.10322500e+04,  1.04219794e+06,\n'
 '         1.47595203e+05, -4.28560234e+04, -4.54992875e+05,\n'
 '         7.05401438e+05, -1.97039375e+06, -4.90684531e+05,\n'
 '        -1.03651319e+06,  3.93853344e+05, -6.78778188e+05,\n'
 '        -2.23875800e+06, -2.95425175e+06,  1.02372944e+06,\n'
 '         9.36399562e+05, -9.21138750e+05,  2.15962938e+05,\n'
 '        -7.41490625e+05,  5.31339062e+05, -1.06612512e+06,\n'
 '         1.39023125e+06, -2.05003266e+05,  1.36218150e+06,\n'
 '        -3.14466758e+04, -1.96152125e+06,  2.38026859e+05,\n'
 '         3.45897125e+05,  1.52651575e+06,  1.58154288e+06,\n'
 '         1.52969762e+06, -2.05017781e+05,  9.35222125e+05,\n'
 '        -7.79241688e+05, -2.47624450e+06, -1.37315262e+06,\n'
 '         6.35813812e+05,  8.76446188e+05,  4.63353500e+05,\n'
 '        -1.03410012e+06,  5.52886375e+05, -1.07685262e+06,\n'
 '         1.85513738e+06, -3.45618500e+05, -1.16448508e+05,\n'
 '         7.93085500e+05,  1.13666962e+06, -1.72285112e+06,\n'
 '         1.92655562e+05,  2.79986188e+05, -9.11333750e+05,\n'
 '        -4.00650531e+05,  1.42137575e+06, -3.72935781e+05,\n'
 '        -1.63958762e+06,  2.86198250e+05,  8.25448000e+05,\n'
 '         6.78523875e+05,  1.82054250e+06, -1.00763812e+06,\n'
 '        -1.09341612e+06,  1.13936925e+06, -1.21823012e+06,\n'
 '        -1.55810150e+06,  9.03454562e+05, -6.96529453e+04,\n'
 '        -1.47737375e+06, -1.02438069e+06,  8.23035500e+05,\n'
 '         1.43631675e+06,  2.14437969e+05,  1.00936200e+06,\n'
 '        -2.50280344e+05, -2.18434725e+06, -1.72908609e+05,\n'
 '        -4.91263469e+05, -5.61606312e+05, -2.76711938e+05,\n'
 '         1.25656250e+06,  4.86351750e+05,  8.00782562e+05,\n'
 '         9.12979438e+05, -2.40849575e+06,  1.99486975e+06,\n'
 '         1.54050562e+06, -5.47200188e+05, -1.02342375e+06,\n'
 '        -1.72872312e+05, -3.25482438e+05, -1.11046930e+05,\n'
 '         6.10652500e+05, -5.70636000e+05,  3.64386953e+04,\n'
 '         7.05876000e+05,  8.33770000e+05,  2.09646188e+06,\n'
 '         2.69013781e+05,  1.82716012e+06,  1.35878800e+06,\n'
 '         5.36750750e+05,  1.16963775e+06,  4.83280062e+05,\n'
 '         9.64923812e+05, -8.59848906e+04, -6.16660250e+05,\n'
 '        -1.60464350e+06,  5.88287438e+05, -8.43296938e+05,\n'
 '        -8.21484188e+05, -6.01752000e+05, -1.61750588e+06,\n'
 '        -2.26241312e+05,  1.83544750e+06, -1.95129594e+05,\n'
 '         9.33854688e+05,  5.03069781e+05,  8.19407375e+05,\n'
 '        -6.58556188e+05,  1.66442188e+06, -6.05731562e+05,\n'
 '         8.03660188e+05,  1.16807262e+06,  4.44365125e+05,\n'
 '         5.01798094e+05,  1.70121250e+05, -8.58780625e+05,\n'
 '         4.67717312e+05, -7.77052625e+05, -9.36588203e+04,\n'
 '         6.39245125e+05,  1.62107188e+06, -9.17956719e+04,\n'
 '         1.74608938e+06,  5.60110438e+05,  3.98260844e+05,\n'
 '         8.12331375e+05,  6.90929812e+05, -1.55796512e+06,\n'
 '         3.46437266e+04,  1.63230212e+06, -1.58904275e+06,\n'
 '         5.53659375e+05,  9.38057969e+04, -7.92004531e+04,\n'
 '         7.01890312e+05,  2.91956219e+05, -9.90474438e+05,\n'
 '         3.26794875e+05,  6.98331500e+05,  2.96561281e+05,\n'
 '         1.68356575e+06,  1.25348100e+06,  4.21901781e+05,\n'
 '         2.31074525e+06,  7.88499812e+05,  9.72597750e+05,\n'
 '        -7.51329250e+05, -8.05279375e+04, -5.01947406e+05,\n'
 '         7.44299000e+05, -1.91216150e+06,  5.31141750e+05,\n'
 '        -2.54133062e+05,  3.99967281e+05, -8.96468000e+05,\n'
 '        -8.59572812e+04,  1.91808516e+05,  1.85636075e+06,\n'
 '         1.26744988e+06,  2.57364125e+06, -2.87858531e+05,\n'
 '        -3.26143938e+05,  7.92607938e+05,  1.81213450e+06,\n'
 '        -3.85770562e+05,  1.02410856e+06, -1.46328075e+06,\n'
 '        -1.56017788e+06,  9.39396438e+05,  4.54379531e+04,\n'
 '         1.19789575e+06,  4.55618469e+05,  1.42308200e+06,\n'
 '         1.38010500e+06,  4.82775281e+05, -5.69355562e+05,\n'
 '        -3.22322406e+05,  9.82147125e+05, -7.91159812e+05,\n'
 '         1.34510912e+06, -1.25198578e+05,  6.16843188e+05,\n'
 '        -6.06901375e+05, -1.51213281e+04, -1.17201675e+06,\n'
 '        -3.41507438e+05, -5.68198375e+05, -9.56943875e+05,\n'
 '        -2.50896266e+05, -6.71118938e+05, -1.23298300e+06,\n'
 '         2.88155438e+05, -1.27872750e+06,  1.30156100e+06,\n'
 '        -6.70924000e+05, -3.34935625e+05, -7.00296250e+04,\n'
 '         5.00224344e+05, -9.58309000e+05, -1.12112594e+05,\n'
 '         2.77926230e+04,  7.17615938e+05,  1.69918281e+04,\n'
 '        -6.58496688e+05,  8.31733688e+05,  1.44330138e+06,\n'
 '         8.28886250e+05, -1.07508138e+06, -3.25542000e+05,\n'
 '        -1.14484625e+05, -6.02497500e+05, -5.86251875e+05,\n'
 '         5.61919938e+05, -8.69983375e+05, -1.29851000e+06,\n'
 '         1.11626550e+06, -9.30058906e+04,  1.25737425e+06,\n'
 '         1.75025094e+05,  4.39891375e+05,  1.09557950e+06,\n'
 '        -1.85436688e+06, -7.55427500e+05,  1.85154862e+06,\n'
 '         4.59981562e+04, -7.81227062e+05, -8.97501312e+05,\n'
 '         2.92483406e+05, -8.53487812e+05, -2.24659300e+06,\n'
 '         8.40401312e+05,  2.54983859e+05,  6.64638688e+05,\n'
 '         6.01569188e+05, -3.70978500e+05, -1.35768450e+06,\n'
 '        -4.47423125e+05,  2.47315820e+04,  1.81723812e+06,\n'
 '        -7.76057938e+05,  1.55491125e+06, -1.73243412e+06,\n'
 '        -1.56381962e+06,  7.89993906e+04,  7.41753188e+05,\n'
 '         4.08323125e+04,  1.27347961e+05,  4.82567617e+04,\n'
 '        -8.13027438e+05,  3.42108562e+05, -7.07343312e+05,\n'
 '         1.09228125e+06,  2.18320375e+06,  8.14189562e+05,\n'
 '         2.73643188e+05,  7.88124375e+05,  1.93515609e+05,\n'
 '        -6.02732312e+05, -1.95835117e+04,  8.51529688e+05,\n'
 '        -2.00824175e+06, -8.52782250e+05, -1.64047425e+06,\n'
 '        -1.34050375e+06,  8.02271562e+05,  5.11728469e+05,\n'
 '         6.31543000e+05, -1.36709425e+06, -3.40766500e+05,\n'
 '         1.07680200e+06, -6.49670375e+05,  5.76309375e+05,\n'
 '         1.29445288e+06,  4.77481219e+05,  1.50419962e+06,\n'
 '        -7.41123312e+05, -4.34041031e+05,  5.81050312e+05,\n'
 '         6.96057750e+05, -5.67260062e+05, -1.68593675e+06,\n'
 '        -1.41554500e+06,  1.76152962e+06, -3.69892822e+03,\n'
 '         1.19376738e+06,  3.27615562e+05,  3.15146375e+05,\n'
 '        -4.19868562e+05, -4.96798688e+05, -1.99114000e+06,\n'
 '         1.55922400e+06,  7.27208625e+05, -4.30993531e+05,\n'
 '        -3.48605844e+05, -1.07891075e+06, -2.49628188e+05,\n'
 '        -6.75164188e+05, -1.32194350e+06,  1.24337938e+06,\n'
 '         4.23924453e+04, -1.01055088e+06,  2.57995742e+04,\n'
 '        -8.91090812e+05,  1.53778325e+06, -2.25111219e+05,\n'
 '        -6.74233125e+05, -1.83139594e+05, -6.59282891e+04,\n'
 '        -6.58170000e+05, -2.41117750e+06,  2.34082300e+06,\n'
 '        -2.26948325e+06,  2.23298891e+05, -4.42087125e+05,\n'
 '         1.22564825e+06,  7.28656750e+05, -3.29179312e+05,\n'
 '        -9.63860500e+05,  7.83271375e+05,  5.03514250e+05,\n'
 '         7.29805000e+05,  1.20542297e+05, -6.11974875e+05,\n'
 '         1.14100362e+06,  8.82122500e+05, -2.42447188e+05,\n'
 '        -1.70468975e+06, -3.51856688e+05, -1.38016775e+06,\n'
 '         1.46308867e+04, -1.92053962e+06,  4.46389648e+03,\n'
 '        -8.33689875e+05,  9.99563938e+05, -1.41555750e+05,\n'
 '        -5.15780312e+05,  3.68628500e+05, -6.66553438e+05,\n'
 '         1.74832938e+05,  2.45983500e+05,  1.11118862e+06,\n'
 '        -6.09544500e+05,  9.14562812e+05, -2.38238391e+05,\n'
 '        -1.08037100e+06,  1.45503094e+05, -1.26338325e+06,\n'
 '         1.52638338e+06, -1.41926575e+06,  5.14554375e+05,\n'
 '        -1.60304000e+05,  8.72090812e+05,  6.44496312e+05,\n'
 '         7.91730875e+05, -4.07760094e+05, -5.05863812e+05,\n'
 '         6.15349250e+05, -5.98683500e+05, -2.73657062e+05,\n'
 '         1.92453938e+05,  1.67384641e+05,  1.23284375e+06,\n'
 '        -2.13629266e+05, -5.28004000e+05,  4.21916750e+05,\n'
 '        -1.25971719e+04,  1.87799638e+06,  4.97956344e+05,\n'
 '         1.94806906e+05, -5.52250188e+05, -1.12106375e+06,\n'
 '         6.29522031e+04, -9.47747938e+05, -1.77651012e+06,\n'
 '        -2.88128000e+05, -4.78874812e+05,  6.12140750e+05,\n'
 '         9.98959625e+05, -7.72176875e+05,  2.56816475e+06,\n'
 '        -7.10185750e+05, -6.97148250e+05,  2.68813938e+05,\n'
 '         1.60583338e+06,  1.18445038e+06, -1.96706375e+05,\n'
 '         1.09816225e+06,  1.20959925e+06, -1.07888475e+06,\n'
 '         6.20508062e+05, -6.73636125e+05,  2.39717391e+05,\n'
 '        -1.87928862e+06, -8.13254062e+04,  8.14998125e+05,\n'
 '        -9.09004688e+03,  9.14763688e+05, -1.47227312e+06,\n'
 '         5.39501188e+05,  1.37707838e+06,  7.80704875e+05,\n'
 '         5.69511438e+05,  1.92690156e+05,  7.86360562e+05,\n'
 '         8.84318000e+05, -2.23513975e+06,  2.58815725e+06,\n'
 '        -2.18374750e+06,  7.01007062e+05, -1.23159712e+06,\n'
 '        -7.31618625e+05, -1.26072925e+06,  3.04776750e+06,\n'
 '        -2.27851225e+06,  3.66109719e+05,  3.96322562e+05,\n'
 '        -2.65287688e+05, -3.09968500e+05, -8.29116812e+05,\n'
 '         1.06221609e+05,  1.90307800e+06,  4.64550531e+05,\n'
 '         3.70397438e+05,  1.60300925e+06,  1.39274925e+06,\n'
 '        -1.32557625e+06,  1.22418450e+06,  2.69582312e+05,\n'
 '        -1.31939625e+05,  4.43221688e+05,  6.23076719e+04,\n'
 '         2.45199234e+05,  1.76240712e+06,  1.71238012e+06,\n'
 '         4.88965391e+04,  1.40247050e+06, -1.43189438e+06,\n'
 '         4.38011125e+05,  5.62699000e+05,  1.41803212e+06,\n'
 '        -6.04124562e+05, -6.77782438e+05, -1.16481988e+06,\n'
 '         1.02644625e+06, -9.44842875e+05, -1.14231047e+05,\n'
 '        -7.88037812e+05,  3.62485675e+06, -4.53731188e+05,\n'
 '        -8.31136062e+05, -7.28015938e+05, -9.36392500e+05,\n'
 '        -2.34740031e+05, -9.05607438e+05,  6.86491062e+05,\n'
 '         5.63643625e+05,  1.72279469e+05, -7.39251875e+05,\n'
 '         8.84898812e+05, -3.75455438e+05, -5.27461938e+05,\n'
 '         6.59273250e+05, -2.07226016e+04, -5.77199750e+05,\n'
 '        -7.31618812e+05, -9.58910938e+04,  1.53414350e+06,\n'
 '         2.32129953e+05, -1.09211925e+06, -3.53504297e+04,\n'
 '         1.50784850e+06, -1.04476069e+06,  1.82766162e+06,\n'
 '        -3.88599062e+05, -1.69450750e+05, -2.97303875e+05,\n'
 '         1.32066975e+06, -4.74069297e+04, -1.05060288e+06,\n'
 '        -5.93698688e+05, -1.06963450e+06, -9.69029938e+05,\n'
 '        -1.37830430e+04, -9.74952438e+05, -1.95146906e+05,\n'
 '        -3.34343375e+05, -1.19953588e+06, -2.16507175e+06,\n'
 '         1.23056550e+06,  5.02710312e+05,  3.74742031e+05,\n'
 '         1.49326262e+06,  8.23512812e+05,  8.14498250e+05,\n'
 '        -5.37984438e+05, -7.43326125e+05,  5.29064141e+04,\n'
 '        -1.34993462e+06, -2.88232688e+05,  1.14998453e+05,\n'
 '        -9.79200547e+04, -5.24308188e+05, -2.71681850e+06,\n'
 '         1.87183575e+06,  1.33883062e+05, -2.60530672e+05,\n'
 '         5.00155188e+05, -1.98819225e+06,  1.66301200e+06,\n'
 '        -9.70573125e+05, -4.38529250e+05,  4.27506688e+05,\n'
 '        -2.10102850e+06, -1.85273547e+05,  6.09295312e+05,\n'
 '        -5.52144062e+05, -4.92441906e+05, -1.35120975e+06,\n'
 '         1.42026862e+06, -6.30280750e+05, -4.41628062e+05,\n'
 '        -1.24051891e+05, -1.60813375e+06, -1.78864662e+06,\n'
 '         1.09045738e+06,  1.01012719e+06, -4.09347906e+05,\n'
 '        -8.91752125e+05, -2.17422700e+06,  3.69350250e+05,\n'
 '        -2.56053688e+05, -4.28509062e+05,  8.96090375e+05,\n'
 '         1.12928075e+06,  1.69519250e+06, -1.57985578e+05,\n'
 '         6.29362000e+05, -4.44443938e+05, -8.78015875e+05,\n'
 '        -9.46295750e+05,  1.07919612e+06, -3.49183594e+05,\n'
 '         1.37859250e+06,  2.06171225e+06,  4.59773188e+05,\n'
 '         2.45423875e+06, -8.41065375e+05,  1.33855273e+03,\n'
 '         1.53869150e+06, -2.23172725e+06,  3.34818000e+05,\n'
 '         5.44846062e+05, -1.80553000e+06,  4.89074609e+04,\n'
 '        -9.38597125e+05,  1.42302000e+06,  1.46319938e+05,\n'
 '        -1.05884612e+06,  1.04845738e+06, -1.22450512e+06,\n'
 '        -3.06702031e+05, -2.61980332e+04, -4.00547312e+05,\n'
 '        -2.97090719e+05,  4.86106000e+05,  7.77462250e+05,\n'
 '         3.06837070e+04, -3.75246031e+05,  1.27349975e+06,\n'
 '         9.85685375e+05,  7.95856719e+04, -5.50832500e+05,\n'
 '        -6.08065312e+05,  5.54072000e+05,  1.47202888e+06,\n'
 '        -9.36344188e+05,  6.19756875e+05,  1.61124594e+05,\n'
 '        -2.43789900e+06,  8.34239219e+04,  4.22071688e+05,\n'
 '         7.46966625e+05, -1.73383400e+06,  6.41644750e+05,\n'
 '         6.11568125e+05,  7.33217812e+05, -8.78952875e+05,\n'
 '        -1.91118400e+06, -8.62668938e+05,  1.87520891e+05,\n'
 '        -7.20141375e+05,  1.03109638e+06,  2.52852547e+05,\n'
 '        -3.38714812e+05, -1.22866325e+06,  9.02660188e+05,\n'
 '         7.42855875e+05,  2.42352812e+05,  2.75789250e+05,\n'
 '        -1.19855425e+06,  2.10622672e+05,  9.06479500e+05,\n'
 '         3.18965781e+05,  2.93183688e+05, -2.14759900e+06,\n'
 '         1.27411938e+06, -1.54153138e+06, -2.45638172e+05,\n'
 '        -5.48904805e+04, -2.61701281e+05, -3.44530312e+05,\n'
 '        -2.64644500e+05, -8.04790000e+05, -1.59088475e+06,\n'
 '         1.06063688e+06,  4.57776312e+05, -3.59511000e+05,\n'
 '         3.17726062e+05, -1.05518112e+06, -3.40000156e+04,\n'
 '         1.24808525e+06, -9.27351250e+05,  7.02346375e+05,\n'
 '        -5.14046688e+05,  1.49238412e+06,  1.83512688e+06,\n'
 '        -3.21168312e+05,  2.68508031e+05,  3.23463000e+05,\n'
 '         2.24904469e+05, -1.05802725e+06,  7.69606812e+05,\n'
 '        -8.78420062e+05, -1.13003850e+06,  1.08850225e+06,\n'
 '        -1.04937950e+06,  5.32149688e+05,  8.06334766e+03,\n'
 '        -1.98778438e+05, -1.77632453e+05, -2.34971425e+06,\n'
 '         2.98886844e+05,  2.08341450e+06, -1.75210000e+06,\n'
 '        -9.30556641e+04, -1.83958812e+06,  1.05159488e+06,\n'
 '         9.55268062e+05, -5.71581875e+05,  4.21028062e+05,\n'
 '        -9.87028375e+05,  9.82707750e+05,  3.71469031e+05,\n'
 '        -1.03217125e+06,  1.17990812e+06,  8.27601875e+05,\n'
 '         1.30696538e+06, -9.78027250e+05,  1.27173500e+06,\n'
 '         6.67765750e+05,  1.06796712e+06, -1.56518712e+06,\n'
 '        -1.41773388e+06,  4.11916875e+05,  2.38253016e+05,\n'
 '        -2.51146141e+05,  5.35124375e+05,  1.04316875e+05,\n'
 '         2.30048125e+05, -2.10585975e+06, -7.19803750e+05,\n'
 '         7.81215547e+04, -5.73494688e+05, -3.99493500e+05,\n'
 '        -6.72457625e+05, -2.25363350e+06, -3.37260312e+05,\n'
 '        -1.01487525e+06,  2.41168900e+06, -2.66098450e+06,\n'
 '         1.04711925e+06,  7.66465812e+05, -1.77424350e+06,\n'
 '        -1.54778672e+05, -2.72856875e+05,  5.86150062e+05,\n'
 '         1.14338988e+06,  2.45087650e+06,  6.70227125e+05,\n'
 '         1.67477800e+06, -1.87566025e+06,  4.93601156e+05,\n'
 '         3.95428219e+05,  1.46590688e+05, -3.88685281e+05,\n'
 '         3.40958000e+05, -2.03112450e+06,  1.05981750e+05,\n'
 '         9.76733062e+05,  1.14702762e+06, -2.01679688e+03,\n'
 '        -6.52648438e+05, -3.87894531e+05, -1.26745898e+04,\n'
 '         1.73287125e+05, -2.76587975e+06, -2.19893688e+05,\n'
 '         1.33996550e+06,  1.98101588e+06,  1.15673650e+06,\n'
 '         9.05252625e+05, -6.17856000e+05,  2.18585875e+06,\n'
 '        -1.05698047e+05, -7.85196750e+05, -2.83761025e+06,\n'
 '        -1.24307375e+06,  1.88232150e+06,  1.86233422e+05,\n'
 '        -1.61303062e+06,  4.53506328e+04,  5.05221875e+05,\n'
 '        -1.47223531e+05, -5.63641938e+05, -3.66667344e+05,\n'
 '         1.25030050e+06, -2.58036922e+05, -1.16816438e+06,\n'
 '        -3.48254469e+05,  4.33607750e+05,  2.03009750e+06,\n'
 '        -4.86416406e+05, -7.18141438e+05,  1.78621094e+04,\n'
 '         1.14134312e+06, -9.56324844e+04, -1.14054250e+06,\n'
 '        -2.49283950e+06,  1.33330375e+06, -2.69208250e+05,\n'
 '         5.18572031e+05, -3.66513375e+05, -8.84257438e+05,\n'
 '         1.19624625e+06,  2.07365238e+06,  1.64709094e+05,\n'
 '         7.13070438e+05,  1.26575612e+06,  4.73695750e+05,\n'
 '         7.72402812e+04, -3.22933531e+05, -5.25242734e+04,\n'
 '         7.65163438e+04, -1.21734738e+06,  3.05302500e+05,\n'
 '         1.43099975e+06,  2.03571594e+05,  3.71215406e+05,\n'
 '        -7.00247125e+05,  2.70139675e+06, -6.59275000e+05,\n'
 '         1.07052500e+06, -4.00990281e+05,  8.96656312e+05,\n'
 '        -4.06562344e+05, -1.96481400e+06,  7.61426750e+05,\n'
 '        -6.72267188e+05,  2.90382625e+05,  9.43993125e+04,\n'
 '         2.37936750e+05,  2.73213875e+06,  1.82135406e+05,\n'
 '         7.30602188e+05,  1.28592325e+06, -2.42926450e+06,\n'
 '         8.41986062e+05,  2.78063555e+04,  8.66839219e+04,\n'
 '         1.22684662e+06,  1.03678850e+06, -6.56205438e+05,\n'
 '         6.15253375e+05,  6.82428938e+05, -9.66137500e+03,\n'
 '        -1.82207725e+06, -2.86416469e+05, -4.99474562e+05,\n'
 '        -2.00004641e+05, -1.84291662e+06,  1.32688588e+06,\n'
 '         1.15708912e+06,  3.48292188e+05,  1.96318750e+06,\n'
 '         9.66820625e+05, -8.88938938e+05,  9.76328875e+05,\n'
 '        -7.48665812e+05,  4.61838875e+05,  4.27233562e+05,\n'
 '         1.58741688e+06,  7.63620500e+05, -1.02731988e+06,\n'
 '         2.92813531e+05, -3.69639609e+04,  7.98596375e+05,\n'
 '        -1.02417806e+06,  9.68049938e+05, -1.29759200e+06,\n'
 '        -1.47622600e+06,  3.89623945e+04,  1.10613425e+06,\n'
 '         1.49896025e+06, -5.01544000e+05, -4.21820562e+05,\n'
 '         1.28451050e+06, -1.14142675e+06, -2.23705195e+04,\n'
 '        -9.33200875e+05,  6.93403000e+05, -7.93475938e+05,\n'
 '         6.46988062e+05,  8.93321641e+04, -3.75583406e+05,\n'
 '        -3.84717781e+05, -1.09198688e+06, -1.35717250e+05,\n'
 '        -8.47078812e+05,  4.49124781e+05, -2.14244225e+06,\n'
 '         7.97912375e+05,  6.22200375e+05, -5.07072344e+05,\n'
 '         1.13785875e+06,  1.27728612e+06, -4.50132656e+05,\n'
 '        -1.11441828e+05, -6.68572000e+05, -1.80361800e+06,\n'
 '        -1.39337562e+06]])')
'test_inceptionnet | batch_shape is: [1]'
'test_inceptionnet | logits.shape is: ivy.Shape(1, 1000)'
'||'
'test_inceptionnet | device is: cpu'
'test_inceptionnet | fw is: tensorflow'
'test_inceptionnet | load_weights is: True'
'InceptionV3 | build | layer 1/22 built'
'InceptionV3 | build | layer 2/22 built'
'layer 3/22 built'
'InceptionV3 | build | layer 4/22 built'
'InceptionV3 | build | layer 5/22 built'
'InceptionV3 | build | layer 6/22 built'
'InceptionV3 | build | layer 7/22 built'
'InceptionV3 | build | layer 8/22 built'
'InceptionV3 | build | layer 9/22 built'
'InceptionV3 | build | layer 10/22 built'
'InceptionV3 | build | layer 11/22 built'
'InceptionV3 | build | layer 12/22 built'
'InceptionV3 | build | layer 13/22 built'
'InceptionV3 | build | layer 14/22 built'
'InceptionV3 | build | layer 15/22 built'
'InceptionV3 | build | layer 17/22 built'
'InceptionV3 | build | layer 18/22 built'
'InceptionV3 | build | layer 19/22 built'
'InceptionV3 | build | layer 20/22 built'
'InceptionV3 | build | layer 21/22 built'
'InceptionV3 | build | layer 22/22 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/4 built'
'layer 2/4 built'
'layer 3/4 built'
'layer 4/4 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/6 built'
'layer 2/6 built'
'layer 3/6 built'
'layer 4/6 built'
'layer 5/6 built'
'layer 6/6 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'inceptionNet_v3 | building InceptionV3 model | done 1/3'
'inceptionNet_v3 | clearning pretrained weights | done 2/3'
'inceptionNet_v3 | loading pretrained weights | done 3/3'
'InceptionV3 | forward | input data_format is:NHWC | done 1/27'
'InceptionV3 | forward | data_format is going to be used is:NHWC | done 1/27'
'InceptionV3 | forward | input shape is:ivy.Shape(1, 224, 224, 3) | done 1/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 224, 224, 3) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 111, 111, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 111, 111, 32) | done 2/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 111, 111, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 32) | done 3/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 109, 109, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 64) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 64) | done 4/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 54, 54, 64) | done 5/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 54, 54, 80) | done 3/3'
'InceptionV3 | forward | is:ivy.Shape(1, 54, 54, 80) | done 6/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 80) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 52, 52, 192) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 52, 52, 192) | done 7/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 192) | done 8/27'
'input shape is:ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 32) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 32)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 25, 25, 256) | done 9/27'
'input shape is:ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 10/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 11/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 384) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 96) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 96)'
'one 20/20, output shape is:ivy.Shape(1, 12, 12, 288)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 12/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 12, 12, 768) | done 13/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 14/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 15/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 16/27'
'v3 16/27, output shape is:ivy.Shape(1, 12, 12, 768)'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 5, 5, 192)'
'one 7/20, output shape is:ivy.Shape(1, 5, 5, 768)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 1280) | done 17/27'
'input shape is:ivy.Shape(1, 5, 5, 1280)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 18/27'
'input shape is:ivy.Shape(1, 5, 5, 2048)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 19/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 20/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 5, 5) | done 21/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 1, 1) | done 22/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 27/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 24/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 25/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048) | done 26/27'
'InceptionV3 | forward | fc | done 27/27'
('test_inceptionnet | logits is: ivy.array([[-5.83631694e-01,  '
 '2.98661143e-01,  5.47267079e-01,\n'
 '         6.89772844e-01,  8.19838524e-01, -3.20506021e-02,\n'
 '         2.08450961e+00,  6.79598927e-01,  3.71177494e-01,\n'
 '        -3.63570595e+00, -3.89416277e-01, -6.27958655e-01,\n'
 '        -2.92389125e-01, -6.88804388e-01,  1.76964104e+00,\n'
 '        -1.87146163e+00, -1.50967789e+00, -1.10618877e+00,\n'
 '        -8.99700403e-01,  1.79512000e+00,  2.75847292e+00,\n'
 '        -3.78557825e+00, -7.63742804e-01, -5.74225426e-01,\n'
 '        -9.65678096e-02, -3.74649703e-01, -1.06642115e+00,\n'
 '        -1.16794896e+00, -1.42067301e+00, -1.63967609e-01,\n'
 '        -2.76962936e-01,  1.42632222e+00,  1.42623842e+00,\n'
 '        -8.90736997e-01,  1.39184809e+00, -2.32610369e+00,\n'
 '         2.33646441e+00, -1.33665371e+00, -6.80622637e-01,\n'
 '         1.57932192e-01,  7.11329758e-01,  4.18641418e-01,\n'
 '         4.52305824e-01,  6.24834180e-01, -9.93802428e-01,\n'
 '        -1.22232223e+00, -7.85381436e-01,  1.53579569e+00,\n'
 '        -1.27421939e+00, -1.12324879e-01, -1.38670063e+00,\n'
 '         6.20139837e-01,  1.02852392e+00,  1.01992118e+00,\n'
 '         2.79297018e+00,  2.31035876e+00, -2.47206163e+00,\n'
 '        -9.84423459e-02,  7.88383901e-01,  1.01663816e+00,\n'
 '         1.58117104e+00,  1.73709381e+00, -1.76030517e+00,\n'
 '        -6.11080051e-01,  3.81108910e-01, -3.45025659e-02,\n'
 '         1.45234632e+00,  2.31300735e+00,  1.11491180e+00,\n'
 '        -9.45578098e-01, -3.62002283e-01,  6.54490352e-01,\n'
 '        -2.41062498e+00, -9.20941710e-01, -1.23451936e+00,\n'
 '        -9.85721827e-01, -4.27530408e-02, -1.02005914e-01,\n'
 '         2.89122879e-01,  3.75032234e+00, -1.14355063e+00,\n'
 '         2.28967905e+00, -2.72214800e-01,  2.26481974e-01,\n'
 '         1.15585542e+00, -1.81087387e+00, -1.62027967e+00,\n'
 '        -1.18951595e+00,  1.05544120e-01, -5.10196567e-01,\n'
 '        -8.18825126e-01,  1.20058751e+00, -2.48294473e-01,\n'
 '        -8.61076832e-01,  4.48637664e-01, -1.46745086e+00,\n'
 '         1.03099406e+00, -1.22683740e+00, -2.07758522e+00,\n'
 '         7.46530294e-02,  1.38390422e+00, -1.58078283e-01,\n'
 '        -1.38667154e+00,  2.56536484e-01,  9.82583940e-01,\n'
 '        -3.11317849e+00, -3.05706048e+00, -1.47601783e-01,\n'
 '         1.51508880e+00, -2.42177916e+00, -7.97116160e-01,\n'
 '        -1.95736539e+00,  1.96746254e+00,  2.92926550e+00,\n'
 '         3.80311549e-01, -1.52724004e+00, -1.71324265e+00,\n'
 '        -1.26695752e-01, -2.93371677e+00,  4.22921896e-01,\n'
 '         8.53770673e-02, -1.77847695e+00,  1.34513044e+00,\n'
 '         5.07880926e-01, -1.51584709e+00,  1.04520559e+00,\n'
 '         1.25413865e-01,  1.20806682e+00,  1.22068942e+00,\n'
 '         1.40782809e+00,  1.53309143e+00,  4.55476284e-01,\n'
 '         1.40121687e+00, -1.93715704e+00, -1.30065274e+00,\n'
 '         1.13069296e+00,  1.70811403e+00, -3.87976736e-01,\n'
 '        -2.41034770e+00, -1.54441750e+00, -9.98063564e-01,\n'
 '         4.09258842e-01, -2.07697988e+00, -2.06738138e+00,\n'
 '         2.54128313e+00, -8.24288368e-01, -1.06274247e-01,\n'
 '        -6.64483786e-01,  5.89310408e-01,  6.78853631e-01,\n'
 '         1.19429350e+00,  7.05485225e-01,  5.22553206e+00,\n'
 '         1.10411286e+00,  3.57120490e+00, -3.92352641e-01,\n'
 '        -4.50040281e-01,  5.62521028e+00, -2.36204982e+00,\n'
 '        -5.98450363e-01, -1.96179003e-01, -2.02251220e+00,\n'
 '        -2.55918026e-01,  7.07708597e-01,  5.23672581e-01,\n'
 '        -1.27973008e+00, -7.65149355e-01, -7.66359091e-01,\n'
 '         3.12981784e-01,  1.92992973e+00,  1.44811869e+00,\n'
 '        -1.11462045e+00, -1.25755847e+00, -3.65379602e-01,\n'
 '         1.69208956e+00, -1.48851442e+00, -1.78784084e+00,\n'
 '        -4.67233747e-01,  2.69994903e+00, -6.55294537e-01,\n'
 '        -1.27342105e+00,  1.37886643e+00, -4.81319428e-01,\n'
 '        -7.69063711e-01, -1.10541403e+00,  1.73315883e+00,\n'
 '         3.06720257e+00, -1.62006390e+00, -1.24405384e+00,\n'
 '        -4.05855942e+00, -5.36973476e-02, -8.97237361e-01,\n'
 '        -8.52761269e-02, -2.22247362e+00, -1.04918408e+00,\n'
 '        -1.63935453e-01, -3.16156578e+00,  7.69079447e-01,\n'
 '         9.64073658e-01,  2.77514786e-01,  6.13848686e-01,\n'
 '        -2.89022946e+00, -1.98905873e+00,  6.33443594e+00,\n'
 '        -9.94503021e-01, -1.60671127e+00, -1.32604742e+00,\n'
 '         1.54279745e+00, -1.30014575e+00,  1.85755760e-01,\n'
 '        -7.03885108e-02, -9.71049070e-02, -2.55952537e-01,\n'
 '         2.01398301e+00,  1.23284650e+00,  2.03372613e-01,\n'
 '         2.79965186e+00,  6.83649778e-01,  6.04703665e-01,\n'
 '        -3.16408753e+00,  1.74321473e-01, -3.11163127e-01,\n'
 '         3.28140926e+00,  2.86106825e+00,  5.51994467e+00,\n'
 '        -1.23908591e+00,  3.89482021e-01, -4.38745642e+00,\n'
 '         1.92986354e-01,  1.98277211e+00,  2.27973652e+00,\n'
 '         5.07808733e+00,  2.43911147e+00,  6.64588809e-01,\n'
 '        -5.25055706e-01,  3.61519963e-01,  2.99694955e-01,\n'
 '        -1.21434498e+00, -1.15600991e+00,  9.29156721e-01,\n'
 '        -3.18735451e-01,  1.37133884e+00, -1.54382408e-01,\n'
 '        -1.86324406e+00, -1.02414131e+00, -1.39863169e+00,\n'
 '         4.71019447e-01,  2.89378023e+00,  9.76951599e+00,\n'
 '         5.28434563e+00,  4.97423029e+00,  4.80951190e-01,\n'
 '         4.49060798e-02, -1.70300698e+00,  2.10394502e+00,\n'
 '         1.28644466e+00,  1.96795595e+00,  8.78672981e+00,\n'
 '         2.12765846e+01,  8.65266609e+00,  6.61608458e+00,\n'
 '         7.17622995e+00, -1.03941739e-01,  4.39337224e-01,\n'
 '        -7.36716270e-01, -7.97234178e-01, -1.96782994e+00,\n'
 '         8.31412613e-01,  5.30019343e-01,  3.53143048e+00,\n'
 '         1.41451035e+01, -3.39947969e-01,  3.74036312e-01,\n'
 '         1.14845848e+00,  1.91279125e+00, -1.16357052e+00,\n'
 '        -3.25419813e-01,  2.09907198e+00, -2.56070733e+00,\n'
 '         1.38098450e+01,  8.76179635e-01,  3.26454967e-01,\n'
 '        -1.16135466e+00,  7.06950188e+00, -8.64041001e-02,\n'
 '        -9.77292478e-01, -1.04620636e+00,  4.00369072e+00,\n'
 '         2.22244096e+00,  2.52987051e+00, -1.55358005e+00,\n'
 '         1.76358116e+00,  7.51395762e-01,  2.22066090e-01,\n'
 '        -2.83661676e+00, -3.83397913e+00,  3.29952860e+00,\n'
 '        -1.86349332e-01, -1.98326242e+00, -5.66491485e-01,\n'
 '        -1.02086413e+00, -1.24222255e+00,  8.04136753e-01,\n'
 '        -1.32982254e+00,  1.01845527e+00, -1.34522462e+00,\n'
 '         2.72158563e-01,  8.02878618e-01,  1.79558769e-01,\n'
 '         4.13476586e-01, -1.09360206e+00, -6.02286041e-01,\n'
 '        -7.32826471e-01, -2.30055809e+00,  3.61264646e-01,\n'
 '        -1.79246664e-02, -3.12191677e+00, -8.96629095e-02,\n'
 '        -1.27818739e+00, -7.29812741e-01,  1.86689484e+00,\n'
 '        -1.28774965e+00, -9.20933187e-01, -2.21831888e-01,\n'
 '        -2.42384887e+00, -6.06827021e-01, -3.62700522e-01,\n'
 '         6.04338050e-02,  1.45198405e+00, -1.55842054e+00,\n'
 '        -1.65175080e+00,  2.34616756e+00,  4.49626732e+00,\n'
 '         3.66284758e-01, -8.85395646e-01, -3.11549044e+00,\n'
 '        -3.93134069e+00, -4.58154261e-01,  2.80002403e+00,\n'
 '        -1.98987520e+00,  4.03156430e-02,  5.42637467e-01,\n'
 '        -9.61799920e-01, -8.81946564e-01, -2.23880053e+00,\n'
 '         9.36972499e-02,  2.39481592e+00,  4.16437119e-01,\n'
 '        -3.03049087e-01, -1.56114244e+00, -1.34412134e+00,\n'
 '        -1.55625510e+00, -1.79113936e+00, -1.68316379e-01,\n'
 '        -3.61570477e-01,  9.77633059e-01,  2.41240048e+00,\n'
 '        -3.96209776e-01,  3.03764033e+00,  1.26216900e+00,\n'
 '        -1.53628671e+00,  1.44178629e+00, -1.43618607e+00,\n'
 '         5.39288342e-01, -7.60631204e-01, -1.23398757e+00,\n'
 '        -3.65014172e+00, -1.37580752e+00, -8.04480195e-01,\n'
 '        -2.65783238e+00, -1.68693650e+00, -3.25165105e+00,\n'
 '        -2.47121406e+00, -4.37227666e-01, -1.19321787e+00,\n'
 '        -2.92938662e+00, -1.55365825e+00,  1.71766043e+00,\n'
 '        -1.68416217e-01, -2.99653626e+00, -1.16234064e+00,\n'
 '        -1.42064560e+00, -2.23447990e+00, -1.13446987e+00,\n'
 '        -1.92953837e+00, -4.33639497e-01, -2.85504317e+00,\n'
 '        -7.74334490e-01, -1.61422968e+00, -2.38995290e+00,\n'
 '         9.07872319e-02, -8.73956978e-01,  3.02880168e-01,\n'
 '         3.48557234e-01,  4.30290550e-01, -1.19695747e+00,\n'
 '         6.60779774e-01, -1.94622231e+00,  5.48626631e-02,\n'
 '         1.49010265e+00, -9.29068625e-01, -1.77047730e+00,\n'
 '         1.56156302e-01, -7.47756720e-01,  1.93544495e+00,\n'
 '         2.82201505e+00, -2.74858266e-01, -1.03233409e+00,\n'
 '         9.26305592e-01, -3.80722284e-01,  3.50864112e-01,\n'
 '         9.79210854e-01, -6.89267158e-01, -1.62532890e+00,\n'
 '         2.19268084e-01, -1.44564033e+00,  4.72099125e-01,\n'
 '        -6.31802380e-02, -5.46118200e-01, -2.12672543e+00,\n'
 '        -2.60165304e-01, -1.80887222e+00, -1.07969761e+00,\n'
 '        -2.34590483e+00, -1.43838406e+00,  1.64946473e+00,\n'
 '        -6.20934367e-01,  1.15243578e+00, -6.04287028e-01,\n'
 '        -1.63239884e+00, -6.54051602e-02,  1.27721220e-01,\n'
 '        -1.64651167e+00,  5.88341474e-01, -1.57527792e+00,\n'
 '        -4.64033902e-01, -1.80319220e-01,  2.97127888e-02,\n'
 '        -2.16499433e-01,  4.38416690e-01,  1.30593598e+00,\n'
 '         3.50965559e-02,  2.60774517e+00,  1.53207213e-01,\n'
 '        -1.72945726e+00,  1.86030674e+00, -3.22734714e-01,\n'
 '        -1.93996549e+00,  1.80608004e-01,  4.26385522e-01,\n'
 '         2.39644360e+00,  1.57456100e+00,  5.09494305e-01,\n'
 '        -2.07317591e+00, -1.15905869e+00,  3.03321570e-01,\n'
 '        -7.96152949e-01, -7.83967674e-02,  8.36070254e-02,\n'
 '         6.65362596e-01,  7.58801937e-01, -1.10653830e+00,\n'
 '         1.78668892e+00,  1.59730232e+00,  5.00240147e-01,\n'
 '        -1.21418560e+00, -3.34009081e-01, -1.86568701e+00,\n'
 '         8.00348759e-01,  1.18095827e+00, -9.39061940e-02,\n'
 '        -4.04929936e-01,  4.22154889e-02,  2.51042604e+00,\n'
 '        -1.47176337e+00, -7.15281129e-01,  4.49213696e+00,\n'
 '        -1.90335977e+00,  4.73744774e+00, -1.46560073e+00,\n'
 '        -1.00964010e-02, -1.02981055e+00, -3.68716788e+00,\n'
 '         2.14162922e+00, -6.99739099e-01, -7.94542670e-01,\n'
 '        -2.52974510e+00,  6.89026475e-01,  1.34676242e+00,\n'
 '        -6.39866412e-01,  1.46446717e+00,  1.96050620e+00,\n'
 '        -1.66628337e+00, -2.08789897e+00, -7.50069618e-02,\n'
 '         2.78192258e+00, -4.12169188e-01,  7.51343310e-01,\n'
 '         4.74106640e-01,  7.41417766e-01, -2.44522715e+00,\n'
 '         2.14363575e+00, -2.17337513e+00, -6.04033709e-01,\n'
 '        -1.51007485e+00,  1.43727744e+00, -4.91406262e-01,\n'
 '        -1.96658015e+00, -1.93162250e+00, -1.77352583e+00,\n'
 '         1.06380773e+00,  4.63839024e-01, -5.48300862e-01,\n'
 '        -5.44184983e-01,  1.44188762e+00, -2.55822957e-01,\n'
 '        -8.79328489e-01, -3.95759284e-01, -4.80728209e-01,\n'
 '        -1.77236879e+00, -3.13585043e-01, -8.63158703e-01,\n'
 '         1.17445014e-01, -2.51938724e+00,  1.31971645e+00,\n'
 '         2.18901038e-01, -9.73263860e-01, -2.13287664e+00,\n'
 '        -4.39903855e-01, -9.50882316e-01,  5.03836215e-01,\n'
 '         3.33150327e-01, -1.88547984e-01, -4.54273045e-01,\n'
 '        -6.63128853e-01, -1.94591546e+00, -1.71595526e+00,\n'
 '         3.54886961e+00,  2.01080847e+00, -1.64187372e-01,\n'
 '         2.56907940e-01,  1.54673457e-02, -2.04198289e+00,\n'
 '        -2.26618424e-01, -3.68166536e-01, -9.58193123e-01,\n'
 '         1.83831573e-01, -4.15769756e-01, -1.42548502e+00,\n'
 '         1.30574167e-01, -1.04801118e+00, -1.29943490e+00,\n'
 '         9.20081019e-01, -3.00699902e+00,  5.87795615e-01,\n'
 '        -2.62567377e+00, -5.52961945e-01,  2.22661495e+00,\n'
 '         8.95715416e-01, -3.14397275e-01, -6.79275155e-01,\n'
 '        -2.14420891e+00,  4.72315693e+00,  2.16658741e-01,\n'
 '         2.19087303e-01, -9.08814907e-01,  6.63804352e-01,\n'
 '        -1.09634078e+00,  1.68647301e+00, -3.74897718e-02,\n'
 '         1.54345751e+00, -1.59078109e+00,  1.76917577e+00,\n'
 '         4.05923486e-01, -5.04542947e-01, -1.13885069e+00,\n'
 '         3.98041815e-01, -8.12140763e-01,  1.92361200e+00,\n'
 '        -2.61116481e+00, -4.75546904e-02,  1.59740543e+00,\n'
 '        -6.97507441e-01, -4.28755939e-01,  9.70495164e-01,\n'
 '        -1.09088123e+00, -2.69107103e+00, -2.55681395e+00,\n'
 '        -8.33895922e-01, -1.86640561e+00, -4.21209425e-01,\n'
 '        -1.02151364e-01,  9.22659516e-01,  9.78388906e-01,\n'
 '         2.75038099e+00, -1.18400693e+00,  1.90023792e+00,\n'
 '        -8.39936733e-03, -1.93366504e+00, -2.32705027e-01,\n'
 '         2.57614851e-01,  1.55269539e+00, -2.07069468e+00,\n'
 '        -1.29773760e+00,  1.37241232e+00, -2.10396957e+00,\n'
 '         3.69734263e+00,  1.20651615e+00,  2.33798534e-01,\n'
 '        -1.81245673e+00, -1.14717388e+00,  1.38951063e-01,\n'
 '         1.28586859e-01, -4.66000378e-01,  5.65408886e-01,\n'
 '        -2.96270680e+00, -3.70375812e-03,  6.84224546e-01,\n'
 '        -1.48776984e+00,  9.52599287e-01, -2.51871467e+00,\n'
 '         1.12213016e+00, -2.63372540e-01, -3.72032344e-01,\n'
 '         1.26199317e+00,  5.22558987e-01, -4.97762799e-01,\n'
 '         1.37680441e-01,  1.73908246e+00, -1.03206813e+00,\n'
 '        -1.82577014e-01, -4.91902649e-01, -5.36939979e-01,\n'
 '        -3.42457473e-01, -1.78762186e+00, -3.30611527e-01,\n'
 '         5.03758192e-01,  1.53990102e+00, -5.15837312e-01,\n'
 '         9.19726849e-01, -2.37705827e+00, -9.03040290e-01,\n'
 '        -1.12750244e+00,  1.11292803e+00, -1.46631539e+00,\n'
 '         2.09975028e+00, -8.61692071e-01, -2.46928239e+00,\n'
 '        -1.39014268e+00,  3.66142392e-01, -2.47037935e+00,\n'
 '        -1.21702874e+00,  3.10005605e-01, -8.85923386e-01,\n'
 '         3.10559571e-01, -2.04333091e+00, -3.13228607e-01,\n'
 '        -1.55838978e+00, -1.69039810e+00, -2.85393524e+00,\n'
 '        -2.25094867e+00,  4.98708218e-01,  1.42548597e+00,\n'
 '        -1.52358651e+00,  1.40498495e+00, -5.63401997e-01,\n'
 '         4.21094075e-02, -1.25276732e+00, -1.18608189e+00,\n'
 '         1.08492255e+00,  1.93863869e+00, -7.36130059e-01,\n'
 '         2.10642958e+00, -4.89462495e-01,  1.92198527e+00,\n'
 '        -9.73737538e-01,  7.53198266e-01, -9.96924996e-01,\n'
 '        -5.39043993e-02,  3.96496624e-01,  1.71877384e-01,\n'
 '        -1.72980154e+00,  2.67811274e+00, -2.87873268e-01,\n'
 '        -1.49491942e+00, -1.39500094e+00, -1.69439018e+00,\n'
 '        -1.77443325e-02, -1.08454490e+00,  5.20958006e-01,\n'
 '         5.82207739e-02, -4.65823412e-01,  4.67252612e-01,\n'
 '        -9.17380810e-01, -1.81463659e-01,  9.06963348e-01,\n'
 '         1.83086419e+00, -2.56986529e-01,  1.76591384e+00,\n'
 '         1.76198030e+00, -1.23288763e+00,  5.42279601e-01,\n'
 '        -2.95383763e+00,  1.12082398e+00, -1.83092380e+00,\n'
 '        -4.03544092e+00, -1.22296417e+00,  1.75070834e+00,\n'
 '        -1.43715739e-03, -1.79496670e+00,  2.86493599e-02,\n'
 '         2.34760237e+00,  6.59535766e-01, -1.79830468e+00,\n'
 '        -9.95597959e-01,  7.12751508e-01, -5.28144062e-01,\n'
 '         1.50097132e-01,  1.88367975e+00,  2.11393499e+00,\n'
 '         5.90723038e-01, -2.11553025e+00, -1.62320208e+00,\n'
 '         1.39064693e+00,  1.35976267e+00,  1.20905149e+00,\n'
 '         2.64680654e-01,  4.91372049e-01,  7.37044096e-01,\n'
 '         9.71406698e-05, -4.20385093e-01,  2.35531163e+00,\n'
 '        -7.29418993e-01,  1.13297319e+00, -1.21371221e+00,\n'
 '        -9.46053743e-01, -2.23833531e-01, -2.62344211e-01,\n'
 '         7.63145238e-02, -1.23727512e+00, -6.19794726e-01,\n'
 '         6.02916062e-01,  4.36960548e-01, -1.66235459e+00,\n'
 '        -5.40782273e-01, -2.27631831e+00,  5.60610771e-01,\n'
 '        -8.60778212e-01, -5.86214900e-01,  1.32563067e+00,\n'
 '        -2.48108625e+00, -2.86751211e-01,  1.36178181e-01,\n'
 '        -3.08902812e+00, -1.78554487e+00,  8.19526970e-01,\n'
 '        -3.93255949e-02,  1.01985312e+00,  6.88539743e-02,\n'
 '        -1.40712655e+00, -1.67900777e+00, -1.72077739e+00,\n'
 '         1.56767523e+00,  3.34471911e-01, -1.56199253e+00,\n'
 '        -2.72792220e+00, -6.21485770e-01, -2.72007227e-01,\n'
 '         7.12881446e-01, -7.47931004e-02,  3.25078368e-01,\n'
 '         2.61212140e-01, -1.99495602e+00, -2.41631895e-01,\n'
 '        -3.87470722e-01,  2.18868542e+00,  1.60487890e+00,\n'
 '        -9.54904556e-01, -1.80011785e+00,  1.56264871e-01,\n'
 '         3.42917228e+00, -1.35283184e+00,  1.29853761e+00,\n'
 '         2.73464620e-01, -1.23850369e+00, -1.69573689e+00,\n'
 '        -1.24810076e+00,  1.03979278e+00,  5.18463314e-01,\n'
 '         3.92964840e-01,  1.36662817e+00,  5.16174793e-01,\n'
 '         2.92889261e+00,  1.99916482e-01, -6.70785129e-01,\n'
 '         2.58311957e-01,  9.68618274e-01, -2.30238509e+00,\n'
 '        -2.03315377e+00,  5.10335922e-01,  1.34706831e+00,\n'
 '         1.67979568e-01,  2.63907123e+00,  2.03045273e+00,\n'
 '        -3.14833546e+00,  4.75583971e-01, -3.72685289e+00,\n'
 '        -7.14626610e-01,  1.04719329e+00, -1.78180814e-01,\n'
 '         1.01677358e+00,  3.25288475e-01,  1.45065367e+00,\n'
 '        -6.85838103e-01,  1.13909769e+00,  4.59111691e-01,\n'
 '         1.06686079e+00, -1.33693314e+00, -5.69238365e-01,\n'
 '        -7.99011111e-01, -9.05381560e-01, -2.39269614e+00,\n'
 '         1.96291733e+00, -1.05817461e+00,  2.44979098e-01,\n'
 '        -3.10784996e-01,  1.41598844e+00, -1.88132435e-01,\n'
 '         2.73492456e+00, -6.79908216e-01,  9.49315667e-01,\n'
 '        -8.19151699e-01,  3.52627611e+00,  2.60120094e-01,\n'
 '        -2.42632770e+00, -7.89883435e-01,  7.34125376e-02,\n'
 '         7.35944062e-02, -1.04491019e+00,  5.89744628e-01,\n'
 '         2.13834405e+00,  1.41230106e-01,  6.78110957e-01,\n'
 '         2.68397522e+00,  1.69607902e+00, -1.29768789e-01,\n'
 '        -4.78674889e-01, -2.34588408e+00, -1.00349724e+00,\n'
 '        -6.50108337e-01,  1.79103577e+00, -4.23806429e-01,\n'
 '         2.68921518e+00, -1.31350625e+00,  1.79292783e-01,\n'
 '        -9.97979522e-01, -2.02739620e+00,  2.39812255e-01,\n'
 '         2.87760973e-01, -9.95402336e-02,  2.04539642e-01,\n'
 '         2.06482816e+00,  1.13254654e+00,  4.28570509e-01,\n'
 '        -2.56816435e+00, -1.25299835e+00, -9.20386136e-01,\n'
 '         1.53433227e+00, -6.28397703e-01, -1.32783458e-01,\n'
 '         1.08122969e+00, -5.34998596e-01,  1.19069636e+00,\n'
 '        -7.12814212e-01, -1.26138818e+00, -5.97503781e-01,\n'
 '        -8.02700341e-01, -1.88092649e+00,  1.30623782e+00,\n'
 '         1.34437144e-01, -9.70098436e-01, -1.46999073e+00,\n'
 '         1.43935776e+00,  1.32175356e-01,  4.83226806e-01,\n'
 '         4.78398263e-01,  4.06209469e+00,  1.40923178e+00,\n'
 '        -6.09886765e-01, -9.48065817e-01, -1.57904935e+00,\n'
 '         9.07909214e-01, -1.31100309e+00,  3.20436239e-01,\n'
 '        -2.48639613e-01, -1.56341291e+00,  4.97612178e-01,\n'
 '        -9.38935101e-01,  1.67213380e+00,  1.82101131e+00,\n'
 '         1.03266764e+00,  2.81437248e-01,  1.38560188e+00,\n'
 '        -1.88077199e+00, -1.11726809e+00, -2.57330155e+00,\n'
 '         6.13996744e-01,  1.92601645e+00, -1.02760625e+00,\n'
 '         2.02488756e+00, -2.92240095e+00, -1.27907145e+00,\n'
 '         1.44771790e+00,  1.02421331e+00,  7.53742754e-01,\n'
 '         1.65457785e+00,  2.77140439e-01,  9.25647616e-02,\n'
 '        -5.10283232e-01,  4.19908285e-01, -1.53497684e+00,\n'
 '         8.64343286e-01,  1.93978548e+00,  2.69156027e+00,\n'
 '        -1.46604311e+00,  2.58096266e+00, -1.54329407e+00,\n'
 '        -1.38786089e+00,  2.40894246e+00, -7.87328124e-01,\n'
 '        -6.29834831e-02, -1.60418034e+00, -1.23820841e+00,\n'
 '        -1.92677188e+00, -1.09486043e+00, -5.63122869e-01,\n'
 '        -2.17010707e-01, -1.23261785e+00, -1.58833396e+00,\n'
 '        -2.23349762e+00, -2.57432759e-01, -9.46405157e-02,\n'
 '         5.83629966e-01, -2.50330448e-01,  3.61189544e-01,\n'
 '         1.09690785e+00, -2.06090331e+00, -5.93978167e-01,\n'
 '        -1.27775908e+00, -1.66943693e+00,  2.91442007e-01,\n'
 '         1.64478958e-01, -9.11887288e-01, -2.84412771e-01,\n'
 '         1.62371695e-01,  5.70093751e-01,  4.18094903e-01,\n'
 '         1.11643052e+00, -8.69991183e-01,  2.50457972e-01,\n'
 '        -9.99664664e-02,  1.21999419e+00, -1.93525136e-01,\n'
 '        -4.43626642e-01, -2.94410020e-01,  6.62618875e-01,\n'
 '         1.93898845e+00,  8.14438999e-01, -2.33938265e+00,\n'
 '        -1.11645842e+00, -3.67415905e-01,  7.52363801e-01,\n'
 '         1.35432029e+00, -2.91915274e+00,  1.04027093e-01,\n'
 '        -1.05303621e+00, -1.62967110e+00,  9.85881090e-02,\n'
 '         1.25091410e+00, -1.56359518e+00, -1.20431399e+00,\n'
 '        -2.88095736e+00, -1.48825741e+00,  2.33317137e-01,\n'
 '        -2.05665827e+00, -1.44467533e+00,  1.15743108e-01,\n'
 '        -3.12533879e+00, -3.95528048e-01,  7.53014028e-01,\n'
 '         4.29938227e-01, -4.49186385e-01, -1.44115043e+00,\n'
 '        -2.17128706e+00, -2.82110906e+00, -6.51838541e-01,\n'
 '         1.65240914e-01, -1.62558246e+00, -2.07267451e+00,\n'
 '        -1.29313791e+00]])')
'test_inceptionnet | batch_shape is: [1]'
'test_inceptionnet | logits.shape is: ivy.Shape(1, 1000)'
'||'
'test_inceptionnet | indices_test | true_indices is: [258 270 279]'
'test_inceptionnet | indices_test | calc_indices is: [258 270 279]'
'test_inceptionnet | device is: cpu'
'test_inceptionnet | fw is: tensorflow'
'test_inceptionnet | load_weights is: False'
'InceptionV3 | build | layer 1/22 built'
'InceptionV3 | build | layer 2/22 built'
'layer 3/22 built'
'InceptionV3 | build | layer 4/22 built'
'InceptionV3 | build | layer 5/22 built'
'InceptionV3 | build | layer 6/22 built'
'InceptionV3 | build | layer 7/22 built'
'InceptionV3 | build | layer 8/22 built'
'InceptionV3 | build | layer 9/22 built'
'InceptionV3 | build | layer 10/22 built'
'InceptionV3 | build | layer 11/22 built'
'InceptionV3 | build | layer 12/22 built'
'InceptionV3 | build | layer 13/22 built'
'InceptionV3 | build | layer 14/22 built'
'InceptionV3 | build | layer 15/22 built'
'InceptionV3 | build | layer 17/22 built'
'InceptionV3 | build | layer 18/22 built'
'InceptionV3 | build | layer 19/22 built'
'InceptionV3 | build | layer 20/22 built'
'InceptionV3 | build | layer 21/22 built'
'InceptionV3 | build | layer 22/22 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/4 built'
'layer 2/4 built'
'layer 3/4 built'
'layer 4/4 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/6 built'
'layer 2/6 built'
'layer 3/6 built'
'layer 4/6 built'
'layer 5/6 built'
'layer 6/6 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'inceptionNet_v3 | building InceptionV3 model | done 1/3'
'InceptionV3 | forward | input data_format is:NCHW | done 1/27'
'InceptionV3 | forward | data_format is going to be used is:NCHW | done 1/27'
'InceptionV3 | forward | input shape is:ivy.Shape(1, 224, 224, 3) | done 1/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 224, 224, 3) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 111, 111, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 111, 111, 32) | done 2/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 111, 111, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 32) | done 3/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 109, 109, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 64) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 64) | done 4/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 54, 54, 64) | done 5/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 54, 54, 80) | done 3/3'
'InceptionV3 | forward | is:ivy.Shape(1, 54, 54, 80) | done 6/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 80) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 52, 52, 192) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 52, 52, 192) | done 7/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 192) | done 8/27'
'input shape is:ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 32) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 32)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 25, 25, 256) | done 9/27'
'input shape is:ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 10/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 11/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 384) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 96) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 96)'
'one 20/20, output shape is:ivy.Shape(1, 12, 12, 288)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 12/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 12, 12, 768) | done 13/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 14/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 15/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 16/27'
'v3 16/27, output shape is:ivy.Shape(1, 12, 12, 768)'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 5, 5, 192)'
'one 7/20, output shape is:ivy.Shape(1, 5, 5, 768)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 1280) | done 17/27'
'input shape is:ivy.Shape(1, 5, 5, 1280)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 18/27'
'input shape is:ivy.Shape(1, 5, 5, 2048)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 19/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 20/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 5, 5) | done 21/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 1, 1) | done 22/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 27/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 24/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 25/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048) | done 26/27'
'InceptionV3 | forward | fc | done 27/27'
('test_inceptionnet | logits is: ivy.array([[ 1.50233391e+05, -3.56315406e+05, '
 '-4.91560156e+05,\n'
 '         5.07551531e+05,  4.57290250e+05,  1.10259750e+05,\n'
 '         2.77055344e+05, -7.69911562e+05, -5.98298500e+05,\n'
 '        -2.71856688e+05, -9.45716438e+05,  5.34128672e+04,\n'
 '         3.14391875e+05,  3.55487938e+05,  1.89346016e+05,\n'
 '         1.89718812e+05, -1.27620680e+05,  3.03796594e+05,\n'
 '        -3.38426172e+04, -3.86844719e+05,  6.38872125e+05,\n'
 '         1.50013281e+05,  7.19615625e+05,  4.22200094e+05,\n'
 '        -5.21693281e+05, -7.06608125e+05, -3.79757656e+05,\n'
 '        -2.27086469e+05, -2.41392312e+05, -2.75581602e+04,\n'
 '         4.60781000e+05,  2.81336875e+05,  4.16968656e+05,\n'
 '        -1.19890164e+05, -8.60160156e+04,  2.15645828e+05,\n'
 '        -1.98489812e+05,  2.38645141e+05, -1.80387297e+05,\n'
 '         8.96178938e+05,  2.23071734e+05, -7.22977625e+05,\n'
 '        -2.57371500e+05, -2.26261312e+05, -1.17390117e+05,\n'
 '         3.53708125e+05,  4.25664312e+05, -1.55436484e+05,\n'
 '        -2.51655078e+05, -3.02131562e+05,  2.23252625e+05,\n'
 '         7.11041406e+04,  7.51686000e+05, -7.53636562e+05,\n'
 '         7.04651094e+04, -5.84719875e+05,  2.82906375e+05,\n'
 '         1.45664359e+05,  7.42423812e+05, -1.51939250e+05,\n'
 '        -4.76382125e+05,  3.11310500e+05,  1.23520203e+05,\n'
 '        -5.27616562e+04, -2.22274781e+05,  1.40860828e+05,\n'
 '        -1.75393641e+05,  1.13508000e+05,  6.52094500e+05,\n'
 '        -3.81266312e+05, -5.19886594e+05,  4.65692031e+05,\n'
 '         1.00339812e+05, -4.73904812e+05, -3.41956281e+05,\n'
 '        -7.27841875e+04,  4.78109938e+05, -3.41073656e+05,\n'
 '         4.18449312e+05, -1.32370312e+05, -6.93223875e+05,\n'
 '         9.27575500e+05,  5.09055875e+05, -7.59831062e+05,\n'
 '         2.83748688e+05, -2.66693281e+05,  2.30809109e+05,\n'
 '        -4.08971031e+05, -1.12385000e+05,  1.92970844e+05,\n'
 '         2.26663344e+05, -3.87744469e+05, -6.18136875e+05,\n'
 '         4.27452000e+05, -2.66663125e+05,  1.15247825e+06,\n'
 '         4.85203094e+05,  4.13028344e+05,  4.94526531e+05,\n'
 '        -4.46970430e+04,  9.04708438e+05,  3.13251191e+04,\n'
 '         1.80399609e+04,  5.03792219e+05, -2.66032438e+05,\n'
 '        -4.25254312e+05, -4.41979969e+05, -3.66835906e+05,\n'
 '         2.59306469e+05,  7.62024500e+05, -3.96881094e+05,\n'
 '        -3.64810875e+05, -1.16121612e+06,  2.25459641e+05,\n'
 '         4.55644438e+05,  1.37957406e+05, -3.37261406e+05,\n'
 '         1.52938844e+05,  3.30566594e+05, -3.23926031e+05,\n'
 '         2.73689469e+05, -2.78953688e+05,  5.21513188e+05,\n'
 '         7.29859375e+05,  6.22829125e+05, -5.36932625e+05,\n'
 '        -1.73978125e+05, -2.77758750e+05, -2.17008281e+05,\n'
 '         1.33187703e+05, -4.04504438e+05, -1.14043266e+05,\n'
 '         4.18348406e+05,  4.31727656e+05, -2.58375203e+05,\n'
 '         4.07174312e+05, -3.78413594e+04, -1.41755438e+05,\n'
 '         5.84579000e+05, -4.07215312e+05, -2.81886375e+05,\n'
 '        -6.77434125e+05, -2.54517844e+05, -9.89692812e+05,\n'
 '         4.42349875e+05,  1.66073844e+05,  2.58421594e+05,\n'
 '        -5.15379656e+05,  2.71266031e+05, -1.52020969e+05,\n'
 '         7.96696562e+04,  1.09729775e+06, -9.96184750e+05,\n'
 '         1.19250738e+06,  8.60810781e+04,  7.50566875e+05,\n'
 '        -9.76344922e+03, -4.24006812e+05,  1.43387016e+05,\n'
 '         5.51959312e+05,  2.86776219e+05, -3.77964406e+05,\n'
 '         1.13036850e+06, -4.03911844e+05, -1.05154195e+05,\n'
 '        -5.83213250e+05,  1.13672359e+05, -3.24926219e+05,\n'
 '         4.12616375e+05, -9.17643984e+04,  2.89728938e+05,\n'
 '        -4.31576125e+05, -6.41672500e+05, -7.93235078e+04,\n'
 '         6.70994875e+05,  4.14498000e+05,  4.92449188e+05,\n'
 '         4.51596750e+05, -1.04044988e+06,  5.89630688e+05,\n'
 '        -2.92108250e+05, -7.39232438e+05, -1.06840238e+06,\n'
 '         3.78616875e+05, -3.95715750e+05, -4.72337562e+05,\n'
 '        -7.45746438e+05,  9.67467031e+04,  2.77072094e+05,\n'
 '         7.94741875e+04, -5.31075250e+05, -1.14348719e+05,\n'
 '        -2.56113625e+05, -4.47121125e+05,  7.75576250e+04,\n'
 '         1.74177906e+05, -1.88955453e+05,  2.73442406e+05,\n'
 '         8.37721289e+03,  4.32535219e+05,  1.02376703e+05,\n'
 '         1.16497075e+06, -5.27395898e+04, -3.38826531e+05,\n'
 '         1.08280656e+05, -1.76502438e+05, -4.70118531e+05,\n'
 '         5.14118438e+04,  3.91098250e+05,  4.37691594e+05,\n'
 '         2.18799656e+05, -4.61638969e+05,  8.34542344e+04,\n'
 '         4.88331469e+05, -7.10137250e+05, -2.40920188e+05,\n'
 '         5.06882844e+05,  8.73545000e+04,  4.51944312e+05,\n'
 '        -4.77210906e+05, -7.26758938e+05,  8.81052812e+05,\n'
 '         5.83751465e+03, -4.09969500e+05,  3.94613086e+03,\n'
 '         3.30067094e+05, -1.47347451e+04, -2.45113609e+05,\n'
 '         7.70280750e+05, -4.88510438e+05,  5.61156625e+05,\n'
 '        -3.23465125e+05, -2.17497969e+05, -1.70906531e+05,\n'
 '        -8.06334750e+05,  1.77450750e+05, -5.85017875e+05,\n'
 '         3.75606219e+05,  8.42984375e+04,  2.11846125e+05,\n'
 '        -2.05231297e+05, -1.26810461e+05, -8.89608438e+04,\n'
 '         3.27231562e+05, -8.09080625e+05,  2.25433711e+04,\n'
 '        -2.07976828e+05, -3.46902344e+04, -2.60738062e+05,\n'
 '        -8.32484453e+04, -9.89488375e+05, -5.08928125e+05,\n'
 '        -5.41600812e+05,  2.65375438e+05,  5.58953008e+04,\n'
 '        -1.04624203e+05,  3.55187188e+05,  1.88487719e+05,\n'
 '         5.86998320e+04, -9.11490438e+05, -5.40113938e+05,\n'
 '        -4.38049094e+05, -7.54985562e+05, -1.67592062e+05,\n'
 '         2.77891281e+05,  4.90332188e+04,  5.07122875e+05,\n'
 '        -4.62752344e+05, -5.77187461e+04, -1.73445062e+05,\n'
 '         1.08091383e+05, -4.32324594e+05,  9.98495812e+05,\n'
 '        -2.94078156e+05, -1.75998625e+05,  5.15886188e+05,\n'
 '        -5.17723625e+05,  6.38238875e+05, -4.39644648e+04,\n'
 '        -6.20724875e+05,  7.82469688e+04,  2.90732438e+05,\n'
 '         3.94771406e+05,  1.13741438e+06,  8.67594875e+05,\n'
 '         8.50366625e+05, -6.90350156e+04,  6.19792375e+05,\n'
 '        -1.68544781e+05,  7.01566750e+05,  2.70157656e+05,\n'
 '        -7.82955547e+04,  4.40405750e+05, -9.89331375e+05,\n'
 '         3.59576406e+05,  1.35967578e+03, -9.04826062e+05,\n'
 '        -9.06423281e+04, -7.65406406e+04,  1.27661156e+05,\n'
 '         4.93415250e+05,  3.81602031e+05, -3.36793750e+05,\n'
 '         3.88566625e+05,  1.95464188e+05, -6.84725156e+04,\n'
 '         5.03390312e+05, -7.17837875e+05,  5.85410562e+05,\n'
 '        -8.44348281e+04, -6.76830562e+05,  5.44174875e+05,\n'
 '         3.55538812e+05, -2.55275016e+05,  1.32835344e+05,\n'
 '         4.09276914e+04,  3.41238344e+05, -8.14093750e+04,\n'
 '         2.51099531e+05, -5.27235250e+05, -3.45338531e+05,\n'
 '         1.33800484e+05,  1.41505781e+05, -1.70286828e+05,\n'
 '        -1.34718734e+05,  1.90859328e+05,  9.95593375e+05,\n'
 '        -3.87284375e+05, -4.31647188e+05,  3.78667938e+05,\n'
 '        -8.26438984e+04,  2.10089031e+05,  2.34855156e+04,\n'
 '        -2.37300000e+05,  7.27530938e+04, -2.17599938e+05,\n'
 '        -3.16694344e+05,  8.85526062e+05,  7.53015625e+05,\n'
 '        -7.04241625e+05, -6.63875250e+05,  5.56110812e+05,\n'
 '        -8.93378250e+05, -3.03680688e+05,  2.15496312e+05,\n'
 '         4.93410062e+05, -7.32178250e+05,  6.25438500e+05,\n'
 '         9.19891000e+05,  1.31949969e+05, -4.02032625e+05,\n'
 '        -9.45141750e+05,  1.47047859e+05,  1.05536383e+05,\n'
 '         3.39496812e+05,  3.87841156e+05,  1.53938984e+05,\n'
 '        -1.56000750e+05,  1.01804075e+06,  1.77050922e+05,\n'
 '         3.23075500e+05, -5.19065969e+05,  5.84573125e+05,\n'
 '        -7.22849625e+05,  2.67229594e+05,  1.74456344e+05,\n'
 '         6.10836523e+04, -1.69953250e+05,  2.90088219e+05,\n'
 '        -2.61890797e+05,  1.82038844e+05,  5.43870000e+05,\n'
 '        -4.02895531e+05, -6.32738688e+05, -5.88047500e+05,\n'
 '         7.22241562e+04, -2.96407094e+05, -4.31096680e+04,\n'
 '        -4.28906562e+05, -7.19056750e+05,  2.71634688e+05,\n'
 '        -5.74004500e+05,  1.91179102e+04, -3.19142000e+05,\n'
 '        -6.92243438e+04,  1.87845156e+05,  5.29032438e+05,\n'
 '        -3.90592539e+04, -5.55120812e+05,  1.42138641e+05,\n'
 '        -6.18134312e+05, -3.52124219e+05,  5.03481438e+05,\n'
 '        -4.51158242e+04, -4.37530844e+05, -4.38510062e+05,\n'
 '        -3.21788281e+05, -2.18923312e+05, -5.00336344e+05,\n'
 '        -2.82719531e+05,  8.54964453e+03,  4.03634125e+05,\n'
 '         3.93452281e+05,  2.47052637e+04,  8.96176500e+05,\n'
 '        -2.79370312e+05,  7.12112438e+05, -6.99486125e+05,\n'
 '        -2.48074641e+05,  3.06166781e+05, -1.94826375e+05,\n'
 '         3.69709125e+05, -6.52463312e+05, -5.62512625e+05,\n'
 '         2.95523156e+05, -2.63955406e+05, -4.20945156e+04,\n'
 '        -5.40947562e+05, -1.47465656e+05,  2.23178297e+05,\n'
 '         1.85211141e+05, -5.00157031e+05,  7.84471875e+05,\n'
 '        -3.53616281e+05, -3.21932312e+05,  1.06793438e+05,\n'
 '         1.16884250e+05,  9.30376172e+04, -3.77923281e+05,\n'
 '         2.72599562e+05,  5.26916094e+04,  5.03463984e+04,\n'
 '         3.89729188e+05,  2.17273477e+04, -9.08944625e+05,\n'
 '         5.10460859e+04, -1.12767664e+05,  6.66783375e+05,\n'
 '         4.66163375e+05, -1.85592031e+05,  6.58830312e+05,\n'
 '        -1.16541008e+05, -7.41942188e+04,  1.05490438e+05,\n'
 '         4.09899156e+05, -1.22902578e+05,  2.93162594e+05,\n'
 '        -1.15068922e+05, -1.95405500e+05,  1.87864438e+05,\n'
 '         3.91215469e+04,  6.13342852e+04,  5.95333688e+05,\n'
 '         4.17926406e+04, -5.60888062e+05,  3.61699570e+04,\n'
 '        -9.84234062e+05,  4.04322875e+05,  6.64315562e+05,\n'
 '         1.83165875e+05,  5.04635156e+05, -4.30884656e+05,\n'
 '        -6.74829531e+04, -4.68548219e+05,  1.21084984e+05,\n'
 '        -7.29747188e+04, -6.69825562e+05, -1.58243938e+05,\n'
 '         6.05082125e+05,  4.32423656e+05, -1.83070266e+05,\n'
 '        -2.53177125e+05,  6.53002312e+05,  2.77065156e+05,\n'
 '         6.49170312e+05,  3.39195719e+05,  7.74135500e+05,\n'
 '        -6.19818875e+05, -5.94160375e+05,  4.64718375e+05,\n'
 '         8.81290812e+05,  7.29556641e+04, -1.85972125e+05,\n'
 '        -5.53080078e+04, -5.49486438e+05, -5.07407688e+05,\n'
 '         4.88480750e+05, -8.57605750e+05, -6.63724750e+05,\n'
 '        -5.82429188e+05, -6.58300500e+05, -8.79263125e+04,\n'
 '         5.00631281e+05, -6.81417812e+05,  1.59616797e+05,\n'
 '        -1.57298750e+05, -2.60392539e+04,  1.81875734e+05,\n'
 '         1.06533588e+06, -1.16149977e+05,  2.18832969e+05,\n'
 '         6.44677312e+05,  4.87530500e+05, -1.86479969e+05,\n'
 '        -3.80784625e+05,  2.54759859e+05,  2.06938812e+05,\n'
 '         1.06143281e+05,  5.77294062e+05, -1.84772734e+05,\n'
 '        -4.24424062e+04, -5.81951188e+05,  3.10423312e+05,\n'
 '        -2.01813000e+05, -7.04249438e+05,  2.91135469e+05,\n'
 '        -3.22212625e+05,  5.83340312e+05,  3.76236844e+05,\n'
 '         2.98085500e+05, -5.83168000e+05, -3.30848062e+05,\n'
 '         2.45856719e+05, -1.27464781e+05,  1.01856781e+05,\n'
 '         2.87043094e+05,  4.27649625e+05,  2.79978562e+05,\n'
 '         2.10349023e+03, -9.17830688e+05, -1.74444922e+04,\n'
 '        -1.94356281e+05, -2.65974375e+04,  3.46661062e+05,\n'
 '         1.73212031e+05, -1.73005188e+05,  1.38962594e+05,\n'
 '        -5.35228750e+05,  3.00937469e+05, -6.03160562e+05,\n'
 '        -5.09941344e+05,  2.44398867e+04, -1.82992812e+05,\n'
 '         2.10756797e+04,  5.29690062e+05, -6.11733438e+05,\n'
 '         8.38482375e+05,  5.42301688e+05,  3.45377781e+05,\n'
 '        -1.95453547e+05, -8.00617422e+04,  5.01333000e+05,\n'
 '        -7.96143188e+05,  6.84791875e+05,  2.35823453e+05,\n'
 '         7.09414812e+05,  8.07917125e+05,  2.25543969e+05,\n'
 '        -2.58091406e+05,  3.19278406e+05,  8.17719562e+05,\n'
 '         1.96411344e+05,  4.70822094e+05, -5.71889375e+05,\n'
 '         3.64960531e+05,  6.43811000e+05, -1.20632305e+05,\n'
 '         1.02571266e+05,  3.72467969e+04, -6.05970688e+05,\n'
 '        -4.77334094e+05, -1.44488656e+05, -5.89185742e+04,\n'
 '        -7.91040938e+04, -1.41941562e+04, -1.18700109e+05,\n'
 '         6.89198281e+04, -6.27486312e+05,  2.81577625e+05,\n'
 '         3.82115906e+05, -5.42617438e+05,  1.63782766e+05,\n'
 '         4.48101906e+05,  7.48977344e+04, -8.22832656e+04,\n'
 '         2.17221172e+05, -9.11449062e+04,  3.78353688e+05,\n'
 '        -8.00227031e+04,  5.33680625e+05, -2.27069031e+05,\n'
 '        -4.48746188e+05, -2.25838016e+05, -4.77694094e+05,\n'
 '        -1.86290219e+05, -2.33493359e+05, -2.50964312e+05,\n'
 '         2.85873781e+05, -2.04365266e+05, -3.74636836e+04,\n'
 '        -1.41575859e+05, -2.85027469e+05, -1.58817531e+05,\n'
 '        -4.51076594e+05, -5.97229492e+04,  6.62228375e+05,\n'
 '        -1.51509547e+05,  9.58869438e+05,  2.75605719e+05,\n'
 '        -3.60374258e+04, -3.62951562e+05, -2.82137375e+05,\n'
 '        -9.87526500e+05, -1.63130672e+05, -3.23297910e+04,\n'
 '         1.65757734e+05, -1.09550484e+05,  5.95933500e+05,\n'
 '        -2.80239375e+05,  7.96299609e+04, -1.46547609e+05,\n'
 '         7.02296812e+05,  7.66450000e+05, -3.15761156e+05,\n'
 '         6.47326688e+05, -3.51132188e+05,  3.68543875e+05,\n'
 '         4.62914188e+05,  2.99157688e+05, -1.32737062e+05,\n'
 '         2.41584500e+05,  7.01558562e+05,  5.30189438e+05,\n'
 '         2.35664062e+05,  4.62129594e+05,  1.91992484e+05,\n'
 '        -2.81212594e+05,  6.42190188e+05, -9.78784688e+04,\n'
 '         3.21039938e+05,  5.79048875e+05, -2.50580188e+05,\n'
 '        -5.34718062e+05, -4.27679969e+05,  4.59216156e+05,\n'
 '         4.06282500e+05,  1.77213062e+05,  6.07580062e+05,\n'
 '         1.92584406e+05,  9.74502969e+04, -6.33204250e+05,\n'
 '        -5.20469375e+05, -1.07037188e+05,  1.08669825e+06,\n'
 '         6.18025156e+04, -1.73245328e+05, -2.49877363e+04,\n'
 '         1.22126070e+05,  1.07082391e+05, -3.83385703e+04,\n'
 '        -2.65135562e+05,  3.84265594e+05, -3.83596281e+05,\n'
 '        -1.40075547e+05, -1.81452539e+03,  4.02618406e+05,\n'
 '         5.33794062e+05,  3.22799844e+05,  3.08730875e+05,\n'
 '         1.23151250e+05, -5.17588500e+05, -1.71468656e+05,\n'
 '         1.15287900e+04,  2.61413734e+05, -2.56845375e+05,\n'
 '        -2.30545879e+04, -2.97748562e+05, -7.95295125e+05,\n'
 '         5.75454312e+05,  4.51885742e+02,  1.89646234e+05,\n'
 '         2.41111906e+05, -2.26106172e+04, -7.20618203e+04,\n'
 '        -2.56633016e+05, -4.98544906e+05, -5.01377461e+04,\n'
 '        -3.15072312e+05, -4.19421312e+05, -9.64253750e+04,\n'
 '         2.41422031e+05, -3.64475438e+05,  3.65841000e+05,\n'
 '         2.55749629e+04, -3.15974531e+05,  1.46258094e+05,\n'
 '        -1.16576469e+05, -1.03767656e+06, -5.80274875e+05,\n'
 '        -3.69009094e+05, -3.61451125e+05, -2.21477031e+05,\n'
 '        -8.17532125e+05, -3.81908594e+05, -2.83878781e+05,\n'
 '        -1.04494398e+05,  8.62285469e+04,  3.73955906e+05,\n'
 '         3.47535375e+05,  2.41205625e+05,  1.57169719e+05,\n'
 '         3.82058875e+05, -4.78604980e+03, -2.11618750e+05,\n'
 '         4.95958781e+05,  2.04351969e+05, -5.32890375e+05,\n'
 '         1.72290828e+05,  4.36749531e+05,  1.96896672e+05,\n'
 '         1.86732047e+05,  2.01476734e+05,  2.65984688e+05,\n'
 '         6.09925875e+05,  3.73629438e+05, -8.21968000e+05,\n'
 '        -9.79804062e+04,  7.70525000e+05,  2.31181281e+05,\n'
 '         2.12204109e+05,  2.57758750e+05,  2.29828891e+05,\n'
 '         6.61857891e+04, -6.19941719e+04, -8.65099125e+05,\n'
 '         2.81625938e+05, -1.56168125e+05, -6.45565562e+05,\n'
 '         6.30931938e+05,  4.18830500e+05,  1.30338594e+05,\n'
 '         8.67908312e+05, -5.27150625e+05, -1.36999688e+05,\n'
 '         2.00872047e+05, -5.86686750e+05,  2.81373789e+04,\n'
 '         2.64449969e+05,  8.88980438e+05, -4.88462312e+05,\n'
 '         7.79224938e+05,  6.15188250e+05, -3.21832438e+05,\n'
 '         3.73875188e+05,  2.62002500e+05, -3.15104648e+04,\n'
 '        -6.46138188e+05, -3.41625438e+05,  5.82271250e+05,\n'
 '        -3.02111934e+04, -2.99351406e+05, -1.41469188e+06,\n'
 '         5.66688875e+05, -1.05650875e+06,  1.85718652e+04,\n'
 '        -1.52787094e+05,  7.08080625e+05, -3.66102750e+05,\n'
 '        -4.23434656e+05, -1.76382875e+05,  2.71949344e+05,\n'
 '        -1.33775156e+05,  5.54520508e+03,  5.39952875e+05,\n'
 '         1.95887047e+05, -1.05518086e+04, -2.42727266e+04,\n'
 '         2.00525953e+05, -4.40151758e+04, -1.79740203e+05,\n'
 '         3.23241469e+05,  2.80462875e+05,  1.96403578e+05,\n'
 '         3.51511781e+05,  6.35281875e+05, -1.52179125e+05,\n'
 '        -8.63229297e+03, -9.75805375e+05,  6.93451688e+05,\n'
 '         1.22236992e+05,  1.76578562e+05, -8.04558516e+04,\n'
 '         2.97611750e+05, -1.49948047e+03,  2.66909406e+05,\n'
 '         4.00327125e+05, -4.80103062e+05,  7.13893312e+05,\n'
 '        -4.60596969e+05, -1.60869805e+04,  9.65675562e+05,\n'
 '        -1.50454234e+05, -1.88242625e+05, -9.34010125e+05,\n'
 '        -9.52247188e+05, -1.53943156e+05,  4.47158312e+05,\n'
 '         9.94922375e+05,  1.17677555e+05,  8.12841000e+05,\n'
 '        -3.50233344e+05,  7.40141688e+05,  7.71253438e+05,\n'
 '        -1.04201369e+06, -2.89940137e+03,  1.20327000e+05,\n'
 '         2.66418844e+05, -1.87457188e+05, -1.64678234e+05,\n'
 '         7.30748812e+05, -7.30424250e+05, -1.91221836e+04,\n'
 '         3.01676281e+05, -2.70943625e+05, -4.89686750e+05,\n'
 '         6.81240781e+04, -1.37866094e+05,  1.12547516e+05,\n'
 '         4.79342094e+05,  7.36744062e+05, -1.49102609e+05,\n'
 '        -1.80756547e+05, -1.36470156e+05, -1.92866281e+05,\n'
 '         1.47662922e+05, -6.44679750e+05,  9.34404438e+05,\n'
 '         2.45592781e+05,  5.47197062e+05,  1.86185250e+05,\n'
 '         4.78622125e+05,  1.85724391e+05,  1.97434188e+05,\n'
 '        -1.19099219e+04,  1.75172719e+05,  2.21270500e+05,\n'
 '         4.98020375e+05,  2.95115625e+05, -5.20927719e+05,\n'
 '        -1.33389825e+06, -1.97826594e+05, -6.58622250e+05,\n'
 '        -1.88323438e+04, -3.66697812e+05,  5.66371500e+05,\n'
 '        -1.57513000e+05,  5.85224922e+04, -2.90309844e+05,\n'
 '         1.20643500e+05,  4.94657406e+05, -6.42087656e+04,\n'
 '        -7.01625062e+05, -1.50539062e+04, -8.19116719e+04,\n'
 '         6.51291875e+04,  1.71868219e+05,  8.83760840e+03,\n'
 '        -2.38751453e+05,  6.73765812e+05, -2.24141609e+05,\n'
 '         5.68090188e+05, -1.72145281e+05, -7.02451375e+05,\n'
 '        -4.19062469e+05, -8.04062188e+05,  2.42474453e+04,\n'
 '        -2.00021797e+05,  6.62380250e+05, -7.19770750e+05,\n'
 '        -5.22942719e+05, -3.78247125e+05,  3.93885500e+05,\n'
 '        -7.28272688e+05,  1.42519719e+05, -3.48135875e+05,\n'
 '        -7.17583312e+05, -4.61002875e+05,  1.45034531e+05,\n'
 '         7.60311375e+05,  1.02629359e+05, -7.28745391e+04,\n'
 '         2.40121406e+05, -1.76093891e+05,  8.04574844e+04,\n'
 '        -1.08949250e+05,  4.15455531e+05, -4.19682469e+05,\n'
 '        -1.78653953e+05, -3.16547219e+05, -7.10535312e+05,\n'
 '         4.94263969e+05,  1.46971625e+05, -2.83944297e+04,\n'
 '         5.65844375e+05, -3.23947438e+05, -6.52633828e+04,\n'
 '         1.39319000e+05, -2.65473312e+05, -6.09709562e+05,\n'
 '        -2.46925586e+04,  1.66250172e+05,  7.88727500e+05,\n'
 '         8.14665250e+05, -8.08927250e+05,  1.16986000e+05,\n'
 '        -7.20036062e+05,  1.07070962e+06,  2.22015984e+05,\n'
 '         5.16261602e+04,  3.71046688e+05, -2.46563156e+05,\n'
 '         1.73670938e+05, -3.79376156e+05,  1.94863266e+05,\n'
 '        -1.17103688e+05, -4.46593875e+05, -5.51169188e+05,\n'
 '        -8.58864844e+04, -3.02384312e+05,  6.59541625e+05,\n'
 '        -4.03429969e+05, -2.69187594e+05,  1.81357469e+05,\n'
 '        -5.75441250e+05, -1.90864344e+05, -1.78571625e+05,\n'
 '        -7.04203625e+05, -1.94957188e+05,  7.60471125e+05,\n'
 '         1.37462125e+05, -4.34132500e+05, -2.93368969e+05,\n'
 '        -3.56655078e+04, -5.17928594e+05,  5.28814688e+05,\n'
 '        -6.83870750e+05,  1.05303773e+05, -2.72223938e+05,\n'
 '         4.95364812e+05, -1.97249258e+04,  6.02018750e+05,\n'
 '        -8.59922938e+05, -4.01072062e+05, -6.47211500e+05,\n'
 '         5.07827844e+05, -2.33538047e+05, -3.67294766e+04,\n'
 '        -4.18232344e+05,  4.76644188e+05,  5.21941641e+04,\n'
 '         4.99679656e+05,  4.14321844e+05,  1.49864781e+05,\n'
 '        -2.08102469e+05,  4.52255908e+03, -2.92304875e+05,\n'
 '         1.88964492e+04,  3.69450684e+03,  3.69918125e+05,\n'
 '         1.23550062e+05,  9.30972344e+04, -3.00453469e+05,\n'
 '        -2.24042383e+03, -3.90612750e+05,  3.68802578e+04,\n'
 '        -1.24510680e+05, -4.70717656e+04,  1.11492138e+06,\n'
 '         1.89630172e+05, -6.44097438e+05,  5.79655750e+05,\n'
 '         1.04146394e+06, -3.11889531e+05, -7.87429625e+05,\n'
 '        -4.28817875e+05, -2.51309859e+05,  2.72263594e+05,\n'
 '         9.00750938e+04, -2.07468719e+05, -1.47143250e+05,\n'
 '        -2.25111656e+05, -7.40936562e+05, -4.26890562e+05,\n'
 '         2.31629141e+04,  2.51135453e+05,  4.67331031e+05,\n'
 '         5.18536172e+04,  3.41255688e+05, -1.00619375e+05,\n'
 '        -2.41417812e+05]])')
'test_inceptionnet | batch_shape is: [1]'
'test_inceptionnet | logits.shape is: ivy.Shape(1, 1000)'
'||'
'test_inceptionnet | device is: cpu'
'test_inceptionnet | fw is: tensorflow'
'test_inceptionnet | load_weights is: True'
'InceptionV3 | build | layer 1/22 built'
'InceptionV3 | build | layer 2/22 built'
'layer 3/22 built'
'InceptionV3 | build | layer 4/22 built'
'InceptionV3 | build | layer 5/22 built'
'InceptionV3 | build | layer 6/22 built'
'InceptionV3 | build | layer 7/22 built'
'InceptionV3 | build | layer 8/22 built'
'InceptionV3 | build | layer 9/22 built'
'InceptionV3 | build | layer 10/22 built'
'InceptionV3 | build | layer 11/22 built'
'InceptionV3 | build | layer 12/22 built'
'InceptionV3 | build | layer 13/22 built'
'InceptionV3 | build | layer 14/22 built'
'InceptionV3 | build | layer 15/22 built'
'InceptionV3 | build | layer 17/22 built'
'InceptionV3 | build | layer 18/22 built'
'InceptionV3 | build | layer 19/22 built'
'InceptionV3 | build | layer 20/22 built'
'InceptionV3 | build | layer 21/22 built'
'InceptionV3 | build | layer 22/22 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/4 built'
'layer 2/4 built'
'layer 3/4 built'
'layer 4/4 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/6 built'
'layer 2/6 built'
'layer 3/6 built'
'layer 4/6 built'
'layer 5/6 built'
'layer 6/6 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'inceptionNet_v3 | building InceptionV3 model | done 1/3'
'inceptionNet_v3 | clearning pretrained weights | done 2/3'
'inceptionNet_v3 | loading pretrained weights | done 3/3'
'InceptionV3 | forward | input data_format is:NCHW | done 1/27'
'InceptionV3 | forward | data_format is going to be used is:NCHW | done 1/27'
'InceptionV3 | forward | input shape is:ivy.Shape(1, 224, 224, 3) | done 1/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 224, 224, 3) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 111, 111, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 111, 111, 32) | done 2/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 111, 111, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 32) | done 3/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 109, 109, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 64) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 64) | done 4/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 54, 54, 64) | done 5/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 54, 54, 80) | done 3/3'
'InceptionV3 | forward | is:ivy.Shape(1, 54, 54, 80) | done 6/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 80) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 52, 52, 192) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 52, 52, 192) | done 7/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 192) | done 8/27'
'input shape is:ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 32) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 32)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 25, 25, 256) | done 9/27'
'input shape is:ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 10/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 11/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 384) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 96) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 96)'
'one 20/20, output shape is:ivy.Shape(1, 12, 12, 288)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 12/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 12, 12, 768) | done 13/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 14/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 15/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 16/27'
'v3 16/27, output shape is:ivy.Shape(1, 12, 12, 768)'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 5, 5, 192)'
'one 7/20, output shape is:ivy.Shape(1, 5, 5, 768)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 1280) | done 17/27'
'input shape is:ivy.Shape(1, 5, 5, 1280)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 18/27'
'input shape is:ivy.Shape(1, 5, 5, 2048)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 19/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 20/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 5, 5) | done 21/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 1, 1) | done 22/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 27/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 24/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 25/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048) | done 26/27'
'InceptionV3 | forward | fc | done 27/27'
('test_inceptionnet | logits is: ivy.array([[-1.99658453e-01,  1.37742984e+00, '
 '-1.15900421e+00,\n'
 '         5.38890183e-01, -5.27682781e-01,  8.05830136e-02,\n'
 '         1.04530108e+00, -1.57668889e-01,  1.10579193e-01,\n'
 '        -3.15281916e+00, -1.42233360e+00, -6.85075670e-02,\n'
 '         4.75585222e-01, -5.53097844e-01,  1.58815467e+00,\n'
 '        -4.67856228e-01,  3.16597909e-01, -4.43039358e-01,\n'
 '        -1.33378625e-01,  1.74340153e+00,  2.33789969e+00,\n'
 '        -6.18390143e-01,  1.70418501e+00,  5.00792384e-01,\n'
 '         2.00321341e+00, -3.09973478e-01, -1.13073480e+00,\n'
 '        -1.37801325e+00, -2.02107406e+00, -1.34588313e+00,\n'
 '        -1.08502388e+00,  1.03844082e+00,  9.08126175e-01,\n'
 '        -1.54304194e+00,  1.51958752e+00, -1.15333235e+00,\n'
 '         1.51738810e+00, -1.49658108e+00, -1.15586352e+00,\n'
 '         1.47477400e+00,  6.36100352e-01,  1.51689231e+00,\n'
 '        -4.05874997e-01,  1.66064179e+00, -2.01581329e-01,\n'
 '        -5.61949760e-02, -1.29325759e+00,  2.05222344e+00,\n'
 '        -3.00201327e-01, -6.77576244e-01, -1.50700420e-01,\n'
 '         1.11498427e+00, -1.61179304e-01, -2.69249201e+00,\n'
 '         1.38105154e+00,  9.16704237e-02, -2.49140143e+00,\n'
 '        -3.16305846e-01, -7.92533696e-01,  1.10665548e+00,\n'
 '        -7.14990973e-01,  8.65806937e-01, -1.43897128e+00,\n'
 '        -4.16891128e-01, -1.87281161e-01, -5.05419612e-01,\n'
 '         1.88399220e+00,  3.17495918e+00,  3.04499674e+00,\n'
 '         2.40898073e-01, -1.13482571e+00, -2.77781415e+00,\n'
 '        -1.42810178e+00, -2.12458515e+00, -3.57318670e-01,\n'
 '        -7.15853334e-01, -1.63915062e+00, -1.20326495e+00,\n'
 '        -8.03232789e-01,  2.61861086e+00,  1.85581803e+00,\n'
 '         2.53206801e+00,  1.61874318e+00,  3.02055192e+00,\n'
 '         1.56105304e+00,  1.08523166e+00,  5.56573451e-01,\n'
 '         7.11057186e-01,  1.26036513e+00,  1.80799592e+00,\n'
 '        -1.90355450e-01,  1.32454586e+00,  8.37144971e-01,\n'
 '         1.15065885e+00, -1.00141597e+00, -1.48190904e+00,\n'
 '         1.91777408e+00, -2.50367522e-01, -1.72666800e+00,\n'
 '         2.73559308e+00,  1.80127645e+00,  2.28507090e+00,\n'
 '         1.30438471e+00, -2.80615985e-01,  1.75815093e+00,\n'
 '        -2.24734592e+00, -1.41903758e+00, -7.72842526e-01,\n'
 '         5.72564959e-01,  6.99701548e-01, -2.92143750e+00,\n'
 '        -2.70563650e+00,  2.85613632e+00,  2.24762201e+00,\n'
 '         1.09403157e+00, -2.54494882e+00, -2.77238059e+00,\n'
 '         8.88440371e-01, -2.89542055e+00, -1.55870032e+00,\n'
 '        -1.51362968e+00, -2.63734627e+00, -1.35691535e+00,\n'
 '        -3.93565297e-01, -2.36757398e+00, -3.70382398e-01,\n'
 '        -2.44066000e+00,  3.47156167e+00,  3.52266455e+00,\n'
 '         5.03522277e-01,  1.23890805e+00,  1.50864518e+00,\n'
 '         1.64634514e+00, -9.78645325e-01,  1.88295519e+00,\n'
 '         4.03736210e+00,  2.72547412e+00,  5.29095381e-02,\n'
 '        -6.07841075e-01, -7.99907148e-01, -1.43849909e+00,\n'
 '         3.16495991e+00, -3.12326527e+00,  1.83709800e-01,\n'
 '         2.93742680e+00,  7.97955036e-01,  1.53794789e+00,\n'
 '        -1.02803540e+00,  3.20102513e-01, -4.01040852e-01,\n'
 '        -8.23062181e-01,  6.02424264e-01,  3.51669693e+00,\n'
 '         6.33110404e-01,  1.41818851e-01, -2.27823949e+00,\n'
 '        -3.52116257e-01,  6.00081062e+00, -1.76587462e+00,\n'
 '         9.34281826e-01,  1.10624671e+00, -2.28678060e+00,\n'
 '        -1.79612946e+00, -8.73929739e-01,  4.07589525e-01,\n'
 '        -1.32141292e+00, -1.02837229e+00, -8.80236626e-01,\n'
 '        -2.38128543e+00,  5.42292237e-01,  1.48782587e+00,\n'
 '        -8.05712283e-01, -4.56604361e-01, -8.08246017e-01,\n'
 '         1.53108263e+00, -1.92514610e+00, -1.51915681e+00,\n'
 '        -1.11312163e+00,  1.55985832e+00,  9.63598490e-01,\n'
 '        -2.87198514e-01,  1.88338924e+00,  1.51360536e+00,\n'
 '         4.08598661e-01, -1.33564472e-01,  9.48802650e-01,\n'
 '         3.32422662e+00,  1.15134835e+00,  6.88956082e-01,\n'
 '        -2.20695329e+00,  2.53681362e-01,  3.22283834e-01,\n'
 '        -1.66828871e-01, -1.08562362e+00, -3.01948953e+00,\n'
 '        -2.63774663e-01, -1.26548231e+00,  1.64027440e+00,\n'
 '         5.41856170e-01,  2.45418206e-01,  3.81742656e-01,\n'
 '        -4.37119722e+00, -1.20828199e+00,  6.78665066e+00,\n'
 '        -2.83572507e+00, -1.75021219e+00, -8.94790769e-01,\n'
 '         9.23357904e-01, -7.97174334e-01, -6.33118391e-01,\n'
 '         8.34416985e-01, -5.78776479e-01, -1.60245216e+00,\n'
 '        -1.43706769e-01, -2.02865541e-01, -6.29176855e-01,\n'
 '         2.64355332e-01, -3.58560681e-03, -6.04880214e-01,\n'
 '        -2.97643566e+00, -7.40624785e-01, -4.11203802e-02,\n'
 '         3.24124289e+00,  2.56162023e+00,  6.24511433e+00,\n'
 '         9.85713720e-01, -4.51814830e-02, -1.08799183e+00,\n'
 '         1.01673675e+00,  9.56774473e-01,  1.15216827e+00,\n'
 '         4.29447746e+00,  3.48812628e+00,  9.11426067e-01,\n'
 '        -7.64532507e-01,  1.79277146e+00,  3.32180262e-01,\n'
 '        -6.15475774e-01, -1.30154681e+00,  6.01446748e-01,\n'
 '         9.80774343e-01,  1.21094298e+00,  1.18916258e-02,\n'
 '        -1.48617482e+00, -1.26408172e+00, -5.83411217e-01,\n'
 '         1.74241543e+00,  1.35452092e+00,  8.85293770e+00,\n'
 '         6.70224571e+00,  3.51309729e+00,  1.31903934e+00,\n'
 '        -1.59524822e+00, -6.82931900e-01,  2.68512666e-01,\n'
 '         1.67675769e+00,  2.17701554e+00,  7.76354313e+00,\n'
 '         2.22434063e+01,  9.22999859e+00,  6.39141607e+00,\n'
 '         7.05281973e+00, -2.17695355e+00, -1.15968656e+00,\n'
 '        -9.85814095e-01,  5.99688649e-01, -1.29837799e+00,\n'
 '         2.48095798e+00,  1.33572042e-01,  2.52000570e+00,\n'
 '         1.14304829e+01, -2.48738337e+00,  2.06132603e+00,\n'
 '         1.98622060e+00,  6.72208726e-01, -9.47495580e-01,\n'
 '         5.78619719e-01,  2.25750566e+00, -1.63513386e+00,\n'
 '         1.05421982e+01,  8.33822906e-01,  9.20486808e-01,\n'
 '         5.49319088e-01,  2.95452666e+00, -2.13539648e+00,\n'
 '         2.68375948e-02, -5.47459125e-01,  3.18542337e+00,\n'
 '         6.96723580e-01,  5.14354408e-01, -9.33326840e-01,\n'
 '         9.84991193e-01,  4.46794272e-01,  4.94480074e-01,\n'
 '         2.76001006e-01, -2.49784398e+00,  4.30482340e+00,\n'
 '        -3.07076693e-01, -1.41172147e+00,  7.11793974e-02,\n'
 '        -9.24452543e-01,  2.56253064e-01, -3.60012129e-02,\n'
 '         1.81277662e-01,  1.29953575e+00, -5.30385375e-01,\n'
 '        -4.05793861e-02,  3.36548328e+00,  1.63771129e+00,\n'
 '         1.17128694e+00, -5.69066644e-01, -3.19781989e-01,\n'
 '        -8.01268756e-01, -3.93544376e-01, -8.41949403e-01,\n'
 '         2.16858268e+00, -2.19086933e+00, -1.96828187e-01,\n'
 '        -8.26244056e-02, -4.44482327e-01,  1.55406511e+00,\n'
 '        -9.78799939e-01,  5.24568081e-01,  1.40068865e+00,\n'
 '        -2.83607793e+00, -4.77805972e-01,  1.55392778e+00,\n'
 '         1.15594959e+00,  1.06473076e+00, -2.62383342e+00,\n'
 '        -1.31806403e-01,  2.02566147e+00,  1.14939535e+00,\n'
 '        -2.79649711e+00, -7.00150609e-01, -3.85806084e+00,\n'
 '        -2.72813225e+00, -1.75415397e+00,  1.99837160e+00,\n'
 '        -2.27642012e+00,  6.98279262e-01, -7.96305180e-01,\n'
 '        -2.06566477e+00, -1.14558607e-01, -2.58264232e+00,\n'
 '        -1.30954289e+00,  2.17792749e-01,  1.57676971e+00,\n'
 '         2.56876409e-01,  2.67574757e-01, -9.80933428e-01,\n'
 '        -5.22050798e-01, -8.78665745e-01, -3.08041334e-01,\n'
 '        -1.23580098e+00, -3.54490250e-01,  1.81704605e+00,\n'
 '        -2.07078517e-01,  1.88133645e+00, -6.91048622e-01,\n'
 '        -2.15683842e+00, -7.08264709e-01, -1.35801113e+00,\n'
 '         5.57163596e-01, -2.28885865e+00, -1.89468229e+00,\n'
 '        -2.53628111e+00, -6.03407502e-01,  1.28167644e-01,\n'
 '        -2.18909144e+00,  7.98936963e-01, -3.74284923e-01,\n'
 '         8.97201478e-01,  8.24861973e-02, -2.35986784e-01,\n'
 '        -1.87379849e+00, -1.98557627e+00,  8.53554606e-01,\n'
 '        -1.10109079e+00, -1.49155927e+00, -2.24161774e-01,\n'
 '        -1.62492585e+00,  2.93789327e-01,  2.78960347e-01,\n'
 '        -2.01144791e+00,  1.64928770e+00, -9.97315466e-01,\n'
 '         2.02370310e+00,  6.28656685e-01, -5.15856445e-01,\n'
 '        -4.32593405e-01, -2.12500215e+00,  9.05677557e-01,\n'
 '         1.18976784e+00,  1.04541779e-01, -9.17130232e-01,\n'
 '         1.19937515e+00, -1.30777073e+00, -7.41218686e-01,\n'
 '         1.85854852e+00,  1.97592452e-02, -9.54834104e-01,\n'
 '         1.76620996e+00, -6.06254190e-02,  2.25450277e+00,\n'
 '         2.53734767e-01,  9.78384614e-01,  6.22669935e-01,\n'
 '        -7.76530266e-01, -1.07483685e+00, -2.71694362e-01,\n'
 '        -2.26517963e+00, -2.17936206e+00, -8.75897706e-01,\n'
 '         7.95299828e-01, -8.45729530e-01, -1.89384282e+00,\n'
 '         8.83113801e-01, -2.16218257e+00, -1.03062320e+00,\n'
 '        -5.84433138e-01, -3.30542398e+00, -1.72746015e+00,\n'
 '        -1.35373890e+00, -1.72669840e+00,  1.64338100e+00,\n'
 '        -7.54097402e-01,  8.42451155e-02,  2.50601768e-01,\n'
 '        -2.72287488e+00,  7.59693861e-01, -5.24562716e-01,\n'
 '        -2.24606848e+00,  1.22533530e-01, -1.73940256e-01,\n'
 '        -7.43177295e-01, -4.66288358e-01, -1.38648248e+00,\n'
 '        -2.12202764e+00, -5.20844221e-01,  1.89964581e+00,\n'
 '        -4.73203778e-01,  1.15619230e+00, -3.21189642e-01,\n'
 '        -1.48506248e+00, -9.58872438e-02,  9.05322433e-02,\n'
 '        -9.95771706e-01,  2.06058240e+00,  1.10081995e+00,\n'
 '         1.98244423e-01, -6.13622785e-01, -2.20042765e-02,\n'
 '        -6.55825615e-01,  3.12863588e-02, -1.66770601e+00,\n'
 '        -1.09018588e+00, -3.28618854e-01,  1.34822083e+00,\n'
 '         5.78246951e-01, -1.08777237e+00, -2.70464730e+00,\n'
 '         1.64023852e+00,  1.41102999e-01,  1.00688469e+00,\n'
 '        -7.00270057e-01, -6.00310683e-01, -1.20319366e+00,\n'
 '        -5.47053933e-01, -7.30735362e-02,  1.49969709e+00,\n'
 '        -9.02444780e-01, -6.35243774e-01,  2.06965971e+00,\n'
 '         2.12768406e-01,  2.17901170e-02,  3.79817295e+00,\n'
 '        -7.82737851e-01,  2.75032759e+00,  2.63811350e-01,\n'
 '         1.10608435e+00, -6.88501179e-01, -1.94666803e+00,\n'
 '         2.30020475e+00, -1.32645345e+00, -1.80585623e+00,\n'
 '        -4.13649917e-01,  4.45933491e-01,  6.37211382e-01,\n'
 '        -1.33417594e+00,  9.82394218e-01,  1.82747483e+00,\n'
 '        -2.80990481e+00, -2.13476062e+00,  2.34498829e-01,\n'
 '         2.61074209e+00, -4.20076489e-01, -2.91189384e+00,\n'
 '        -1.16198802e+00, -4.49140280e-01, -1.68886232e+00,\n'
 '         9.06030357e-01, -1.18299365e+00, -4.30619866e-02,\n'
 '        -2.79628515e+00,  2.32066035e-01, -1.05974942e-01,\n'
 '        -1.72198701e+00, -1.30913639e+00, -1.32945275e+00,\n'
 '         1.16627347e+00,  3.24621648e-01, -1.39327383e+00,\n'
 '        -1.72883737e+00, -1.42777300e+00, -1.04828739e+00,\n'
 '        -2.61954427e+00, -6.30897731e-02, -3.09134126e-01,\n'
 '        -2.72884154e+00, -4.05673772e-01, -2.73442775e-01,\n'
 '         8.14921916e-01, -3.45720577e+00,  1.66714728e-01,\n'
 '        -1.68138397e+00, -7.21349835e-01, -2.56519580e+00,\n'
 '        -2.08252215e+00, -1.57258308e+00, -1.95140946e+00,\n'
 '         5.54771304e-01,  1.77341449e+00,  1.14355171e+00,\n'
 '        -3.04006267e+00, -1.31452727e+00, -1.01365876e+00,\n'
 '         4.80280113e+00,  1.40189946e+00,  8.50243151e-01,\n'
 '        -2.22515941e+00, -1.24384355e+00, -1.13953018e+00,\n'
 '         1.39925018e-01, -1.05264962e+00, -5.28447151e-01,\n'
 '         2.30490732e+00, -1.19262481e+00, -3.04913092e+00,\n'
 '        -1.16883755e+00, -2.87565446e+00, -9.06039894e-01,\n'
 '        -8.00968528e-01, -4.46073818e+00, -1.29019308e+00,\n'
 '        -1.91106796e+00, -1.07154489e-01,  2.71120715e+00,\n'
 '         3.70510906e-01, -1.36758342e-01,  7.66879201e-01,\n'
 '        -4.21494335e-01,  4.21555328e+00,  4.28778142e-01,\n'
 '         3.58518958e-03, -2.00322437e+00, -4.15931642e-01,\n'
 '        -1.55013335e+00,  2.26789504e-01, -2.43813753e+00,\n'
 '         4.91161823e-01, -2.28990936e+00,  1.96960413e+00,\n'
 '         8.07359219e-01, -6.87158942e-01, -3.84485990e-01,\n'
 '        -3.95305604e-01,  1.20020568e-01,  3.42722940e+00,\n'
 '        -2.32587981e+00,  1.45686829e+00,  1.59600520e+00,\n'
 '         2.98300028e-01,  9.45316404e-02,  6.37528241e-01,\n'
 '         7.10521877e-01, -2.48024774e+00, -3.88555139e-01,\n'
 '        -3.60806405e-01, -2.05547738e+00,  2.71018743e-01,\n'
 '         2.83863038e-01,  1.37416208e+00, -7.96178579e-01,\n'
 '         1.89602852e+00, -4.18463498e-02,  3.30296564e+00,\n'
 '        -1.03674555e+00, -2.33149695e+00, -2.50099480e-01,\n'
 '         6.28526449e-01, -1.35038304e+00, -1.84547114e+00,\n'
 '        -9.20717180e-01,  1.35363057e-01, -2.74545908e+00,\n'
 '         6.53149795e+00,  1.67880583e+00,  5.85126817e-01,\n'
 '         4.25448492e-02, -2.64738441e-01,  1.26575089e+00,\n'
 '         7.71250129e-01, -6.14110649e-01, -3.24323893e-01,\n'
 '        -1.19101429e+00, -1.34222698e+00,  3.60379994e-01,\n'
 '        -2.05209804e+00, -1.17868269e+00, -2.64481497e+00,\n'
 '         2.42691183e+00, -8.03191721e-01, -5.18309474e-01,\n'
 '         1.03282082e+00, -2.00677633e-01, -1.05382013e+00,\n'
 '        -1.41185671e-01,  1.21906900e+00, -1.34453607e+00,\n'
 '        -7.51869321e-01, -8.47035766e-01,  3.96536857e-01,\n'
 '         6.58879519e-01, -1.95494270e+00, -1.56731772e+00,\n'
 '        -3.20046634e-01, -1.20283365e-01, -1.53493857e+00,\n'
 '         2.07174987e-01,  8.77722383e-01, -2.68683863e+00,\n'
 '        -1.61741352e+00,  9.99584496e-02,  2.26236224e-01,\n'
 '         1.40660596e+00,  8.64692509e-01, -3.36493373e+00,\n'
 '        -1.32459569e+00,  4.44813156e+00, -2.42773819e+00,\n'
 '         8.83749723e-01,  5.39379716e-01, -1.70382607e+00,\n'
 '         4.80962366e-01, -3.77790690e+00,  2.05454707e+00,\n'
 '        -3.18035674e+00, -1.17803836e+00, -1.18238914e+00,\n'
 '        -2.26280904e+00, -3.89263749e-01, -1.75824583e+00,\n'
 '        -3.35119200e+00, -1.66379976e+00, -1.47538543e+00,\n'
 '         3.26309770e-01, -6.44781709e-01, -3.57859564e+00,\n'
 '         1.95245624e+00,  5.12916982e-01,  3.56947482e-02,\n'
 '         2.62216663e+00, -1.79675889e+00, -1.42926347e+00,\n'
 '         1.20119989e+00,  2.89686894e+00, -1.37529397e+00,\n'
 '         1.01074827e+00, -2.45370364e+00,  6.65182650e-01,\n'
 '        -3.04737186e+00,  3.74440670e+00, -1.01394105e+00,\n'
 '         4.98278528e-01, -1.51128614e+00, -1.61343288e+00,\n'
 '         7.34689832e-01, -4.02536452e-01, -6.49726093e-01,\n'
 '        -1.01104975e+00, -1.45738900e+00, -1.54935431e+00,\n'
 '        -2.83239937e+00, -1.47935009e+00,  9.06375050e-02,\n'
 '         1.16569078e+00, -2.76368946e-01,  2.72302484e+00,\n'
 '        -1.92935854e-01, -2.95550871e+00, -7.91319966e-01,\n'
 '        -4.81315517e+00,  8.58830929e-01, -2.63180804e+00,\n'
 '        -4.23924732e+00,  7.51229465e-01,  5.73779523e-01,\n'
 '         9.38765407e-01, -2.06458283e+00,  2.50297338e-01,\n'
 '         1.86049306e+00,  8.09130192e-01, -2.59212732e+00,\n'
 '         3.42170745e-01,  3.23044956e-01, -5.80491841e-01,\n'
 '         1.27951956e+00,  7.18634665e-01,  6.33799136e-01,\n'
 '        -1.74293542e+00, -1.46021974e+00, -1.32605815e+00,\n'
 '         5.35663485e-01,  1.46543765e+00,  3.26127982e+00,\n'
 '        -1.37169802e+00,  3.35997760e-01,  1.79086244e+00,\n'
 '         4.38209176e-02, -1.39144123e+00,  6.15051627e-01,\n'
 '         6.50097966e-01,  1.00697756e+00, -3.57278645e-01,\n'
 '        -4.53319460e-01, -5.77944517e-01,  3.95721137e-01,\n'
 '         2.03692269e+00, -8.50112677e-01,  7.95521438e-01,\n'
 '         1.13347650e+00, -9.76105392e-01, -1.78316486e+00,\n'
 '        -2.21423745e+00, -2.59604096e+00,  3.48451853e+00,\n'
 '        -1.70141888e+00, -2.74900484e+00, -1.08086324e+00,\n'
 '        -3.17547369e+00, -5.39512456e-01,  4.04526949e-01,\n'
 '        -4.70244139e-03, -4.28016901e+00,  1.53682291e+00,\n'
 '        -1.30033660e+00,  1.07944381e+00, -8.67042243e-02,\n'
 '         4.69373554e-01, -2.40533090e+00, -3.40052271e+00,\n'
 '         1.08313727e+00, -1.19397795e+00, -1.92607522e+00,\n'
 '        -9.81206894e-01, -9.16340947e-01,  2.34606862e-01,\n'
 '         1.28150249e+00,  1.17251825e+00, -5.84366798e-01,\n'
 '        -1.79740214e+00, -1.49232376e+00,  1.88274980e-01,\n'
 '        -5.69212735e-01, -1.29550791e+00, -1.39950347e+00,\n'
 '        -1.31700385e+00, -6.60936713e-01, -8.51246297e-01,\n'
 '         1.51654494e+00,  1.12497106e-01, -3.86815250e-01,\n'
 '        -2.64986038e-01, -8.03695619e-01, -1.09271562e+00,\n'
 '        -1.21956825e-01,  1.06825352e+00,  1.11851430e+00,\n'
 '         3.25964034e-01,  1.20944285e+00, -5.58447242e-02,\n'
 '         2.73736668e+00,  1.33225381e+00, -4.04018343e-01,\n'
 '        -9.92224038e-01,  1.76813877e+00,  1.89219713e-01,\n'
 '        -1.58801603e+00,  1.79632509e+00, -2.13589519e-01,\n'
 '        -1.16690302e+00,  3.02026296e+00, -7.63908327e-01,\n'
 '        -1.96050429e+00, -2.34246939e-01, -2.87625289e+00,\n'
 '        -2.00778365e+00,  6.60386860e-01,  7.90561497e-01,\n'
 '         1.98827338e+00, -3.16819936e-01,  1.49837172e+00,\n'
 '         1.17525712e-01,  5.13076901e-01,  6.33489311e-01,\n'
 '         4.05746102e-01, -8.69234562e-01, -6.25697792e-01,\n'
 '        -1.03468311e+00, -2.68575144e+00, -1.61758792e+00,\n'
 '        -1.09034073e+00, -1.34441495e+00, -1.41594171e+00,\n'
 '         1.59321070e+00, -1.26873744e+00, -1.03019309e+00,\n'
 '         1.31558537e+00, -1.71068621e+00,  8.43849778e-01,\n'
 '        -1.99580491e+00,  2.17626572e+00, -2.63669467e+00,\n'
 '        -1.58347762e+00, -7.89958477e-01, -8.49404693e-01,\n'
 '        -2.39333034e+00, -4.16243821e-01,  9.08175707e-02,\n'
 '         1.61880577e+00,  4.87360776e-01, -1.23220968e+00,\n'
 '         1.03787983e+00, -4.07769620e-01, -1.77192998e+00,\n'
 '        -3.03925633e-01, -1.59137201e+00, -1.21315968e+00,\n'
 '         5.58052808e-02,  7.11370826e-01, -1.82347465e+00,\n'
 '         2.92028832e+00,  1.41526556e+00,  1.15254319e+00,\n'
 '        -1.17792642e+00, -3.32503009e+00,  1.09624565e+00,\n'
 '         1.93654358e+00, -2.09644795e-01,  2.29438260e-01,\n'
 '         1.63290894e+00, -8.91912162e-01,  7.56162703e-01,\n'
 '        -2.60903525e+00, -1.82845175e-01, -2.99156278e-01,\n'
 '         1.09152746e+00, -2.36633420e+00, -2.06602716e+00,\n'
 '         5.04912436e-01, -8.79008472e-01,  3.59273374e-01,\n'
 '         1.24615647e-01, -2.06868935e+00, -1.78734517e+00,\n'
 '        -2.27331328e+00, -1.83727372e+00,  1.75952065e+00,\n'
 '        -8.45671892e-01, -4.08158451e-01, -1.54594779e+00,\n'
 '         1.67902410e+00,  1.48949516e+00,  9.97359008e-02,\n'
 '        -2.15635467e+00,  1.98840773e+00,  7.99014568e-01,\n'
 '         5.35046041e-01, -1.02788997e+00, -2.69894242e+00,\n'
 '         2.16165042e+00, -7.75728107e-01,  1.68465888e+00,\n'
 '        -1.69607425e+00, -7.28507996e-01,  1.05802345e+00,\n'
 '        -2.10022187e+00,  3.95406532e+00,  9.61297214e-01,\n'
 '        -1.26314640e+00, -1.00981444e-01, -9.99971330e-02,\n'
 '        -1.71542442e+00,  6.97603524e-01, -2.01200461e+00,\n'
 '        -8.79039764e-01,  1.43298638e+00,  6.49504542e-01,\n'
 '         1.39057827e+00, -6.73649907e-01,  2.37945270e+00,\n'
 '         1.59901047e+00,  3.09704930e-01, -1.34117797e-01,\n'
 '         1.24634266e+00, -7.34728575e-01, -7.07191110e-01,\n'
 '         5.35165727e-01,  1.30213112e-01, -6.99155688e-01,\n'
 '         9.15986776e-01,  6.61311984e-01,  2.08402109e+00,\n'
 '         1.71791121e-01,  9.20664787e-01, -1.35552311e+00,\n'
 '        -2.26960540e+00,  6.94839835e-01, -1.91532302e+00,\n'
 '         6.83155060e-01,  3.62885296e-02, -1.65458834e+00,\n'
 '        -1.61863160e+00, -2.86838984e+00, -1.56400728e+00,\n'
 '        -2.59172440e-01,  7.17595577e-01, -1.05750628e-01,\n'
 '         3.28116715e-02,  3.57171148e-01,  1.73093677e+00,\n'
 '         1.65586328e+00,  9.90440309e-01,  1.26768863e+00,\n'
 '         2.34629512e+00,  1.67297375e+00,  1.08889437e+00,\n'
 '        -6.23075366e-01,  8.70670915e-01,  1.66031265e+00,\n'
 '         2.78860164e+00,  2.21685028e+00,  5.46403348e-01,\n'
 '         1.25539625e+00,  2.62426162e+00,  1.97984576e+00,\n'
 '         2.56433654e+00,  4.66499925e-02,  9.28966939e-01,\n'
 '        -5.05323768e-01,  1.38759077e+00,  7.13077486e-02,\n'
 '        -1.00567746e+00, -2.37472177e-01, -1.22980499e+00,\n'
 '         2.34826779e+00,  6.32112741e-01, -4.46774900e-01,\n'
 '        -1.46848452e+00,  1.84702218e-01, -1.57721579e-01,\n'
 '         2.07741570e+00, -3.43501359e-01, -2.00148797e+00,\n'
 '        -2.10233069e+00, -1.65818930e+00,  3.09110475e+00,\n'
 '         6.47465050e-01, -6.10559821e-01, -1.40292168e+00,\n'
 '        -1.76439953e+00,  7.16285229e-01, -2.74817109e-01,\n'
 '         3.15286517e-01, -1.20841622e-01,  2.16134608e-01,\n'
 '        -3.78106981e-01,  2.52787638e+00,  6.47780061e-01,\n'
 '         1.00582540e-01, -5.49174190e-01, -1.15111613e+00,\n'
 '        -1.36272812e+00, -2.71809983e+00, -6.56228423e-01,\n'
 '        -1.82590485e-01, -1.41544366e+00, -2.03945065e+00,\n'
 '         1.95799756e+00]])')
'test_inceptionnet | batch_shape is: [1]'
'test_inceptionnet | logits.shape is: ivy.Shape(1, 1000)'
'||'
'test_inceptionnet | indices_test | true_indices is: [258 270 279]'
'test_inceptionnet | indices_test | calc_indices is: [258 270 279]'
'test_inceptionnet | device is: cpu'
'test_inceptionnet | fw is: torch'
'test_inceptionnet | load_weights is: False'
'InceptionV3 | build | layer 1/22 built'
'InceptionV3 | build | layer 2/22 built'
'layer 3/22 built'
'InceptionV3 | build | layer 4/22 built'
'InceptionV3 | build | layer 5/22 built'
'InceptionV3 | build | layer 6/22 built'
'InceptionV3 | build | layer 7/22 built'
'InceptionV3 | build | layer 8/22 built'
'InceptionV3 | build | layer 9/22 built'
'InceptionV3 | build | layer 10/22 built'
'InceptionV3 | build | layer 11/22 built'
'InceptionV3 | build | layer 12/22 built'
'InceptionV3 | build | layer 13/22 built'
'InceptionV3 | build | layer 14/22 built'
'InceptionV3 | build | layer 15/22 built'
'InceptionV3 | build | layer 17/22 built'
'InceptionV3 | build | layer 18/22 built'
'InceptionV3 | build | layer 19/22 built'
'InceptionV3 | build | layer 20/22 built'
'InceptionV3 | build | layer 21/22 built'
'InceptionV3 | build | layer 22/22 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/4 built'
'layer 2/4 built'
'layer 3/4 built'
'layer 4/4 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/6 built'
'layer 2/6 built'
'layer 3/6 built'
'layer 4/6 built'
'layer 5/6 built'
'layer 6/6 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'inceptionNet_v3 | building InceptionV3 model | done 1/3'
'InceptionV3 | forward | input data_format is:NHWC | done 1/27'
'InceptionV3 | forward | data_format is going to be used is:NHWC | done 1/27'
'InceptionV3 | forward | input shape is:ivy.Shape(1, 224, 224, 3) | done 1/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 224, 224, 3) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 111, 111, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 111, 111, 32) | done 2/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 111, 111, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 32) | done 3/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 109, 109, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 64) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 64) | done 4/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 54, 54, 64) | done 5/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 54, 54, 80) | done 3/3'
'InceptionV3 | forward | is:ivy.Shape(1, 54, 54, 80) | done 6/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 80) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 52, 52, 192) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 52, 52, 192) | done 7/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 192) | done 8/27'
'input shape is:ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 32) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 32)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 25, 25, 256) | done 9/27'
'input shape is:ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 10/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 11/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 384) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 96) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 96)'
'one 20/20, output shape is:ivy.Shape(1, 12, 12, 288)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 12/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 12, 12, 768) | done 13/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 14/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 15/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 16/27'
'v3 16/27, output shape is:ivy.Shape(1, 12, 12, 768)'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 5, 5, 192)'
'one 7/20, output shape is:ivy.Shape(1, 5, 5, 768)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 1280) | done 17/27'
'input shape is:ivy.Shape(1, 5, 5, 1280)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 18/27'
'input shape is:ivy.Shape(1, 5, 5, 2048)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 19/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 20/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 5, 5) | done 21/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 1, 1) | done 22/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 27/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 24/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 25/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048) | done 26/27'
'InceptionV3 | forward | fc | done 27/27'
('test_inceptionnet | logits is: ivy.array([[ 1.03529462e+06, '
 '-4.95731125e+05,  1.15584000e+06,\n'
 '         8.11895312e+05, -7.37194688e+05,  4.35333875e+05,\n'
 '        -4.35572531e+05, -6.94585875e+05, -6.64917125e+05,\n'
 '        -5.05283188e+05, -1.90002350e+06, -6.68865625e+05,\n'
 '         9.80928125e+05,  3.05421375e+05, -3.15330000e+04,\n'
 '        -9.87577188e+05, -1.17440312e+06,  1.31012275e+06,\n'
 '        -3.32650125e+05,  2.66595969e+05,  1.19548758e+05,\n'
 '        -8.71571062e+05, -1.38868012e+06,  3.30318375e+05,\n'
 '        -7.21084375e+03,  2.60538156e+05, -8.52209500e+05,\n'
 '         7.84738438e+04, -1.55203875e+05,  1.25136975e+06,\n'
 '         4.55374781e+05, -3.57669375e+05, -2.70560406e+05,\n'
 '         5.86457375e+05, -9.69133750e+04, -1.31538150e+06,\n'
 '         3.05272562e+05,  6.10390938e+04, -9.19275859e+04,\n'
 '         1.14995200e+06,  5.06406375e+05,  6.42390750e+05,\n'
 '        -9.93413500e+05, -2.37608750e+05,  1.38440225e+06,\n'
 '         1.59055172e+05,  1.33218500e+05,  2.85617719e+05,\n'
 '         5.96712656e+04,  1.13301662e+06, -7.72850500e+05,\n'
 '         7.99774875e+05,  8.16256750e+05,  2.66237562e+05,\n'
 '         5.69103594e+04,  1.29142425e+06, -1.12496400e+06,\n'
 '         5.83025625e+04,  7.53812625e+05, -3.14145500e+05,\n'
 '         3.00681938e+05,  5.99227062e+05,  2.50029400e+06,\n'
 '        -7.78833312e+05,  1.50297266e+05,  2.20388875e+05,\n'
 '        -1.06701525e+06,  5.21131812e+05, -9.31203359e+04,\n'
 '         4.63126406e+05, -1.16038700e+06, -6.87804688e+05,\n'
 '        -1.08859900e+06, -1.17957362e+06,  8.90772000e+05,\n'
 '         1.08068162e+06, -2.19849062e+05,  1.55000000e+02,\n'
 '        -4.42034688e+05, -4.17993125e+05, -1.28561750e+06,\n'
 '        -3.25086938e+05,  4.76057688e+05, -6.37607812e+04,\n'
 '        -2.12310625e+04, -3.21887000e+05, -1.96279922e+05,\n'
 '         8.29914250e+05,  4.17214438e+05, -1.55332475e+06,\n'
 '         3.33590938e+05, -7.10964938e+05, -2.87046000e+05,\n'
 '        -1.36411725e+06, -7.27158562e+05,  6.84248750e+05,\n'
 '         7.83220562e+05,  8.43260375e+05,  5.50717750e+05,\n'
 '         4.50624688e+05,  6.25043375e+05,  6.85564000e+05,\n'
 '         3.15528344e+05,  1.88755438e+05, -1.42322325e+06,\n'
 '         6.18637125e+05, -2.31208250e+06, -2.19141250e+04,\n'
 '         1.62561175e+06,  2.11258766e+05, -4.80086656e+05,\n'
 '         1.04496112e+06,  7.73860562e+05,  3.36739625e+05,\n'
 '         1.27976438e+05,  5.98776000e+05, -4.04606000e+05,\n'
 '        -1.37055219e+05,  3.47550188e+05, -2.08290469e+04,\n'
 '        -8.50345062e+05, -2.06826656e+05,  4.75267000e+05,\n'
 '         3.60690312e+05, -3.42793156e+05, -3.73277094e+05,\n'
 '        -8.68894688e+05,  8.83620750e+05,  2.62083859e+05,\n'
 '         1.86402922e+05, -1.81780600e+06, -7.28318438e+04,\n'
 '         1.08392250e+05, -5.11802188e+04,  4.06837125e+05,\n'
 '         4.19827734e+04,  2.44461438e+05,  2.30842188e+04,\n'
 '        -5.43435312e+05,  4.39889062e+05, -2.30326875e+04,\n'
 '        -7.72166562e+04, -1.22507225e+06, -9.82425000e+03,\n'
 '         1.32253672e+05, -6.53162125e+05, -8.45802938e+05,\n'
 '         5.04743062e+05, -1.39680375e+06, -6.63534625e+05,\n'
 '        -1.65614391e+05,  6.85372938e+05,  6.43674375e+04,\n'
 '         4.84966438e+05, -1.83298975e+06,  5.29038000e+05,\n'
 '        -5.58165250e+05,  1.97468062e+05, -3.36468781e+05,\n'
 '         7.48112250e+05,  1.35200225e+06,  6.03491062e+05,\n'
 '         7.04942625e+05, -4.28653688e+05, -1.31673969e+05,\n'
 '         4.46857781e+05, -1.05931650e+06,  6.57232031e+04,\n'
 '         4.98943969e+05, -5.63636500e+05,  2.73080250e+05,\n'
 '        -3.87640438e+05,  1.12858512e+06,  9.34278125e+04,\n'
 '        -7.96383875e+05, -4.38163156e+05, -3.89675750e+05,\n'
 '         8.85129375e+04,  2.33795797e+05,  3.31157188e+04,\n'
 '         8.42514375e+05,  8.49216719e+04, -2.98107125e+05,\n'
 '         3.34543000e+05,  3.97384250e+05, -7.16260750e+05,\n'
 '        -2.89121312e+05,  6.35664312e+05, -8.47907750e+05,\n'
 '         6.95603188e+05, -6.61912062e+05, -5.62601250e+05,\n'
 '         5.99613000e+05, -5.64807250e+05, -8.98333438e+05,\n'
 '         1.04328888e+06,  5.52838750e+05,  6.23000000e+03,\n'
 '        -1.00492188e+04, -5.50424125e+05, -1.80545188e+05,\n'
 '         5.53260812e+05, -7.92488750e+04, -1.03234888e+06,\n'
 '         1.05706562e+06, -1.28725875e+06,  1.71179850e+06,\n'
 '         1.37894719e+05,  4.33233625e+05,  1.96509875e+05,\n'
 '         1.22244094e+05, -3.50375812e+05,  4.29967219e+05,\n'
 '        -4.99705562e+05, -4.68338094e+05,  8.86058281e+04,\n'
 '        -1.52574725e+06,  1.72748094e+05,  5.38661750e+05,\n'
 '         5.05414125e+05, -9.81999375e+05,  1.72060125e+05,\n'
 '         2.59798750e+04,  1.01536850e+06, -1.79711016e+05,\n'
 '        -3.95239500e+05,  2.67450250e+05, -2.72965594e+05,\n'
 '         1.61964125e+05,  1.25276725e+06,  7.68132062e+05,\n'
 '         7.41686125e+05, -3.19685875e+05, -9.56603812e+05,\n'
 '        -2.82204688e+05,  5.39708750e+05,  7.82199562e+05,\n'
 '        -6.77923562e+05, -5.44880625e+04,  6.21389125e+05,\n'
 '        -8.31932062e+05,  3.56564156e+05, -9.90012375e+05,\n'
 '         6.98131125e+05, -4.32750781e+04,  5.98797875e+05,\n'
 '        -1.18791750e+06, -6.45328625e+05,  6.85334750e+05,\n'
 '        -1.21729531e+05, -8.80965750e+05,  1.36837400e+06,\n'
 '        -4.70187688e+05,  1.14566538e+06,  6.17325688e+05,\n'
 '         2.28860984e+05, -9.92118750e+04,  6.03054312e+05,\n'
 '        -1.28973641e+05, -2.09301438e+05, -1.08940562e+06,\n'
 '         2.11083094e+05, -6.11546500e+05,  9.27247188e+04,\n'
 '        -1.11635512e+06, -1.17891531e+05,  7.74224062e+04,\n'
 '         3.62314812e+05,  5.63631250e+05,  1.01625188e+05,\n'
 '        -1.14003000e+06, -1.10357100e+06, -1.30476650e+06,\n'
 '        -1.02765888e+06,  2.70492469e+05, -2.34460906e+05,\n'
 '        -8.38121375e+05, -2.02856141e+05, -8.20266312e+05,\n'
 '        -8.89720250e+05,  7.55445625e+04,  5.31868000e+05,\n'
 '        -4.95613500e+05,  7.00213906e+04,  6.73833750e+04,\n'
 '        -1.39192388e+06, -4.92323156e+05,  3.92366250e+04,\n'
 '        -3.22736594e+05,  2.68979594e+05,  4.43542875e+05,\n'
 '        -7.01063125e+05, -3.92006312e+05,  1.40241500e+05,\n'
 '        -1.32450625e+04,  1.67517562e+05, -7.71867625e+05,\n'
 '        -6.17944875e+05,  3.13968438e+05, -4.89936688e+05,\n'
 '        -3.85179062e+04,  6.04830125e+05, -2.42179500e+05,\n'
 '        -6.94181875e+04, -1.14950156e+04, -1.00309444e+06,\n'
 '        -1.31536844e+05,  1.64308325e+06,  2.91459250e+05,\n'
 '        -4.77200656e+05,  4.04504000e+05,  6.12309875e+05,\n'
 '         2.77815938e+05,  1.93355700e+06,  1.22454562e+06,\n'
 '        -5.57803188e+05, -2.13488188e+05,  1.04990975e+06,\n'
 '         1.01389475e+06,  1.53522188e+05, -3.21288375e+05,\n'
 '         4.47285500e+05,  1.40061656e+05, -5.77503125e+05,\n'
 '         1.04169688e+04,  3.10996250e+04,  6.07565625e+04,\n'
 '        -2.95362375e+05,  3.11473000e+05,  8.46361250e+05,\n'
 '        -6.51479250e+05,  8.70911797e+04, -1.81449219e+04,\n'
 '         9.96870750e+05, -2.96623875e+05,  1.20587888e+06,\n'
 '         1.18363850e+06, -6.31497625e+05, -5.00012000e+05,\n'
 '        -7.59819188e+05,  9.02976406e+04, -3.17366625e+05,\n'
 '        -6.62970625e+05, -2.44057203e+05, -5.98280125e+05,\n'
 '        -4.01329500e+05,  5.60657875e+05,  5.79037938e+05,\n'
 '         1.66531688e+05, -4.86625000e+04,  4.21411562e+04,\n'
 '        -4.38225750e+05,  6.83967000e+05, -2.86825312e+05,\n'
 '         1.70068188e+06,  7.14201875e+04,  7.36023625e+05,\n'
 '        -1.56371275e+06, -6.74715750e+05, -9.42008812e+05,\n'
 '        -4.61598188e+05, -7.64389875e+05, -2.24620781e+05,\n'
 '         5.43570250e+05, -2.03451875e+04,  6.22223625e+05,\n'
 '         8.00997625e+05, -1.07720000e+06,  4.42775250e+05,\n'
 '        -4.33338250e+05,  7.69927500e+04,  3.51950375e+05,\n'
 '        -1.09724125e+06, -4.05930750e+05, -9.13379375e+05,\n'
 '         5.98362812e+05,  2.99609562e+05,  8.68628500e+05,\n'
 '        -2.26403156e+05,  1.42553150e+06, -5.60426688e+05,\n'
 '        -6.34802031e+04,  1.90938281e+05,  1.14692050e+06,\n'
 '        -3.61336469e+05,  1.33198475e+06, -6.94389875e+05,\n'
 '         8.44998500e+05, -1.07293525e+06, -1.01380569e+06,\n'
 '        -1.85908950e+06, -5.69684688e+05, -2.17096812e+05,\n'
 '        -3.26238781e+05,  5.13079000e+05,  6.99218438e+04,\n'
 '        -1.36276475e+06, -8.44513250e+05,  8.44919188e+05,\n'
 '         7.07255312e+05, -4.27323906e+04,  8.15192812e+05,\n'
 '        -1.28356925e+06, -4.47873375e+05,  1.10232925e+06,\n'
 '        -7.68868312e+05,  4.18404688e+03, -2.44912812e+05,\n'
 '         5.99673125e+05, -6.90482875e+05, -3.82437812e+04,\n'
 '         1.21970138e+06,  1.15174212e+06,  4.60501875e+05,\n'
 '         5.38406562e+05, -6.76974875e+05, -1.05822650e+06,\n'
 '         3.93021625e+05, -9.51489938e+05, -1.07183600e+06,\n'
 '         3.63408438e+05,  1.40432238e+06,  1.66076438e+05,\n'
 '         4.22085938e+05, -1.08382425e+06,  1.87954188e+05,\n'
 '         2.45114688e+05,  5.58825312e+05, -1.83544047e+05,\n'
 '        -1.27428400e+06,  4.97503125e+04,  1.48226212e+06,\n'
 '         4.10819938e+05, -4.42399375e+05, -2.76807375e+05,\n'
 '        -2.03747203e+05, -6.51542375e+05, -2.66540562e+05,\n'
 '         2.45684969e+05,  4.64409875e+05,  1.34526388e+06,\n'
 '         5.83270375e+05, -1.57814906e+05, -1.81924525e+06,\n'
 '         1.29706781e+05, -4.83552562e+05,  3.77764312e+05,\n'
 '        -1.31150238e+06,  7.50133375e+05, -8.00094562e+05,\n'
 '         1.06148475e+06,  5.69300312e+05, -1.94856344e+05,\n'
 '        -1.00056038e+06,  1.17877062e+06,  8.85850250e+05,\n'
 '         1.01120469e+04, -7.32568812e+05,  9.37023562e+05,\n'
 '        -1.07927719e+05,  1.44189375e+06, -4.14087094e+05,\n'
 '        -1.08917662e+06,  2.48513438e+04, -8.36540750e+05,\n'
 '         1.09754000e+06,  8.41880875e+05, -1.90624938e+05,\n'
 '        -1.06169275e+06,  5.46028375e+05, -1.53232844e+05,\n'
 '         9.87800875e+05, -5.50957812e+05, -1.02806519e+06,\n'
 '        -4.60584062e+05, -5.62579141e+04, -4.59554312e+05,\n'
 '        -2.65584812e+05, -4.08759938e+05,  1.25118800e+06,\n'
 '         8.00598250e+05,  3.12789219e+04,  3.32748625e+05,\n'
 '        -4.44839094e+05, -6.12972500e+05, -2.02557812e+04,\n'
 '        -5.55064812e+05, -2.27254531e+05, -8.06914438e+05,\n'
 '         1.13987150e+06, -2.66315375e+05, -9.79801312e+05,\n'
 '         3.39550594e+05, -7.41751625e+05,  4.28356281e+05,\n'
 '         3.15482000e+05,  1.57730062e+05, -4.34633125e+05,\n'
 '         1.53668500e+05,  3.97592406e+05, -1.14641725e+06,\n'
 '         5.46495125e+05, -3.38724375e+05,  8.74425250e+05,\n'
 '         3.74220500e+05, -2.76667719e+05,  4.95075000e+04,\n'
 '        -1.23988200e+06,  2.92672500e+05, -6.15210375e+05,\n'
 '         6.67221125e+05, -5.95986875e+05, -4.64796281e+05,\n'
 '         2.36648875e+05, -5.09253094e+05, -1.20676075e+06,\n'
 '         6.92091328e+04,  5.13398062e+05, -4.10803875e+05,\n'
 '         7.22483750e+04,  5.95588875e+05,  4.14885625e+04,\n'
 '        -8.07012969e+04, -2.59421594e+05,  1.15886250e+04,\n'
 '         3.61710844e+05,  3.73648125e+05, -9.96574312e+05,\n'
 '         8.18932312e+05, -3.04888125e+05,  3.10342000e+05,\n'
 '         1.50329938e+05, -4.79509156e+05, -2.40747234e+05,\n'
 '         1.14124625e+06,  1.94725812e+05, -1.02599044e+06,\n'
 '        -4.09564938e+05, -6.76601375e+05, -2.79455562e+05,\n'
 '         1.24756925e+06, -1.27259312e+05,  8.61506250e+05,\n'
 '        -8.81752188e+04,  1.63135609e+05,  9.46550812e+05,\n'
 '        -5.84444312e+05, -4.28809844e+05,  8.63969625e+05,\n'
 '        -8.31672125e+05, -9.29853062e+05, -1.32437550e+06,\n'
 '         1.90214531e+04,  4.59977938e+05, -1.79227812e+05,\n'
 '        -3.44729375e+05,  2.94532062e+05, -1.24907475e+06,\n'
 '        -1.17814562e+06,  2.56786531e+05, -5.66496250e+05,\n'
 '        -4.08298188e+05, -4.22574688e+05,  2.20337688e+05,\n'
 '         1.09149938e+06, -8.45635938e+04, -1.91336250e+05,\n'
 '         1.20382025e+06, -3.87907688e+05, -1.53910250e+06,\n'
 '        -4.71868719e+05, -1.14414969e+05,  8.32777562e+05,\n'
 '        -9.59736250e+05, -4.34931750e+05, -4.12947594e+05,\n'
 '        -8.28754000e+05, -3.90942750e+05, -1.63741422e+05,\n'
 '        -6.73699125e+05,  1.06855075e+06, -4.12945625e+05,\n'
 '        -3.07153625e+05, -1.15363075e+06, -4.41278906e+05,\n'
 '        -3.53253438e+05, -6.71317000e+05, -1.13348438e+06,\n'
 '         6.69981500e+05, -8.58745500e+05,  2.20881562e+05,\n'
 '        -3.93843656e+05, -8.28457375e+05, -7.59696750e+05,\n'
 '         1.02058688e+05,  5.12043188e+05,  1.00412788e+06,\n'
 '         1.37121475e+06,  3.31767531e+05, -7.09462625e+05,\n'
 '        -9.02593750e+04,  1.32889594e+05,  1.88653450e+06,\n'
 '        -3.14178625e+05, -3.06616031e+05, -5.22140125e+05,\n'
 '        -3.06992188e+05,  1.03154200e+06,  6.78339625e+05,\n'
 '         1.69369775e+06, -1.37741688e+05,  4.99520938e+05,\n'
 '        -4.53581594e+05, -6.42998938e+05, -4.52816750e+05,\n'
 '        -2.36449312e+05, -1.83153016e+05,  8.72880875e+05,\n'
 '         9.30844375e+04, -1.23279100e+06,  2.04984469e+05,\n'
 '         1.16691262e+06,  3.49838750e+05, -6.96265000e+04,\n'
 '         1.21305516e+05,  1.32645112e+06, -1.24044288e+06,\n'
 '         4.25157500e+05,  1.06820738e+06, -1.60351100e+06,\n'
 '         2.05121125e+06, -1.05241950e+06,  4.59159688e+04,\n'
 '         2.58303516e+05, -2.56964281e+05, -1.33040975e+06,\n'
 '        -3.51666500e+05,  6.25208625e+05,  5.64601750e+05,\n'
 '        -1.05485188e+06,  8.84847188e+05,  9.61739438e+05,\n'
 '         4.40990531e+05, -1.22086700e+06,  4.71484250e+05,\n'
 '         3.69601156e+05,  4.22577969e+04, -1.44490075e+06,\n'
 '        -1.05330138e+06, -2.08812062e+05,  1.31744075e+06,\n'
 '         5.90376688e+05,  8.78329438e+05,  3.73583375e+05,\n'
 '         2.72477188e+04, -8.00118250e+05, -6.90524750e+05,\n'
 '        -4.69897719e+05, -7.73902188e+05, -3.63094500e+05,\n'
 '        -7.92841625e+05,  1.13518688e+06, -5.27943750e+04,\n'
 '         5.77575500e+05, -6.60155438e+05, -2.36073406e+05,\n'
 '        -5.38913562e+05, -7.51834875e+05, -8.39180562e+05,\n'
 '        -1.80039000e+06,  2.08606562e+04,  8.08694625e+05,\n'
 '        -1.35469425e+06,  9.02789000e+05,  5.37103562e+05,\n'
 '         8.59559250e+05,  4.35956875e+05,  1.14670891e+05,\n'
 '        -2.79217812e+05, -1.27739425e+06,  5.03221438e+05,\n'
 '         3.66353531e+05, -3.57875625e+05, -5.49183750e+05,\n'
 '        -3.71414625e+05, -7.98061625e+05,  4.38588938e+05,\n'
 '         4.03977000e+05,  5.03846375e+05,  1.11932188e+06,\n'
 '         1.69267500e+06,  5.87950625e+04,  4.74760188e+05,\n'
 '        -1.06924738e+06, -1.21796656e+05,  8.64072250e+05,\n'
 '         7.13673562e+05,  6.75296562e+04,  6.15890812e+05,\n'
 '         5.47143750e+05,  5.86476250e+05, -3.28591750e+05,\n'
 '         5.20041250e+04, -1.71070594e+05, -1.22743125e+04,\n'
 '         9.08746312e+05, -7.78954125e+05, -7.14386125e+05,\n'
 '        -1.46790625e+06,  6.63083000e+05, -7.97277625e+05,\n'
 '         6.67906250e+03,  9.65839375e+05, -2.45271531e+05,\n'
 '         2.31650594e+05, -9.48583250e+05, -1.05211300e+06,\n'
 '        -1.39014750e+06,  1.16281850e+06,  4.94327969e+05,\n'
 '        -8.34587312e+05, -3.80052688e+05,  3.80594375e+05,\n'
 '        -4.35791031e+05, -4.22351875e+05,  3.25768719e+05,\n'
 '         4.19425875e+05, -5.88685938e+04,  2.35835500e+05,\n'
 '         2.97403969e+05, -3.35650156e+05, -1.02928769e+06,\n'
 '        -1.15046738e+06,  3.31935938e+05,  5.98128938e+05,\n'
 '         6.56639500e+05,  2.08709922e+04, -9.09552375e+05,\n'
 '        -2.82771031e+05, -1.98709375e+05, -1.74734375e+06,\n'
 '        -2.92807562e+05,  1.04618931e+06,  6.97988438e+04,\n'
 '         4.35201938e+05,  9.87442062e+05, -2.52071000e+05,\n'
 '        -2.75433531e+05,  5.23298750e+05,  7.17695938e+05,\n'
 '        -1.35814125e+05,  5.20211781e+05,  2.47903969e+05,\n'
 '        -4.92575656e+05,  7.65766000e+05, -2.46998219e+05,\n'
 '         5.23773750e+04,  1.06418125e+06, -1.95977000e+05,\n'
 '         3.67797562e+05, -1.10451438e+06,  1.05294188e+06,\n'
 '         4.43080859e+04,  1.95899094e+05, -1.21335000e+06,\n'
 '         1.29405200e+06,  2.82618875e+05,  3.72236781e+05,\n'
 '         6.70574688e+05,  1.08945325e+06,  2.69726500e+05,\n'
 '         6.40301438e+05, -2.17273594e+04,  2.71664969e+05,\n'
 '        -1.18732250e+06, -1.56442594e+05, -1.22360362e+06,\n'
 '        -4.85156125e+05, -1.56826016e+05, -4.69875812e+05,\n'
 '        -5.60742812e+05, -4.09520062e+05, -1.00227131e+06,\n'
 '        -8.17147188e+04, -2.44297750e+06,  2.56732172e+05,\n'
 '         3.75828000e+05, -8.23517812e+05, -4.80867500e+05,\n'
 '         6.14080875e+05,  6.15957625e+05, -5.08349250e+05,\n'
 '         1.51969950e+06,  3.00850125e+05,  6.23581641e+03,\n'
 '         3.15786062e+05,  7.64650812e+05, -3.84200531e+05,\n'
 '        -7.57085688e+05,  6.36177500e+05, -3.34696094e+05,\n'
 '         4.28587188e+05,  1.26660775e+06,  6.08005625e+04,\n'
 '        -1.97641844e+05,  2.02493578e+05,  8.07602688e+05,\n'
 '         1.76334031e+05,  1.34725500e+05, -5.31005000e+04,\n'
 '        -4.51921094e+04,  4.27973594e+05,  2.17870875e+05,\n'
 '         7.64659812e+05, -7.48747312e+05,  5.48158188e+05,\n'
 '         1.24265288e+06, -4.22633062e+05,  1.84894688e+04,\n'
 '        -5.41411125e+05, -2.53009609e+05, -4.10352031e+04,\n'
 '         1.80850312e+04, -5.91410500e+05,  1.29098688e+05,\n'
 '        -4.92465375e+05, -5.20580469e+05,  4.88563031e+05,\n'
 '         1.15846525e+06, -5.54959500e+05, -6.85656562e+04,\n'
 '         1.65450812e+05, -1.52287425e+06, -1.13834250e+06,\n'
 '         5.39541125e+05, -1.11064000e+05, -6.12474000e+05,\n'
 '        -1.07692675e+06, -9.41137812e+04,  1.72092469e+05,\n'
 '         3.51818281e+05, -7.39693359e+04,  8.59152812e+04,\n'
 '         1.08766312e+06, -7.39170875e+05,  1.04541078e+05,\n'
 '        -2.78133906e+05, -4.94260125e+05,  5.22344219e+05,\n'
 '        -1.62771000e+05,  6.25063312e+05, -8.79631812e+05,\n'
 '         5.73792125e+05,  1.40713538e+06,  1.33155875e+06,\n'
 '        -6.56212438e+05,  1.42966438e+05, -8.26743938e+05,\n'
 '         1.01465756e+06, -2.86034875e+05, -2.89285188e+05,\n'
 '        -5.80884938e+05,  1.80244844e+05, -1.73113438e+05,\n'
 '         6.42884875e+05, -1.15386888e+06,  3.80305688e+05,\n'
 '         6.79647750e+05,  1.11119612e+06, -6.60597375e+05,\n'
 '         2.26081641e+05, -2.67641875e+04,  1.24340962e+06,\n'
 '        -1.30513562e+06, -5.28751625e+05,  4.44902156e+05,\n'
 '        -2.16181062e+05,  7.47484500e+05, -1.51827025e+06,\n'
 '         4.83910000e+04, -1.37117850e+06, -1.85740625e+04,\n'
 '        -1.30848375e+05, -4.73267500e+05,  4.22776406e+04,\n'
 '        -9.50027344e+03,  3.01005438e+05, -1.32860550e+06,\n'
 '         2.16787250e+05,  5.15259781e+05, -1.04294706e+06,\n'
 '         4.47132750e+05,  5.46023438e+04,  7.95405375e+05,\n'
 '        -3.85302094e+05,  7.25966625e+05,  1.21270862e+06,\n'
 '         4.38793938e+05, -1.35166575e+06, -7.11898625e+05,\n'
 '        -2.82912219e+05, -5.52999125e+05,  2.10382844e+05,\n'
 '        -3.72630031e+05, -3.39244938e+05,  3.15277750e+05,\n'
 '        -6.36645188e+05,  9.70641750e+05, -6.52420500e+05,\n'
 '         4.96934969e+05,  3.27142469e+05,  4.49603031e+05,\n'
 '         7.75368000e+05,  3.73426625e+05, -1.39588738e+06,\n'
 '        -1.00294200e+06, -1.04044794e+06,  5.60557812e+05,\n'
 '        -2.65513188e+05, -2.10984500e+05,  6.15958875e+05,\n'
 '         2.37272156e+05, -7.48804812e+05,  9.59865312e+04,\n'
 '        -4.05410375e+05, -4.07375312e+05,  5.40428250e+05,\n'
 '        -8.35147125e+05, -4.76446875e+05, -1.85869812e+05,\n'
 '         2.04990453e+05,  3.29507906e+05, -5.82113375e+05,\n'
 '         1.07939775e+06,  1.01134906e+06,  8.41880000e+05,\n'
 '        -1.27667862e+06,  1.31184850e+06,  1.21556969e+05,\n'
 '        -4.70309406e+05,  2.09508734e+05, -1.02831525e+06,\n'
 '        -2.67738219e+05,  4.18934312e+05,  1.30501406e+05,\n'
 '         1.98869250e+05, -2.41840609e+05,  7.27893125e+04,\n'
 '        -3.66958844e+05, -1.73150359e+05,  1.27322712e+06,\n'
 '         7.61925781e+04,  1.04209875e+06, -1.07227725e+06,\n'
 '         1.59851250e+04, -4.16815719e+05,  4.18751656e+05,\n'
 '         4.44043688e+05,  1.22613025e+06,  3.24046750e+05,\n'
 '         4.04330125e+05, -8.19885469e+04, -1.39021475e+06,\n'
 '        -3.33330062e+05, -1.50724406e+05,  2.11985969e+05,\n'
 '        -3.57454281e+05,  3.25603125e+05, -4.33763375e+05,\n'
 '         1.71561250e+04, -5.48246312e+05,  8.16100000e+05,\n'
 '         3.19262906e+05,  5.07104094e+05, -5.79044375e+05,\n'
 '        -5.78019875e+05,  1.65062375e+05,  7.41283188e+05,\n'
 '         1.48557922e+05,  9.78035500e+05, -8.18685750e+05,\n'
 '        -1.38008422e+05,  2.79971906e+05,  3.73216812e+05,\n'
 '         5.46428750e+05, -1.54754750e+06,  1.48853562e+05,\n'
 '        -1.01477219e+05, -4.09526062e+05, -1.69474406e+05,\n'
 '        -7.16544125e+05,  6.27076062e+05, -1.17133388e+06,\n'
 '        -5.49981750e+05, -8.93410688e+05,  1.38531719e+05,\n'
 '        -4.45992219e+05, -4.78780875e+05, -5.55960625e+05,\n'
 '        -2.35304734e+05]])')
'test_inceptionnet | batch_shape is: [1]'
'test_inceptionnet | logits.shape is: ivy.Shape(1, 1000)'
'||'
'test_inceptionnet | device is: cpu'
'test_inceptionnet | fw is: torch'
'test_inceptionnet | load_weights is: True'
'InceptionV3 | build | layer 1/22 built'
'InceptionV3 | build | layer 2/22 built'
'layer 3/22 built'
'InceptionV3 | build | layer 4/22 built'
'InceptionV3 | build | layer 5/22 built'
'InceptionV3 | build | layer 6/22 built'
'InceptionV3 | build | layer 7/22 built'
'InceptionV3 | build | layer 8/22 built'
'InceptionV3 | build | layer 9/22 built'
'InceptionV3 | build | layer 10/22 built'
'InceptionV3 | build | layer 11/22 built'
'InceptionV3 | build | layer 12/22 built'
'InceptionV3 | build | layer 13/22 built'
'InceptionV3 | build | layer 14/22 built'
'InceptionV3 | build | layer 15/22 built'
'InceptionV3 | build | layer 17/22 built'
'InceptionV3 | build | layer 18/22 built'
'InceptionV3 | build | layer 19/22 built'
'InceptionV3 | build | layer 20/22 built'
'InceptionV3 | build | layer 21/22 built'
'InceptionV3 | build | layer 22/22 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/4 built'
'layer 2/4 built'
'layer 3/4 built'
'layer 4/4 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/6 built'
'layer 2/6 built'
'layer 3/6 built'
'layer 4/6 built'
'layer 5/6 built'
'layer 6/6 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'inceptionNet_v3 | building InceptionV3 model | done 1/3'
'inceptionNet_v3 | clearning pretrained weights | done 2/3'
'inceptionNet_v3 | loading pretrained weights | done 3/3'
'InceptionV3 | forward | input data_format is:NHWC | done 1/27'
'InceptionV3 | forward | data_format is going to be used is:NHWC | done 1/27'
'InceptionV3 | forward | input shape is:ivy.Shape(1, 224, 224, 3) | done 1/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 224, 224, 3) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 111, 111, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 111, 111, 32) | done 2/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 111, 111, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 32) | done 3/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 109, 109, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 64) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 64) | done 4/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 54, 54, 64) | done 5/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 54, 54, 80) | done 3/3'
'InceptionV3 | forward | is:ivy.Shape(1, 54, 54, 80) | done 6/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 80) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 52, 52, 192) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 52, 52, 192) | done 7/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 192) | done 8/27'
'input shape is:ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 32) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 32)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 25, 25, 256) | done 9/27'
'input shape is:ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 10/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 11/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 384) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 96) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 96)'
'one 20/20, output shape is:ivy.Shape(1, 12, 12, 288)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 12/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 12, 12, 768) | done 13/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 14/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 15/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 16/27'
'v3 16/27, output shape is:ivy.Shape(1, 12, 12, 768)'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 5, 5, 192)'
'one 7/20, output shape is:ivy.Shape(1, 5, 5, 768)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 1280) | done 17/27'
'input shape is:ivy.Shape(1, 5, 5, 1280)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 18/27'
'input shape is:ivy.Shape(1, 5, 5, 2048)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 19/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 20/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 5, 5) | done 21/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 1, 1) | done 22/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 27/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 24/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 25/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048) | done 26/27'
'InceptionV3 | forward | fc | done 27/27'
('test_inceptionnet | logits is: ivy.array([[ 3.99194717e-01,  1.12472796e+00, '
 '-3.86924684e-01,\n'
 '         5.07755399e-01, -6.67584777e-01,  4.17831615e-02,\n'
 '         2.20360923e+00,  5.32299757e-01,  5.25643229e-01,\n'
 '        -3.43718672e+00, -8.78167212e-01, -5.26246905e-01,\n'
 '         6.66786671e-01,  1.18269825e+00,  2.06308770e+00,\n'
 '        -9.14428458e-02, -1.53029692e+00, -6.20979250e-01,\n'
 '        -7.65539288e-01,  1.49169421e+00,  2.39348292e+00,\n'
 '        -2.16348648e+00,  1.42407548e+00, -8.27352762e-01,\n'
 '        -6.27031922e-02, -1.00698006e+00,  1.14109027e+00,\n'
 '        -6.99417114e-01, -6.09149993e-01,  1.35234809e+00,\n'
 '         5.46400368e-01, -7.50954002e-02,  3.26089144e-01,\n'
 '         5.22011161e-01,  1.11167777e+00, -7.81460047e-01,\n'
 '         2.00732446e+00, -1.29401469e+00, -5.82623780e-01,\n'
 '         2.03846335e+00,  4.28145826e-01,  1.95507669e+00,\n'
 '         4.50430811e-02,  1.74981868e+00,  7.67034531e-01,\n'
 '         5.70617020e-02, -5.72136939e-02,  2.00869155e+00,\n'
 '        -1.11139834e+00,  2.63595641e-01, -2.39083320e-01,\n'
 '         1.48954153e+00,  8.01196337e-01, -2.49004889e+00,\n'
 '        -1.31601989e+00,  8.40728402e-01, -2.65069127e+00,\n'
 '         5.89192808e-02, -4.80122864e-01, -1.46158779e+00,\n'
 '        -1.63044178e+00,  8.29427421e-01, -8.79658997e-01,\n'
 '        -1.15161407e+00, -7.89258063e-01, -7.37747848e-02,\n'
 '         1.91365629e-01,  9.65971947e-01,  8.05033684e-01,\n'
 '         3.25348079e-01, -2.00076914e+00,  7.99715280e-01,\n'
 '        -1.51377797e-01, -2.19312638e-01,  4.72958744e-01,\n'
 '        -5.06572008e-01,  1.86364234e-01,  1.36075354e+00,\n'
 '        -2.88489163e-01,  2.88486290e+00, -3.96323323e-01,\n'
 '         7.24481702e-01,  7.13879228e-01,  9.99794424e-01,\n'
 '         2.36413097e+00, -7.93268740e-01, -1.38860822e-01,\n'
 '        -2.15990210e+00, -9.33349848e-01,  2.90644914e-01,\n'
 '         9.09431338e-01,  1.24100137e+00, -1.53904200e-01,\n'
 '         2.16656685e-01, -6.19831741e-01, -7.69777000e-01,\n'
 '         1.16867149e+00, -4.81905699e-01, -2.69202113e+00,\n'
 '         8.85282874e-01,  2.44947720e+00,  4.06345159e-01,\n'
 '        -2.26245737e+00, -1.01176107e+00,  1.38920176e+00,\n'
 '        -1.75199950e+00, -4.10432905e-01,  1.82389772e+00,\n'
 '         1.97169554e+00,  1.22886884e+00, -1.09246647e+00,\n'
 '        -1.13473117e+00,  2.33957267e+00,  3.93412399e+00,\n'
 '         6.69954181e-01, -1.86702776e+00, -1.62964731e-01,\n'
 '         2.24705792e+00, -2.25562000e+00,  3.73882577e-02,\n'
 '        -1.09684825e+00, -1.92869556e+00,  3.30311447e-01,\n'
 '         1.25332677e+00, -6.42946422e-01,  1.21643663e+00,\n'
 '         3.96111399e-01, -1.75953835e-01,  7.69932151e-01,\n'
 '         1.34868300e+00,  1.07025266e+00,  6.07690573e-01,\n'
 '         1.98384118e+00, -1.19870579e+00, -2.54322648e-01,\n'
 '         5.80758333e-01,  1.58202100e+00,  9.72016454e-01,\n'
 '        -1.73302388e+00, -2.83051682e+00, -9.35571492e-02,\n'
 '         5.89056373e-01, -2.17069292e+00, -1.98262393e-01,\n'
 '         2.32679868e+00, -4.58304793e-01, -4.49219763e-01,\n'
 '        -1.52594626e-01,  1.07931256e+00, -6.60153985e-01,\n'
 '         5.26266098e-01,  1.16596371e-01,  3.07129550e+00,\n'
 '        -1.14763451e+00,  6.97894156e-01, -4.20825148e+00,\n'
 '        -3.50779712e-01,  5.78330421e+00, -1.65928543e+00,\n'
 '        -1.44609559e+00,  1.11168957e+00, -1.74596953e+00,\n'
 '        -1.42729783e+00, -3.95741135e-01, -2.19799280e-01,\n'
 '        -7.55975723e-01,  4.86185402e-01,  5.39671659e-01,\n'
 '        -1.53870881e+00,  3.17766190e+00,  1.73906374e+00,\n'
 '        -8.39239478e-01, -2.98156500e-01,  2.23922324e+00,\n'
 '         2.34768212e-01, -2.37299979e-01, -9.27668154e-01,\n'
 '        -3.16413492e-01,  2.80024946e-01, -1.34339213e+00,\n'
 '        -1.38026238e+00, -1.34395629e-01, -7.99644411e-01,\n'
 '        -7.40096986e-01, -1.11189686e-01, -2.26523280e-02,\n'
 '         2.32973480e+00, -1.54644501e+00, -6.35766864e-01,\n'
 '        -1.70108068e+00, -8.09894562e-01, -1.99690604e+00,\n'
 '         1.39615870e+00, -1.45760059e-01, -3.24271822e+00,\n'
 '         3.92972231e-01, -2.29105616e+00,  4.53617543e-01,\n'
 '        -8.08655739e-01,  2.04246283e+00, -1.61813557e-01,\n'
 '        -3.31038785e+00, -5.25906265e-01,  5.96769953e+00,\n'
 '        -2.56143546e+00, -3.28940892e+00, -2.96876526e+00,\n'
 '         1.70534360e+00, -1.15983295e+00, -1.25625455e+00,\n'
 '        -1.17678750e+00, -1.50510240e+00, -7.99039960e-01,\n'
 '         1.08792521e-01,  1.06977212e+00,  1.47274458e+00,\n'
 '         3.24558473e+00,  5.20790100e-01,  1.53473973e+00,\n'
 '        -3.42273831e+00, -1.45426142e+00, -1.36650550e+00,\n'
 '         3.92336106e+00,  2.25863743e+00,  5.57695770e+00,\n'
 '        -1.46907091e+00,  2.34369945e+00, -2.76568627e+00,\n'
 '         2.19495153e+00,  2.09741425e+00,  3.72971129e+00,\n'
 '         3.94780707e+00,  3.86452150e+00,  4.61596638e-01,\n'
 '        -7.58212030e-01,  3.24586898e-01, -7.23994374e-02,\n'
 '        -1.46726430e+00, -6.59558535e-01, -7.33700395e-01,\n'
 '         1.04090047e+00,  9.11337852e-01,  1.39636135e+00,\n'
 '        -1.61463797e-01, -1.04113328e+00, -1.59710443e+00,\n'
 '        -1.05734348e+00,  2.05857277e+00,  8.22736740e+00,\n'
 '         5.59253931e+00,  4.29449177e+00, -2.01366067e-01,\n'
 '        -1.34279597e+00, -1.46403670e+00, -7.11480677e-01,\n'
 '        -1.45852566e-02,  9.66316342e-01,  7.66329861e+00,\n'
 '         1.89309444e+01,  6.66500425e+00,  5.50117254e+00,\n'
 '         5.89488745e+00, -1.19334900e+00, -1.34552074e+00,\n'
 '        -6.96462274e-01, -5.87962449e-01, -1.31703901e+00,\n'
 '         1.52715814e+00, -1.87820816e+00,  4.43073368e+00,\n'
 '         1.35497627e+01, -1.57287109e+00,  1.80838752e+00,\n'
 '        -3.50626409e-01,  1.34409142e+00, -2.65074301e+00,\n'
 '        -1.80137456e-02,  2.17955518e+00, -3.93917918e-01,\n'
 '         1.26329441e+01,  3.50529409e+00,  1.29754215e-01,\n'
 '        -7.82049835e-01,  4.19694138e+00, -6.01297378e-01,\n'
 '        -8.27662647e-03,  8.83098543e-02,  3.83521223e+00,\n'
 '         1.08808637e+00,  1.09210646e+00, -1.12881017e+00,\n'
 '         4.24796253e-01,  1.64197207e+00, -1.74892438e+00,\n'
 '         1.78724736e-01, -7.96038866e-01,  2.75634575e+00,\n'
 '         7.81187117e-02, -1.44253910e+00, -2.25541735e+00,\n'
 '        -4.86592859e-01, -1.73844731e+00,  8.57764244e-01,\n'
 '        -5.16201258e-02,  5.20591736e-01, -3.55847806e-01,\n'
 '         2.48378247e-01,  9.97970760e-01,  1.75757360e+00,\n'
 '        -2.99299061e-02, -7.07619131e-01, -1.21552956e+00,\n'
 '        -1.55969441e-01, -9.82743204e-01,  4.39837128e-02,\n'
 '         1.01898503e+00, -4.56536472e-01,  8.31762612e-01,\n'
 '         1.98854577e+00,  1.60316968e+00,  6.65288567e-01,\n'
 '        -1.16787553e+00,  1.53781563e-01,  7.16675520e-01,\n'
 '        -2.69312096e+00,  4.11620945e-01,  2.43572378e+00,\n'
 '         1.82378626e+00,  2.15348721e+00, -2.47197077e-01,\n'
 '        -9.89165664e-01,  3.32010484e+00,  3.23349905e+00,\n'
 '        -5.39809585e-01, -2.67366052e-01, -5.89250326e-02,\n'
 '        -2.09111309e+00, -2.64323056e-01,  1.62429142e+00,\n'
 '        -1.15036511e+00, -2.12917075e-01,  1.42049348e+00,\n'
 '         1.03436375e+00, -5.58489382e-01, -1.27014399e+00,\n'
 '         7.25337625e-01,  3.48474920e-01,  6.31500125e-01,\n'
 '         1.88126802e+00,  2.90836006e-01, -2.33927101e-01,\n'
 '        -1.27545381e+00, -1.16216755e+00,  3.33901942e-01,\n'
 '         1.17547482e-01,  2.69193554e+00,  1.66612613e+00,\n'
 '         3.77298355e-01,  8.56664240e-01,  3.49088073e-01,\n'
 '        -9.00041461e-01, -4.41214860e-01, -1.84502757e+00,\n'
 '         4.46848750e-01, -2.30904198e+00, -3.57019281e+00,\n'
 '        -4.01716375e+00, -1.66781342e+00, -2.46899292e-01,\n'
 '        -2.68052244e+00, -8.18566322e-01, -1.11890995e+00,\n'
 '        -2.27008724e+00, -6.85121000e-01,  1.04934245e-01,\n'
 '        -1.63437998e+00, -3.12921822e-01,  6.08157039e-01,\n'
 '        -3.55216443e-01, -1.28735375e+00, -1.12756133e+00,\n'
 '        -1.22105980e+00, -1.32392931e+00, -8.08261752e-01,\n'
 '        -9.04587388e-01, -1.18232489e+00, -2.71957636e+00,\n'
 '        -9.10221636e-01, -1.64849758e+00, -1.42150796e+00,\n'
 '         5.66072881e-01, -1.13745868e+00,  1.42913818e+00,\n'
 '         1.65361524e+00,  1.07115239e-01,  5.35790682e-01,\n'
 '         2.59916830e+00,  3.95085454e-01,  1.90065324e+00,\n'
 '         3.20504451e+00, -2.83368915e-01, -6.29150152e-01,\n'
 '         3.23912191e+00, -1.84098864e+00,  8.82429302e-01,\n'
 '        -1.08837485e+00,  1.67633861e-01, -5.78085542e-01,\n'
 '        -2.54720718e-01,  2.56223306e-02, -9.87867594e-01,\n'
 '        -9.89117265e-01, -3.37585497e+00, -2.45485353e+00,\n'
 '        -1.43504763e+00, -1.03650212e+00, -4.14963216e-01,\n'
 '         7.96054542e-01, -2.01538706e+00, -6.72183514e-01,\n'
 '         3.19859147e-01, -1.98689437e+00, -1.64154816e+00,\n'
 '        -4.98133182e-01,  1.23653150e+00,  1.54037428e+00,\n'
 '         1.44073057e+00,  3.20137531e-01, -1.32019544e+00,\n'
 '        -6.13166988e-01, -2.64603347e-01,  8.38977516e-01,\n'
 '         7.64144898e-01,  1.13885200e+00, -1.50282764e+00,\n'
 '         7.34387934e-01, -9.88497019e-01, -8.47945809e-01,\n'
 '        -1.14503872e+00,  5.80372453e-01,  2.60250956e-01,\n'
 '        -1.60690129e+00, -2.92730570e-01, -2.15546083e+00,\n'
 '        -1.72298372e+00,  2.04480195e+00,  4.85022068e-02,\n'
 '        -1.26518488e+00,  8.27661335e-01, -3.33926618e-01,\n'
 '        -1.06132472e+00,  1.45564580e+00,  7.48187900e-01,\n'
 '        -1.88249552e+00, -6.76792383e-01,  1.11957598e+00,\n'
 '        -1.91809386e-01, -6.18566871e-01,  1.05249608e+00,\n'
 '         1.07057559e+00,  6.79003358e-01, -8.70325208e-01,\n'
 '        -9.87555504e-01,  1.35127082e-02,  9.70750034e-01,\n'
 '        -1.93623292e+00, -6.72974348e-01, -3.91480848e-02,\n'
 '         5.07570356e-02, -8.28417838e-02,  1.53233635e+00,\n'
 '         7.29637623e-01, -2.91912734e-01,  9.92004454e-01,\n'
 '        -1.40235519e+00, -3.88204426e-01,  4.17679310e+00,\n'
 '        -1.32876599e+00,  9.13387716e-01,  2.02587307e-01,\n'
 '         9.35728550e-02, -2.46622753e+00, -4.87989187e+00,\n'
 '         1.17997467e+00,  1.56146973e-01, -1.87363386e+00,\n'
 '        -8.76357734e-01,  9.15744185e-01,  2.87987143e-02,\n'
 '         1.30354211e-01,  5.62246919e-01,  8.45737755e-01,\n'
 '        -1.55170989e+00, -5.49912453e-01, -9.86117840e-01,\n'
 '         1.40727401e+00, -1.45653117e+00, -2.57843518e+00,\n'
 '         8.13443840e-01, -4.87201840e-01, -1.69195175e+00,\n'
 '         2.34684420e+00, -7.04361558e-01, -2.00008297e+00,\n'
 '        -2.43318796e+00,  8.15103531e-01, -6.48385763e-01,\n'
 '        -7.60762572e-01,  6.61556899e-01,  1.46443152e+00,\n'
 '        -1.60569692e+00,  1.24774706e+00, -4.26017433e-01,\n'
 '        -1.29790914e+00, -1.41687512e+00, -9.94484276e-02,\n'
 '        -9.26617384e-01, -1.64475691e+00, -2.90392184e+00,\n'
 '        -2.30851340e+00, -2.55707830e-01, -6.99563563e-01,\n'
 '         1.01424873e+00, -2.52661037e+00, -1.50558591e-01,\n'
 '        -1.06651759e+00, -2.31320047e+00, -3.24718809e+00,\n'
 '         4.74527657e-01, -6.97259188e-01, -1.46277285e+00,\n'
 '         9.66442466e-01,  4.01413024e-01, -2.05473280e+00,\n'
 '        -2.12068701e+00, -1.60401797e+00, -4.52516127e+00,\n'
 '         2.81189251e+00,  1.49773091e-01, -2.92934394e+00,\n'
 '        -1.03737259e+00, -1.43968606e+00, -8.84927273e-01,\n'
 '         6.59772873e-01, -2.40578026e-01, -5.55664420e-01,\n'
 '         2.33183241e+00, -2.02469274e-01, -1.20539844e+00,\n'
 '         1.58903384e+00, -1.87862551e+00,  1.49559021e+00,\n'
 '        -4.24622744e-01, -3.89079046e+00, -7.25733519e-01,\n'
 '        -1.01371896e+00,  3.19130242e-01,  9.38105285e-01,\n'
 '        -1.15673709e+00,  2.67493039e-01, -9.09536719e-01,\n'
 '         6.28256619e-01,  4.06886101e+00,  5.69188714e-01,\n'
 '         2.04260135e+00, -2.46239948e+00,  9.54500318e-01,\n'
 '        -1.15538812e+00,  1.60430658e+00, -1.18608862e-01,\n'
 '         4.18284357e-01, -3.99247557e-01,  1.09841835e+00,\n'
 '         7.83191502e-01,  6.60444319e-01, -1.45527363e+00,\n'
 '         5.93824267e-01, -1.28732037e+00,  3.50843573e+00,\n'
 '        -7.54025817e-01,  7.49724627e-01,  1.44577473e-01,\n'
 '         1.64027190e+00,  2.43013188e-01,  4.78262603e-01,\n'
 '         7.45532572e-01, -2.26793623e+00, -1.33514523e+00,\n'
 '        -3.66418362e-02, -4.19429630e-01,  2.58898199e-01,\n'
 '        -1.74802554e+00,  1.83981347e+00, -1.74849033e+00,\n'
 '         1.18815136e+00, -3.96815121e-01,  4.34451252e-01,\n'
 '         9.64921176e-01, -1.08151436e+00, -2.50586867e-01,\n'
 '        -1.99311697e+00, -5.55125773e-01, -3.14405680e+00,\n'
 '         8.30348909e-01,  2.66555071e+00, -7.59708643e-01,\n'
 '         4.05360699e+00,  6.87000751e-01, -7.02171087e-01,\n'
 '        -7.03513444e-01, -9.01357412e-01,  1.22746801e+00,\n'
 '        -6.03438735e-01, -6.05205417e-01,  1.54605198e+00,\n'
 '        -2.83612633e+00, -6.58821881e-01, -5.86104274e-01,\n'
 '        -7.92353332e-01, -1.29624760e+00, -1.95783293e+00,\n'
 '         6.47050083e-01,  1.24858355e+00, -6.29695296e-01,\n'
 '         3.91872138e-01, -3.89444172e-01, -2.37292242e+00,\n'
 '        -9.29777145e-01, -1.99660569e-01,  1.09943008e+00,\n'
 '        -1.79212213e+00, -9.37727213e-01, -2.18141627e+00,\n'
 '        -3.70649427e-01, -1.43561208e+00, -1.78091502e+00,\n'
 '        -1.32721925e+00, -1.37409997e+00, -2.32093826e-01,\n'
 '         4.07428175e-01, -5.05997896e-01, -1.65132189e+00,\n'
 '        -1.43886256e+00, -2.96308398e-01, -1.86407590e+00,\n'
 '         9.46084797e-01,  2.76369482e-01, -3.82978618e-01,\n'
 '         7.07843184e-01,  1.74773216e+00, -3.10523367e+00,\n'
 '         2.98792064e-01,  8.10278833e-01, -8.27108383e-01,\n'
 '        -4.39988047e-01, -3.25054002e+00,  2.65032768e-01,\n'
 '        -3.04788314e-02,  8.53764564e-02, -2.46899366e+00,\n'
 '        -8.42979610e-01,  4.15643543e-01, -7.84664631e-01,\n'
 '        -2.61472940e+00, -2.81360745e-03, -6.89652085e-01,\n'
 '         1.24149227e+00,  9.32420850e-01, -1.96764743e+00,\n'
 '         1.91111803e+00, -3.93851399e-02, -5.88071406e-01,\n'
 '         2.69009304e+00, -2.15347028e+00, -2.10678792e+00,\n'
 '        -2.18061954e-01,  1.32988191e+00, -9.20084357e-01,\n'
 '         8.76938552e-03,  1.04572666e+00, -1.15350103e+00,\n'
 '        -1.42699993e+00,  3.47113252e+00, -1.14894295e+00,\n'
 '        -9.43872690e-01, -6.00828350e-01, -1.34755421e+00,\n'
 '         2.26274267e-01, -1.94157577e+00,  7.52190769e-01,\n'
 '         2.94923782e-02,  1.71176016e-01, -1.12043154e+00,\n'
 '        -4.02604103e+00, -1.07689118e+00,  1.65766513e+00,\n'
 '        -9.64789629e-01,  4.27964449e-01, -1.76215559e-01,\n'
 '         5.64802170e-01, -1.16173851e+00,  3.06489229e-01,\n'
 '        -3.09135962e+00,  4.52888131e-01, -2.54679656e+00,\n'
 '        -3.24743843e+00,  9.79364038e-01,  5.77631414e-01,\n'
 '        -5.14570713e-01, -1.51461577e+00, -2.11494178e-01,\n'
 '         1.42964304e+00, -7.35880732e-01, -2.73521137e+00,\n'
 '         7.12543964e-01, -8.13809037e-01, -1.81746435e+00,\n'
 '        -1.75735235e-01, -5.60186058e-02,  5.03572047e-01,\n'
 '        -3.89558226e-01, -1.75987721e+00, -3.99039298e-01,\n'
 '         2.42843300e-01,  1.98323786e+00, -2.87962437e-01,\n'
 '        -2.22177982e-01,  5.24462163e-01,  3.26194972e-01,\n'
 '        -3.02008569e-01, -2.19819784e-01, -7.77101517e-03,\n'
 '        -1.36700857e+00, -4.38680589e-01, -7.85955191e-01,\n'
 '        -9.83533144e-01, -1.59622061e+00, -2.06407881e+00,\n'
 '         1.04457915e+00, -1.01193964e+00, -1.54028153e+00,\n'
 '         1.48260593e+00, -1.85807919e+00, -1.79998529e+00,\n'
 '         5.75649679e-01, -1.96747804e+00,  3.34298181e+00,\n'
 '        -1.21091270e+00, -1.75199366e+00, -4.67525959e-01,\n'
 '        -1.25290513e+00, -1.93454456e+00,  3.97266805e-01,\n'
 '        -1.84931683e+00, -2.89629054e+00, -1.23647518e-01,\n'
 '         4.63819325e-01,  8.11598897e-01,  3.32029009e+00,\n'
 '         1.45843983e-01, -1.57200742e+00, -1.48855805e+00,\n'
 '         5.83273351e-01,  2.48520660e+00, -1.44395959e+00,\n'
 '        -6.85099840e-01, -7.98137307e-01,  4.35840040e-01,\n'
 '        -1.24898887e+00,  1.01381075e+00, -1.33151412e+00,\n'
 '        -1.49910963e+00, -4.19847101e-01, -6.17185354e-01,\n'
 '        -1.60075259e+00, -6.61929488e-01, -4.31843787e-01,\n'
 '        -4.86796320e-01, -5.77597618e-01,  2.54690021e-01,\n'
 '         1.00684690e+00, -1.01336086e+00,  1.44508040e+00,\n'
 '         1.49174249e+00, -2.94837904e+00, -2.78417396e+00,\n'
 '        -7.98293352e-01,  1.18688607e+00,  2.39265487e-01,\n'
 '        -1.73037648e-01, -6.21082544e-01,  9.74988818e-01,\n'
 '         3.61906320e-01,  2.29510093e+00,  3.38717252e-02,\n'
 '        -1.63527858e+00,  7.15271652e-01, -1.46436894e+00,\n'
 '         6.74073041e-01,  5.72395325e-01,  1.59146142e+00,\n'
 '         7.48319745e-01,  1.00580478e+00,  1.39205337e+00,\n'
 '        -2.10669398e+00, -1.95054889e+00, -4.22325849e+00,\n'
 '        -2.47774172e+00, -4.53653336e-01, -5.52256644e-01,\n'
 '         7.37360120e-01, -5.66704512e-01,  7.93039560e-01,\n'
 '        -1.06880724e+00, -9.36889887e-01,  2.11169100e+00,\n'
 '         9.20052528e-01, -1.72285521e+00, -2.57525921e+00,\n'
 '         6.16695881e-01, -5.46472848e-01, -2.08516478e+00,\n'
 '         1.00273180e+00, -4.79660213e-01, -5.84343970e-01,\n'
 '         1.07621610e-01,  9.44807470e-01, -2.26595908e-01,\n'
 '         9.62010741e-01, -1.59798837e+00, -1.32222950e+00,\n'
 '         5.16148984e-01,  1.10047269e+00, -4.15021062e-01,\n'
 '        -1.73093951e+00, -2.77935862e-02, -4.20544148e-01,\n'
 '        -2.01048326e+00, -1.03816915e+00, -2.04842877e+00,\n'
 '        -1.36201239e+00,  1.40373588e-01,  7.72430181e-01,\n'
 '         1.42755139e+00,  1.99172902e+00, -1.57364607e+00,\n'
 '        -6.64306045e-01, -3.23334479e+00, -1.54305255e+00,\n'
 '         9.54632759e-02,  2.24973559e-01, -6.72796965e-01,\n'
 '         2.39278078e+00,  1.60674065e-01,  1.20781326e+00,\n'
 '        -7.92308629e-01, -7.92236447e-01,  3.76280069e+00,\n'
 '         1.84357572e+00,  1.62023342e+00, -2.62548774e-02,\n'
 '         6.58383250e-01, -1.12564969e+00,  1.39676881e+00,\n'
 '        -3.95357728e+00, -1.08135760e+00, -3.46701145e-01,\n'
 '         2.01120186e+00, -2.26551819e+00, -1.12720573e+00,\n'
 '         6.41678631e-01, -8.70305359e-01,  1.75221056e-01,\n'
 '        -1.29769230e+00, -1.05540490e+00, -1.50970435e+00,\n'
 '        -8.48785341e-01, -3.38844466e+00,  2.59265661e+00,\n'
 '        -1.56434393e+00, -7.72608340e-01, -7.12442636e-01,\n'
 '         6.07123554e-01, -1.01318574e+00,  7.42535174e-01,\n'
 '        -8.13438714e-01,  9.18070793e-01,  2.56398964e+00,\n'
 '         6.15506589e-01, -5.05207300e-01, -7.45526552e-01,\n'
 '         4.53904927e-01,  9.52292681e-01,  1.13181800e-01,\n'
 '        -6.97746277e-01, -1.42862260e+00,  2.08163357e+00,\n'
 '        -1.71587420e+00,  1.49945450e+00,  1.21258624e-01,\n'
 '        -4.59343940e-01, -2.45023918e+00, -1.31498087e+00,\n'
 '        -1.91809022e+00,  3.87394011e-01, -1.65441632e+00,\n'
 '        -1.81028390e+00,  1.12726080e+00,  1.43948650e+00,\n'
 '        -8.45555961e-01, -2.98783809e-01, -1.75093412e-01,\n'
 '        -8.65084529e-01,  1.16892326e+00, -8.36971849e-02,\n'
 '         1.66961193e+00,  2.52453566e-01, -1.86436653e+00,\n'
 '        -7.13765204e-01, -1.14169490e+00,  7.71234393e-01,\n'
 '         1.72791624e+00,  2.38598132e+00,  2.78611779e-01,\n'
 '        -4.89721954e-01, -2.67864227e-01, -1.17430961e+00,\n'
 '        -1.68884432e+00,  1.68192363e+00, -4.53003138e-01,\n'
 '         1.60623503e+00, -1.11938930e+00, -9.61240113e-01,\n'
 '        -2.21888042e+00, -8.14697981e-01, -2.83068478e-01,\n'
 '        -1.20553184e+00, -2.86728859e-01, -5.52074134e-01,\n'
 '         6.33736491e-01, -1.46607086e-02,  2.21849108e+00,\n'
 '         2.64310813e+00, -2.25653529e-01,  2.74320149e+00,\n'
 '         1.70633495e+00,  1.09817123e+00, -4.13713634e-01,\n'
 '         1.76112258e+00,  3.06265026e-01,  2.58292937e+00,\n'
 '         2.03036523e+00,  3.19428468e+00,  2.87019634e+00,\n'
 '         2.43743277e+00,  1.30018377e+00,  3.97718763e+00,\n'
 '         2.39863372e+00,  1.30599129e+00, -1.16825676e+00,\n'
 '        -3.98928523e-01, -3.82540673e-02,  2.24508137e-01,\n'
 '        -2.02522111e+00, -4.37061161e-01, -1.14114597e-01,\n'
 '         1.14740944e+00, -9.47270334e-01, -1.90353763e+00,\n'
 '        -1.98162317e+00, -4.78415012e-01,  9.05740500e-01,\n'
 '         1.01776397e+00, -1.42751885e+00, -1.32403910e-01,\n'
 '         2.18151212e-01, -8.92395973e-01,  1.06790936e+00,\n'
 '        -4.29387271e-01,  6.44463301e-02, -9.03853595e-01,\n'
 '        -2.35327363e+00,  1.17793119e+00,  1.94297528e+00,\n'
 '        -8.37886035e-01, -1.66428351e+00,  1.80165720e+00,\n'
 '         1.45704484e+00,  2.53265691e+00,  1.14574301e+00,\n'
 '         1.21812427e+00, -3.76550108e-01, -5.65784991e-01,\n'
 '        -1.19194853e+00, -1.31238329e+00,  4.17166442e-01,\n'
 '        -5.69449782e-01, -2.37755835e-01, -2.84317225e-01,\n'
 '         2.12302759e-01]])')
'test_inceptionnet | batch_shape is: [1]'
'test_inceptionnet | logits.shape is: ivy.Shape(1, 1000)'
'||'
'test_inceptionnet | indices_test | true_indices is: [258 270 279]'
'test_inceptionnet | indices_test | calc_indices is: [258 270 279]'
'test_inceptionnet | device is: cpu'
'test_inceptionnet | fw is: torch'
'test_inceptionnet | load_weights is: False'
'InceptionV3 | build | layer 1/22 built'
'InceptionV3 | build | layer 2/22 built'
'layer 3/22 built'
'InceptionV3 | build | layer 4/22 built'
'InceptionV3 | build | layer 5/22 built'
'InceptionV3 | build | layer 6/22 built'
'InceptionV3 | build | layer 7/22 built'
'InceptionV3 | build | layer 8/22 built'
'InceptionV3 | build | layer 9/22 built'
'InceptionV3 | build | layer 10/22 built'
'InceptionV3 | build | layer 11/22 built'
'InceptionV3 | build | layer 12/22 built'
'InceptionV3 | build | layer 13/22 built'
'InceptionV3 | build | layer 14/22 built'
'InceptionV3 | build | layer 15/22 built'
'InceptionV3 | build | layer 17/22 built'
'InceptionV3 | build | layer 18/22 built'
'InceptionV3 | build | layer 19/22 built'
'InceptionV3 | build | layer 20/22 built'
'InceptionV3 | build | layer 21/22 built'
'InceptionV3 | build | layer 22/22 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/4 built'
'layer 2/4 built'
'layer 3/4 built'
'layer 4/4 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/6 built'
'layer 2/6 built'
'layer 3/6 built'
'layer 4/6 built'
'layer 5/6 built'
'layer 6/6 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'inceptionNet_v3 | building InceptionV3 model | done 1/3'
'InceptionV3 | forward | input data_format is:NCHW | done 1/27'
'InceptionV3 | forward | data_format is going to be used is:NCHW | done 1/27'
'InceptionV3 | forward | input shape is:ivy.Shape(1, 224, 224, 3) | done 1/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 224, 224, 3) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 111, 111, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 111, 111, 32) | done 2/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 111, 111, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 32) | done 3/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 109, 109, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 64) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 64) | done 4/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 54, 54, 64) | done 5/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 54, 54, 80) | done 3/3'
'InceptionV3 | forward | is:ivy.Shape(1, 54, 54, 80) | done 6/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 80) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 52, 52, 192) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 52, 52, 192) | done 7/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 192) | done 8/27'
'input shape is:ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 32) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 32)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 25, 25, 256) | done 9/27'
'input shape is:ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 10/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 11/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 384) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 96) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 96)'
'one 20/20, output shape is:ivy.Shape(1, 12, 12, 288)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 12/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 12, 12, 768) | done 13/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 14/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 15/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 16/27'
'v3 16/27, output shape is:ivy.Shape(1, 12, 12, 768)'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 5, 5, 192)'
'one 7/20, output shape is:ivy.Shape(1, 5, 5, 768)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 1280) | done 17/27'
'input shape is:ivy.Shape(1, 5, 5, 1280)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 18/27'
'input shape is:ivy.Shape(1, 5, 5, 2048)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 19/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 20/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 5, 5) | done 21/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 1, 1) | done 22/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 27/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 24/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 25/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048) | done 26/27'
'InceptionV3 | forward | fc | done 27/27'
('test_inceptionnet | logits is: ivy.array([[ 8.38310375e+05,  '
 '6.39554188e+05,  2.25706250e+03,\n'
 '        -1.11346225e+06,  2.07503344e+05, -1.00446938e+06,\n'
 '         3.51189531e+05,  7.82090625e+04, -4.52122438e+05,\n'
 '         4.59470000e+05,  4.06388812e+05,  1.05127438e+05,\n'
 '        -2.27269625e+05,  1.31606862e+06,  1.73145625e+05,\n'
 '         1.11821984e+05,  1.73279688e+04,  2.42474391e+05,\n'
 '        -6.32441875e+05,  7.98579938e+05, -1.52860516e+05,\n'
 '         1.07515412e+06, -3.42897594e+05, -2.36150125e+05,\n'
 '         6.14225125e+05, -5.67761125e+05,  1.52213938e+05,\n'
 '        -5.14663625e+05, -2.36508078e+05,  1.61446844e+05,\n'
 '         6.52302125e+05,  1.85417500e+05, -7.77656250e+05,\n'
 '         8.31541125e+05,  1.65060656e+05,  1.42514078e+05,\n'
 '        -1.40519250e+05,  7.69848562e+05,  9.48801000e+05,\n'
 '        -5.93934688e+04, -3.25971125e+05, -7.57977875e+05,\n'
 '         1.12088438e+04, -2.89085375e+05, -7.51225000e+05,\n'
 '        -2.65254125e+05,  1.09759250e+05, -1.06079275e+06,\n'
 '        -5.08371375e+05, -5.96344688e+04,  3.34375969e+05,\n'
 '        -1.75070875e+05, -2.50699672e+05, -7.14428875e+05,\n'
 '        -1.15411453e+05,  4.50110875e+05,  2.80408688e+05,\n'
 '        -6.16323375e+05, -8.99698875e+05,  1.40078844e+05,\n'
 '         3.34329656e+05, -5.90062375e+05, -4.97622562e+05,\n'
 '        -9.24566750e+05,  6.04207875e+05,  2.01558016e+05,\n'
 '         7.45653375e+05, -3.99898281e+04, -2.43768516e+05,\n'
 '         5.98031875e+04, -4.76477125e+05,  2.68764125e+05,\n'
 '         3.51516531e+05,  3.98066562e+04, -3.01708500e+05,\n'
 '         3.02047375e+05, -5.41536562e+04, -8.72944500e+05,\n'
 '        -2.42850719e+05,  1.69972828e+05,  9.64326875e+05,\n'
 '        -2.54390625e+05, -4.67802688e+05,  1.53105125e+05,\n'
 '        -1.19698375e+06,  1.21884400e+06, -4.98308875e+05,\n'
 '         6.97374688e+05,  3.67256969e+05, -1.39532500e+06,\n'
 '        -5.91112625e+05, -1.42736550e+06,  7.01213000e+05,\n'
 '        -3.99982438e+05, -5.44075625e+04, -4.38851438e+05,\n'
 '         1.48985125e+06,  5.22912062e+05,  7.19942750e+05,\n'
 '        -2.75169531e+05, -3.36755594e+05,  8.46843125e+05,\n'
 '        -1.11533656e+05,  5.53963188e+05, -4.76884531e+05,\n'
 '         7.07585938e+05, -3.12482312e+05,  2.45535188e+05,\n'
 '        -6.62704688e+03, -7.91393438e+05,  1.60325562e+06,\n'
 '        -3.25595125e+05, -3.81825156e+05,  1.09631562e+05,\n'
 '         5.06120594e+05,  6.59234750e+05, -2.67230625e+05,\n'
 '         2.07874625e+05, -1.25435362e+06, -8.37380875e+05,\n'
 '         3.53013094e+05, -4.89309812e+05, -1.27239912e+06,\n'
 '         1.19437162e+06, -9.39683125e+04, -9.99269438e+05,\n'
 '        -6.59905469e+04, -7.45825938e+05, -9.31515750e+05,\n'
 '        -2.40502500e+04, -3.18726188e+05,  8.36081188e+05,\n'
 '        -9.71492000e+05,  2.97185000e+04, -1.15250650e+06,\n'
 '         3.24351688e+05,  2.03566125e+05, -3.27525594e+05,\n'
 '         2.39460188e+05,  1.11017594e+05,  4.07747500e+05,\n'
 '        -5.77438625e+05, -1.96281969e+05, -8.40061250e+05,\n'
 '        -1.50558625e+06, -3.44634188e+05,  7.47415875e+05,\n'
 '        -8.90705625e+04,  3.20946344e+05, -3.87720594e+05,\n'
 '        -2.96331875e+05,  1.09565200e+06,  3.47394375e+05,\n'
 '        -1.48753344e+05,  8.29878438e+04, -4.95422938e+05,\n'
 '         1.03869062e+05,  4.14839812e+05,  3.78762688e+05,\n'
 '         2.17081531e+05, -6.05035375e+05,  2.81959875e+05,\n'
 '         3.84915719e+05, -1.87256594e+05, -3.16968531e+05,\n'
 '         3.13606875e+05, -9.75957375e+05, -7.48064125e+05,\n'
 '        -5.91059375e+05, -4.34620062e+05, -2.20322016e+05,\n'
 '         1.50145750e+05, -1.10498112e+06, -9.11330625e+05,\n'
 '         1.07966638e+06, -9.62707438e+05,  2.81138125e+05,\n'
 '         4.21609062e+04, -5.26189062e+05, -1.33674900e+06,\n'
 '         2.06440984e+05, -8.29498000e+05,  1.01448550e+06,\n'
 '         1.41121844e+05, -2.46640219e+05, -7.87378500e+05,\n'
 '         4.05905844e+05,  3.87368688e+05, -1.08222500e+06,\n'
 '         5.54291562e+04, -1.54507400e+06, -1.15115388e+06,\n'
 '        -1.16656656e+05, -1.32067062e+06,  6.73124375e+05,\n'
 '        -4.83003625e+05, -1.49780725e+06, -9.23550500e+05,\n'
 '         5.75319750e+05,  7.66379812e+05,  2.02675406e+05,\n'
 '        -2.90296375e+05, -8.52677500e+05, -5.66431500e+05,\n'
 '        -1.10675925e+06,  1.50640750e+05,  7.71768875e+05,\n'
 '        -9.67376250e+05, -5.16953906e+05, -3.36300469e+05,\n'
 '        -3.70129188e+05, -9.32918125e+05, -1.83648750e+05,\n'
 '         1.15067575e+06,  1.39001950e+06, -1.47315962e+06,\n'
 '         2.09298469e+05,  4.42430844e+05,  5.87560000e+05,\n'
 '         4.40052438e+05,  3.82342656e+04,  1.55848922e+05,\n'
 '        -5.37568438e+04, -2.52277469e+05, -1.07034875e+06,\n'
 '         5.91974000e+05,  4.91843781e+05, -1.10273438e+03,\n'
 '         3.86567906e+05,  4.75600094e+05,  3.79847125e+05,\n'
 '        -1.45010797e+05, -5.67370000e+04,  1.87046062e+05,\n'
 '         1.62865219e+05,  5.97361875e+05, -9.18490312e+04,\n'
 '         7.03671250e+05,  9.88151750e+05,  2.71474688e+05,\n'
 '        -7.35396625e+05, -1.05087775e+06, -1.29394297e+05,\n'
 '         1.07536700e+06,  1.63043594e+05, -1.81890984e+05,\n'
 '        -8.85324875e+05,  1.65252781e+05, -1.80551125e+05,\n'
 '        -1.82525975e+06,  3.61792469e+05, -5.41662312e+05,\n'
 '        -4.29387312e+05, -1.00461588e+06, -7.20185812e+05,\n'
 '         5.24979375e+05, -9.05459000e+05, -8.05043750e+04,\n'
 '        -1.17659094e+05,  2.33194031e+05, -2.17972906e+05,\n'
 '        -4.38974469e+05,  6.47526688e+05,  9.84776875e+05,\n'
 '        -8.15440469e+04, -2.09268406e+05,  7.90405750e+05,\n'
 '         3.43498469e+05, -1.03276162e+06, -4.90309375e+04,\n'
 '        -1.63994719e+05,  2.42959594e+05, -7.31402812e+05,\n'
 '        -1.62499219e+05,  2.87092562e+05, -4.57620875e+05,\n'
 '         4.41358625e+05, -8.59527500e+05,  3.89927312e+05,\n'
 '         8.81743750e+04, -3.81760188e+05, -8.48226250e+04,\n'
 '         8.64061500e+05,  1.65990625e+03, -3.26908906e+05,\n'
 '         1.49644812e+05,  4.32135625e+05,  2.28195562e+05,\n'
 '        -1.07461562e+06, -4.41554188e+05, -4.54164219e+05,\n'
 '         9.16114250e+05, -5.11535844e+05, -7.80507500e+04,\n'
 '         2.04559219e+05, -3.47805844e+05,  4.06610094e+05,\n'
 '         5.49922000e+05, -1.21202594e+05,  4.67158438e+04,\n'
 '         1.50348734e+05,  1.28125656e+05, -5.04245750e+05,\n'
 '        -8.48312031e+04, -1.18957609e+05,  4.89533188e+05,\n'
 '         4.04510469e+05, -4.40327938e+05,  8.12300062e+05,\n'
 '         6.85130562e+05, -5.95188125e+04, -9.12913500e+05,\n'
 '         1.51982297e+05, -7.68277250e+05,  7.40669500e+05,\n'
 '        -7.24524250e+05,  1.33416850e+06, -5.62381812e+05,\n'
 '         3.30366469e+05,  4.27447844e+05, -4.92339875e+05,\n'
 '        -5.71204812e+05, -7.27245000e+05,  1.25632600e+06,\n'
 '         1.15628656e+05,  6.15034375e+03, -6.79116500e+05,\n'
 '        -6.99524000e+05,  1.30495150e+06,  5.67828375e+05,\n'
 '         1.00524531e+05, -1.10712900e+06, -9.85302938e+05,\n'
 '         1.11898550e+06, -6.44010781e+04, -3.96416844e+05,\n'
 '         1.06379438e+06,  7.33543438e+05,  1.13490469e+05,\n'
 '         6.85522312e+05, -1.15914062e+03,  1.36871325e+06,\n'
 '         8.78787250e+05, -6.19154250e+05,  1.80576094e+04,\n'
 '        -1.62024719e+05,  2.23710594e+05, -5.86676875e+05,\n'
 '         1.27852300e+06, -5.13844375e+04, -5.92457812e+05,\n'
 '        -1.22802712e+06, -1.28773338e+06, -5.64857812e+05,\n'
 '        -9.65126625e+05,  7.08522438e+05,  9.98534312e+05,\n'
 '         7.85740375e+05, -1.04467994e+06,  5.74578688e+05,\n'
 '        -7.31487500e+05,  1.88042375e+05, -2.59483859e+05,\n'
 '        -5.84936875e+04,  7.07576250e+05, -3.22949812e+05,\n'
 '        -1.27214516e+05,  1.02627244e+06,  3.94906625e+05,\n'
 '        -2.49108812e+05,  5.23194812e+05, -3.92240438e+05,\n'
 '        -6.03695250e+05,  9.60792688e+05,  7.79890250e+05,\n'
 '         9.75393375e+05, -8.68270938e+04,  4.19230750e+05,\n'
 '        -1.03957412e+06,  9.61706688e+05,  7.50025750e+05,\n'
 '        -9.65570625e+05,  2.81519375e+05, -1.57488000e+05,\n'
 '         4.13128125e+04, -1.23860844e+05, -6.58478188e+05,\n'
 '        -9.62173875e+05, -1.39165850e+06,  1.06979300e+06,\n'
 '         1.48891312e+05,  4.36683250e+05,  6.64641500e+05,\n'
 '         6.50413375e+05,  8.72674125e+05, -9.59746250e+05,\n'
 '        -4.79145406e+05,  2.56013750e+04, -1.66119812e+05,\n'
 '        -2.46735156e+05,  6.97940000e+05, -1.61631031e+05,\n'
 '        -2.60256719e+04, -4.82212562e+05, -5.26418438e+05,\n'
 '        -6.32373375e+05,  6.17864188e+05,  3.06902562e+05,\n'
 '         1.41604812e+05, -7.57716875e+05,  1.30322031e+05,\n'
 '        -8.46153000e+05,  2.47149938e+05, -4.19705812e+05,\n'
 '         2.72682500e+05,  1.23063547e+05, -8.46445312e+03,\n'
 '         5.00233188e+05,  1.64802656e+04,  2.96595000e+05,\n'
 '        -3.88930125e+05,  6.32640062e+05, -2.95283312e+05,\n'
 '        -6.71744688e+05,  5.69723438e+04,  1.28922500e+05,\n'
 '        -7.20713500e+05, -8.92036750e+05, -1.81875575e+06,\n'
 '         1.40664125e+06, -2.66824500e+05,  1.33626641e+05,\n'
 '         1.25887900e+06,  2.20206750e+05, -4.36683375e+05,\n'
 '        -9.68761875e+05, -7.67401062e+05, -1.70098188e+05,\n'
 '         8.23721875e+04, -1.41446656e+05,  5.65954875e+05,\n'
 '        -4.49079188e+05, -9.63292250e+05,  2.23842062e+05,\n'
 '        -5.01613156e+05, -1.31272984e+05,  2.74931625e+05,\n'
 '         1.21471588e+06,  7.78207312e+05,  9.09702375e+05,\n'
 '        -9.72971812e+05,  6.15197750e+05, -7.78050625e+05,\n'
 '         1.21869575e+06, -4.32884125e+05,  4.47075188e+05,\n'
 '        -7.86017188e+04,  1.01007512e+06, -1.21713906e+05,\n'
 '         2.11853438e+05, -1.79039906e+05, -9.07144688e+04,\n'
 '         7.06098375e+05,  3.41044125e+05,  3.58108844e+05,\n'
 '        -5.42768625e+05, -2.29910188e+05,  3.12061562e+05,\n'
 '         2.73855812e+05, -2.22997594e+05, -3.52875781e+05,\n'
 '         5.30255188e+05, -3.41518406e+05, -6.42459875e+05,\n'
 '        -2.61910719e+05, -1.48876862e+06,  4.41812562e+05,\n'
 '        -8.28980500e+05,  2.73721125e+05, -4.88018031e+05,\n'
 '         5.16453312e+05,  2.15394859e+05, -5.05044344e+05,\n'
 '        -3.82495875e+05,  5.17386500e+05, -9.80350062e+05,\n'
 '         6.78204000e+05,  1.00862762e+06, -3.10163156e+05,\n'
 '        -1.01221262e+06,  6.32528812e+05, -2.84614875e+05,\n'
 '        -6.79350688e+05,  5.10109781e+05,  1.31016172e+05,\n'
 '         8.82025781e+04, -2.07348312e+05, -4.34710750e+05,\n'
 '        -1.11808562e+05, -4.40028438e+04,  3.71703062e+05,\n'
 '         6.95778250e+05, -8.98412812e+04,  5.21597656e+04,\n'
 '         4.05255844e+05, -2.47350188e+05, -2.30960250e+05,\n'
 '        -1.02049305e+05,  3.71761500e+05,  7.60015938e+05,\n'
 '        -1.27246688e+05, -2.54760125e+05,  7.66886625e+05,\n'
 '         4.13479062e+05, -3.34181438e+05, -9.20026250e+05,\n'
 '        -5.11917500e+04,  1.04126412e+06, -1.10838300e+06,\n'
 '         3.17620188e+05, -9.42434250e+05, -7.25347812e+05,\n'
 '        -5.59374250e+05, -3.34828062e+05,  6.72138125e+05,\n'
 '         3.58248375e+05,  2.48455562e+05,  3.28138906e+05,\n'
 '         1.09270469e+05, -7.87293594e+04, -1.76503891e+05,\n'
 '         7.08047625e+05, -3.03134750e+05, -2.72779719e+05,\n'
 '        -8.46866250e+04, -1.33703738e+06, -9.49938000e+05,\n'
 '        -4.19661062e+05, -1.60270891e+05,  8.42043438e+04,\n'
 '         6.51097625e+05, -6.63786250e+04, -2.66212438e+05,\n'
 '        -6.78994875e+05, -3.74141844e+05,  8.56250750e+05,\n'
 '        -9.73715000e+04, -8.83805250e+05,  1.29162781e+05,\n'
 '        -1.12963023e+05,  1.27203266e+05, -2.43835969e+05,\n'
 '        -7.33488000e+05,  3.77175688e+05,  3.40077750e+05,\n'
 '         5.69316250e+05,  6.42154750e+05,  6.58926562e+04,\n'
 '         1.17535688e+05,  2.46668312e+05,  1.73526650e+06,\n'
 '         2.67985531e+05, -3.56851938e+05,  8.49373625e+05,\n'
 '        -8.30747625e+05, -1.29398662e+06,  2.28336578e+05,\n'
 '        -2.21175406e+05,  1.44087812e+04,  5.90509750e+05,\n'
 '         6.02601500e+05,  1.62615500e+05,  1.11265525e+06,\n'
 '         8.05412062e+05, -5.83369438e+05,  2.48823172e+05,\n'
 '         3.15412656e+05,  2.87572781e+05, -2.36241438e+05,\n'
 '        -7.78258000e+05,  7.62459375e+04, -4.63006500e+05,\n'
 '         4.02355156e+05, -1.61417781e+05,  2.79861344e+05,\n'
 '         1.12405775e+06,  1.28156734e+05,  1.84890859e+04,\n'
 '         6.96801562e+05, -4.56788625e+05,  1.30557625e+06,\n'
 '        -7.22290312e+04, -1.47161344e+05,  1.02085688e+06,\n'
 '        -6.38096250e+04,  7.81378125e+05,  1.23713750e+06,\n'
 '         8.83472750e+05, -5.10013625e+05,  6.89573906e+04,\n'
 '         2.88970078e+04, -8.30277500e+04,  8.39849125e+05,\n'
 '        -3.51197625e+05, -1.20927625e+05, -4.09799812e+05,\n'
 '         3.96693562e+05, -6.50868500e+05, -2.42045562e+05,\n'
 '        -2.29696688e+05, -1.47931000e+05, -4.79430625e+04,\n'
 '        -9.72737500e+04,  1.44047531e+05, -3.38652125e+05,\n'
 '        -5.07628125e+04, -3.37999594e+05,  6.53948750e+05,\n'
 '        -5.94705156e+04, -8.49499375e+04,  5.38164750e+05,\n'
 '         7.91338438e+04,  1.01124638e+06, -2.78027375e+05,\n'
 '        -7.37746125e+05, -1.48954525e+06, -2.17088750e+05,\n'
 '         1.58557875e+06, -1.32414938e+05,  1.25072212e+06,\n'
 '         8.67466750e+05,  3.37752469e+05, -2.95678906e+04,\n'
 '        -7.54488750e+05,  7.41192750e+05, -3.25968844e+05,\n'
 '         1.15202050e+06, -8.59392750e+05, -1.12252922e+05,\n'
 '        -3.71307375e+05, -2.29838094e+05,  6.33171875e+05,\n'
 '        -8.50770812e+05, -3.85867688e+05,  1.46294531e+05,\n'
 '        -1.17375625e+06,  1.10345812e+06, -1.13118109e+05,\n'
 '        -8.00877438e+05,  6.41375750e+05, -3.48169875e+05,\n'
 '         7.81080000e+05,  6.20812875e+05,  7.26347125e+05,\n'
 '        -1.44922641e+05, -1.49379125e+05,  2.03785000e+04,\n'
 '        -4.65136250e+04, -1.36772750e+05, -4.16825500e+05,\n'
 '         7.88823125e+04, -6.32594062e+04, -8.43161375e+05,\n'
 '        -1.62046453e+05, -1.39612300e+06,  7.76666625e+05,\n'
 '        -6.22888938e+05, -1.80738875e+05, -7.77887812e+05,\n'
 '         4.67064750e+05, -8.22346812e+05,  1.35751325e+06,\n'
 '         9.82201500e+05,  2.22318000e+05, -1.55461203e+05,\n'
 '         3.09526625e+05,  2.64757500e+05,  2.74112625e+05,\n'
 '         5.24497250e+05, -3.57705750e+05, -4.49701375e+05,\n'
 '        -2.06695453e+05, -6.59748375e+05,  6.32409000e+05,\n'
 '         5.04390906e+05,  1.83231672e+05, -1.70883750e+04,\n'
 '         9.82561938e+05, -3.46745938e+05,  9.51587812e+04,\n'
 '         7.22056750e+05, -2.82543844e+05,  5.36639250e+05,\n'
 '        -7.18229875e+05, -2.32978125e+04, -4.16342156e+05,\n'
 '         3.45901625e+05,  9.01614625e+05,  5.20477156e+05,\n'
 '        -2.76599219e+04, -1.96940906e+05, -7.59368188e+05,\n'
 '        -9.30406375e+05,  2.23227531e+05, -2.83063969e+05,\n'
 '        -3.01610469e+05,  1.04648750e+04, -5.62810562e+05,\n'
 '         3.93790281e+05,  6.82248125e+05,  3.95054781e+05,\n'
 '        -2.43131891e+05, -2.57827125e+05, -1.38638900e+06,\n'
 '         1.19372638e+06,  1.15340975e+06, -2.84152875e+05,\n'
 '         8.22057812e+05, -8.21389250e+05,  1.54504400e+06,\n'
 '        -7.59685000e+04,  8.11123000e+05, -2.91416312e+05,\n'
 '         9.24981688e+05,  2.52954094e+05, -8.22499000e+05,\n'
 '        -2.28020578e+05, -1.47522775e+06,  6.60263938e+05,\n'
 '         2.58590281e+05, -1.50060391e+05, -2.75847375e+05,\n'
 '        -8.19174375e+05, -1.59047062e+05,  5.57136125e+05,\n'
 '         8.99708500e+05, -1.78118562e+05,  1.24586325e+06,\n'
 '         1.05911250e+04,  6.72239688e+05, -2.51212031e+05,\n'
 '         4.38352844e+05, -5.91259375e+05,  3.12585688e+05,\n'
 '        -7.64498375e+05,  1.84813462e+06,  8.90844750e+05,\n'
 '         6.39668125e+05,  3.56844719e+05,  8.84462750e+05,\n'
 '        -3.40963156e+05, -4.39601875e+04,  5.04921406e+05,\n'
 '         7.72058375e+05,  1.22602109e+05, -6.92708125e+05,\n'
 '         4.90565500e+05,  3.76834000e+05,  1.12731750e+05,\n'
 '         3.95091750e+05,  1.14702850e+06, -3.65765688e+05,\n'
 '        -4.88777312e+05,  8.40131250e+03, -4.45314750e+05,\n'
 '         7.91979750e+05, -2.36141188e+05,  8.16606500e+05,\n'
 '        -1.96868391e+05,  5.71528312e+05, -6.33125625e+04,\n'
 '        -1.03500869e+06,  7.78874000e+05,  6.17086750e+05,\n'
 '        -3.00779938e+05, -6.98155000e+04, -1.34582812e+05,\n'
 '         3.53282531e+05, -8.08246750e+05,  8.52383125e+04,\n'
 '         1.48076750e+06, -3.05677531e+05, -6.38558688e+05,\n'
 '         8.84661125e+05,  7.50092750e+05,  1.62700406e+05,\n'
 '         6.30411500e+05, -7.58974500e+05, -1.16987325e+06,\n'
 '         1.92105469e+05,  8.14409688e+04,  5.54866375e+05,\n'
 '        -6.39875938e+05,  1.92484062e+05,  6.04218562e+05,\n'
 '        -8.77725438e+05, -2.65814562e+05,  1.79542188e+03,\n'
 '         3.79705688e+05, -2.93977531e+05,  6.36003188e+05,\n'
 '         1.87148453e+05,  9.61169750e+05,  3.05657344e+05,\n'
 '        -9.86499250e+05, -3.28484250e+05, -4.50607156e+05,\n'
 '        -2.71779906e+05, -5.13218344e+05,  6.59156562e+05,\n'
 '         2.54365938e+05, -1.28967812e+06,  3.66349062e+05,\n'
 '        -1.77504594e+05,  4.79246312e+05,  6.60372312e+05,\n'
 '         8.79152812e+04,  3.33118156e+05, -2.31687969e+05,\n'
 '        -4.38488250e+05,  3.43600688e+05,  6.09827500e+05,\n'
 '         4.87281094e+05,  9.33586688e+05,  2.05414594e+05,\n'
 '         3.74612750e+05, -7.39247500e+04, -1.50295312e+04,\n'
 '         6.71868125e+05,  6.11353625e+05,  6.74677375e+05,\n'
 '         6.79521750e+05, -1.60448975e+06,  7.36995375e+05,\n'
 '        -3.36072156e+05, -4.23237312e+05,  8.64500500e+05,\n'
 '        -2.55944656e+05, -2.47841906e+05,  1.00310938e+03,\n'
 '        -1.41848375e+06, -1.62078450e+06,  1.33909156e+05,\n'
 '         4.24873312e+05, -4.37262500e+03, -3.81574094e+05,\n'
 '         6.30397250e+05, -5.72370062e+05, -5.88580062e+05,\n'
 '         3.78736000e+05,  7.79542500e+05, -1.67543531e+05,\n'
 '        -1.23804450e+06, -6.15464125e+05, -1.00947531e+06,\n'
 '        -1.21532938e+05,  5.29720750e+05, -3.80285688e+05,\n'
 '         9.47967500e+05, -5.50391625e+05,  3.17521375e+05,\n'
 '         2.34425000e+03, -4.40038562e+05, -7.35464125e+05,\n'
 '        -8.73781094e+04,  6.84706094e+04, -8.30568000e+05,\n'
 '        -6.55993203e+04, -4.71487500e+05,  5.10111875e+05,\n'
 '        -2.56330156e+05, -5.48703000e+05, -3.45166094e+04,\n'
 '        -8.50042500e+05, -4.85949750e+05,  8.87460938e+04,\n'
 '        -2.17138031e+05,  3.19576875e+05, -5.46328625e+05,\n'
 '        -2.85789062e+05,  2.79993438e+04, -1.42120375e+06,\n'
 '        -3.20563719e+05, -7.57974875e+05, -6.64694000e+05,\n'
 '        -4.68783969e+05,  7.33748562e+05,  1.11453062e+06,\n'
 '         1.69401962e+06,  1.81090469e+05,  1.35874200e+06,\n'
 '         4.02061438e+05, -5.55193750e+05, -4.05065812e+05,\n'
 '         8.96998500e+05, -8.78497500e+05,  4.40320750e+05,\n'
 '         3.89659938e+05,  6.19495000e+05, -4.41718438e+05,\n'
 '        -4.48495156e+05, -1.40089953e+05, -4.95723031e+05,\n'
 '        -2.55118438e+04,  4.19609531e+05, -5.60744812e+05,\n'
 '        -1.58817141e+05,  5.54870875e+05, -6.14229125e+05,\n'
 '         6.00177750e+05, -5.68296875e+05, -4.91236969e+05,\n'
 '         4.17167188e+04, -6.54391500e+05, -2.32147938e+05,\n'
 '        -1.13688062e+06, -2.87580219e+05,  4.58567656e+04,\n'
 '        -8.52595500e+05,  2.96627844e+05, -2.52030688e+05,\n'
 '        -5.81993000e+05,  4.65196875e+03, -4.94025125e+05,\n'
 '         3.94268125e+05, -4.75318375e+05, -3.91797531e+05,\n'
 '        -5.27102000e+05,  7.83336688e+05,  2.32215719e+05,\n'
 '        -4.30237188e+05, -3.28147875e+05,  3.24458375e+05,\n'
 '         4.84068031e+05,  3.06658594e+05, -2.59000594e+05,\n'
 '         1.13064038e+06,  6.52588984e+04, -3.27495812e+05,\n'
 '        -5.30936250e+05,  2.62688500e+05, -6.91859500e+05,\n'
 '         6.94736188e+05, -9.45224125e+05,  7.55958250e+05,\n'
 '        -6.54115078e+04, -1.11302180e+05, -9.99712875e+05,\n'
 '        -2.42263094e+05, -6.85285000e+05,  7.44517562e+05,\n'
 '        -5.35106812e+05,  9.61400000e+05, -8.60378438e+04,\n'
 '        -1.11274638e+06,  5.28033312e+05,  1.12359969e+05,\n'
 '        -6.90702625e+05,  8.53530312e+05,  3.36073062e+05,\n'
 '         6.50190312e+04,  1.28015781e+05,  6.16868500e+05,\n'
 '        -3.33475344e+05, -1.68390150e+06,  4.85201344e+05,\n'
 '        -3.15027312e+05,  2.04824375e+04,  6.62068875e+05,\n'
 '        -2.15004781e+05, -4.43687688e+05,  8.31292188e+04,\n'
 '        -3.59689453e+04,  3.15680500e+05,  7.40295375e+05,\n'
 '        -5.60770000e+04, -5.90468875e+05, -5.29635875e+05,\n'
 '         5.41358875e+05, -8.04418906e+04,  6.24526500e+05,\n'
 '        -4.25051156e+05, -1.03765262e+06,  3.28069219e+05,\n'
 '         1.11719450e+06,  9.80922125e+05, -2.38395031e+05,\n'
 '        -3.01661250e+05,  2.16371891e+05,  3.40055469e+05,\n'
 '         1.08835100e+06, -7.36289531e+04,  8.92857000e+05,\n'
 '        -1.75038547e+05, -2.63800438e+05,  5.40040750e+05,\n'
 '         2.09119062e+05, -1.89522775e+06, -1.25371969e+05,\n'
 '         9.97812250e+05]])')
'test_inceptionnet | batch_shape is: [1]'
'test_inceptionnet | logits.shape is: ivy.Shape(1, 1000)'
'||'
'test_inceptionnet | device is: cpu'
'test_inceptionnet | fw is: torch'
'test_inceptionnet | load_weights is: True'
'InceptionV3 | build | layer 1/22 built'
'InceptionV3 | build | layer 2/22 built'
'layer 3/22 built'
'InceptionV3 | build | layer 4/22 built'
'InceptionV3 | build | layer 5/22 built'
'InceptionV3 | build | layer 6/22 built'
'InceptionV3 | build | layer 7/22 built'
'InceptionV3 | build | layer 8/22 built'
'InceptionV3 | build | layer 9/22 built'
'InceptionV3 | build | layer 10/22 built'
'InceptionV3 | build | layer 11/22 built'
'InceptionV3 | build | layer 12/22 built'
'InceptionV3 | build | layer 13/22 built'
'InceptionV3 | build | layer 14/22 built'
'InceptionV3 | build | layer 15/22 built'
'InceptionV3 | build | layer 17/22 built'
'InceptionV3 | build | layer 18/22 built'
'InceptionV3 | build | layer 19/22 built'
'InceptionV3 | build | layer 20/22 built'
'InceptionV3 | build | layer 21/22 built'
'InceptionV3 | build | layer 22/22 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/4 built'
'layer 2/4 built'
'layer 3/4 built'
'layer 4/4 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/6 built'
'layer 2/6 built'
'layer 3/6 built'
'layer 4/6 built'
'layer 5/6 built'
'layer 6/6 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'inceptionNet_v3 | building InceptionV3 model | done 1/3'
'inceptionNet_v3 | clearning pretrained weights | done 2/3'
'inceptionNet_v3 | loading pretrained weights | done 3/3'
'InceptionV3 | forward | input data_format is:NCHW | done 1/27'
'InceptionV3 | forward | data_format is going to be used is:NCHW | done 1/27'
'InceptionV3 | forward | input shape is:ivy.Shape(1, 224, 224, 3) | done 1/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 224, 224, 3) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 111, 111, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 111, 111, 32) | done 2/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 111, 111, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 32) | done 3/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 109, 109, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 64) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 64) | done 4/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 54, 54, 64) | done 5/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 54, 54, 80) | done 3/3'
'InceptionV3 | forward | is:ivy.Shape(1, 54, 54, 80) | done 6/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 80) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 52, 52, 192) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 52, 52, 192) | done 7/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 192) | done 8/27'
'input shape is:ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 32) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 32)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 25, 25, 256) | done 9/27'
'input shape is:ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 10/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 11/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 384) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 96) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 96)'
'one 20/20, output shape is:ivy.Shape(1, 12, 12, 288)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 12/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 12, 12, 768) | done 13/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 14/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 15/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 16/27'
'v3 16/27, output shape is:ivy.Shape(1, 12, 12, 768)'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 5, 5, 192)'
'one 7/20, output shape is:ivy.Shape(1, 5, 5, 768)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 1280) | done 17/27'
'input shape is:ivy.Shape(1, 5, 5, 1280)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 18/27'
'input shape is:ivy.Shape(1, 5, 5, 2048)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 19/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 20/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 5, 5) | done 21/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 1, 1) | done 22/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 27/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 24/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 25/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048) | done 26/27'
'InceptionV3 | forward | fc | done 27/27'
('test_inceptionnet | logits is: ivy.array([[ 1.32320619e+00, '
 '-9.80210602e-02,  6.58797562e-01,\n'
 '         2.50051713e+00,  4.09699023e-01,  7.96597421e-01,\n'
 '         2.31345010e+00, -1.16030848e+00, -1.50265956e+00,\n'
 '        -2.67376137e+00, -9.95494962e-01, -3.08828414e-01,\n'
 '        -8.79902244e-02, -9.20015812e-01,  1.26219284e+00,\n'
 '        -1.07927752e+00, -1.19246280e+00, -1.65923894e-01,\n'
 '        -6.78454280e-01,  1.68809712e-01,  7.61898756e-01,\n'
 '        -2.17253971e+00, -1.41476178e+00, -3.09337640e+00,\n'
 '        -1.40372053e-01, -2.38155794e+00, -2.53016162e+00,\n'
 '        -2.05808926e+00, -9.21379983e-01, -1.10093248e+00,\n'
 '         1.03040695e-01, -1.42815947e+00, -1.73998201e+00,\n'
 '         1.66713560e+00,  2.91367316e+00, -1.61832964e+00,\n'
 '         3.67244124e-01, -2.20118833e+00, -2.37516069e+00,\n'
 '        -5.95838189e-01,  1.32079497e-01, -1.02558982e+00,\n'
 '        -2.87002706e+00, -2.30459166e+00, -1.44240749e+00,\n'
 '        -2.61426520e+00, -3.82165051e+00, -3.64240706e-01,\n'
 '        -2.77750730e+00, -4.20308948e-01, -8.91885385e-02,\n'
 '         1.32379127e+00,  5.73873758e-01, -1.72828138e+00,\n'
 '         6.74032807e-01,  1.33007753e+00, -3.51053953e+00,\n'
 '        -1.32450306e+00, -2.44869843e-01, -1.07008040e+00,\n'
 '        -2.17580229e-01,  2.34336674e-01, -2.73597383e+00,\n'
 '        -2.15674710e+00, -1.89473224e+00,  1.03790712e+00,\n'
 '        -1.54298961e+00,  3.93941104e-02, -7.48112083e-01,\n'
 '        -2.27881074e+00, -1.80985963e+00, -9.89665270e-01,\n'
 '        -2.51193666e+00, -1.27863574e+00, -2.65197110e+00,\n'
 '        -6.30671501e-01, -9.56580699e-01, -9.17647600e-01,\n'
 '         7.22960830e-02,  5.35720885e-01, -3.34692430e+00,\n'
 '         5.58425307e-01,  7.21364856e-01, -1.48459703e-01,\n'
 '         1.53301024e+00, -1.29104102e+00, -1.77837730e-01,\n'
 '        -1.94362676e+00, -6.99671209e-02,  2.49678254e-01,\n'
 '        -1.12906843e-01,  1.03733182e+00, -5.86233139e-01,\n'
 '        -3.77169251e-01, -2.55033195e-01, -5.48022091e-02,\n'
 '         5.81628680e-01, -1.50292635e+00, -1.59306395e+00,\n'
 '         8.87194514e-01,  7.78237998e-01,  2.35153604e+00,\n'
 '        -1.26086616e+00, -8.63922060e-01,  4.67842936e-01,\n'
 '        -4.21295261e+00, -2.92212129e+00,  2.08227587e+00,\n'
 '         1.55160987e+00,  1.19822609e+00, -5.62935472e-01,\n'
 '        -9.83974218e-01,  2.46037459e+00,  2.36622810e+00,\n'
 '         2.28867793e+00, -1.13102150e+00,  2.68460125e-01,\n'
 '         1.69310105e+00, -1.53949559e+00, -9.94596556e-02,\n'
 '        -3.37093711e-01, -1.88825154e+00, -2.87929475e-02,\n'
 '        -9.61379051e-01, -1.09370875e+00, -5.28896749e-01,\n'
 '        -9.28254962e-01,  1.90998447e+00,  6.04788423e-01,\n'
 '        -8.58665854e-02, -4.94939148e-01,  5.49455524e-01,\n'
 '         1.93028045e+00, -3.14533651e-01,  8.87471437e-02,\n'
 '         9.54938054e-01,  6.47959635e-02, -1.08977012e-01,\n'
 '        -3.51665914e-01, -1.22658956e+00, -1.64626300e+00,\n'
 '         9.71842706e-02, -2.19044542e+00, -1.15223503e+00,\n'
 '         4.16355670e-01,  6.05415106e-01, -1.03039980e+00,\n'
 '        -4.42158222e-01,  1.12984645e+00,  7.62931347e-01,\n'
 '         9.91125226e-01,  4.53790397e-01,  5.42488337e+00,\n'
 '         4.43757027e-01,  1.32637990e+00, -2.61654186e+00,\n'
 '         2.56579089e+00,  6.73820734e+00, -1.28734827e+00,\n'
 '         7.46650621e-02,  1.65156388e+00, -2.36488008e+00,\n'
 '        -8.57509792e-01,  1.30348837e+00, -7.63349235e-02,\n'
 '        -3.39400232e-01,  4.84891892e-01,  1.23791933e+00,\n'
 '        -2.02710152e+00,  2.39623070e+00,  1.50399780e+00,\n'
 '         3.72861624e-02, -3.67127538e-01, -2.73107827e-01,\n'
 '         1.81096625e+00, -2.46848941e-01, -1.22671795e+00,\n'
 '        -1.30640698e+00,  2.06993520e-01,  1.33457184e+00,\n'
 '        -5.75943887e-01,  5.05453825e-01, -1.30757952e+00,\n'
 '         4.22857463e-01, -4.09305930e-01,  5.06866217e-01,\n'
 '         1.84496784e+00, -1.43676329e+00, -1.70320892e+00,\n'
 '        -1.68027699e+00, -8.70919228e-01, -8.97089839e-01,\n'
 '        -6.94959700e-01, -1.47153974e+00, -3.96189403e+00,\n'
 '        -2.05396593e-01, -3.16805887e+00,  1.02774108e+00,\n'
 '        -1.91440213e+00,  1.82699907e+00,  1.11000514e+00,\n'
 '        -3.28415203e+00, -8.80521953e-01,  4.83003282e+00,\n'
 '        -1.53907251e+00, -2.08004165e+00, -2.28638983e+00,\n'
 '        -7.02000931e-02, -1.69929147e+00, -2.50971985e+00,\n'
 '        -1.94725251e+00, -6.29180551e-01, -1.82859033e-01,\n'
 '         1.69716680e+00,  3.06277466e+00,  1.03444612e+00,\n'
 '         1.13765431e+00,  1.13069820e+00,  2.71793556e+00,\n'
 '        -2.40520024e+00,  3.57350379e-01, -2.71774620e-01,\n'
 '         4.71977949e+00,  1.73232937e+00,  4.55682325e+00,\n'
 '        -1.84693694e+00,  3.29986739e+00, -5.83354712e+00,\n'
 '         2.08604980e+00,  1.84225464e+00,  2.46194887e+00,\n'
 '         4.55673075e+00,  3.43633747e+00,  9.93665457e-01,\n'
 '         9.62994277e-01,  6.43240988e-01,  4.24966991e-01,\n'
 '         3.06209847e-02,  8.97429586e-02, -1.65903568e-01,\n'
 '         1.23753905e+00,  3.83066583e+00,  1.51997066e+00,\n'
 '        -7.42054462e-01, -1.64016271e+00, -2.19984859e-01,\n'
 '         4.73329842e-01,  3.22456503e+00,  8.31935883e+00,\n'
 '         5.18507099e+00,  4.11744308e+00,  1.70283937e+00,\n'
 '        -1.28049254e+00,  1.35699081e+00,  1.55692208e+00,\n'
 '         9.39830065e-01,  2.46889520e+00,  9.13816833e+00,\n'
 '         2.15123157e+01,  8.21606541e+00,  6.26723146e+00,\n'
 '         8.38848686e+00, -7.45609462e-01,  3.13653767e-01,\n'
 '         1.12459254e+00,  7.27379143e-01, -1.61985302e+00,\n'
 '         2.31283331e+00,  1.13898563e+00,  2.16625094e+00,\n'
 '         1.20742664e+01, -3.05517411e+00,  1.54393047e-01,\n'
 '         1.18622184e-02,  9.54877734e-02, -3.00911808e+00,\n'
 '         7.06432164e-02,  2.39085674e+00, -1.11409318e+00,\n'
 '         1.24880409e+01,  1.90740097e+00,  1.44553173e+00,\n'
 '        -1.51252076e-01,  4.57250595e+00,  1.96348310e-01,\n'
 '         3.95497799e-01, -2.20331955e+00,  2.93671822e+00,\n'
 '         8.26746941e-01,  1.41961980e+00, -2.16336823e+00,\n'
 '         8.87568355e-01, -4.06476021e-01, -1.15522647e+00,\n'
 '        -7.19513118e-01, -1.24089456e+00,  4.44770622e+00,\n'
 '        -9.45422530e-01, -3.11110187e+00, -2.56883860e+00,\n'
 '        -1.17034328e+00, -1.34471107e+00,  8.23627889e-01,\n'
 '        -7.56483972e-02,  1.73354536e-01, -9.83314991e-01,\n'
 '         5.00689566e-01, -2.18630374e-01,  8.93583536e-01,\n'
 '         1.18162227e+00, -9.17774379e-01, -2.04590368e+00,\n'
 '        -1.39012599e+00, -7.58329332e-01, -6.09330654e-01,\n'
 '        -7.68644631e-01, -3.49014640e-01,  2.56099522e-01,\n'
 '         1.05397999e+00, -1.62290037e+00,  9.30223703e-01,\n'
 '        -2.03778100e+00, -7.84618735e-01,  1.19457662e+00,\n'
 '        -2.22657609e+00, -3.16056490e-01,  4.55451190e-01,\n'
 '         1.31408238e+00,  6.52033806e-01,  4.22316611e-01,\n'
 '        -4.65417534e-01,  1.65437186e+00,  3.61883116e+00,\n'
 '        -2.77710855e-02,  3.00966978e-01, -2.49391365e+00,\n'
 '        -1.99581444e+00,  7.22308814e-01,  2.94502020e+00,\n'
 '        -1.88342571e+00,  9.47041035e-01,  2.03582334e+00,\n'
 '         1.03620958e+00, -6.72239900e-01,  6.81210309e-03,\n'
 '         1.16043389e-01, -3.94661784e-01,  1.63886583e+00,\n'
 '         6.70701861e-01, -2.35575080e+00, -2.32409430e+00,\n'
 '         7.24176228e-01, -1.57590008e+00, -1.29496729e+00,\n'
 '        -1.15527070e+00,  1.64236975e+00,  1.66791284e+00,\n'
 '        -6.95921630e-02,  1.69747019e+00,  2.37435207e-01,\n'
 '        -1.49161089e+00,  1.51295209e+00, -1.05008137e+00,\n'
 '         1.00979722e+00, -1.47086716e+00, -1.79924750e+00,\n'
 '        -2.80970144e+00, -2.30531764e+00, -6.29685462e-01,\n'
 '        -3.23476148e+00, -1.77324700e+00, -1.38046420e+00,\n'
 '        -2.68639207e+00, -1.78967261e+00, -1.78845429e+00,\n'
 '        -3.00212526e+00, -2.57816505e+00, -8.73583674e-01,\n'
 '        -1.40603721e+00, -2.53499937e+00, -1.52493119e+00,\n'
 '        -3.95388842e+00, -2.62486005e+00, -2.37655830e+00,\n'
 '        -1.94066298e+00,  4.40822840e-01, -6.03378355e-01,\n'
 '         1.85068458e-01, -9.91435766e-01, -1.62349618e+00,\n'
 '        -6.51375949e-01,  3.28950703e-01,  7.02030063e-02,\n'
 '         2.66835511e-01,  2.54810303e-01,  9.55602884e-01,\n'
 '         2.64798474e+00, -7.22235143e-02,  8.71747136e-01,\n'
 '         1.05550897e+00, -1.23578322e+00,  1.04010671e-01,\n'
 '         6.09726548e-01,  7.89175391e-01,  5.18999219e-01,\n'
 '         4.64670777e-01, -5.32904387e-01, -9.24349546e-01,\n'
 '        -2.39440680e+00, -5.80794752e-01, -3.03097785e-01,\n'
 '        -2.66070634e-01,  4.04334754e-01, -7.24877179e-01,\n'
 '         2.77811825e-01, -2.40354538e+00, -6.55398965e-01,\n'
 '        -1.09334350e+00, -2.27784896e+00, -1.34211719e-01,\n'
 '         1.84286073e-01, -3.90027022e+00,  5.75034738e-01,\n'
 '        -1.40571997e-01, -6.41334057e-03,  1.74096751e+00,\n'
 '         4.80672866e-02,  3.27246755e-01,  7.29981482e-01,\n'
 '        -2.44221377e+00, -1.61524087e-01, -4.36468184e-01,\n'
 '         1.79835469e-01, -7.86989451e-01, -2.27614832e+00,\n'
 '         3.37323070e-01, -6.61250830e-01,  1.48787931e-01,\n'
 '        -9.21576083e-01,  1.85890287e-01,  1.58182335e+00,\n'
 '        -1.28688228e+00, -1.51682317e+00, -1.95423985e+00,\n'
 '        -1.59834600e+00, -5.22921622e-01, -1.06014872e+00,\n'
 '        -1.89223027e+00,  1.82149744e+00, -6.35167420e-01,\n'
 '        -5.68142414e-01,  2.12650561e+00, -1.80542755e+00,\n'
 '        -1.49266183e+00,  1.59583175e+00, -6.81195617e-01,\n'
 '         4.11312997e-01,  1.16474772e+00,  1.29562390e+00,\n'
 '         1.34030223e+00, -1.86059177e-01, -8.63066018e-01,\n'
 '         1.38997674e+00,  1.18427312e+00,  2.00994945e+00,\n'
 '        -1.22201312e+00, -9.58997250e-01, -6.86685562e-01,\n'
 '         2.58968413e-01, -6.58532858e-01,  9.03327465e-01,\n'
 '        -8.38813961e-01, -3.51627803e+00, -1.86563015e-01,\n'
 '        -3.69850636e-01, -6.83428407e-01,  2.71992421e+00,\n'
 '        -2.77365351e+00,  3.11047244e+00,  1.46945071e+00,\n'
 '         6.73600614e-01,  7.96325803e-01, -1.37688685e+00,\n'
 '         9.05582160e-02, -1.20700610e+00, -2.38862967e+00,\n'
 '        -1.01275861e+00,  8.87642145e-01,  2.89676070e-01,\n'
 '        -4.38766062e-01, -5.52342236e-02,  1.86776459e-01,\n'
 '        -1.30242395e+00, -1.01762664e+00, -1.93967497e+00,\n'
 '         5.05217850e-01, -1.43432975e-01, -8.33620548e-01,\n'
 '         2.57215321e-01, -1.68904996e+00, -2.35904980e+00,\n'
 '        -1.62566936e+00,  4.77564216e-01,  9.05896246e-01,\n'
 '        -8.45327497e-01,  1.52752090e+00,  1.20211974e-01,\n'
 '        -4.55384731e-01,  1.29741025e+00,  4.19669300e-01,\n'
 '         2.66928554e-01, -2.39651728e+00,  7.86545634e-01,\n'
 '         3.00523114e+00, -9.04434264e-01,  1.21657062e+00,\n'
 '        -1.15889919e+00, -2.61584449e+00, -1.99630105e+00,\n'
 '        -1.44625640e+00,  6.60209060e-01, -7.15852797e-01,\n'
 '         7.73917913e-01, -2.40956396e-01, -7.86064267e-01,\n'
 '        -6.54832184e-01, -1.81475747e+00, -1.86412644e+00,\n'
 '        -4.08179224e-01, -5.80855489e-01,  8.56808543e-01,\n'
 '         1.77452147e+00, -2.67105460e-01, -9.60013211e-01,\n'
 '        -5.28711259e-01, -1.52862144e+00, -2.77483296e+00,\n'
 '         3.40636444e+00,  4.56894040e-01, -1.12428212e+00,\n'
 '        -5.82894742e-01,  2.85159707e-01, -1.06256926e+00,\n'
 '         1.65945530e+00, -7.05599845e-01, -1.41014934e+00,\n'
 '         2.09200478e+00, -1.14676487e+00, -3.52595234e+00,\n'
 '        -6.79036081e-02,  1.31001622e-02,  9.13175285e-01,\n'
 '        -7.53461957e-01, -2.33757854e+00, -6.29262209e-01,\n'
 '        -1.52059019e+00, -9.61235464e-01,  2.32005879e-01,\n'
 '        -7.05263853e-01,  5.75931609e-01,  3.24720711e-01,\n'
 '         1.39127624e+00,  2.33935523e+00,  6.94860220e-01,\n'
 '        -9.24191177e-01, -8.62042308e-01,  2.74650908e+00,\n'
 '        -1.10539722e+00,  1.39999914e+00,  6.00085735e-01,\n'
 '         1.46580744e+00, -5.15512943e-01,  2.70700693e+00,\n'
 '         2.55879450e+00,  3.88464212e-01, -7.76350021e-01,\n'
 '         1.19877410e+00, -4.30335522e-01,  4.50203717e-01,\n'
 '        -7.36091733e-01,  1.19593620e+00,  1.50116611e+00,\n'
 '         2.87976790e+00,  4.78850305e-01,  2.08537006e+00,\n'
 '         1.17047715e+00, -1.43588281e+00, -3.45296115e-01,\n'
 '        -3.64266276e-01, -1.31716442e+00,  1.05840778e+00,\n'
 '         2.83974767e-01,  2.60325337e+00,  1.35592639e+00,\n'
 '         1.34840560e+00, -9.82699931e-01, -2.59125769e-01,\n'
 '         1.19107246e+00, -3.89242530e+00, -2.02621889e+00,\n'
 '        -2.48755407e+00, -7.20119655e-01, -1.51715779e+00,\n'
 '         6.87509477e-01,  9.17722940e-01, -1.60292292e+00,\n'
 '         3.44314408e+00,  2.31091589e-01,  2.97258091e+00,\n'
 '        -9.86163676e-01, -3.50199699e-01,  2.09377384e+00,\n'
 '        -1.18186712e+00,  6.82271063e-01,  1.11501002e+00,\n'
 '        -2.54285574e+00, -7.69516528e-01,  3.85848069e+00,\n'
 '        -1.45179582e+00, -2.42495346e+00, -2.72507477e+00,\n'
 '         1.53247821e+00,  1.26165652e+00, -1.04431307e+00,\n'
 '         1.19895947e+00, -1.76570311e-01,  4.70454872e-01,\n'
 '        -1.04835641e+00,  6.91924214e-01,  2.04664350e-01,\n'
 '        -9.56053436e-01,  9.89431620e-01, -2.08638501e+00,\n'
 '         1.08793390e+00, -4.35845184e+00, -1.07993126e+00,\n'
 '        -1.26629722e+00,  1.04353595e+00,  1.04991364e+00,\n'
 '         1.47363019e+00,  6.16744637e-01, -9.54703316e-02,\n'
 '        -1.67514592e-01, -1.15111125e+00, -1.21717870e+00,\n'
 '         1.30249691e+00,  2.26416588e+00, -1.07168186e+00,\n'
 '        -6.86743915e-01,  7.27709293e-01, -4.41315174e-01,\n'
 '        -1.13700581e+00,  2.27952361e+00, -1.17131405e-01,\n'
 '        -7.17962444e-01, -2.44263500e-01,  1.93269348e+00,\n'
 '        -2.11709642e+00, -3.02399874e-01, -9.84235167e-01,\n'
 '        -8.74039829e-01,  3.26158553e-01,  4.53280449e-01,\n'
 '        -3.40200234e+00,  7.40883589e-01, -9.33068767e-02,\n'
 '        -2.11388022e-01, -8.33369136e-01, -2.49328947e+00,\n'
 '         8.33620548e-01, -9.23084676e-01, -1.55101609e+00,\n'
 '         1.97667062e+00, -4.20544386e-01,  5.83447337e-01,\n'
 '         2.00444043e-01,  2.28655386e+00, -1.01313817e+00,\n'
 '        -1.01452529e+00,  1.97294819e+00, -1.06843615e+00,\n'
 '        -2.79158449e+00,  2.01403141e+00, -2.20257699e-01,\n'
 '         3.49288195e-01,  7.89490342e-01, -2.33209038e+00,\n'
 '         6.92912042e-01,  7.02575803e-01,  6.26687109e-02,\n'
 '         7.92024255e-01,  9.03407335e-01,  3.97226870e-01,\n'
 '        -3.75792575e+00, -2.77048320e-01, -7.00665593e-01,\n'
 '         1.02411819e+00,  4.06434655e-01,  3.11347574e-01,\n'
 '         6.79419875e-01, -2.91306883e-01, -5.37319779e-01,\n'
 '        -3.91827559e+00,  5.09637475e-01, -2.03555632e+00,\n'
 '        -3.41634655e+00, -1.31292820e+00, -8.70496035e-03,\n'
 '         4.31224704e-03, -1.70373106e+00,  1.92735302e+00,\n'
 '         2.31147408e+00, -2.60481626e-01, -2.44323730e+00,\n'
 '         4.59857672e-01,  1.56580627e+00, -2.34000564e-01,\n'
 '        -6.65385902e-01,  2.05802366e-01,  5.17511368e-01,\n'
 '         2.14225745e+00,  3.11145157e-01, -1.42572272e+00,\n'
 '        -8.90599489e-02,  1.95509279e+00,  1.16258729e+00,\n'
 '        -1.89549947e+00, -8.43938708e-01,  8.83072495e-01,\n'
 '        -2.13020253e+00, -1.28235841e+00,  9.06595588e-01,\n'
 '         1.06795788e+00,  1.26766860e-01, -1.00933719e+00,\n'
 '        -5.38380444e-02, -6.14638686e-01, -4.49491292e-01,\n'
 '         2.90646386e+00, -2.84396350e-01,  7.35852420e-01,\n'
 '        -6.36161029e-01,  2.53355235e-01, -2.85778880e-01,\n'
 '        -7.70687461e-01, -1.89663482e+00,  2.70283747e+00,\n'
 '         5.68209529e-01, -2.03077078e-01, -8.37316513e-01,\n'
 '        -2.04758573e+00,  2.93209255e-01,  3.32184017e-01,\n'
 '        -1.47260344e+00, -6.75110519e-01,  7.31683791e-01,\n'
 '         6.49097860e-01, -3.11645567e-01,  1.64689028e+00,\n'
 '        -1.67279720e-01, -2.59464383e+00, -2.28392315e+00,\n'
 '        -9.71140742e-01, -2.22885027e-01, -6.96760893e-01,\n'
 '         7.85891056e-01, -6.96044922e-01,  9.02638435e-01,\n'
 '        -5.49666822e-01,  1.19787979e+00, -2.78431088e-01,\n'
 '         2.13172960e+00, -1.43779326e+00, -1.71370137e+00,\n'
 '         1.54281986e+00,  1.29853666e+00,  3.79844904e+00,\n'
 '         6.63868189e-01,  3.16528887e-01, -1.36002481e+00,\n'
 '         1.51250958e+00,  5.13599038e-01,  1.15215532e-01,\n'
 '        -7.93030560e-01, -1.67056310e+00, -1.15904307e+00,\n'
 '         1.51579320e-01,  1.58449316e+00,  9.14691329e-01,\n'
 '         4.12471563e-01,  2.86803698e+00,  8.29945683e-01,\n'
 '        -1.02116302e-01,  7.79797435e-02, -1.13689399e+00,\n'
 '        -1.02552676e+00, -3.29275131e-01, -3.41945338e+00,\n'
 '        -5.20612776e-01,  8.43565702e-01,  1.91650248e+00,\n'
 '        -1.43825531e-01,  6.53904975e-02,  1.26253569e+00,\n'
 '        -4.79652166e-01, -1.15731621e+00, -2.08303049e-01,\n'
 '        -1.50872004e+00,  2.52723718e+00, -8.78693163e-01,\n'
 '         1.33554161e+00, -1.62894595e+00,  8.90912294e-01,\n'
 '        -2.47774458e+00, -5.06422818e-02,  4.71899450e-01,\n'
 '         2.22659349e+00, -8.75283480e-01, -2.46945310e+00,\n'
 '        -1.23429513e+00, -1.42406869e+00, -1.69525921e+00,\n'
 '         8.88164818e-01,  2.60766697e+00,  4.51436400e-01,\n'
 '        -6.20465934e-01,  8.29218328e-01,  3.94593626e-01,\n'
 '         2.26505661e+00, -2.16693354e+00,  5.49507499e-01,\n'
 '        -1.45208144e+00,  3.43068719e-01,  6.35300517e-01,\n'
 '        -1.89900672e+00, -1.45662737e+00,  2.35972428e+00,\n'
 '         7.33375549e-01, -5.12891889e-01, -3.23973238e-01,\n'
 '         1.53478587e+00, -4.54276979e-01, -3.61469269e-01,\n'
 '         3.96459162e-01,  2.43617356e-01, -3.23265433e-01,\n'
 '        -2.90403247e-01, -2.96308947e+00,  6.43574893e-01,\n'
 '         1.28030133e+00,  4.77840185e-01, -5.67360580e-01,\n'
 '         2.39998913e+00, -6.66164756e-01,  3.67447615e-01,\n'
 '        -9.12482858e-01, -1.33132982e+00,  2.28416777e+00,\n'
 '         9.93028283e-02, -1.44096637e+00,  1.20021498e+00,\n'
 '         1.73112705e-01,  3.78848314e-02, -8.00463557e-02,\n'
 '        -1.47311878e+00, -1.70931220e-03,  5.25757790e-01,\n'
 '         1.31778014e+00, -1.20163345e+00, -3.32311749e-01,\n'
 '         1.11760390e+00, -1.90473628e+00,  1.19316965e-01,\n'
 '         1.30677998e-01, -5.82612693e-01,  1.00496578e+00,\n'
 '        -6.16321385e-01, -2.75213408e+00,  2.73333049e+00,\n'
 '         1.05794430e+00, -1.12501586e+00,  4.74292606e-01,\n'
 '         8.44756961e-01,  9.49396014e-01,  1.18267429e+00,\n'
 '        -2.98283100e+00,  8.88475061e-01,  1.01416647e+00,\n'
 '         1.43619001e-01,  2.99015856e+00, -5.03867626e-01,\n'
 '        -4.74884272e-01, -2.25748968e+00,  3.06881738e+00,\n'
 '         1.49907202e-01, -9.62598324e-01,  2.79987144e+00,\n'
 '        -2.96531856e-01,  1.22608602e+00,  1.60076964e+00,\n'
 '        -5.29106021e-01, -1.21738625e+00, -6.09460235e-01,\n'
 '        -2.21508646e+00, -5.95231652e-02, -4.03039789e+00,\n'
 '         3.77498001e-01,  3.45418811e+00,  1.12092292e+00,\n'
 '         7.65240371e-01,  7.30118752e-01, -1.96267307e+00,\n'
 '         1.35190678e+00,  1.69562578e+00,  3.78266156e-01,\n'
 '         2.48792124e+00, -1.55721521e+00, -9.87516701e-01,\n'
 '         1.01448643e+00, -7.06070065e-01, -2.70374298e-01,\n'
 '         2.34600067e+00,  1.46496236e+00,  2.20571923e+00,\n'
 '         2.06347898e-01, -4.06430215e-02, -2.25889397e+00,\n'
 '        -2.09232378e+00, -1.76068294e+00, -1.28291190e+00,\n'
 '        -1.38863802e-01, -1.65021527e+00, -9.64392006e-01,\n'
 '        -1.92842293e+00, -2.12797832e+00,  2.71563053e-01,\n'
 '         8.84436667e-01,  5.16289234e-01, -1.15051329e+00,\n'
 '         2.39998722e+00, -1.16583395e+00,  3.68341982e-01,\n'
 '         1.65633941e+00,  2.08908749e+00,  2.66056514e+00,\n'
 '         1.64717746e+00,  1.49468434e+00,  6.22358143e-01,\n'
 '        -7.80283809e-01, -1.01130593e+00,  6.92902565e-01,\n'
 '         1.00618744e+00,  1.49326444e+00, -1.59642011e-01,\n'
 '        -3.63639176e-01,  7.08327591e-02,  2.48592758e+00,\n'
 '         1.12697363e+00, -2.21358538e-01,  4.92021471e-01,\n'
 '        -1.41152334e+00,  1.07297349e+00, -5.28232575e-01,\n'
 '        -1.79597092e+00, -2.89096022e+00, -2.50475979e+00,\n'
 '         1.71279359e+00, -1.78278065e+00, -1.94229805e+00,\n'
 '        -1.76435852e+00, -7.26092219e-01,  6.32768989e-01,\n'
 '         1.01627171e+00, -2.26445705e-01, -1.56861997e+00,\n'
 '        -2.35773039e+00, -3.70078564e-01,  2.07625842e+00,\n'
 '         6.91520333e-01, -1.72367156e-01, -1.84960222e+00,\n'
 '        -1.38856137e+00, -1.05990723e-01,  6.69780433e-01,\n'
 '        -8.18261564e-01, -4.78697538e-01,  1.25272125e-01,\n'
 '        -1.66399449e-01,  5.17489314e-01,  8.96052122e-02,\n'
 '        -7.15888023e-01, -8.15288186e-01, -1.58582020e+00,\n'
 '        -2.30727172e+00, -3.12592053e+00,  7.90809274e-01,\n'
 '         4.81065124e-01, -1.87154532e+00, -1.48986614e+00,\n'
 '         1.08611250e+00]])')
'test_inceptionnet | batch_shape is: [1]'
'test_inceptionnet | logits.shape is: ivy.Shape(1, 1000)'
'||'
'test_inceptionnet | indices_test | true_indices is: [258 270 279]'
'test_inceptionnet | indices_test | calc_indices is: [258 279 270]'
