'BasicConv2d | Test | input shape is: ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 128) | done 3/3'
'BasicConv2d | Test | Test Successfull!'
'||'
'InceptionAux | random_test_tensor shape is: ivy.Shape(1, 17, 17, 768)'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'InceptionAux | input shape is:ivy.Shape(1, 17, 17, 768)'
'InceptionAux | done 1/8, output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 128) | done 3/3'
'InceptionAux | done 2/8'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 1, 1, 768) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 1, 1, 768) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 1, 1, 768) | done 3/3'
'InceptionAux | done 3/8'
'InceptionAux | input shape to adaptive_avg_pool2d is:ivy.Shape(1, 1, 1, 768)'
('InceptionAux | permuted input shape to adaptive_avg_pool2d is:ivy.Shape(1, '
 '768, 1, 1)')
('InceptionAux | output shape from adaptive_avg_pool2d is:ivy.Shape(1, 768, 1, '
 '1)')
('InceptionAux | permuted output shape from adaptive_avg_pool2d '
 'is:ivy.Shape(1, 1, 1, 768)')
'InceptionAux | done 4/8'
'InceptionAux | done 5/8'
'InceptionAux | done 8/8'
'InceptionAux | Test Successfull!'
'random_test_tensor shape is: ivy.Shape(1, 35, 35, 192)'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'input shape is:ivy.Shape(1, 35, 35, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 35, 35, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 35, 35, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 35, 35, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 35, 35, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 35, 35, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 35, 35, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 35, 35, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 35, 35, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 35, 35, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 35, 35, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 35, 35, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 35, 35, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 35, 35, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 35, 35, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 35, 35, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 35, 35, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 35, 35, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 35, 35, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 35, 35, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 35, 35, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 35, 35, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 35, 35, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 35, 35, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 35, 35, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 35, 35, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 35, 35, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 35, 35, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 35, 35, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 35, 35, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 35, 35, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 35, 35, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 35, 35, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 35, 35, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 35, 35, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 35, 35, 32) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 35, 35, 32)'
'InceptionA | outputs 20/20'
'Test Successfull!'
'random_test_tensor shape is: ivy.Shape(1, 35, 35, 288)'
'layer 1/4 built'
'layer 2/4 built'
'layer 3/4 built'
'layer 4/4 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'input shape is:ivy.Shape(1, 35, 35, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 35, 35, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 17, 17, 384) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 17, 17, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 35, 35, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 35, 35, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 35, 35, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 35, 35, 64) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 35, 35, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 35, 35, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 35, 35, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 35, 35, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 35, 35, 96) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 35, 35, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 35, 35, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 17, 17, 96) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 17, 17, 96)'
'one 20/20, output shape is:ivy.Shape(1, 17, 17, 288)'
'one 20/20'
'Test Successfull!'
'random_test_tensor shape is: ivy.Shape(1, 17, 17, 768)'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'input shape is:ivy.Shape(1, 17, 17, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 17, 17, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 17, 17, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 17, 17, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 17, 17, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 17, 17, 128) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 17, 17, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 17, 17, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 17, 17, 128) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 17, 17, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 17, 17, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 17, 17, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 17, 17, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 17, 17, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 17, 17, 128) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 17, 17, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 17, 17, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 17, 17, 128) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 17, 17, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 17, 17, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 17, 17, 128) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 17, 17, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 17, 17, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 17, 17, 128) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 17, 17, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 17, 17, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 17, 17, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 17, 17, 192)'
'one 10/20, output shape is:ivy.Shape(1, 17, 17, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 17, 17, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 17, 17, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 17, 17, 192)'
'one 20/20'
'Test Successfull!'
'random_test_tensor shape is: ivy.Shape(1, 17, 17, 768)'
'layer 1/6 built'
'layer 2/6 built'
'layer 3/6 built'
'layer 4/6 built'
'layer 5/6 built'
'layer 6/6 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'input shape is:ivy.Shape(1, 17, 17, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 17, 17, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 17, 17, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 17, 17, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 17, 17, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 8, 8, 320) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 8, 8, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 17, 17, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 17, 17, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 17, 17, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 17, 17, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 17, 17, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 17, 17, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 17, 17, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 17, 17, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 17, 17, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 17, 17, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 8, 8, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 8, 8, 192)'
'one 7/20, output shape is:ivy.Shape(1, 8, 8, 768)'
'one 20/20'
'Test Successfull!'
'random_test_tensor shape is: ivy.Shape(1, 8, 8, 1280)'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'input shape is:ivy.Shape(1, 8, 8, 1280)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 8, 8, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 8, 8, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 8, 8, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 8, 8, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 8, 8, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 8, 8, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 8, 8, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 8, 8, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 8, 8, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 8, 8, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 8, 8, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 8, 8, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 8, 8, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 8, 8, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 8, 8, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 8, 8, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 8, 8, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 8, 8, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 8, 8, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 8, 8, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 8, 8, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 8, 8, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 8, 8, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 8, 8, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 8, 8, 192)'
'20/20'
'Test Successfull!'
'test_inceptionnet | device is: cpu'
'test_inceptionnet | fw is: numpy'
'test_inceptionnet | load_weights is: False'
'InceptionV3 | build | layer 1/22 built'
'InceptionV3 | build | layer 2/22 built'
'layer 3/22 built'
'InceptionV3 | build | layer 4/22 built'
'InceptionV3 | build | layer 5/22 built'
'InceptionV3 | build | layer 6/22 built'
'InceptionV3 | build | layer 7/22 built'
'InceptionV3 | build | layer 8/22 built'
'InceptionV3 | build | layer 9/22 built'
'InceptionV3 | build | layer 10/22 built'
'InceptionV3 | build | layer 11/22 built'
'InceptionV3 | build | layer 12/22 built'
'InceptionV3 | build | layer 13/22 built'
'InceptionV3 | build | layer 14/22 built'
'InceptionV3 | build | layer 15/22 built'
'InceptionV3 | build | layer 17/22 built'
'InceptionV3 | build | layer 18/22 built'
'InceptionV3 | build | layer 19/22 built'
'InceptionV3 | build | layer 20/22 built'
'InceptionV3 | build | layer 21/22 built'
'InceptionV3 | build | layer 22/22 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/4 built'
'layer 2/4 built'
'layer 3/4 built'
'layer 4/4 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/6 built'
'layer 2/6 built'
'layer 3/6 built'
'layer 4/6 built'
'layer 5/6 built'
'layer 6/6 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'inceptionNet_v3 | building InceptionV3 model | done 1/3'
'InceptionV3 | forward | input data_format is:NHWC | done 1/27'
'InceptionV3 | forward | data_format is going to be used is:NHWC | done 1/27'
'InceptionV3 | forward | input shape is:ivy.Shape(1, 224, 224, 3) | done 1/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 224, 224, 3) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 111, 111, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 111, 111, 32) | done 2/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 111, 111, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 32) | done 3/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 109, 109, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 64) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 64) | done 4/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 54, 54, 64) | done 5/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 54, 54, 80) | done 3/3'
'InceptionV3 | forward | is:ivy.Shape(1, 54, 54, 80) | done 6/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 80) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 52, 52, 192) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 52, 52, 192) | done 7/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 192) | done 8/27'
'input shape is:ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 32) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 32)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 25, 25, 256) | done 9/27'
'input shape is:ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 10/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 11/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 384) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 96) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 96)'
'one 20/20, output shape is:ivy.Shape(1, 12, 12, 288)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 12/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 12, 12, 768) | done 13/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 14/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 15/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 16/27'
'v3 16/27, output shape is:ivy.Shape(1, 12, 12, 768)'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 5, 5, 192)'
'one 7/20, output shape is:ivy.Shape(1, 5, 5, 768)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 1280) | done 17/27'
'input shape is:ivy.Shape(1, 5, 5, 1280)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 18/27'
'input shape is:ivy.Shape(1, 5, 5, 2048)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 19/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 20/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 5, 5) | done 21/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 1, 1) | done 22/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 27/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 24/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 25/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048) | done 26/27'
'InceptionV3 | forward | fc | done 27/27'
('test_inceptionnet | logits is: ivy.array([[ 1.53972578e+05,  5.16676156e+05, '
 '-1.28958594e+05,\n'
 '         1.61402672e+05,  9.44533938e+05,  4.14909188e+05,\n'
 '        -1.60817328e+05,  9.71921250e+04, -4.83283219e+05,\n'
 '        -3.46945406e+05,  1.40317219e+05,  1.47711425e+06,\n'
 '         6.55104062e+04,  6.79247750e+05,  1.73553250e+05,\n'
 '        -7.70471812e+05,  6.23585875e+05,  7.70704375e+05,\n'
 '        -7.55122125e+05,  2.11797844e+05, -7.80623125e+05,\n'
 '         8.53679625e+05, -3.12946000e+05, -8.14365125e+05,\n'
 '         8.61466062e+05,  3.58036219e+05,  5.52583188e+05,\n'
 '        -2.99724875e+05,  7.18196438e+05, -6.89331000e+05,\n'
 '         4.21593312e+05,  1.19029388e+06, -1.73677891e+04,\n'
 '         2.33913484e+05, -2.26152688e+05,  1.18191797e+04,\n'
 '         4.75999062e+05, -3.89037875e+05, -5.70276875e+04,\n'
 '         3.00480000e+05, -1.46316562e+05, -1.30445200e+06,\n'
 '        -6.74189250e+05, -1.13996219e+05,  6.63770062e+05,\n'
 '         1.03243725e+06,  3.95321250e+05,  1.11369695e+05,\n'
 '         5.34325125e+05, -5.97955438e+05, -4.94500938e+04,\n'
 '        -1.07416675e+06, -5.05729375e+05, -4.55914750e+05,\n'
 '        -3.58829438e+05,  4.65839312e+05, -2.97021219e+05,\n'
 '         1.72505531e+05,  6.11937562e+05,  6.86990469e+04,\n'
 '         6.33626062e+05,  1.47873500e+05,  1.22925825e+06,\n'
 '        -6.16643125e+05, -1.11029238e+06,  2.66723438e+05,\n'
 '        -5.29413375e+05,  4.83844219e+05,  8.55489688e+04,\n'
 '         4.55817312e+05, -5.07381812e+05,  1.03169994e+06,\n'
 '        -2.15322281e+05,  4.97355469e+04, -5.29393812e+05,\n'
 '        -8.04620000e+05,  4.36899562e+05,  5.93155125e+05,\n'
 '         3.22120719e+05, -1.07336575e+06,  7.93823250e+05,\n'
 '         2.57976766e+05, -3.92048062e+05,  4.48126375e+05,\n'
 '        -2.16463562e+05, -7.83803500e+05, -1.15157362e+06,\n'
 '        -5.30970125e+05, -3.89461969e+05,  7.81958438e+04,\n'
 '        -2.07818406e+05,  3.46897062e+05,  2.43976734e+05,\n'
 '        -1.22337375e+06, -5.37792125e+05, -4.72318125e+04,\n'
 '         7.50919000e+05, -3.92805250e+05, -6.15020625e+05,\n'
 '        -4.25395219e+05,  3.33761844e+05, -1.72128750e+05,\n'
 '         3.69539406e+05,  3.10727688e+05,  8.60215875e+05,\n'
 '         1.64541200e+06,  3.38787688e+05, -2.80778094e+05,\n'
 '         5.63512656e+04,  5.61777062e+05,  6.73466312e+05,\n'
 '        -1.70633844e+05,  7.87753359e+04, -1.77558281e+05,\n'
 '        -2.14368438e+05, -1.02411016e+04, -6.21373375e+05,\n'
 '        -3.48636875e+04,  9.63021812e+05, -9.07380625e+05,\n'
 '        -5.42658500e+05, -2.58861719e+04,  7.66672188e+05,\n'
 '         5.41315000e+05,  7.93238250e+05, -7.32152812e+05,\n'
 '         5.31392625e+05, -1.04284344e+06,  1.10110531e+05,\n'
 '         8.96033812e+05, -4.53761375e+05, -8.98044688e+05,\n'
 '        -3.25044000e+05,  3.75887781e+05,  2.24527400e+06,\n'
 '         3.18792906e+05, -5.18502000e+05, -2.94333062e+05,\n'
 '        -8.21411375e+05,  5.55371938e+05, -9.22430625e+05,\n'
 '         1.94955656e+05, -4.67630125e+05, -1.74115344e+05,\n'
 '        -9.07730438e+05, -8.51741688e+05,  5.86643625e+05,\n'
 '         8.96107688e+05,  4.86383000e+05, -8.90232500e+04,\n'
 '        -1.98345812e+05,  8.70481875e+04, -1.07971055e+05,\n'
 '        -5.26876062e+05,  2.54068266e+05, -7.44173438e+05,\n'
 '        -8.47632625e+05,  5.23194844e+05, -6.26913750e+05,\n'
 '        -3.18769344e+05,  1.63392109e+04,  2.70085656e+05,\n'
 '         1.10467350e+06, -8.69169438e+05,  6.99812562e+05,\n'
 '         2.99198359e+04,  1.28419775e+06, -3.20197812e+04,\n'
 '         3.51124188e+05, -4.18832938e+05, -1.69144875e+06,\n'
 '         5.50881875e+04,  2.75127562e+05, -6.09209688e+05,\n'
 '         3.40760000e+05,  5.85072750e+05,  3.25122562e+05,\n'
 '         1.54180781e+05, -1.94394938e+05, -3.80954875e+05,\n'
 '         3.54824125e+05,  8.20657625e+05,  3.40843812e+05,\n'
 '         2.55761562e+05,  6.56319531e+03,  8.62299688e+05,\n'
 '        -5.91443625e+05, -1.89952656e+04,  6.95338250e+05,\n'
 '        -3.32324625e+05,  8.62601250e+05, -4.43543344e+05,\n'
 '        -1.18122266e+05,  1.27566109e+05,  1.88976531e+05,\n'
 '        -7.09549250e+05, -5.31075000e+05,  7.25475812e+05,\n'
 '         3.93578438e+05, -8.28174750e+05, -8.42472000e+05,\n'
 '         3.42648875e+05,  4.24899031e+05, -5.14094531e+05,\n'
 '         2.89944469e+05,  2.61750109e+05, -2.09063188e+05,\n'
 '         6.60512000e+05,  2.35462500e+03, -8.31823625e+05,\n'
 '         4.67043344e+05,  3.39215375e+05,  6.14193625e+05,\n'
 '        -5.97176750e+05,  8.94130250e+05,  7.43371375e+05,\n'
 '        -3.42640625e+02, -1.33643031e+05, -2.13323844e+05,\n'
 '         2.96345688e+05,  6.25429500e+05,  1.66446266e+05,\n'
 '         5.67102688e+05,  1.27701200e+06,  5.50853250e+05,\n'
 '        -4.20259688e+05,  3.87347000e+05,  7.86830625e+05,\n'
 '         6.14782750e+05,  3.40933750e+05, -1.41601200e+06,\n'
 '        -2.07185125e+05,  5.68892125e+05, -4.40017625e+05,\n'
 '        -1.28705125e+06,  3.31047125e+05,  2.41891656e+05,\n'
 '         5.53047750e+05, -5.90322188e+05,  4.79261125e+05,\n'
 '         1.93680312e+04,  1.02902869e+06, -7.65315469e+04,\n'
 '        -6.08390625e+05,  5.94446875e+03,  4.59077250e+05,\n'
 '         1.01956519e+06, -6.63495688e+05, -8.55508500e+05,\n'
 '         4.78728500e+05, -9.52124875e+05,  2.95457188e+05,\n'
 '         2.10538422e+05,  6.83655312e+04, -3.16207344e+05,\n'
 '        -4.83390719e+05,  9.15748375e+05, -1.54731344e+05,\n'
 '         1.65359988e+06,  9.81993312e+05, -4.11292812e+05,\n'
 '        -1.15606912e+06, -7.56355188e+05, -6.97556375e+05,\n'
 '        -2.96292844e+05, -2.97246594e+05,  3.29624938e+05,\n'
 '        -2.74305688e+05,  1.98857656e+05,  3.20235750e+05,\n'
 '        -6.26009625e+05,  5.21377750e+05,  3.91712625e+05,\n'
 '        -3.53527562e+05,  1.49026675e+06, -1.10552125e+06,\n'
 '         1.51368188e+06, -8.73390312e+05,  9.18068625e+05,\n'
 '        -1.34804450e+06,  5.76950750e+05,  7.59966250e+05,\n'
 '         3.69246312e+05, -3.62316750e+05, -1.58358984e+05,\n'
 '        -2.47567484e+05, -4.85356625e+05,  8.78115000e+05,\n'
 '         7.49100688e+05,  1.76563938e+05, -1.17128625e+06,\n'
 '         6.38711438e+05,  1.29927900e+06, -4.51355250e+05,\n'
 '        -6.95630062e+05,  9.15116000e+05,  4.40265281e+05,\n'
 '         1.34993000e+05,  1.15970550e+06, -1.71196562e+05,\n'
 '        -1.77109297e+04,  6.25604875e+05,  1.34478888e+06,\n'
 '        -2.38200438e+05,  1.21862312e+06, -9.29284688e+04,\n'
 '         9.22037656e+04,  4.28354438e+05,  5.81359875e+05,\n'
 '         1.21310400e+06,  5.72606812e+05, -4.80127375e+05,\n'
 '         2.32838000e+05, -1.14783406e+05,  9.48504688e+05,\n'
 '         1.10209650e+06,  5.01366562e+04,  5.17654938e+05,\n'
 '         4.64305688e+05,  3.67713094e+05,  4.11126531e+05,\n'
 '        -4.49096812e+05, -4.81895062e+05, -1.21499250e+05,\n'
 '         2.08651812e+05,  6.00809688e+05, -4.90223875e+05,\n'
 '         1.24601125e+05, -4.61755344e+05,  4.54564531e+05,\n'
 '        -6.50484125e+05, -2.75223469e+05, -2.34303781e+05,\n'
 '        -1.14948375e+06,  3.72351812e+05,  5.67077688e+05,\n'
 '        -1.45940575e+06, -5.00589500e+05,  1.13947425e+06,\n'
 '         1.17502656e+05, -5.60480312e+04,  1.25271250e+05,\n'
 '        -1.05167025e+06,  2.65661406e+04, -8.27281250e+04,\n'
 '         2.54672234e+05, -6.18197250e+05, -5.66104500e+05,\n'
 '        -4.51381156e+05, -4.02209969e+05,  9.03130875e+05,\n'
 '         3.80288562e+05,  3.16678750e+05, -4.39097938e+05,\n'
 '         1.57713550e+06, -1.88041488e+06,  2.90561375e+05,\n'
 '        -4.58283656e+05,  3.45402812e+05, -2.38024812e+05,\n'
 '        -8.96162250e+05,  1.48315675e+06, -3.51304688e+05,\n'
 '         2.02704531e+05,  7.91038062e+05,  2.25212250e+05,\n'
 '        -1.00441570e+05, -5.59327812e+04, -3.31462375e+05,\n'
 '         4.89359125e+05, -2.80157188e+05,  5.42987125e+05,\n'
 '         5.68846750e+05,  2.56420969e+05,  5.58659000e+05,\n'
 '         1.19298850e+06, -1.35489000e+05,  4.09740812e+05,\n'
 '        -6.75101938e+05, -1.45392656e+05,  5.61764766e+04,\n'
 '        -1.17480297e+05,  1.27723262e+06,  3.30941500e+05,\n'
 '        -3.37882250e+05, -1.31498250e+06, -2.24464531e+05,\n'
 '         8.57359938e+05, -7.38034531e+04,  5.47035625e+04,\n'
 '         4.04326062e+05,  8.12700750e+05,  1.24088850e+06,\n'
 '        -3.88646500e+05,  2.18584984e+05, -4.66173500e+05,\n'
 '         1.02689456e+06, -5.91275312e+05, -2.30903312e+05,\n'
 '         2.04410977e+04, -1.15010094e+05,  7.88807344e+04,\n'
 '        -5.24064344e+05, -7.44490938e+04, -5.25880500e+05,\n'
 '        -8.60311438e+05, -7.59828562e+05,  5.18531438e+05,\n'
 '         1.47070800e+06,  2.45117688e+05, -4.11814375e+04,\n'
 '        -5.90436500e+05,  4.40784625e+05,  2.31876094e+05,\n'
 '         7.03466125e+05, -1.48017150e+06,  4.28287969e+05,\n'
 '         3.94307625e+05, -6.84743125e+04,  5.92137875e+05,\n'
 '        -3.74093125e+04,  1.22365250e+05, -4.70401094e+04,\n'
 '        -4.85422156e+05, -1.09219742e+05, -9.43541250e+04,\n'
 '        -7.22462875e+05,  1.53549594e+05, -5.08820531e+05,\n'
 '         1.04943781e+05, -5.82725375e+05,  6.44045812e+05,\n'
 '         7.00939500e+05, -3.57578062e+05,  1.13325125e+06,\n'
 '        -6.78465062e+05, -6.13585250e+05, -2.04153469e+05,\n'
 '         5.80674375e+04,  7.91849062e+04,  3.31683438e+05,\n'
 '         3.21836844e+05,  9.93423250e+05,  4.72004031e+05,\n'
 '         1.47892838e+06,  1.52096094e+05, -4.87810375e+05,\n'
 '         4.63977109e+04,  1.32578300e+06,  5.95008250e+05,\n'
 '         1.08849150e+06,  4.35199094e+05, -8.65869312e+05,\n'
 '        -4.38165875e+05,  1.69266500e+05, -9.44338062e+05,\n'
 '         6.30684062e+04, -2.74514781e+05,  6.79279250e+05,\n'
 '         7.89740125e+05, -6.14677000e+05,  1.26998719e+05,\n'
 '        -8.75586188e+05, -4.82151438e+05,  6.88106875e+04,\n'
 '        -1.16082547e+05,  5.99597250e+05, -2.00418250e+05,\n'
 '         6.34422188e+04,  7.57002000e+05,  2.93387438e+05,\n'
 '        -3.01151469e+05, -6.72021312e+05,  5.11951844e+05,\n'
 '        -4.10725688e+05,  3.98289594e+05,  1.09143062e+06,\n'
 '         7.26916500e+05, -6.41382750e+05,  3.54294750e+05,\n'
 '         2.54265750e+05, -1.00308250e+05, -1.11337988e+06,\n'
 '        -7.58739688e+05, -7.94690750e+05,  1.75736812e+05,\n'
 '         2.25225156e+05, -5.46900000e+04,  6.94384875e+05,\n'
 '        -8.25821250e+04,  1.33977150e+06,  6.33709375e+03,\n'
 '         4.86678750e+05, -9.06752125e+05, -3.02807375e+05,\n'
 '         5.48733000e+05, -2.56991562e+05, -5.91044750e+05,\n'
 '         1.84283938e+05, -6.38840938e+04, -2.28873438e+05,\n'
 '        -8.30798875e+05, -8.76066250e+04, -7.57405188e+05,\n'
 '        -4.85510312e+04,  4.86395125e+05,  9.75546250e+05,\n'
 '        -6.98243875e+05, -8.81481500e+05,  2.47239023e+04,\n'
 '        -4.27667500e+05,  2.29029031e+05, -6.26530062e+05,\n'
 '        -3.06104719e+05,  5.47172500e+05,  7.96915688e+05,\n'
 '        -8.78263750e+04,  3.70771125e+05, -5.42671250e+05,\n'
 '         5.09309062e+04, -2.69811281e+05, -1.22183775e+06,\n'
 '        -8.70119531e+03, -2.83663438e+05, -4.40541031e+05,\n'
 '        -5.32577875e+05, -2.78810500e+05,  4.46386406e+05,\n'
 '        -6.96337625e+05,  2.41708594e+05, -5.03064062e+04,\n'
 '         1.12560562e+05, -4.66337031e+05, -5.26420375e+05,\n'
 '         3.89297531e+05,  7.92427250e+05, -1.47491675e+06,\n'
 '         5.56511188e+05, -9.57340469e+04, -1.69558406e+05,\n'
 '        -5.43598250e+05, -8.17674688e+05, -8.94580625e+05,\n'
 '         1.77084312e+05,  1.20160725e+06, -1.43675825e+06,\n'
 '         2.30804531e+05, -1.18833125e+05,  6.98452875e+05,\n'
 '         2.34490312e+04, -3.90574750e+05,  2.05692188e+05,\n'
 '         3.71310125e+05, -1.59497969e+05,  3.02681938e+05,\n'
 '         1.53824094e+05,  4.55378906e+04, -8.65861438e+05,\n'
 '         5.88392000e+05, -1.14639641e+05,  5.14329625e+05,\n'
 '        -5.57043750e+03,  1.46647156e+05,  2.85839000e+05,\n'
 '        -1.40400625e+04,  6.28047625e+05,  3.92624875e+05,\n'
 '         2.27768078e+05, -5.51569438e+05, -1.05202850e+06,\n'
 '        -1.15800000e+06,  2.15727562e+05,  1.03465588e+06,\n'
 '        -4.44447250e+05, -4.37444438e+05,  5.42740625e+05,\n'
 '        -4.25156562e+05,  1.25964984e+05, -2.28304500e+05,\n'
 '        -5.29275688e+05,  4.84743000e+05,  4.07187750e+05,\n'
 '        -2.68385406e+05, -6.09955000e+05, -7.82214125e+05,\n'
 '        -4.38590781e+05, -3.87244719e+05, -3.94263000e+05,\n'
 '        -5.47271500e+05, -3.26581625e+05, -8.55337375e+05,\n'
 '         5.77870688e+05, -4.77181562e+05,  1.36890838e+06,\n'
 '         2.11627406e+05, -5.24403500e+05, -9.93994375e+05,\n'
 '         4.66912281e+05, -9.23418750e+04, -1.77762075e+06,\n'
 '         9.95510000e+04,  1.57497700e+06, -5.28104188e+05,\n'
 '        -8.01036938e+05,  9.36823000e+05,  5.44823906e+04,\n'
 '         1.12101100e+06,  1.50712275e+06, -5.08421000e+05,\n'
 '         9.38879312e+05, -9.09656250e+03,  8.45061750e+05,\n'
 '         5.68040250e+05,  6.67893750e+05,  3.54092906e+05,\n'
 '         7.77853438e+05, -1.84738578e+05,  4.13445781e+05,\n'
 '        -1.63308656e+05,  9.98962438e+05, -1.44301075e+06,\n'
 '         9.79080812e+05, -8.33626750e+05, -1.65793938e+05,\n'
 '         6.26568312e+05,  5.91782062e+05,  9.44546250e+04,\n'
 '        -6.98051500e+05,  4.94270188e+05, -6.42701500e+05,\n'
 '        -3.15451375e+05,  6.17964625e+05,  1.42752600e+06,\n'
 '        -1.09834812e+05,  5.44986938e+05, -8.94102750e+05,\n'
 '        -8.21767688e+05,  3.27905625e+04,  2.90102812e+05,\n'
 '         3.03935500e+05, -2.84142156e+05, -1.87059719e+05,\n'
 '        -1.27804766e+05, -1.01650519e+06, -4.17322031e+05,\n'
 '         1.57875844e+05,  4.55520062e+05,  1.55607000e+05,\n'
 '         2.61815125e+05,  8.11922812e+05,  7.28302250e+05,\n'
 '        -2.97091094e+05,  6.24563438e+05, -7.35949125e+05,\n'
 '        -4.26020875e+05, -3.98054031e+05,  3.80947625e+05,\n'
 '        -1.46817950e+06, -9.46622875e+05, -5.34001750e+05,\n'
 '        -9.80510062e+05,  5.93603062e+05,  5.23143656e+05,\n'
 '        -5.47080625e+05,  8.79434000e+05,  3.31146562e+05,\n'
 '         1.14345512e+06,  2.82648750e+05, -3.97406750e+05,\n'
 '         4.31243000e+05,  9.69721188e+05, -1.04691766e+05,\n'
 '        -6.03520000e+05,  2.04154719e+05,  1.54009988e+06,\n'
 '        -6.70686125e+05, -7.58319375e+05, -4.31149375e+05,\n'
 '         2.44370594e+05, -1.19140600e+06,  6.00978062e+05,\n'
 '        -7.62987500e+05, -4.94793594e+05, -9.36119125e+05,\n'
 '         9.91306000e+05,  9.97605125e+05,  1.12078750e+06,\n'
 '        -9.94526250e+05, -1.24371075e+06,  3.77225969e+05,\n'
 '         1.85841800e+06, -5.39693750e+05,  8.02099938e+05,\n'
 '         1.58292700e+06,  5.57283500e+05, -7.59236125e+05,\n'
 '         2.95194562e+05,  1.01449700e+06,  2.13094875e+05,\n'
 '        -5.37364312e+05, -2.57069125e+05,  5.02571688e+05,\n'
 '         9.55530625e+05, -2.30095094e+05, -1.47453000e+06,\n'
 '        -7.21942000e+05,  1.23013550e+06,  1.56580844e+05,\n'
 '        -1.32874075e+06, -1.67966200e+06,  3.46552875e+05,\n'
 '         1.29252500e+04,  1.21883625e+05, -1.05540988e+06,\n'
 '         1.31649825e+06, -5.00154375e+04, -1.09250406e+05,\n'
 '        -4.50955844e+05,  1.99380750e+05, -2.68954375e+04,\n'
 '         5.04014656e+05, -6.38643688e+05, -3.24921594e+05,\n'
 '         6.62084062e+05,  4.75925438e+05,  5.25125000e+05,\n'
 '        -1.33206050e+06,  4.09004844e+04,  2.57832500e+04,\n'
 '        -1.29297525e+06,  7.39203750e+05,  2.82569656e+05,\n'
 '        -1.88103500e+05, -3.39732969e+05, -8.71443750e+05,\n'
 '         9.36608375e+05,  6.50309500e+05, -3.02499125e+05,\n'
 '         1.23228400e+06,  8.10892500e+05,  2.47395219e+05,\n'
 '        -4.96386875e+04, -5.79393875e+05,  8.89067438e+05,\n'
 '         8.64719875e+05, -6.53298000e+05, -8.02285250e+05,\n'
 '         2.27029562e+05,  5.77922500e+04,  4.04453938e+05,\n'
 '         1.55147047e+05,  1.16552550e+06,  3.83371031e+05,\n'
 '         4.78007000e+05, -2.21670125e+05, -3.05244062e+05,\n'
 '        -9.84425938e+04,  7.17759125e+05,  3.88223438e+05,\n'
 '         7.74011125e+05,  3.68636219e+05, -1.78348125e+05,\n'
 '        -1.93352812e+04,  2.88641562e+04,  7.76211000e+05,\n'
 '        -5.95282375e+05, -3.36213469e+05,  4.05782062e+05,\n'
 '         8.04980156e+04,  9.28860375e+05,  3.74574938e+05,\n'
 '         3.29986562e+05,  3.87540719e+05, -1.09803800e+06,\n'
 '        -3.67586438e+05, -2.66124031e+05, -1.06349086e+05,\n'
 '        -7.81797125e+05,  2.55853297e+05, -5.67734812e+05,\n'
 '         5.55559062e+05, -3.75343906e+04,  7.72536719e+04,\n'
 '         2.56620844e+05,  7.77880000e+05,  6.01365156e+04,\n'
 '         3.45359719e+05, -1.40604262e+06, -6.45073312e+05,\n'
 '         6.83028062e+05,  4.83029656e+05,  3.96703656e+05,\n'
 '        -4.33755188e+05, -4.46767094e+05,  5.43278438e+04,\n'
 '         6.69440625e+04,  1.61762344e+05,  1.45981750e+05,\n'
 '        -7.92534625e+05, -4.31630500e+05, -6.50251125e+05,\n'
 '        -3.98691344e+05, -7.19947438e+05, -3.82168781e+05,\n'
 '        -5.68769875e+05, -1.48327750e+06,  6.85479562e+05,\n'
 '         1.31785925e+06, -3.29611156e+05,  1.80911188e+05,\n'
 '        -4.55975312e+05,  7.16593375e+05, -8.36897125e+05,\n'
 '         1.05626300e+06, -6.90745562e+05, -4.10700375e+05,\n'
 '         1.33852100e+06,  5.49873812e+05,  8.27022312e+05,\n'
 '         9.70446812e+05,  6.91671250e+05,  1.26922412e+06,\n'
 '         1.07533225e+06,  7.14164188e+05,  2.91007062e+05,\n'
 '         1.03945719e+06, -4.02817469e+05, -6.73676875e+04,\n'
 '         6.11823188e+05, -9.72671875e+02, -5.09424375e+05,\n'
 '        -1.08997500e+06,  3.47711438e+05,  5.15100250e+05,\n'
 '        -1.13419700e+06, -6.13681750e+05,  7.14093312e+05,\n'
 '        -3.00936000e+05, -2.72234375e+05,  2.99478219e+05,\n'
 '        -2.61049031e+05, -2.81281875e+05,  3.08725062e+05,\n'
 '         6.35416312e+05,  1.45987594e+05, -2.68581125e+05,\n'
 '        -1.02138544e+06,  1.00751900e+06,  6.10507812e+05,\n'
 '        -1.39150188e+05,  2.22545125e+05,  5.39772250e+05,\n'
 '        -7.47320250e+05, -5.99840188e+05,  4.20194469e+05,\n'
 '        -2.59696000e+05,  1.38097238e+06,  1.74298688e+05,\n'
 '         4.06975562e+05,  5.94802875e+05, -5.34111625e+05,\n'
 '        -6.31863500e+05,  6.99257188e+04, -6.99393562e+05,\n'
 '        -4.76078281e+05,  7.41483562e+05, -4.24715625e+05,\n'
 '        -1.85923875e+05,  6.31757875e+05,  5.01717125e+05,\n'
 '        -1.25679812e+05,  5.71845250e+05,  5.65321875e+03,\n'
 '         1.86620547e+05,  4.23134438e+05, -2.50282781e+05,\n'
 '        -1.23281172e+04,  2.62688125e+04, -1.17132094e+05,\n'
 '        -1.92005312e+04,  1.77060328e+05, -2.12807438e+05,\n'
 '        -1.47296844e+05,  1.05339325e+06,  1.38956338e+06,\n'
 '         3.60485312e+05, -5.56318000e+05, -3.59251125e+05,\n'
 '         5.05434906e+05, -1.15822562e+06, -1.22496075e+06,\n'
 '         6.73140688e+05,  2.19124094e+05, -9.91908250e+05,\n'
 '        -8.83112250e+05,  3.21494125e+05, -6.88862500e+04,\n'
 '         1.30122031e+05, -8.60916875e+05,  8.87925500e+05,\n'
 '        -5.83311125e+05,  1.91661453e+05, -5.71554875e+05,\n'
 '        -1.22107453e+05,  1.77975688e+05,  2.95700469e+04,\n'
 '        -4.98343969e+05, -1.17214375e+04, -1.49986250e+04,\n'
 '        -2.88595625e+04,  5.29911875e+04, -4.77471875e+04,\n'
 '        -1.15419406e+05,  3.45145000e+04, -3.41460406e+05,\n'
 '         7.84100938e+04, -4.50628188e+05,  5.06365750e+05,\n'
 '         2.66503906e+05, -3.14749625e+05,  7.85823062e+05,\n'
 '        -1.41106262e+06, -4.33967000e+05, -5.22169750e+05,\n'
 '        -2.16104312e+05,  3.48263625e+05, -3.40854938e+05,\n'
 '         2.97936406e+05,  8.27594750e+05, -5.34909875e+05,\n'
 '         9.55259750e+05, -7.74413250e+05,  3.77619094e+05,\n'
 '        -5.20040312e+04, -2.42505453e+05, -1.81847500e+05,\n'
 '         7.53219750e+05, -1.10185025e+06, -5.28779188e+05,\n'
 '         1.11073588e+06, -4.85212188e+04,  8.80254125e+05,\n'
 '        -2.05389734e+05, -1.07973344e+05, -1.19642550e+06,\n'
 '         1.09475775e+06,  1.07987925e+06, -1.83838281e+04,\n'
 '        -9.21945500e+05,  7.94857062e+05,  4.00864000e+05,\n'
 '        -8.99048750e+04,  3.57725625e+04, -5.64979812e+05,\n'
 '        -1.32514675e+06, -1.83723594e+05, -1.89284188e+05,\n'
 '        -7.38952812e+05, -3.55462344e+04, -6.72632312e+05,\n'
 '         3.84848750e+05, -6.60623562e+05, -8.42496000e+05,\n'
 '         5.72769125e+05, -2.81535125e+05, -1.24341138e+06,\n'
 '         3.38592344e+04,  3.39577344e+04,  4.97428656e+05,\n'
 '        -4.87351250e+04,  8.95222750e+05,  1.16013675e+06,\n'
 '        -7.49922375e+05,  4.01542656e+05,  9.76060250e+05,\n'
 '        -7.38025625e+05,  4.43359438e+05,  4.27234062e+05,\n'
 '         1.36969200e+06,  1.53770938e+06,  2.93304812e+05,\n'
 '        -2.86703438e+05, -4.80757344e+05, -6.34279625e+05,\n'
 '        -8.45033875e+05,  9.30521312e+05,  3.25498812e+05,\n'
 '         5.31461250e+04, -1.85710000e+04,  5.16013406e+05,\n'
 '         7.41345125e+05,  8.53109219e+04,  4.38183250e+05,\n'
 '        -3.82956562e+05,  3.07124125e+05, -3.65807000e+05,\n'
 '        -8.73853250e+05,  1.87877750e+05, -1.34747391e+05,\n'
 '        -3.04698812e+05]])')
'test_inceptionnet | batch_shape is: [1]'
'test_inceptionnet | logits.shape is: ivy.Shape(1, 1000)'
'||'
'test_inceptionnet | device is: cpu'
'test_inceptionnet | fw is: numpy'
'test_inceptionnet | load_weights is: True'
'InceptionV3 | build | layer 1/22 built'
'InceptionV3 | build | layer 2/22 built'
'layer 3/22 built'
'InceptionV3 | build | layer 4/22 built'
'InceptionV3 | build | layer 5/22 built'
'InceptionV3 | build | layer 6/22 built'
'InceptionV3 | build | layer 7/22 built'
'InceptionV3 | build | layer 8/22 built'
'InceptionV3 | build | layer 9/22 built'
'InceptionV3 | build | layer 10/22 built'
'InceptionV3 | build | layer 11/22 built'
'InceptionV3 | build | layer 12/22 built'
'InceptionV3 | build | layer 13/22 built'
'InceptionV3 | build | layer 14/22 built'
'InceptionV3 | build | layer 15/22 built'
'InceptionV3 | build | layer 17/22 built'
'InceptionV3 | build | layer 18/22 built'
'InceptionV3 | build | layer 19/22 built'
'InceptionV3 | build | layer 20/22 built'
'InceptionV3 | build | layer 21/22 built'
'InceptionV3 | build | layer 22/22 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/4 built'
'layer 2/4 built'
'layer 3/4 built'
'layer 4/4 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/6 built'
'layer 2/6 built'
'layer 3/6 built'
'layer 4/6 built'
'layer 5/6 built'
'layer 6/6 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'inceptionNet_v3 | building InceptionV3 model | done 1/3'
'inceptionNet_v3 | clearning pretrained weights | done 2/3'
'inceptionNet_v3 | loading pretrained weights | done 3/3'
'InceptionV3 | forward | input data_format is:NHWC | done 1/27'
'InceptionV3 | forward | data_format is going to be used is:NHWC | done 1/27'
'InceptionV3 | forward | input shape is:ivy.Shape(1, 224, 224, 3) | done 1/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 224, 224, 3) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 111, 111, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 111, 111, 32) | done 2/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 111, 111, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 32) | done 3/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 109, 109, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 64) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 64) | done 4/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 54, 54, 64) | done 5/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 54, 54, 80) | done 3/3'
'InceptionV3 | forward | is:ivy.Shape(1, 54, 54, 80) | done 6/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 80) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 52, 52, 192) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 52, 52, 192) | done 7/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 192) | done 8/27'
'input shape is:ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 32) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 32)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 25, 25, 256) | done 9/27'
'input shape is:ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 10/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 11/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 384) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 96) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 96)'
'one 20/20, output shape is:ivy.Shape(1, 12, 12, 288)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 12/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 12, 12, 768) | done 13/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 14/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 15/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 16/27'
'v3 16/27, output shape is:ivy.Shape(1, 12, 12, 768)'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 5, 5, 192)'
'one 7/20, output shape is:ivy.Shape(1, 5, 5, 768)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 1280) | done 17/27'
'input shape is:ivy.Shape(1, 5, 5, 1280)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 18/27'
'input shape is:ivy.Shape(1, 5, 5, 2048)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 19/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 20/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 5, 5) | done 21/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 1, 1) | done 22/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 27/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 24/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 25/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048) | done 26/27'
'InceptionV3 | forward | fc | done 27/27'
('test_inceptionnet | logits is: ivy.array([[ 1.45297870e-01,  3.05631608e-01, '
 '-1.55588210e-01,\n'
 '         1.29769039e+00,  1.87415743e+00,  3.88040185e-01,\n'
 '         2.98837709e+00,  1.37338102e+00,  2.54612493e+00,\n'
 '        -1.46352637e+00,  6.36931583e-02,  1.17366314e+00,\n'
 '        -5.02898574e-01,  1.52043939e+00,  2.67396689e+00,\n'
 '        -4.69695866e-01, -7.36258030e-01,  7.69616485e-01,\n'
 '         1.09408498e+00,  2.30266333e+00,  2.06388164e+00,\n'
 '        -1.47347903e+00,  3.83140743e-02, -1.29224348e+00,\n'
 '        -5.52205555e-02, -1.40691054e+00, -6.14226460e-01,\n'
 '        -1.34867358e+00,  5.83714247e-02,  5.21685421e-01,\n'
 '        -2.23066837e-01,  4.51417416e-02,  7.10826516e-01,\n'
 '        -1.40097141e+00,  1.36076880e+00, -2.22322249e+00,\n'
 '        -8.12826276e-01, -7.96567857e-01, -2.25644469e+00,\n'
 '         2.40372449e-01,  9.92673397e-01,  8.94192159e-02,\n'
 '        -1.27743077e+00,  3.41518998e-01, -8.93371463e-01,\n'
 '        -1.10163152e+00, -9.56229448e-01,  2.50522077e-01,\n'
 '        -1.87925196e+00, -2.18810275e-01, -3.36427361e-01,\n'
 '         6.70928717e-01,  2.20506549e-01, -1.48654473e+00,\n'
 '         1.58389270e+00,  2.61530042e-01, -3.14688325e+00,\n'
 '        -1.40723836e+00, -9.56800044e-01, -4.12747860e-02,\n'
 '        -1.76165712e+00,  8.80210340e-01, -3.04801607e+00,\n'
 '        -1.55480719e+00, -9.33802545e-01,  1.91287070e-01,\n'
 '        -1.54336464e+00,  8.42229187e-01, -1.21436906e+00,\n'
 '        -1.17481375e+00, -8.95042062e-01,  1.01839006e-02,\n'
 '        -2.09835958e+00, -1.91409016e+00, -1.05098069e+00,\n'
 '        -6.59950376e-01, -1.78617954e+00, -4.55626130e-01,\n'
 '        -2.95377195e-01,  1.14304399e+00, -7.71539390e-01,\n'
 '         2.28569817e+00,  1.64033174e+00,  8.38990271e-01,\n'
 '         1.55971432e+00, -7.35634983e-01, -1.07468522e+00,\n'
 '        -1.93145847e+00, -4.89111751e-01,  1.08355761e+00,\n'
 '        -1.88205570e-01,  8.97793174e-02, -2.35954702e-01,\n'
 '        -5.88424385e-01, -1.00415730e+00, -2.94697463e-01,\n'
 '         1.66254771e+00, -2.70782185e+00, -3.48860359e+00,\n'
 '         2.12494636e+00,  1.52047503e+00,  1.69441330e+00,\n'
 '        -5.35569370e-01,  6.44516289e-01,  2.18436909e+00,\n'
 '        -3.02630424e+00, -2.09846109e-01,  1.79824114e-01,\n'
 '         6.09349728e-01, -2.25966424e-01, -1.72612309e+00,\n'
 '        -1.15030885e+00,  1.84976435e+00,  2.27904081e+00,\n'
 '         6.30553663e-01, -1.77534890e+00, -3.10516477e+00,\n'
 '        -1.54605687e-01, -2.14616728e+00, -1.94439614e+00,\n'
 '        -1.31075704e+00, -2.71911144e+00, -1.37446761e-01,\n'
 '         8.48178029e-01, -1.15035629e+00,  2.70443916e-01,\n'
 '        -2.09853339e+00,  1.68924856e+00, -1.34397775e-01,\n'
 '        -7.12526798e-01,  1.03701107e-01, -7.53107369e-02,\n'
 '         2.07431746e+00, -1.89704132e+00, -8.89075220e-01,\n'
 '        -7.52878249e-01,  6.27259552e-01,  1.72026724e-01,\n'
 '        -1.61418510e+00, -1.89926994e+00, -1.75857055e+00,\n'
 '        -6.52072072e-01, -3.01482630e+00, -1.54994512e+00,\n'
 '         1.81480050e+00, -4.85945851e-01,  1.46092057e-01,\n'
 '         3.88298213e-01,  9.68347430e-01,  2.22589478e-01,\n'
 '        -1.55806100e+00,  7.66880393e-01,  3.77704549e+00,\n'
 '         5.05234241e-01,  1.72582459e+00, -3.82042313e+00,\n'
 '        -1.85687646e-01,  4.67054272e+00, -1.11671865e+00,\n'
 '        -1.64236844e+00,  1.49036002e+00, -1.71390676e+00,\n'
 '        -2.38418889e+00, -2.50344187e-01, -5.54811478e-01,\n'
 '        -1.24941933e+00, -9.13581252e-02,  8.33908200e-01,\n'
 '        -7.96273589e-01,  6.55114829e-01,  9.48903263e-01,\n'
 '        -6.22233748e-01, -5.14628112e-01,  1.25230360e+00,\n'
 '         1.25657082e-01, -1.96917534e+00, -3.87747347e-01,\n'
 '        -1.62261009e+00,  6.86291218e-01,  7.04311907e-01,\n'
 '         2.44059324e-01,  1.36744869e+00, -6.76106393e-01,\n'
 '        -1.35241568e-01, -6.01625979e-01,  9.07871544e-01,\n'
 '         1.07682586e+00, -2.47890115e+00, -2.35868287e+00,\n'
 '        -3.28901005e+00, -3.41901034e-01, -1.23730576e+00,\n'
 '         8.73075783e-01, -3.05660629e+00, -1.73368573e+00,\n'
 '        -2.58244371e+00, -2.88852692e+00,  4.52291578e-01,\n'
 '        -2.22663927e+00,  2.13318944e+00, -7.72260487e-01,\n'
 '        -5.06866217e+00, -5.72871685e-01,  5.53209734e+00,\n'
 '        -1.64716566e+00, -1.85291266e+00, -2.18266964e+00,\n'
 '         1.38298631e+00, -1.04710460e+00, -2.44470692e+00,\n'
 '        -2.03436399e+00, -2.64894903e-01, -2.23290175e-01,\n'
 '        -2.08063692e-01,  1.21006536e+00, -8.69557679e-01,\n'
 '         1.33413613e+00,  1.52497321e-01,  1.29861319e+00,\n'
 '        -3.25313234e+00, -2.70786905e+00, -9.04522657e-01,\n'
 '         3.58909821e+00,  1.32836068e+00,  4.16576385e+00,\n'
 '        -1.26441336e+00,  1.75384068e+00, -5.81063080e+00,\n'
 '         7.10805654e-01,  1.61817980e+00,  1.20590675e+00,\n'
 '         3.76836920e+00,  1.81889856e+00,  9.48138952e-01,\n'
 '        -1.97924399e+00,  9.06912923e-01, -8.17998230e-01,\n'
 '        -5.86283445e-01, -6.20157599e-01, -1.53387392e+00,\n'
 '        -1.02869225e+00, -2.84140319e-01,  1.56830549e+00,\n'
 '        -1.03973556e+00, -1.41602600e+00, -9.34923291e-01,\n'
 '         8.51207256e-01,  1.00210488e+00,  7.58387089e+00,\n'
 '         4.62078285e+00,  2.54731512e+00, -1.18457287e-01,\n'
 '        -6.64624095e-01,  9.42004740e-01, -1.06325817e+00,\n'
 '        -3.31856728e-01,  2.63337278e+00,  9.36970997e+00,\n'
 '         2.01709747e+01,  7.76497126e+00,  5.27390432e+00,\n'
 '         6.39103460e+00, -1.71800232e+00,  6.91994309e-01,\n'
 '        -9.05976534e-01,  4.21069264e-02,  1.61796808e-03,\n'
 '         2.67977023e+00,  7.64799416e-01,  2.96901727e+00,\n'
 '         1.30509358e+01,  5.66237569e-01,  1.91837633e+00,\n'
 '         1.39691424e+00,  8.92810285e-01, -1.29384601e+00,\n'
 '        -2.40722513e+00,  2.91160798e+00, -4.14918542e-01,\n'
 '         1.22990599e+01,  3.16973114e+00, -4.32527959e-02,\n'
 '        -2.15834189e+00,  3.69558358e+00,  1.50445938e-01,\n'
 '        -2.20178580e+00, -2.04390836e+00,  2.76572728e+00,\n'
 '        -3.37570310e-02,  8.52633476e-01, -1.95884609e+00,\n'
 '        -1.05150354e+00, -1.93202484e+00, -1.46432841e+00,\n'
 '        -1.76622844e+00, -8.88099134e-01,  4.75478601e+00,\n'
 '        -2.27823794e-01, -2.62326860e+00, -2.32454681e+00,\n'
 '        -1.50682175e+00, -1.03743470e+00,  1.60798371e+00,\n'
 '        -1.11210078e-01, -7.33154774e-01, -8.47728610e-01,\n'
 '         9.95358110e-01, -5.54557681e-01,  3.89762759e-01,\n'
 '         1.73590422e-01, -1.19278848e+00,  2.19630465e-01,\n'
 '        -6.29864335e-02, -7.21312702e-01,  1.48915780e+00,\n'
 '         9.39037681e-01, -1.06498814e+00,  1.52421594e-01,\n'
 '         5.94123602e-01, -1.02345157e+00,  6.39284253e-01,\n'
 '        -1.76246035e+00,  6.79156244e-01,  4.66887474e-01,\n'
 '        -2.50781918e+00, -4.37906444e-01,  8.39232266e-01,\n'
 '         2.01188612e+00,  8.34228635e-01, -1.56431949e+00,\n'
 '        -1.66752315e+00,  1.79906809e+00,  2.33394098e+00,\n'
 '        -1.12480903e+00,  4.38455820e-01, -1.30358994e+00,\n'
 '        -1.92591917e+00, -4.55449730e-01,  7.87810087e-01,\n'
 '        -2.01717258e+00,  5.64831734e-01,  1.09826231e+00,\n'
 '        -7.59481490e-01, -2.93424547e-01, -1.23248971e+00,\n'
 '        -1.01125026e+00,  1.36185634e+00,  1.20445836e+00,\n'
 '         5.06501853e-01, -1.17831922e+00, -1.96272790e+00,\n'
 '        -8.15842927e-01, -2.33468342e+00, -1.21683762e-01,\n'
 '        -2.59358668e+00,  1.02817082e+00,  1.17698061e+00,\n'
 '         1.15134156e+00,  1.88457394e+00, -1.12298119e+00,\n'
 '        -1.99853408e+00,  2.62989759e-01, -1.42732251e+00,\n'
 '         4.10959125e-01, -2.47065735e+00, -2.39319110e+00,\n'
 '        -1.90180576e+00, -2.64101028e+00,  1.04654872e+00,\n'
 '        -2.28836209e-01,  2.12445736e-01, -2.90880036e+00,\n'
 '        -1.97517681e+00, -9.53553617e-01, -3.33370656e-01,\n'
 '        -1.59822428e+00, -1.32378566e+00,  5.62435389e-02,\n'
 '         2.02928484e-01, -9.48641181e-01, -5.03015459e-01,\n'
 '        -1.85456109e+00, -2.08149934e+00, -2.86287999e+00,\n'
 '        -7.73806453e-01,  1.17428578e-01, -9.97743666e-01,\n'
 '        -2.55405545e+00, -1.19393095e-01,  1.07415482e-01,\n'
 '        -1.16136503e+00, -2.52060962e+00,  2.61623919e-01,\n'
 '        -6.03222370e-01, -7.99484611e-01,  1.27287006e+00,\n'
 '         2.16077423e+00,  1.18380189e-01,  1.67340195e+00,\n'
 '         1.75800335e+00, -1.33957386e+00,  6.06693029e-01,\n'
 '         1.78449988e+00, -8.89281869e-01, -6.20566458e-02,\n'
 '         1.80604577e+00, -8.60559464e-01, -9.12794352e-01,\n'
 '        -8.18712830e-01, -1.22263975e-01, -6.65333748e-01,\n'
 '        -2.15885568e+00, -1.48739648e+00, -6.99832022e-01,\n'
 '        -2.66149902e+00, -2.77796435e+00, -2.47903317e-01,\n'
 '         9.66931760e-01,  1.12169564e-01, -3.95136058e-01,\n'
 '         4.49388981e-01, -1.40201521e+00, -1.99599290e+00,\n'
 '        -5.08634388e-01, -2.57550359e-01,  2.88317895e+00,\n'
 '         1.21174967e+00, -2.41143554e-01,  6.41126752e-01,\n'
 '        -1.52337468e+00, -1.44219172e+00,  3.08082640e-01,\n'
 '         1.35640073e+00, -8.67846906e-02, -4.90791023e-01,\n'
 '        -6.24821126e-01, -7.05002785e-01, -2.29264903e+00,\n'
 '         2.03828409e-01,  9.21759486e-01,  2.42444038e+00,\n'
 '         3.17280769e-01,  2.27509117e+00, -4.12337631e-01,\n'
 '        -2.17612577e+00,  1.08595204e+00, -9.41277683e-01,\n'
 '         6.22007310e-01,  3.33262038e+00,  2.45177448e-01,\n'
 '         4.23180968e-01,  6.47080600e-01,  1.19799882e-01,\n'
 '        -4.55191880e-01, -2.16996700e-01, -2.91161239e-02,\n'
 '         2.57582068e-02,  1.54371250e+00,  1.07977068e+00,\n'
 '         3.75354499e-01, -1.57610345e+00, -2.31372327e-01,\n'
 '         2.06475925e+00,  1.02262580e+00,  2.35086083e+00,\n'
 '        -1.73671377e+00, -9.84981298e-01, -2.98438859e+00,\n'
 '         2.23447299e+00,  8.32976341e-01, -2.28294298e-01,\n'
 '         8.74469698e-01, -1.62666285e+00,  1.97774077e+00,\n'
 '         7.89549530e-01,  7.01100588e-01,  4.80469608e+00,\n'
 '        -6.47751093e-01,  1.38110650e+00,  2.04226685e+00,\n'
 '        -3.30213040e-01, -2.16336623e-01, -1.91512275e+00,\n'
 '        -4.41665232e-01, -7.00369954e-01, -1.91141510e+00,\n'
 '        -1.17109194e-01, -8.50838661e-01,  2.00455356e+00,\n'
 '        -7.39834487e-01,  1.35906517e-01,  3.89465392e-01,\n'
 '         1.86260998e-01, -1.42082381e+00, -3.46399248e-02,\n'
 '         1.87835884e+00,  1.20814157e+00, -1.21183372e+00,\n'
 '         3.19975972e-01, -5.75665116e-01, -2.50395298e+00,\n'
 '         3.44701797e-01,  2.20200181e+00,  3.15369308e-01,\n'
 '        -1.40584564e+00,  5.58588684e-01,  2.17452693e+00,\n'
 '         9.52076137e-01, -1.84667289e-01, -8.31187725e-01,\n'
 '         1.10506391e+00,  8.51740360e-01,  3.98317218e-01,\n'
 '         1.74051380e+00,  1.63553476e-01,  6.44233286e-01,\n'
 '        -3.53776097e-01, -4.66977179e-01, -2.81459165e+00,\n'
 '        -1.13427758e+00,  1.55736566e-01, -1.10304499e+00,\n'
 '         5.15804768e-01, -2.58842492e+00,  1.43296885e+00,\n'
 '        -2.54473114e+00, -2.67054605e+00, -2.27463365e+00,\n'
 '        -7.05993712e-01, -1.33681810e+00,  8.78653407e-01,\n'
 '        -1.31190181e-01,  2.30219618e-01, -9.25741970e-01,\n'
 '        -2.62463546e+00, -1.06245136e+00, -2.31549287e+00,\n'
 '         1.93943393e+00,  1.09907067e+00,  1.21160150e+00,\n'
 '        -1.01278412e+00,  3.17547178e+00,  2.09203196e+00,\n'
 '         1.02229571e+00, -7.36078322e-01,  1.26635265e+00,\n'
 '         1.89641035e+00, -1.30360675e+00, -7.07645416e-01,\n'
 '        -3.76918703e-01, -5.83664596e-01,  5.33779859e-01,\n'
 '         9.05397654e-01, -3.41785169e+00,  3.84114862e-01,\n'
 '         4.57089901e-01,  6.64041579e-01,  1.03448474e+00,\n'
 '         1.10093772e+00, -1.76393652e+00, -4.43234742e-01,\n'
 '         9.22899246e-01,  4.19220877e+00,  2.41008067e+00,\n'
 '         6.79272950e-01, -6.90393746e-02,  2.15724325e+00,\n'
 '        -1.42243421e+00,  1.69797027e+00, -2.01141739e+00,\n'
 '         1.39549482e+00, -1.24427521e+00,  2.04966092e+00,\n'
 '         2.46185318e-01,  1.14634550e+00,  1.53336799e+00,\n'
 '         9.93428111e-01,  1.10331750e+00,  1.13074338e+00,\n'
 '         8.11029449e-02,  7.79894650e-01,  2.51053524e+00,\n'
 '         5.69946110e-01,  8.38856518e-01,  1.95787156e+00,\n'
 '        -5.98669887e-01, -1.69161177e+00,  5.54417729e-01,\n'
 '        -1.22451127e+00, -5.72615862e-01, -2.67698199e-01,\n'
 '         1.69928327e-01,  1.70024276e+00,  9.26352382e-01,\n'
 '         8.26067865e-01, -1.01758271e-01,  2.55782962e+00,\n'
 '        -3.72694582e-01, -2.05658031e+00, -1.42678440e-01,\n'
 '         2.59840965e-01, -9.73655879e-01, -1.93452787e+00,\n'
 '        -7.82881975e-02,  3.20371413e+00, -1.73580980e+00,\n'
 '         3.62044692e+00,  3.97349864e-01,  1.60955512e+00,\n'
 '        -6.53779924e-01, -4.53859061e-01, -9.28500354e-01,\n'
 '        -3.17421258e-02, -7.61882842e-01,  2.53970861e-01,\n'
 '        -1.39122999e+00,  6.15088761e-01, -6.29729330e-02,\n'
 '        -2.93225944e-02, -9.50718343e-01, -2.36565685e+00,\n'
 '         1.30634701e+00,  1.18091536e+00, -7.99251795e-02,\n'
 '         1.32361197e+00,  1.22471303e-02,  8.90679121e-01,\n'
 '        -3.22306544e-01,  1.92580795e+00,  1.23348069e+00,\n'
 '        -1.06189799e+00, -4.86186385e-01,  1.02053809e+00,\n'
 '         5.57529092e-01, -8.36105108e-01, -8.43251884e-01,\n'
 '        -9.35690165e-01, -4.39310074e-03, -1.04009128e+00,\n'
 '        -1.16712356e+00,  3.19018483e-01, -4.09046039e-02,\n'
 '        -4.74139035e-01,  2.17742276e+00,  5.21409512e-01,\n'
 '         1.11153817e+00,  1.91694474e+00, -2.28081083e+00,\n'
 '         5.41473865e-01,  2.97533202e+00, -1.20998061e+00,\n'
 '        -1.54432082e+00,  1.58942342e+00, -1.21531808e+00,\n'
 '        -6.33496344e-01, -1.97335839e+00,  4.68275070e-01,\n'
 '        -1.57936311e+00,  1.64265692e+00,  7.46773958e-01,\n'
 '        -1.96076632e+00,  2.89657021e+00,  3.32658082e-01,\n'
 '        -1.73271740e+00, -1.37682521e+00, -8.39669183e-02,\n'
 '         5.72637677e-01,  1.19216710e-01, -2.56032252e+00,\n'
 '         1.72971559e+00,  1.79048276e+00, -7.30938852e-01,\n'
 '         9.55716491e-01, -4.89415467e-01, -1.23515952e+00,\n'
 '        -3.54974449e-01, -1.66980922e-01,  2.44074970e-01,\n'
 '         3.45522702e-01,  2.44587183e-01, -3.83696616e-01,\n'
 '        -3.73151922e+00,  3.06075311e+00,  1.66611457e+00,\n'
 '         9.52211142e-01,  8.80745709e-01, -7.05730498e-01,\n'
 '        -7.46605843e-02, -1.16566408e+00,  4.45623994e-02,\n'
 '        -1.52598590e-01,  1.00714266e-01, -1.21858120e+00,\n'
 '        -3.44559169e+00,  4.79258716e-01,  3.01580572e+00,\n'
 '         3.12133527e+00,  2.59603679e-01,  1.22051525e+00,\n'
 '        -8.64661932e-01, -2.06636000e+00, -5.84024668e-01,\n'
 '        -3.43017602e+00,  2.50664496e+00, -1.06088829e+00,\n'
 '        -2.85783982e+00,  1.02825427e+00,  9.09734368e-02,\n'
 '         4.54495311e-01, -2.87556577e+00,  9.24585939e-01,\n'
 '         1.85539639e+00,  7.13096559e-02, -3.82686758e+00,\n'
 '         3.06969971e-01,  2.38650262e-01,  5.90182126e-01,\n'
 '        -4.10345882e-01,  8.44994664e-01,  1.95012152e+00,\n'
 '        -2.90536314e-01, -5.95156133e-01, -8.57113361e-01,\n'
 '         1.71651614e+00,  1.22921920e+00,  1.49822617e+00,\n'
 '        -4.39518690e-01, -5.04740953e-01,  4.95555729e-01,\n'
 '         4.70023692e-01, -3.36081475e-01,  3.26303214e-01,\n'
 '        -7.82994509e-01, -1.51272893e+00, -1.03748226e+00,\n'
 '         9.94271398e-01, -2.73770690e+00, -8.95769954e-01,\n'
 '         8.76517475e-01, -2.41510257e-01,  8.10813963e-01,\n'
 '         6.93574369e-01, -2.13795328e+00, -8.72174382e-01,\n'
 '        -2.40254259e+00, -1.45621729e+00,  2.49925995e+00,\n'
 '        -5.81563234e-01,  5.21230698e-02,  7.09071040e-01,\n'
 '        -2.36578608e+00, -1.95083484e-01, -6.78467333e-01,\n'
 '        -7.10438311e-01, -1.57637739e+00,  1.61362946e+00,\n'
 '        -1.03700423e+00, -4.54077482e-01,  3.01547051e-02,\n'
 '        -9.94421959e-01, -2.77394605e+00, -4.56335783e-01,\n'
 '        -6.74893618e-01, -1.21531653e+00, -9.21030641e-02,\n'
 '         6.67991996e-01, -6.98007286e-01,  3.22324800e+00,\n'
 '         1.11924350e-01,  7.22341955e-01, -6.92373991e-01,\n'
 '        -9.32509363e-01, -1.34618902e+00,  3.36797059e-01,\n'
 '         1.08330399e-02,  4.06392038e-01,  1.89671946e+00,\n'
 '         2.10911781e-01, -9.52145338e-01,  6.14223123e-01,\n'
 '         2.13705921e+00, -1.35815978e+00, -1.11902893e+00,\n'
 '         5.91651082e-01, -1.75402343e+00, -7.02221870e-01,\n'
 '         6.65076911e-01,  1.51477098e-01,  2.36675882e+00,\n'
 '        -8.47485066e-02,  8.68852854e-01,  1.00820839e+00,\n'
 '         2.50416732e+00, -7.14666605e-01,  1.30874670e+00,\n'
 '        -1.44168889e+00,  5.89607120e-01, -3.38771629e+00,\n'
 '        -8.23614418e-01,  2.08571243e+00,  4.86726463e-01,\n'
 '         1.42003822e+00,  2.59219909e+00,  1.54228425e+00,\n'
 '        -2.50440073e+00, -1.46802992e-01, -4.32679415e+00,\n'
 '        -8.44479382e-01,  1.03129578e+00, -1.51548767e+00,\n'
 '         5.87159038e-01, -1.23322976e+00,  1.11130190e+00,\n'
 '         1.35323226e+00, -1.68019199e+00,  1.80975604e+00,\n'
 '         1.79023254e+00, -8.81823242e-01,  8.81353080e-01,\n'
 '        -3.35239202e-01,  9.04651403e-01, -2.54821706e+00,\n'
 '         1.29452634e+00, -1.13829422e+00, -3.83201659e-01,\n'
 '         6.86946154e-01, -2.79962331e-01, -5.02398491e-01,\n'
 '         3.22369599e+00, -8.00240517e-01, -1.53010142e+00,\n'
 '        -2.71784019e+00,  1.30982745e+00,  2.34407917e-01,\n'
 '        -1.52123272e+00,  1.66007709e+00,  1.19898725e+00,\n'
 '         3.33693117e-01, -1.36773860e+00, -2.25535369e+00,\n'
 '         5.57736009e-02, -4.97628599e-01, -7.76517391e-01,\n'
 '         3.56952930e+00,  4.32745695e-01, -7.78263986e-01,\n'
 '        -1.97105408e+00, -2.54223847e+00,  1.13657880e+00,\n'
 '        -7.98820317e-01,  1.18682206e+00, -7.23087192e-01,\n'
 '         5.18848658e-01,  6.20383740e-01, -2.21834168e-01,\n'
 '         2.05006623e+00, -2.64748955e+00,  1.05830514e+00,\n'
 '         1.14436865e+00, -7.51162767e-01,  2.00125527e+00,\n'
 '         2.31627727e+00,  1.09771836e+00,  1.08527660e+00,\n'
 '        -1.94412970e+00,  2.12035328e-01, -5.43654263e-01,\n'
 '         7.56249070e-01, -3.76612592e+00, -1.62060463e+00,\n'
 '         1.68750656e+00, -1.00084472e+00,  4.46243316e-01,\n'
 '         7.30109394e-01, -1.21742248e+00, -3.66506815e-01,\n'
 '         3.24370384e-01, -3.19754529e+00,  1.54027486e+00,\n'
 '        -4.61030722e-01, -7.43944943e-01,  2.79414058e-02,\n'
 '         1.93532467e-01,  2.11773825e+00,  1.87859797e+00,\n'
 '        -4.88679111e-01,  5.86712480e-01,  2.14107847e+00,\n'
 '         7.32720077e-01,  8.51513982e-01, -1.59091020e+00,\n'
 '         1.02323627e+00, -2.00666189e+00,  1.74699593e+00,\n'
 '        -2.63854003e+00, -5.30065536e-01,  2.38555718e+00,\n'
 '        -2.58686805e+00,  3.17650890e+00,  6.26914263e-01,\n'
 '         4.43755776e-01, -1.51744890e+00,  3.37503374e-01,\n'
 '        -1.50001442e+00,  1.93537497e+00, -4.88410652e-01,\n'
 '        -1.16441202e+00,  1.20502973e+00,  9.42984998e-01,\n'
 '         7.20272362e-01, -4.48309690e-01,  2.78113961e-01,\n'
 '         1.02869189e+00,  2.15309787e+00, -4.18412209e-01,\n'
 '         1.40878111e-01, -1.43996358e+00, -2.03374338e+00,\n'
 '        -1.58719647e+00,  5.61579287e-01,  7.77761877e-01,\n'
 '        -1.66656280e+00, -5.50855458e-01,  2.34230578e-01,\n'
 '        -8.17399740e-01,  3.37446988e-01, -2.61713553e+00,\n'
 '        -2.57851720e+00, -4.67214584e-02,  8.80041838e-01,\n'
 '        -1.28723383e-02, -1.65370333e+00, -1.13030028e+00,\n'
 '        -2.17929697e+00, -1.23973727e+00, -7.29105532e-01,\n'
 '        -9.40216839e-01,  3.92379761e-01, -9.39639807e-01,\n'
 '         2.61117864e+00,  3.10092479e-01,  2.71802068e-01,\n'
 '         1.34549975e+00,  5.53748786e-01,  5.31474501e-02,\n'
 '         3.83754969e-01, -3.21111321e-01, -2.38600314e-01,\n'
 '        -6.43120229e-01, -8.80346060e-01,  7.33796835e-01,\n'
 '         6.94125175e-01,  1.40645897e+00,  8.72938871e-01,\n'
 '        -1.87161398e+00,  1.57076752e+00,  1.22997254e-01,\n'
 '         1.41954195e+00, -7.73714304e-01,  2.90870786e-01,\n'
 '        -2.67845297e+00,  9.33101833e-01, -2.58804512e+00,\n'
 '        -1.18304205e+00, -2.98794818e+00, -9.59817767e-01,\n'
 '         7.51170158e-01, -1.51145077e+00, -1.89438582e-01,\n'
 '        -2.71401119e+00, -1.04741466e+00,  5.99219799e-01,\n'
 '         6.16597533e-02, -1.85534215e+00,  6.76333189e-01,\n'
 '        -1.37951422e+00, -2.48662972e+00,  1.13188767e+00,\n'
 '        -2.66321003e-01, -1.31935155e+00, -1.48393726e+00,\n'
 '        -2.42163158e+00,  6.27065718e-01,  8.73804927e-01,\n'
 '        -4.76586759e-01, -1.21452141e+00,  2.51982138e-02,\n'
 '         1.66535235e+00, -1.06235623e-01,  6.42343402e-01,\n'
 '        -6.59972191e-01, -7.88096845e-01, -3.19329667e+00,\n'
 '        -1.63530374e+00, -4.19629288e+00,  6.65416360e-01,\n'
 '         2.77641982e-01, -2.73808837e+00,  6.90113902e-01,\n'
 '         1.35310090e+00]])')
'test_inceptionnet | batch_shape is: [1]'
'test_inceptionnet | logits.shape is: ivy.Shape(1, 1000)'
'||'
'test_inceptionnet | indices_test | true_indices is: [258 270 279]'
'test_inceptionnet | indices_test | calc_indices is: [258 270 279]'
'test_inceptionnet | device is: cpu'
'test_inceptionnet | fw is: numpy'
'test_inceptionnet | load_weights is: False'
'InceptionV3 | build | layer 1/22 built'
'InceptionV3 | build | layer 2/22 built'
'layer 3/22 built'
'InceptionV3 | build | layer 4/22 built'
'InceptionV3 | build | layer 5/22 built'
'InceptionV3 | build | layer 6/22 built'
'InceptionV3 | build | layer 7/22 built'
'InceptionV3 | build | layer 8/22 built'
'InceptionV3 | build | layer 9/22 built'
'InceptionV3 | build | layer 10/22 built'
'InceptionV3 | build | layer 11/22 built'
'InceptionV3 | build | layer 12/22 built'
'InceptionV3 | build | layer 13/22 built'
'InceptionV3 | build | layer 14/22 built'
'InceptionV3 | build | layer 15/22 built'
'InceptionV3 | build | layer 17/22 built'
'InceptionV3 | build | layer 18/22 built'
'InceptionV3 | build | layer 19/22 built'
'InceptionV3 | build | layer 20/22 built'
'InceptionV3 | build | layer 21/22 built'
'InceptionV3 | build | layer 22/22 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/4 built'
'layer 2/4 built'
'layer 3/4 built'
'layer 4/4 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/6 built'
'layer 2/6 built'
'layer 3/6 built'
'layer 4/6 built'
'layer 5/6 built'
'layer 6/6 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'inceptionNet_v3 | building InceptionV3 model | done 1/3'
'InceptionV3 | forward | input data_format is:NCHW | done 1/27'
'InceptionV3 | forward | data_format is going to be used is:NCHW | done 1/27'
'InceptionV3 | forward | input shape is:ivy.Shape(1, 224, 224, 3) | done 1/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 224, 224, 3) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 111, 111, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 111, 111, 32) | done 2/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 111, 111, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 32) | done 3/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 109, 109, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 64) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 64) | done 4/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 54, 54, 64) | done 5/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 54, 54, 80) | done 3/3'
'InceptionV3 | forward | is:ivy.Shape(1, 54, 54, 80) | done 6/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 80) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 52, 52, 192) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 52, 52, 192) | done 7/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 192) | done 8/27'
'input shape is:ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 32) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 32)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 25, 25, 256) | done 9/27'
'input shape is:ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 10/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 11/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 384) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 96) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 96)'
'one 20/20, output shape is:ivy.Shape(1, 12, 12, 288)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 12/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 12, 12, 768) | done 13/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 14/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 15/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 16/27'
'v3 16/27, output shape is:ivy.Shape(1, 12, 12, 768)'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 5, 5, 192)'
'one 7/20, output shape is:ivy.Shape(1, 5, 5, 768)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 1280) | done 17/27'
'input shape is:ivy.Shape(1, 5, 5, 1280)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 18/27'
'input shape is:ivy.Shape(1, 5, 5, 2048)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 19/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 20/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 5, 5) | done 21/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 1, 1) | done 22/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 27/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 24/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 25/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048) | done 26/27'
'InceptionV3 | forward | fc | done 27/27'
('test_inceptionnet | logits is: ivy.array([[ 1.99132662e+06, '
 '-2.28321812e+05,  6.61374700e+06,\n'
 '         2.56110050e+06,  2.86788900e+06,  1.58851562e+06,\n'
 '         5.44201200e+06, -2.56544500e+05, -4.26169500e+06,\n'
 '         4.75583550e+06,  5.22745700e+06, -1.64823800e+06,\n'
 '         3.89437600e+06,  2.92371825e+06, -9.88876625e+05,\n'
 '        -6.40530500e+06,  1.47289375e+06,  2.33359250e+05,\n'
 '         4.47206650e+06,  2.96060225e+06, -1.11042020e+07,\n'
 '        -4.65615350e+06,  3.99535275e+06, -1.53348962e+06,\n'
 '         3.31941150e+06, -3.01951025e+06,  2.57936550e+06,\n'
 '         1.54706938e+05, -2.04791275e+06, -7.41035450e+06,\n'
 '        -3.74409150e+06,  1.14051020e+07,  6.25458300e+06,\n'
 '         9.53488250e+05, -6.11941400e+06, -8.31078800e+06,\n'
 '         1.20807062e+06, -1.41995275e+06,  8.95861400e+06,\n'
 '         1.00190888e+06, -1.04164638e+06, -4.30781050e+06,\n'
 '        -5.47711650e+06, -4.96832400e+06,  1.25359800e+06,\n'
 '        -3.10644350e+06, -3.25425000e+05,  5.08352300e+06,\n'
 '        -8.42187300e+06, -8.82922125e+05, -2.60047150e+06,\n'
 '        -2.78332425e+06,  3.95494225e+06,  6.22305250e+05,\n'
 '         1.26581112e+06, -3.10211425e+06, -3.97523900e+06,\n'
 '         4.73351850e+06, -1.13841162e+06,  1.01332820e+07,\n'
 '         3.84921100e+06,  1.36726262e+06,  2.93129750e+05,\n'
 '        -3.25242575e+06,  1.07347200e+06,  1.73834975e+06,\n'
 '        -4.73859188e+05,  4.01548800e+06, -5.60812950e+06,\n'
 '        -6.41650625e+05,  1.42404620e+07, -1.07951112e+06,\n'
 '        -5.08862125e+05,  7.05520450e+06, -1.40729488e+06,\n'
 '        -1.34790075e+06, -6.65720812e+05, -2.89957000e+06,\n'
 '        -1.34301712e+06, -2.55842900e+06,  9.30085000e+04,\n'
 '         8.79707562e+05, -3.65901550e+06, -4.13882775e+06,\n'
 '         6.68453750e+05,  4.11730925e+06, -8.14091450e+06,\n'
 '         8.77150125e+05,  3.67526700e+06, -2.60773675e+06,\n'
 '        -5.16162700e+06,  7.74797450e+06, -1.72806675e+06,\n'
 '         1.54808850e+06,  5.60926000e+06,  1.45315500e+06,\n'
 '         7.36917600e+06,  9.61003200e+06,  7.98718400e+06,\n'
 '        -5.49665900e+06,  6.19436200e+06, -2.75651000e+05,\n'
 '         6.73085250e+06, -2.65315900e+06,  6.88887600e+06,\n'
 '         2.47140900e+06, -9.21347750e+05, -1.29816150e+06,\n'
 '         1.20165938e+05, -1.37161250e+04,  3.19547050e+06,\n'
 '         1.07832038e+06, -8.20871750e+05, -5.11674750e+06,\n'
 '         2.39834350e+06,  4.28238850e+06,  2.61179812e+05,\n'
 '         1.48402025e+06,  3.29858000e+05,  1.85398288e+06,\n'
 '        -2.06126500e+05, -3.69950325e+06,  1.79611038e+06,\n'
 '        -5.62836250e+06,  3.23730450e+06, -1.66390900e+06,\n'
 '         6.90220300e+06,  1.04146040e+07, -5.47484950e+06,\n'
 '         1.87478800e+06,  2.10993750e+05,  1.25814625e+06,\n'
 '         3.08193825e+06,  7.04212750e+05, -2.12730200e+06,\n'
 '         3.39167550e+06,  6.46395300e+06,  5.09620000e+06,\n'
 '         6.37140500e+05, -1.29822062e+06,  8.31535125e+05,\n'
 '         4.66883600e+06,  2.01736400e+06, -2.75809025e+06,\n'
 '        -3.17518700e+06, -9.08144750e+05,  8.32151400e+06,\n'
 '        -2.21080875e+05, -4.16265950e+06, -1.10260475e+06,\n'
 '         3.30661550e+06,  4.53795450e+06, -3.33911650e+06,\n'
 '        -5.80417500e+06, -2.39073325e+06,  9.84805875e+05,\n'
 '         2.12501600e+06, -5.75842550e+06,  6.22595800e+06,\n'
 '         1.07136012e+06, -1.86603700e+06,  5.61791500e+05,\n'
 '        -3.29686175e+06,  3.37125525e+06,  1.87098250e+05,\n'
 '         3.90212900e+06,  4.95986300e+06,  4.54439200e+06,\n'
 '         6.26016700e+06,  3.66926950e+06, -4.41148500e+05,\n'
 '         2.51211525e+06, -7.51826750e+05,  5.68538700e+06,\n'
 '        -1.11549025e+06,  2.76450188e+05,  8.47036200e+06,\n'
 '         9.96637000e+05, -1.60565475e+06, -6.13599250e+05,\n'
 '        -9.00670000e+06, -6.61571100e+06,  7.09608100e+06,\n'
 '         6.51164900e+06, -2.25994725e+06,  4.72221750e+06,\n'
 '         3.82161000e+05,  5.39028400e+06, -1.79616550e+06,\n'
 '         3.33956800e+06,  5.77543050e+06, -8.32956250e+04,\n'
 '        -1.08122640e+07,  4.16961650e+06, -8.67857600e+06,\n'
 '        -7.16484375e+05, -5.75178750e+05,  4.35359400e+06,\n'
 '         6.01940250e+06, -5.13881200e+06,  8.10380000e+05,\n'
 '        -1.38391150e+06,  6.34167500e+06, -3.21322050e+06,\n'
 '         1.03328550e+06, -5.32307500e+04, -5.13004050e+06,\n'
 '        -3.82673750e+06, -4.73496600e+06,  2.26245650e+06,\n'
 '         8.47594000e+06, -1.31283738e+06,  5.66906750e+06,\n'
 '        -7.53700550e+06,  3.61943150e+06,  3.27176975e+06,\n'
 '        -2.92586175e+06,  2.30613700e+06, -4.11989850e+06,\n'
 '        -3.99726150e+06, -1.11319875e+06,  1.16831038e+06,\n'
 '         4.65490625e+05,  2.52253750e+05, -3.14396525e+06,\n'
 '        -2.57103750e+06, -3.66527188e+05,  7.78679125e+05,\n'
 '         1.95609000e+05,  1.60623575e+06, -5.39222600e+06,\n'
 '        -5.56902250e+05, -2.53419200e+06,  6.35239350e+06,\n'
 '         1.02609162e+06,  2.93720875e+05,  7.17274688e+05,\n'
 '         2.92909250e+06, -3.75028475e+06,  9.16802500e+05,\n'
 '        -4.51597875e+05,  6.37018125e+04,  3.97509950e+06,\n'
 '         8.10335375e+05, -6.90688500e+05, -2.66505000e+04,\n'
 '         3.89664800e+06, -1.83215938e+06,  6.35222250e+06,\n'
 '         6.70102500e+05,  7.60321250e+04,  3.13101600e+06,\n'
 '        -2.80050500e+06, -1.19636200e+06, -4.31404800e+06,\n'
 '         1.84510250e+06, -4.70328500e+05,  6.25641450e+06,\n'
 '         4.27742550e+06, -8.26457250e+05, -9.63063100e+06,\n'
 '         2.84262250e+05, -4.39168500e+06,  3.54699100e+06,\n'
 '         7.89895950e+06, -2.48674675e+06,  4.12611825e+06,\n'
 '        -5.45639700e+06, -1.59924250e+06,  6.13412250e+06,\n'
 '         3.93577950e+06, -1.35214700e+06, -3.94770875e+06,\n'
 '         3.95416150e+06,  8.23289650e+06, -6.29512150e+06,\n'
 '        -3.81168100e+06, -3.43507650e+06, -1.53203925e+06,\n'
 '         7.97980625e+05,  4.93398125e+05, -7.33245500e+05,\n'
 '         8.45016750e+05, -6.65303700e+06, -9.37694875e+05,\n'
 '        -1.87570175e+06,  1.13829520e+07, -7.11716750e+06,\n'
 '        -4.79372450e+06,  2.79861850e+06,  4.99271550e+06,\n'
 '        -1.55458300e+06,  4.77178800e+06, -2.48721625e+06,\n'
 '        -1.10358200e+06, -3.52242025e+06, -3.93033150e+06,\n'
 '        -2.27791375e+05, -2.93870000e+05, -2.33229425e+06,\n'
 '        -1.45189750e+06, -2.39762300e+06,  1.16615212e+06,\n'
 '         1.71812250e+05,  2.07110138e+06,  1.47698812e+05,\n'
 '        -6.80535812e+05,  2.49042450e+06, -6.03450850e+06,\n'
 '        -6.30094700e+06, -2.10237925e+06, -1.74239012e+06,\n'
 '        -4.44467700e+06, -5.00613000e+05,  9.30514125e+05,\n'
 '        -5.63838300e+06, -1.66719700e+06, -6.01970950e+06,\n'
 '        -5.36965100e+06, -9.01190500e+05,  4.18865400e+06,\n'
 '        -2.35878000e+06,  1.11747550e+06, -3.92375550e+06,\n'
 '         9.26706000e+05, -6.85387950e+06, -6.78996700e+06,\n'
 '        -2.74528438e+05, -2.06387775e+06,  2.66611000e+05,\n'
 '        -2.88554025e+06, -3.50575625e+05,  1.03563762e+06,\n'
 '        -1.07520050e+06, -4.69159750e+06, -1.07539010e+07,\n'
 '        -3.87991350e+06, -1.42724925e+06,  9.99833800e+06,\n'
 '         1.04187850e+06, -6.77621500e+06, -7.95844900e+06,\n'
 '         4.48252000e+05, -5.76605900e+06, -3.48257000e+06,\n'
 '         1.06932550e+06,  5.32653000e+05, -1.02917662e+06,\n'
 '        -3.84019438e+05, -1.25893888e+06,  1.63368750e+05,\n'
 '         7.32967900e+06, -5.49987200e+06, -1.52312750e+06,\n'
 '        -7.82806000e+06,  3.34325800e+06, -1.09617175e+06,\n'
 '         3.15732900e+06,  2.02227350e+06,  4.57761500e+06,\n'
 '         2.11050000e+06, -2.23982350e+06,  3.36473300e+06,\n'
 '        -9.81587500e+05,  2.86747025e+06, -2.22339050e+06,\n'
 '         2.21719575e+06, -1.09088075e+06,  2.94539925e+06,\n'
 '         1.40340738e+06,  6.91321300e+06, -5.21247700e+06,\n'
 '         9.24915750e+05, -2.21104550e+06,  7.11308450e+06,\n'
 '         5.03747100e+06, -1.85577712e+06, -6.55599250e+05,\n'
 '        -2.76971975e+06,  2.33593175e+06,  2.95054300e+06,\n'
 '         2.80966450e+06, -4.89294250e+05,  4.50657000e+05,\n'
 '        -9.09676938e+05, -2.18304025e+06,  1.70445375e+06,\n'
 '         2.73865675e+06,  5.97764400e+06, -2.63205400e+06,\n'
 '        -4.61673100e+06, -6.98115850e+06, -3.94280650e+06,\n'
 '         1.42394800e+06, -9.60825875e+05, -8.00615850e+06,\n'
 '         4.45940900e+06,  9.27261100e+06,  1.06522075e+06,\n'
 '         1.44757175e+06,  7.42251625e+05,  9.60592200e+06,\n'
 '        -2.68489525e+06,  2.29706925e+06,  1.63414750e+06,\n'
 '        -1.01910825e+06, -2.22380300e+06, -2.83367900e+06,\n'
 '        -4.88789250e+06, -3.08506200e+06,  7.21995200e+06,\n'
 '        -1.68935700e+06,  1.85070825e+06, -6.09159800e+06,\n'
 '         2.63395225e+06,  3.47146950e+06,  8.04563000e+05,\n'
 '        -6.23819000e+06,  4.09783525e+06,  5.40580000e+06,\n'
 '        -4.56195350e+06,  1.04447980e+07,  8.99328600e+06,\n'
 '         4.37903500e+06,  7.30534500e+05,  3.08939700e+06,\n'
 '        -2.60301900e+06,  5.53919800e+06, -5.55946550e+06,\n'
 '        -1.66310650e+06,  9.44903100e+06, -5.08174300e+06,\n'
 '        -5.43360250e+05, -1.02308400e+06,  1.99179925e+06,\n'
 '        -1.32641900e+06,  1.22740850e+06,  1.70700700e+06,\n'
 '         4.96938600e+06,  2.09070450e+06, -1.73128925e+06,\n'
 '        -4.70381350e+06, -4.60378650e+06,  8.24446700e+06,\n'
 '         5.65961625e+05,  5.05826700e+06, -2.59203350e+06,\n'
 '         7.71613900e+06,  5.35377700e+06, -8.13209600e+06,\n'
 '         4.40105650e+06, -2.09366250e+04,  6.57523100e+06,\n'
 '        -2.43515900e+06,  8.32003000e+05,  3.19369800e+06,\n'
 '        -5.28501900e+06, -3.70945750e+06,  1.45066612e+06,\n'
 '         1.47511500e+06, -3.70024700e+06,  2.32475650e+06,\n'
 '         1.44088350e+06, -8.94969400e+06, -5.66402200e+06,\n'
 '        -3.78028438e+05, -1.57826675e+06,  4.01174200e+06,\n'
 '         4.55850150e+06, -2.23611600e+06,  3.05273175e+06,\n'
 '         1.80862038e+06,  1.86220388e+06,  3.20221425e+06,\n'
 '        -1.22015570e+07,  9.41381800e+06, -4.12365600e+06,\n'
 '        -6.21691500e+05,  2.36230250e+06,  8.83585875e+05,\n'
 '         1.19407940e+07, -5.69874100e+06, -2.45951300e+06,\n'
 '         6.39842875e+05,  3.77063750e+06, -8.96151250e+05,\n'
 '        -7.33898700e+06,  5.39677650e+06,  2.35679375e+06,\n'
 '         4.45256000e+06, -8.54516000e+06, -2.60987775e+06,\n'
 '         2.24616550e+06,  1.83214250e+05, -1.46734362e+06,\n'
 '         2.03839512e+06, -4.99980250e+06, -4.39096700e+06,\n'
 '        -7.79537600e+06, -3.89325150e+06, -1.35264388e+06,\n'
 '         5.38353050e+06, -5.74392500e+06, -1.12157150e+06,\n'
 '        -8.34576000e+05, -7.99889688e+05,  5.15780750e+05,\n'
 '         1.80581775e+06, -8.72415300e+06,  6.49796500e+05,\n'
 '         7.12316550e+06,  4.76556200e+06, -5.48354600e+06,\n'
 '         5.23199550e+06,  2.47607275e+06,  5.88960550e+06,\n'
 '        -2.48594825e+06,  5.46977500e+06, -1.14625988e+06,\n'
 '        -4.36496400e+06,  4.26635250e+06,  6.74134600e+06,\n'
 '        -4.59974800e+06,  6.48541800e+06, -2.94571900e+06,\n'
 '        -6.93885000e+05,  2.93850000e+04, -5.14976400e+06,\n'
 '        -3.65327100e+06,  3.38982475e+06,  2.90524925e+06,\n'
 '        -1.16342912e+06,  8.64593800e+06, -1.62201160e+07,\n'
 '        -2.21660350e+06, -3.61912400e+06, -1.40829375e+06,\n'
 '        -3.87409550e+06, -2.79375525e+06, -9.84557625e+05,\n'
 '        -9.75540250e+05, -4.16283725e+06,  7.48777750e+05,\n'
 '         2.46541600e+06, -3.22027900e+06, -3.65478200e+06,\n'
 '         1.69232000e+06, -5.86655000e+05,  3.78673325e+06,\n'
 '        -3.21988300e+06, -1.21138470e+07, -7.50331100e+06,\n'
 '         1.37185150e+06, -2.01684612e+06,  8.47414400e+06,\n'
 '        -6.19952400e+06,  2.40491925e+06, -6.99484300e+06,\n'
 '         8.26733875e+05, -2.44724250e+06,  3.77357625e+06,\n'
 '         6.46676800e+06,  4.37781850e+06, -2.32639000e+06,\n'
 '        -2.39463075e+06, -9.34650125e+05, -5.80773100e+06,\n'
 '         6.56615000e+04, -2.08872750e+06, -2.59955700e+06,\n'
 '         1.49014438e+06,  1.68078500e+05,  3.85544000e+06,\n'
 '         3.07165175e+06,  2.33185925e+06, -9.31509312e+05,\n'
 '         3.87863725e+06, -2.39129425e+06,  2.41560500e+06,\n'
 '        -6.77290200e+06,  4.75395250e+06,  3.68827250e+05,\n'
 '         1.01055760e+07, -4.14284000e+06,  1.07443138e+06,\n'
 '         7.72082750e+05,  2.93890750e+06,  5.05864850e+06,\n'
 '        -7.00378700e+06,  3.41627225e+06, -6.01696000e+06,\n'
 '        -2.17852800e+06,  2.04421000e+06,  1.37075112e+06,\n'
 '        -1.30510000e+05, -9.13290500e+05,  3.17168625e+05,\n'
 '        -4.56527450e+06,  6.08999600e+06,  3.27785250e+06,\n'
 '        -2.11293800e+06,  1.19343338e+06, -1.21971375e+05,\n'
 '        -1.42605388e+06, -3.42599100e+06, -2.57927950e+06,\n'
 '        -2.02723575e+06,  6.32481250e+06, -2.81950900e+06,\n'
 '        -7.43414250e+05,  1.37141462e+06, -4.66958469e+05,\n'
 '        -2.65119075e+06,  5.76729200e+06,  5.32595550e+06,\n'
 '        -2.04631025e+06, -1.75502250e+06, -3.21748000e+05,\n'
 '         3.78994650e+06,  1.53512650e+06,  3.42488850e+06,\n'
 '         6.74729100e+06, -3.36216300e+06,  2.82258550e+06,\n'
 '         2.09296800e+06,  1.17884100e+06,  3.74567975e+06,\n'
 '        -2.46736450e+06,  1.15733838e+06,  4.21854200e+06,\n'
 '         2.46731000e+06,  7.44426250e+05,  2.99515950e+06,\n'
 '         4.40125650e+06,  7.13490500e+06,  8.20276900e+06,\n'
 '         2.13306725e+06,  3.50320875e+06, -3.56229525e+06,\n'
 '         4.71715400e+06,  2.92318500e+06, -6.06584700e+06,\n'
 '         2.95190438e+05, -1.04653675e+06,  2.77615300e+06,\n'
 '         3.75864325e+06, -1.30611375e+06,  2.24174150e+06,\n'
 '        -8.74500500e+06, -1.44017850e+06,  1.42954350e+06,\n'
 '        -2.03505450e+06,  1.33145900e+06,  1.46016512e+06,\n'
 '         1.15483025e+06,  6.05446600e+06, -2.23155900e+06,\n'
 '         3.13896200e+06, -6.92845350e+06, -6.36257950e+06,\n'
 '        -4.44898850e+06,  4.84492050e+06,  2.02273550e+06,\n'
 '         1.97114450e+06, -3.23090450e+06,  4.04962500e+04,\n'
 '         6.36565600e+06,  1.83679000e+06, -2.58595050e+06,\n'
 '        -7.12373500e+06, -2.44971525e+06,  2.04939375e+04,\n'
 '         3.37059975e+06,  7.96091875e+05,  2.27965050e+06,\n'
 '        -9.31971200e+06, -4.35462200e+06, -3.99771875e+04,\n'
 '        -6.11963100e+06,  1.88224588e+06,  5.18280600e+06,\n'
 '         1.71550975e+06,  8.57382100e+06, -7.28936350e+06,\n'
 '        -3.35708750e+06,  6.22316650e+06, -4.12679450e+06,\n'
 '        -1.26929475e+06,  6.35855400e+06, -1.68168225e+06,\n'
 '        -4.71029100e+06, -1.58899350e+06, -4.17108550e+06,\n'
 '         3.97795000e+06, -1.04861750e+06,  2.92945500e+05,\n'
 '         3.00511375e+06, -3.60194725e+06,  8.93221200e+06,\n'
 '         7.05968000e+05, -5.16997550e+06,  5.87394800e+06,\n'
 '         4.38038350e+06,  1.60340600e+06,  1.47291250e+06,\n'
 '         2.32695950e+06, -2.15580150e+06,  3.51304975e+06,\n'
 '         4.44551900e+06, -1.93883250e+06, -8.89797125e+05,\n'
 '        -2.68948525e+06, -5.86579500e+06, -3.26782825e+06,\n'
 '         9.74069000e+05,  1.94000325e+06, -6.06947250e+05,\n'
 '        -6.65471500e+06,  5.06804850e+06, -1.56717938e+06,\n'
 '        -3.51060200e+06,  6.58747950e+06, -9.66823600e+06,\n'
 '        -1.01228700e+06,  7.53236750e+05,  6.30089100e+06,\n'
 '         2.37308125e+06, -2.57603175e+06, -2.31230650e+06,\n'
 '         3.85916325e+06, -3.12296725e+06,  6.86177050e+06,\n'
 '         2.92391650e+06,  7.15541550e+06, -4.80692000e+05,\n'
 '        -4.11254850e+06,  1.52991225e+06,  3.46113650e+06,\n'
 '         5.54185000e+05,  1.02000288e+06,  4.19873812e+05,\n'
 '         2.89903025e+06, -2.82971550e+06,  5.02421300e+06,\n'
 '         3.37146250e+06,  8.49401000e+05,  2.63161525e+06,\n'
 '        -3.25289300e+06, -7.05462000e+06, -1.04908350e+06,\n'
 '        -2.06722462e+06, -2.67412350e+06, -1.71253112e+06,\n'
 '         5.13593300e+06,  1.08564125e+06, -8.39004200e+06,\n'
 '         7.43663625e+05,  2.26890500e+06, -1.98433500e+06,\n'
 '         2.82676375e+06, -6.80479100e+06,  1.51960138e+06,\n'
 '         1.11149588e+06,  1.28321000e+06, -3.41684500e+06,\n'
 '        -2.90361775e+06, -7.75742300e+06,  4.49992700e+06,\n'
 '         5.63946100e+06,  6.04143650e+06, -1.11434775e+06,\n'
 '         3.97213825e+06,  3.45876450e+06, -6.62059000e+06,\n'
 '        -3.27697250e+06,  1.87005888e+06,  3.47702075e+06,\n'
 '        -6.19353125e+05, -5.36206450e+06,  6.87643150e+06,\n'
 '         9.44867625e+05, -1.93055400e+06, -9.68061125e+05,\n'
 '         1.70594288e+06,  1.13743900e+06, -5.97473100e+06,\n'
 '        -4.25222000e+06, -6.20967400e+06, -4.19218600e+06,\n'
 '         5.12306100e+06,  3.88432150e+06, -4.17985250e+05,\n'
 '         3.10195350e+06,  3.35616700e+06, -2.49268625e+06,\n'
 '         4.52050000e+06,  1.87250050e+06,  4.92230100e+06,\n'
 '        -5.86691600e+06,  5.25989400e+06,  3.44548400e+06,\n'
 '         7.40399500e+05, -4.56384350e+06, -2.73731850e+06,\n'
 '        -3.66601000e+06,  9.21362800e+06, -6.12610050e+06,\n'
 '        -2.46511700e+06, -4.61509900e+06,  2.83178175e+06,\n'
 '        -5.78708150e+06,  6.46694550e+06,  1.46751040e+07,\n'
 '         2.58458925e+06,  4.06600500e+05, -3.39762500e+06,\n'
 '        -3.08402825e+06, -5.90238000e+06, -1.61439450e+06,\n'
 '         4.61283000e+06, -2.14149000e+06,  3.37986250e+06,\n'
 '         1.28844225e+06, -1.10625275e+06, -2.30542300e+06,\n'
 '         9.66231100e+06, -1.31523550e+06,  3.93896550e+06,\n'
 '         2.87955100e+06, -6.09352700e+06, -4.06608650e+06,\n'
 '        -9.02301100e+06,  6.92628800e+06,  3.35464725e+06,\n'
 '        -4.23783000e+06,  5.59228850e+06,  8.35764188e+05,\n'
 '        -4.65070000e+06,  1.77375550e+06, -6.43250400e+06,\n'
 '         2.79566675e+06, -9.73782500e+04,  6.26321900e+06,\n'
 '        -4.69615350e+06, -3.58096975e+06,  7.76594200e+06,\n'
 '         9.12755000e+06, -4.45696750e+05, -4.20867600e+06,\n'
 '        -2.15147850e+06, -5.45377625e+05,  3.84519531e+05,\n'
 '        -5.29572500e+06, -3.32847000e+05, -9.83712100e+06,\n'
 '         5.98544050e+06,  1.31403938e+06, -5.02103900e+06,\n'
 '        -1.03072575e+06,  1.02714125e+05, -3.36779950e+06,\n'
 '        -1.46178175e+06, -5.85364500e+05, -3.65055175e+06,\n'
 '         2.27476050e+06, -3.02470850e+06, -3.04909550e+06,\n'
 '         1.04961990e+07,  4.19802600e+06, -6.11860900e+06,\n'
 '         2.41315400e+06,  2.28895050e+06, -2.48133400e+06,\n'
 '        -3.51957500e+06,  1.00442360e+07,  1.52805025e+06,\n'
 '         4.89683812e+05,  4.51488600e+06, -4.02414500e+06,\n'
 '         3.59256875e+05,  6.01403250e+05,  6.90131400e+06,\n'
 '        -3.44326175e+06,  6.16426250e+06,  4.64521650e+06,\n'
 '        -6.56367812e+04, -1.80359700e+06, -5.39739300e+06,\n'
 '        -3.24147400e+06, -3.54998650e+06, -7.93586312e+05,\n'
 '        -2.00786100e+06, -1.22700425e+06, -3.02228150e+06,\n'
 '         2.34804275e+06, -1.39986625e+05, -9.59249400e+06,\n'
 '         2.80962150e+06,  3.74505200e+06, -3.69234062e+05,\n'
 '         1.24116900e+06, -5.25264100e+06, -3.09974875e+05,\n'
 '        -5.39152550e+06, -6.42156000e+06, -1.18989675e+06,\n'
 '        -2.05653400e+06, -1.57999175e+06,  3.50891075e+06,\n'
 '        -5.49872750e+06,  7.90381500e+06,  2.14409400e+06,\n'
 '         1.65877625e+06, -4.04828075e+06, -7.12882100e+06,\n'
 '         3.91463050e+06,  8.01915300e+06, -2.31072075e+06,\n'
 '         2.21202625e+05, -1.04783625e+06,  7.75876500e+05,\n'
 '        -5.21542000e+05, -1.08067375e+06,  5.68680300e+06,\n'
 '        -1.16734375e+06,  1.61307388e+06, -4.06692500e+06,\n'
 '        -1.43507750e+05, -2.97092075e+06,  4.43416050e+06,\n'
 '         1.70846725e+06, -5.72024750e+05, -8.44297250e+05,\n'
 '        -2.80709525e+06,  3.60048625e+05,  4.95007800e+06,\n'
 '        -2.50438750e+05,  2.82743025e+06,  2.14134750e+05,\n'
 '         5.40784750e+05,  1.58141988e+06,  5.93263100e+06,\n'
 '         5.30385000e+06,  6.92833050e+06,  3.87333150e+06,\n'
 '        -7.02713500e+05, -2.18758200e+06, -1.68036800e+06,\n'
 '        -6.33932050e+06,  5.12517500e+05,  7.04417850e+06,\n'
 '         5.66842800e+06,  3.99412000e+05,  3.19348350e+06,\n'
 '         9.66755000e+04, -3.33564875e+05,  3.79574450e+06,\n'
 '        -3.02632125e+06,  1.40876325e+06,  2.83264900e+06,\n'
 '        -3.88288050e+06,  7.76005900e+06, -1.95146250e+05,\n'
 '        -2.84308688e+05, -2.99245150e+06, -3.26299700e+06,\n'
 '        -3.47706925e+06, -5.84688500e+05, -5.65322700e+06,\n'
 '        -1.35192950e+06,  5.48371950e+06,  3.67691175e+06,\n'
 '         2.83267050e+06,  4.39656050e+06, -7.08968350e+06,\n'
 '        -4.92813750e+06, -1.11271000e+06, -1.52507250e+06,\n'
 '        -2.06896475e+06, -8.20403000e+05,  3.60057475e+06,\n'
 '         4.18284875e+05, -8.15190500e+06,  6.75094500e+06,\n'
 '        -4.80825250e+05,  1.86856325e+06,  4.98146750e+05,\n'
 '        -6.18572700e+06, -4.05573675e+06, -7.22651200e+06,\n'
 '        -3.64431950e+06,  1.48574150e+06,  6.29511400e+06,\n'
 '         4.81889700e+06,  3.77782375e+05, -1.02605300e+07,\n'
 '         4.11374475e+06, -6.31897400e+06, -5.82258700e+06,\n'
 '         4.40035800e+06]])')
'test_inceptionnet | batch_shape is: [1]'
'test_inceptionnet | logits.shape is: ivy.Shape(1, 1000)'
'||'
'test_inceptionnet | device is: cpu'
'test_inceptionnet | fw is: numpy'
'test_inceptionnet | load_weights is: True'
'InceptionV3 | build | layer 1/22 built'
'InceptionV3 | build | layer 2/22 built'
'layer 3/22 built'
'InceptionV3 | build | layer 4/22 built'
'InceptionV3 | build | layer 5/22 built'
'InceptionV3 | build | layer 6/22 built'
'InceptionV3 | build | layer 7/22 built'
'InceptionV3 | build | layer 8/22 built'
'InceptionV3 | build | layer 9/22 built'
'InceptionV3 | build | layer 10/22 built'
'InceptionV3 | build | layer 11/22 built'
'InceptionV3 | build | layer 12/22 built'
'InceptionV3 | build | layer 13/22 built'
'InceptionV3 | build | layer 14/22 built'
'InceptionV3 | build | layer 15/22 built'
'InceptionV3 | build | layer 17/22 built'
'InceptionV3 | build | layer 18/22 built'
'InceptionV3 | build | layer 19/22 built'
'InceptionV3 | build | layer 20/22 built'
'InceptionV3 | build | layer 21/22 built'
'InceptionV3 | build | layer 22/22 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/4 built'
'layer 2/4 built'
'layer 3/4 built'
'layer 4/4 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/6 built'
'layer 2/6 built'
'layer 3/6 built'
'layer 4/6 built'
'layer 5/6 built'
'layer 6/6 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'inceptionNet_v3 | building InceptionV3 model | done 1/3'
'inceptionNet_v3 | clearning pretrained weights | done 2/3'
'inceptionNet_v3 | loading pretrained weights | done 3/3'
'InceptionV3 | forward | input data_format is:NCHW | done 1/27'
'InceptionV3 | forward | data_format is going to be used is:NCHW | done 1/27'
'InceptionV3 | forward | input shape is:ivy.Shape(1, 224, 224, 3) | done 1/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 224, 224, 3) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 111, 111, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 111, 111, 32) | done 2/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 111, 111, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 32) | done 3/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 109, 109, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 64) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 64) | done 4/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 54, 54, 64) | done 5/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 54, 54, 80) | done 3/3'
'InceptionV3 | forward | is:ivy.Shape(1, 54, 54, 80) | done 6/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 80) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 52, 52, 192) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 52, 52, 192) | done 7/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 192) | done 8/27'
'input shape is:ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 32) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 32)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 25, 25, 256) | done 9/27'
'input shape is:ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 10/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 11/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 384) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 96) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 96)'
'one 20/20, output shape is:ivy.Shape(1, 12, 12, 288)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 12/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 12, 12, 768) | done 13/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 14/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 15/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 16/27'
'v3 16/27, output shape is:ivy.Shape(1, 12, 12, 768)'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 5, 5, 192)'
'one 7/20, output shape is:ivy.Shape(1, 5, 5, 768)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 1280) | done 17/27'
'input shape is:ivy.Shape(1, 5, 5, 1280)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 18/27'
'input shape is:ivy.Shape(1, 5, 5, 2048)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 19/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 20/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 5, 5) | done 21/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 1, 1) | done 22/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 27/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 24/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 25/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048) | done 26/27'
'InceptionV3 | forward | fc | done 27/27'
('test_inceptionnet | logits is: ivy.array([[ 5.35196781e-01, -4.96701300e-01, '
 '-1.50884366e+00,\n'
 '         2.15160179e+00,  6.50694191e-01, -7.65435040e-01,\n'
 '         2.31138229e+00, -1.60866797e+00, -1.66679835e+00,\n'
 '        -2.14419651e+00,  4.67086017e-01,  1.17744565e+00,\n'
 '         1.13474667e+00,  3.27661693e-01,  1.81890237e+00,\n'
 '         1.92873388e-01, -2.27419674e-01,  5.59313595e-01,\n'
 '        -2.17227697e+00,  1.16735387e+00,  2.85702992e+00,\n'
 '        -2.32373762e+00,  1.16727495e+00, -9.55237865e-01,\n'
 '        -4.15350795e-01, -8.16586316e-01, -7.93078303e-01,\n'
 '        -3.14641923e-01, -6.56838715e-01, -1.84742594e+00,\n'
 '         3.86051297e-01,  1.03929675e+00,  1.84098959e+00,\n'
 '         8.37327600e-01,  3.32378936e+00, -8.79095495e-02,\n'
 '         2.13373637e+00,  2.14608431e-01, -7.23406613e-01,\n'
 '         1.84969842e+00,  4.13505375e-01, -3.58621448e-01,\n'
 '         6.48266792e-01, -2.45327115e-01, -4.40989822e-01,\n'
 '         1.74992275e+00, -2.11191153e+00,  2.15291500e+00,\n'
 '         1.06977701e+00,  6.78466111e-02,  1.66153401e-01,\n'
 '         4.81430531e-01,  1.75495625e-01, -1.45518565e+00,\n'
 '         1.76859987e+00,  1.93362343e+00, -1.19894075e+00,\n'
 '         1.44544214e-01,  1.03087771e+00,  1.51984334e+00,\n'
 '         9.72995162e-01,  2.98131943e+00, -3.04485500e-01,\n'
 '        -9.07928050e-02,  3.00609767e-01,  2.14381456e+00,\n'
 '         8.53808522e-01,  2.20815945e+00, -2.22890973e-01,\n'
 '        -8.44975054e-01, -3.44228178e-01, -4.64996129e-01,\n'
 '        -8.71594608e-01, -1.52422905e+00, -8.69145274e-01,\n'
 '        -4.13548917e-01,  5.74839652e-01, -6.67098761e-01,\n'
 '         8.44080269e-01,  4.08354938e-01, -2.46711302e+00,\n'
 '         7.10629106e-01, -1.28457689e+00, -7.08560288e-01,\n'
 '         6.06363535e-01, -1.58462954e+00, -2.19270706e+00,\n'
 '        -1.27901125e+00,  1.64329737e-01, -1.49093807e-01,\n'
 '        -1.07845390e+00,  1.77518964e+00, -6.51394010e-01,\n'
 '        -1.43621862e-01, -9.82420266e-01, -1.24594402e+00,\n'
 '         7.45377839e-01, -1.50563121e+00, -1.67822957e+00,\n'
 '         2.50540280e+00,  6.83772266e-01,  1.81857312e+00,\n'
 '         1.03618503e-02,  1.34058380e+00,  5.70620358e-01,\n'
 '        -2.63062143e+00, -1.89271617e+00,  4.64267135e-01,\n'
 '         1.51852524e+00, -1.43696576e-01,  7.06051946e-01,\n'
 '        -1.43720710e+00,  1.16996551e+00,  1.43503821e+00,\n'
 '         5.37532926e-01, -1.66964269e+00, -9.29939151e-01,\n'
 '         4.67007995e-01, -1.99611127e+00,  1.98233688e+00,\n'
 '        -2.85927534e-01, -1.17238689e+00,  6.23911142e-01,\n'
 '         8.59543204e-01, -2.83449340e+00, -1.29028976e-01,\n'
 '        -9.14537191e-01,  1.85346997e+00,  1.66380197e-01,\n'
 '         9.11081135e-01,  1.06415832e+00,  1.70926833e+00,\n'
 '         2.38176441e+00, -3.81579995e-01,  7.02958882e-01,\n'
 '         6.60807431e-01,  1.91056549e+00, -9.87021849e-02,\n'
 '        -9.05481160e-01, -1.44642425e+00,  5.97618341e-01,\n'
 '        -9.07083631e-01, -1.65206420e+00, -1.13252306e+00,\n'
 '         3.02869606e+00, -2.70138919e-01, -4.66896594e-02,\n'
 '        -4.53699470e-01,  1.00781870e+00,  1.47440505e+00,\n'
 '         3.01546907e+00, -1.28533125e+00,  3.40258670e+00,\n'
 '         1.24521756e+00,  1.30009973e+00, -2.60612011e+00,\n'
 '        -7.08958745e-01,  3.74934077e+00, -3.71589351e+00,\n'
 '        -1.28892732e+00, -6.18708670e-01, -2.78081155e+00,\n'
 '        -4.91764879e+00, -2.85637558e-01, -1.09770572e+00,\n'
 '        -1.75002289e+00, -2.16230512e+00, -2.26495194e+00,\n'
 '        -2.02945948e+00,  1.85383487e+00,  9.87097919e-01,\n'
 '        -2.32479572e+00, -7.46793866e-01, -7.60674715e-01,\n'
 '         1.54983592e+00, -2.56643868e+00, -1.12473190e+00,\n'
 '        -4.35042590e-01,  1.19272280e+00,  5.21513522e-01,\n'
 '        -8.75605643e-01, -1.42275482e-01, -1.11938405e+00,\n'
 '        -1.77498653e-01, -1.24452543e+00,  7.45936930e-02,\n'
 '         3.09114504e+00,  6.87486678e-02, -2.59203982e+00,\n'
 '        -2.07671380e+00, -1.48486865e+00, -2.43855208e-01,\n'
 '         3.04030240e-01, -3.34949303e+00, -3.48661447e+00,\n'
 '        -8.56919467e-01, -2.74683237e+00,  4.67530012e-01,\n'
 '        -3.37087125e-01,  8.91705513e-01,  8.87822151e-01,\n'
 '        -3.33167291e+00, -2.22208500e+00,  4.75388670e+00,\n'
 '        -2.25464892e+00, -1.72581995e+00, -2.24692631e+00,\n'
 '        -3.61342549e-01, -3.16772080e+00, -1.24869192e+00,\n'
 '        -1.83254027e+00, -1.56289959e+00, -8.51547182e-01,\n'
 '         1.14509535e+00,  1.58090031e+00, -3.97528827e-01,\n'
 '         4.76178020e-01, -3.71809572e-01,  9.49777961e-01,\n'
 '        -3.31716108e+00, -1.89834166e+00, -1.44938827e+00,\n'
 '         2.34358334e+00,  1.17555523e+00,  4.79691124e+00,\n'
 '        -4.01363015e-01,  7.48317540e-02, -3.63088465e+00,\n'
 '        -2.17500106e-01,  1.94249749e+00,  1.31580067e+00,\n'
 '         3.31978321e+00,  2.00693464e+00,  8.55630875e-01,\n'
 '         8.88079479e-02,  1.64399937e-01,  7.97908485e-01,\n'
 '        -1.46442068e+00, -1.45494115e+00,  4.17221665e-01,\n'
 '        -6.57998920e-01,  6.25347614e-01,  4.07679260e-01,\n'
 '        -1.80505264e+00, -4.66051310e-01, -1.07534110e+00,\n'
 '        -9.49941635e-01, -8.52786526e-02,  8.26928711e+00,\n'
 '         5.68803787e+00,  2.04256463e+00,  8.94540846e-01,\n'
 '        -2.62736368e+00, -1.69167137e+00, -1.22466350e+00,\n'
 '         2.13482428e+00,  1.53449368e+00,  7.93945408e+00,\n'
 '         2.17370739e+01,  6.91603756e+00,  4.97262287e+00,\n'
 '         7.81769419e+00, -1.31409657e+00, -2.62478900e+00,\n'
 '        -2.15489578e+00, -1.17091536e+00, -3.49269605e+00,\n'
 '         1.81608236e+00, -9.81255174e-02,  2.62756562e+00,\n'
 '         1.42819395e+01, -2.21596646e+00, -1.85098839e+00,\n'
 '        -2.03581512e-01, -7.56455720e-01, -1.00598764e+00,\n'
 '        -7.74547339e-01,  1.22950494e+00, -2.22738647e+00,\n'
 '         1.25712767e+01,  8.33770394e-01, -8.35335612e-01,\n'
 '        -1.65092766e+00,  5.13078642e+00, -1.01801884e+00,\n'
 '        -1.02297676e+00, -2.36501765e+00,  1.21707499e+00,\n'
 '        -2.64981985e-01,  4.81090546e-01, -2.07241964e+00,\n'
 '         9.67038751e-01, -2.68089592e-01, -1.45214796e+00,\n'
 '        -1.45156634e+00, -2.86049438e+00,  5.19907284e+00,\n'
 '        -8.02271247e-01, -2.65157175e+00, -1.79223013e+00,\n'
 '        -1.07877743e+00, -1.18313408e+00,  3.64433676e-01,\n'
 '         1.80881119e+00, -1.80139512e-01, -6.37066603e-01,\n'
 '         8.62020493e-01,  1.19772136e-01, -1.42458987e+00,\n'
 '         1.66277438e-01, -1.95721757e+00, -1.93009210e+00,\n'
 '        -8.48911703e-01, -1.10432839e+00, -5.93980014e-01,\n'
 '        -6.54100299e-01, -1.43758190e+00, -2.99986780e-01,\n'
 '        -1.50476074e+00, -1.34278107e+00,  7.34868527e-01,\n'
 '        -7.36060500e-01,  2.35091031e-01, -3.55891585e-02,\n'
 '        -1.99418497e+00, -1.16387320e+00,  5.04554451e-01,\n'
 '         7.90629566e-01,  2.91906333e+00, -3.08136642e-01,\n'
 '        -1.11060071e+00,  1.56954527e+00,  2.74323416e+00,\n'
 '        -6.92656517e-01,  8.30286443e-01, -1.97962403e+00,\n'
 '        -1.43690431e+00,  6.27924621e-01,  1.94758534e+00,\n'
 '        -1.39794934e+00,  4.99754250e-01, -3.17538500e-01,\n'
 '        -5.67658782e-01, -3.36048544e-01,  1.00303963e-02,\n'
 '         1.09842217e+00,  2.59313774e+00,  1.29574812e+00,\n'
 '        -9.02911574e-02, -9.99316633e-01,  6.99938476e-01,\n'
 '        -3.90395761e-01, -1.11890459e+00, -4.45352674e-01,\n'
 '        -8.70261908e-01, -2.65421957e-01,  1.01131582e+00,\n'
 '         6.32902503e-01,  1.33153653e+00, -1.68293667e+00,\n'
 '        -1.64947307e+00, -1.21697521e+00, -1.75435889e+00,\n'
 '         1.03434205e+00, -2.76444292e+00, -2.81902265e+00,\n'
 '        -3.80893755e+00, -9.94611323e-01, -4.48978394e-02,\n'
 '        -2.46447277e+00,  4.81467813e-01, -9.98283148e-01,\n'
 '         2.25732252e-01,  1.37840700e+00,  1.47780740e+00,\n'
 '        -2.71919393e+00, -1.44800425e+00,  1.50571811e+00,\n'
 '        -1.14887878e-01, -2.14955187e+00, -1.01444349e-02,\n'
 '        -3.64821815e+00, -4.69236553e-01, -1.59965336e+00,\n'
 '        -9.31332171e-01,  1.89531779e+00, -1.67916358e+00,\n'
 '         2.88743019e-01, -4.48423088e-01, -8.68889332e-01,\n'
 '         1.28332424e+00,  4.70799267e-01,  2.10695267e-02,\n'
 '         1.15186954e+00, -1.37521476e-01, -3.03312868e-01,\n'
 '         2.67961407e+00, -4.08242643e-01,  1.96773160e+00,\n'
 '         2.20344901e+00, -8.14471185e-01, -1.64888132e+00,\n'
 '         6.38070464e-01,  4.98685151e-01,  1.72198605e+00,\n'
 '         1.10891491e-01,  1.87337518e+00, -2.16891575e+00,\n'
 '         6.40277326e-01, -1.40767562e+00,  8.62574518e-01,\n'
 '        -1.29386175e+00, -3.83368301e+00, -4.20680344e-01,\n'
 '        -1.06661034e+00,  4.60613549e-01,  4.63183314e-01,\n'
 '        -6.76215887e-02, -1.84206819e+00,  2.47231007e-01,\n'
 '        -5.99599779e-01, -4.59468699e+00, -7.55955219e-01,\n'
 '        -1.68021512e+00, -1.28127956e+00,  4.93130446e-01,\n'
 '        -1.93448436e+00, -5.96564174e-01, -1.73834133e+00,\n'
 '        -4.93708461e-01,  5.81262946e-01, -9.14054096e-01,\n'
 '        -1.66708565e+00,  5.81972361e-01, -2.76875830e+00,\n'
 '         9.02574241e-01, -5.79497337e-01, -1.00831938e+00,\n'
 '        -1.12934208e+00, -2.24207544e+00,  1.37207341e+00,\n'
 '        -4.86000538e-01,  4.03254390e-01, -1.56145346e+00,\n'
 '        -1.33907020e+00,  1.18056560e+00, -1.31069326e+00,\n'
 '         5.23755252e-01,  9.95705664e-01, -2.16422379e-01,\n'
 '         9.39384580e-01, -1.36574781e+00, -2.50571966e-01,\n'
 '        -1.02375042e+00, -2.47960544e+00, -6.76364064e-01,\n'
 '         1.26338816e+00, -2.83597588e-01, -8.44396472e-01,\n'
 '         1.00604045e+00,  2.86829174e-01, -2.06510162e+00,\n'
 '         2.01120615e+00, -4.90321875e-01, -6.00972593e-01,\n'
 '        -1.50030768e+00,  1.06238675e+00, -1.65399289e+00,\n'
 '        -8.88242066e-01,  1.22477865e+00,  1.08162567e-01,\n'
 '        -6.98581815e-01, -2.36574340e+00,  9.48106945e-01,\n'
 '        -3.77378792e-01, -2.31634116e+00,  1.53118086e+00,\n'
 '        -2.92199940e-01,  3.29936028e+00, -1.60227394e+00,\n'
 '         1.22913790e+00,  1.90694320e+00, -1.30490839e+00,\n'
 '         2.16994770e-02, -1.71673262e+00, -9.94830072e-01,\n'
 '        -4.46627617e-01,  1.90185511e+00,  2.35663557e+00,\n'
 '        -5.42557955e-01,  9.00608420e-01,  1.10536528e+00,\n'
 '        -1.10666609e+00,  2.24166751e-01, -3.81712973e-01,\n'
 '         1.47364950e+00, -7.07312822e-02,  3.68879944e-01,\n'
 '        -1.93471312e-01,  1.56431568e+00, -1.64841771e+00,\n'
 '         1.90331519e+00,  1.28925836e+00, -6.33977234e-01,\n'
 '        -9.24925566e-01,  2.02165484e+00, -6.94589376e-01,\n'
 '        -1.20087814e+00,  1.21708560e+00, -1.69490135e+00,\n'
 '         2.15683508e+00,  2.88840502e-01,  9.74485278e-03,\n'
 '        -2.67140090e-01,  1.15045237e+00, -1.33954430e+00,\n'
 '        -9.69356775e-01, -4.03596163e-01, -3.96482706e+00,\n'
 '        -2.52376723e+00,  1.62818551e-01,  4.66082811e-01,\n'
 '         8.76034126e-02, -9.55421209e-01, -7.79595971e-01,\n'
 '        -1.98212504e-01, -4.96671677e-01, -3.92874932e+00,\n'
 '        -1.12499738e+00, -1.24602056e+00,  5.74585795e-01,\n'
 '        -5.44073582e-01,  2.57772684e+00, -2.08323598e+00,\n'
 '        -1.06885779e+00, -1.79492569e+00, -1.88799977e+00,\n'
 '         3.31401300e+00, -7.07045138e-01, -1.82732177e+00,\n'
 '        -5.56967378e-01, -9.37836111e-01, -2.95509428e-01,\n'
 '         7.48347342e-01,  1.43200326e+00, -2.34106922e+00,\n'
 '         2.66617060e+00,  5.29275596e-01, -2.85419607e+00,\n'
 '        -3.63562107e-02, -4.16604340e-01,  1.17702889e+00,\n'
 '        -1.72179782e+00, -2.66422939e+00,  7.09948063e-01,\n'
 '        -2.53788829e+00, -2.02029491e+00, -4.95047629e-01,\n'
 '         1.13884163e+00,  1.13300033e-01,  1.90432930e+00,\n'
 '        -1.56396329e+00,  3.06268597e+00,  1.32741368e+00,\n'
 '         3.64544153e-01, -5.66327572e-01,  1.33469891e+00,\n'
 '         3.80388409e-01,  1.47826302e+00, -5.85628629e-01,\n'
 '        -1.93101203e+00, -7.65166342e-01,  9.63140130e-01,\n'
 '         2.48614979e+00,  8.40709329e-01, -1.19580114e+00,\n'
 '         5.63191533e-01,  1.95026755e-01,  2.19575548e+00,\n'
 '        -2.26221657e+00,  8.80821347e-01,  5.15418172e-01,\n'
 '         1.53897059e+00, -7.18640625e-01,  1.02427408e-01,\n'
 '         1.14166939e+00, -1.68030119e+00,  1.18992627e+00,\n'
 '         1.08147335e+00, -6.07735395e-01,  3.68313789e-01,\n'
 '        -6.23744488e-01,  6.29453540e-01,  1.07351184e+00,\n'
 '         6.66908681e-01, -1.20825887e+00,  5.86323261e-01,\n'
 '        -2.85366654e-01, -1.64567196e+00,  1.60318673e-01,\n'
 '        -2.89059115e+00, -5.78009188e-01, -8.09805691e-01,\n'
 '        -1.12378430e+00,  1.53766608e+00, -1.42477083e+00,\n'
 '         4.13135719e+00,  8.72586370e-01,  2.14765596e+00,\n'
 '        -2.37915814e-01,  7.98024774e-01,  1.28549647e+00,\n'
 '        -1.16493022e+00,  2.02179313e+00,  2.46668279e-01,\n'
 '        -6.93313479e-01, -4.95524108e-01,  3.46107364e-01,\n'
 '         9.51090157e-01, -2.63980865e+00, -3.76142406e+00,\n'
 '        -6.55593514e-01,  2.47527528e+00,  8.29759955e-01,\n'
 '        -1.27155447e+00,  1.15777075e+00, -9.06626344e-01,\n'
 '         3.33567381e-01,  2.70962763e+00,  2.21937585e+00,\n'
 '        -1.76063442e+00,  3.05866897e-01, -1.38902700e+00,\n'
 '         1.32287359e+00, -2.18182707e+00, -3.87842822e+00,\n'
 '        -2.02887154e+00, -2.07605004e-01,  2.17780188e-01,\n'
 '         1.06664622e+00, -1.36289620e+00, -1.68686438e+00,\n'
 '         6.22579873e-01, -7.34210312e-02, -1.29074365e-01,\n'
 '         1.38398445e+00,  9.80498433e-01, -9.05139208e-01,\n'
 '        -1.70066059e-01,  1.56030417e+00, -1.13701761e+00,\n'
 '         8.07989418e-01,  3.11473072e-01, -7.04480410e-01,\n'
 '        -6.12595081e-01, -3.31435442e+00,  3.71661872e-01,\n'
 '        -4.25796366e+00,  4.64805484e-01, -9.83248830e-01,\n'
 '        -1.77841497e+00, -1.79089498e+00,  9.55606818e-01,\n'
 '        -2.39892817e+00, -7.53863573e-01, -2.70441842e+00,\n'
 '         1.02697086e+00,  1.68671280e-01, -9.82457280e-01,\n'
 '         8.56651187e-01, -1.27533364e+00, -1.17228389e+00,\n'
 '         2.13069153e+00,  1.11317456e-01,  1.01664615e+00,\n'
 '         7.66561091e-01,  1.39252210e+00,  4.81933683e-01,\n'
 '        -8.34030032e-01,  1.46072090e+00, -6.72826827e-01,\n'
 '        -1.89525139e+00,  1.52082097e+00,  3.35547924e-02,\n'
 '         1.67932570e+00, -1.52396858e+00, -2.88203502e+00,\n'
 '         9.05105531e-01, -1.27690449e-01,  1.08270132e+00,\n'
 '         1.48447633e+00, -3.68685436e+00,  1.04789793e+00,\n'
 '        -2.44382763e+00, -1.32229161e+00,  3.40044945e-01,\n'
 '         1.47245258e-01,  8.75376940e-01,  2.54461348e-01,\n'
 '         7.45418787e-01, -1.34077382e+00, -5.69087029e-01,\n'
 '        -2.52433228e+00,  1.67554662e-01, -3.40197182e+00,\n'
 '        -3.25348234e+00, -6.09720290e-01, -9.50224996e-01,\n'
 '        -3.20875198e-01, -8.23692262e-01, -2.98196459e+00,\n'
 '         2.05308414e+00,  1.09391463e+00, -1.98478496e+00,\n'
 '        -1.55026388e+00,  2.26842105e-01, -2.53097629e+00,\n'
 '        -2.21421242e-01, -5.58317423e-01,  1.12816429e+00,\n'
 '         2.59541178e+00,  1.34508029e-01,  1.04210103e+00,\n'
 '         2.10534006e-01,  1.88211381e+00,  1.00817728e+00,\n'
 '         1.31323636e-01, -1.52156234e-01,  6.55831456e-01,\n'
 '         6.96483553e-01,  1.44758177e+00,  3.09877086e+00,\n'
 '         5.08277178e-01,  1.94625348e-01, -1.41620946e+00,\n'
 '        -6.16691112e-01, -5.79423666e-01,  8.57120454e-02,\n'
 '         2.31026411e+00,  2.15519571e+00,  1.48676729e+00,\n'
 '         1.94959685e-01, -2.31355429e+00, -8.18856120e-01,\n'
 '        -1.80297828e+00, -2.81921649e+00,  4.22431803e+00,\n'
 '        -7.58605480e-01, -1.63396454e+00,  1.24796271e+00,\n'
 '        -2.66384244e+00,  4.12440449e-02,  2.19344568e+00,\n'
 '        -2.31504846e+00, -2.98890114e-01,  1.73880935e-01,\n'
 '        -1.20667970e+00,  1.79588163e+00, -9.04093385e-02,\n'
 '        -4.33969021e-01, -1.36845946e+00, -1.02069032e+00,\n'
 '        -2.20850021e-01,  1.64247453e+00, -9.88810897e-01,\n'
 '        -8.69491816e-01, -1.89941966e+00,  1.47956169e+00,\n'
 '         1.58436918e+00,  1.24410319e+00,  5.46516538e-01,\n'
 '        -4.12495345e-01, -9.13823843e-01, -1.93766896e-02,\n'
 '        -4.34079766e-01,  9.25336420e-01,  5.53119540e-01,\n'
 '        -1.22208917e+00,  1.41288012e-01, -1.00140524e+00,\n'
 '         2.23138094e+00,  4.22887385e-01, -7.16503978e-01,\n'
 '        -3.29307747e+00, -3.89023125e-01, -1.71966338e+00,\n'
 '        -1.54940486e-02,  2.18873620e-02, -1.13539353e-01,\n'
 '        -7.05121279e-01,  1.05689120e+00,  1.88725054e+00,\n'
 '         2.49158907e+00,  8.09718966e-01, -3.44204545e-01,\n'
 '        -2.24929500e+00, -1.73196054e+00, -2.25271201e+00,\n'
 '        -1.70460522e-01, -1.33082783e+00,  7.77455151e-01,\n'
 '        -1.42801416e+00, -6.60366416e-02,  2.00909305e+00,\n'
 '        -1.72494578e+00, -5.74360490e-01, -1.98649001e+00,\n'
 '        -2.41338253e+00,  1.03489947e+00,  6.50465429e-01,\n'
 '         1.01009548e+00, -1.92332518e+00,  6.61426306e-01,\n'
 '         5.82860708e-01,  1.63552690e+00,  1.14343429e+00,\n'
 '         2.02577496e+00, -2.68375605e-01, -4.63984585e+00,\n'
 '         9.27495718e-01, -2.24028587e-01, -1.90983236e+00,\n'
 '         9.39593732e-01,  1.98916531e+00,  1.15621674e+00,\n'
 '        -3.48735452e-02,  6.74176872e-01, -1.63051486e-03,\n'
 '         1.31047046e+00, -4.47114348e-01,  1.02168031e-01,\n'
 '        -2.82898784e-01,  6.10987782e-01, -5.23372740e-02,\n'
 '        -8.87032151e-01, -1.87353945e+00,  1.31027460e-01,\n'
 '         1.44410980e+00,  7.44706035e-01,  1.30289614e-01,\n'
 '         2.79190421e-01,  3.02308679e-01,  1.11406910e+00,\n'
 '         1.74069679e+00,  1.01486874e+00, -1.12373889e-01,\n'
 '        -1.92269135e+00, -1.53830028e+00,  1.94872606e+00,\n'
 '         6.63847625e-01,  2.23960114e+00, -7.09426642e-01,\n'
 '         2.49574876e+00, -5.04873991e-01, -4.04576302e-01,\n'
 '         1.06580809e-01, -3.06869578e+00,  9.17274952e-01,\n'
 '        -2.23200351e-01, -3.24589312e-01, -6.32623792e-01,\n'
 '         1.65938902e+00, -1.02485704e+00,  2.99020320e-01,\n'
 '        -1.74528658e-01,  2.91376680e-01,  4.82874155e-01,\n'
 '         2.54435468e+00, -1.35155535e+00, -1.31391728e+00,\n'
 '        -4.58869159e-01, -1.54759729e+00,  8.20135117e-01,\n'
 '        -2.01463342e-01, -2.05717161e-02, -2.03288031e+00,\n'
 '         4.75631714e-01, -4.22362375e+00,  3.06402159e+00,\n'
 '         7.23489046e-01, -1.82256424e+00, -1.84060550e+00,\n'
 '         1.58468044e+00, -5.29827595e-01, -2.90539086e-01,\n'
 '        -8.98968995e-01,  2.36373591e+00,  1.02372611e+00,\n'
 '        -6.40391290e-01,  1.36914241e+00,  2.13967651e-01,\n'
 '         2.77301609e-01, -1.11995041e+00,  1.77963328e+00,\n'
 '        -1.91430241e-01, -2.49919200e+00,  3.35495162e+00,\n'
 '        -5.60298502e-01,  8.43848348e-01,  3.04256320e+00,\n'
 '        -4.06580061e-01, -1.04582322e+00, -2.05464292e+00,\n'
 '        -2.04484367e+00, -2.69272137e+00, -2.74254012e+00,\n'
 '        -1.20477945e-01,  1.96781457e+00, -1.61044300e+00,\n'
 '         2.90229827e-01,  2.27785778e+00, -1.89550960e+00,\n'
 '         2.55174756e+00,  2.69819236e+00,  4.76490378e-01,\n'
 '         3.42728805e+00, -4.37535614e-01, -2.78680611e+00,\n'
 '        -8.26814026e-02, -1.17677426e+00, -1.66314066e+00,\n'
 '         1.72240615e+00,  1.13642526e+00,  2.67441559e+00,\n'
 '        -1.74095523e+00,  3.40917885e-01, -2.19384864e-01,\n'
 '        -9.68579114e-01, -4.57115173e-01,  2.94194460e-01,\n'
 '         2.76719785e+00, -1.00658095e+00, -1.58446536e-01,\n'
 '        -1.61564422e+00, -1.12062156e+00, -8.23113024e-01,\n'
 '         1.58689648e-01,  3.75344038e-01, -4.89336699e-02,\n'
 '         2.59270215e+00, -5.07255718e-02,  3.52403307e+00,\n'
 '         5.12827683e+00,  1.72128034e+00,  1.82277525e+00,\n'
 '         2.28314400e+00,  2.36547902e-01,  2.90623367e-01,\n'
 '         2.04633784e+00,  1.49357110e-01,  1.07929969e+00,\n'
 '         7.13080525e-01,  3.57303882e+00,  3.95750344e-01,\n'
 '        -8.66285563e-02,  1.45536721e+00,  3.66562796e+00,\n'
 '         7.54182816e-01, -1.70848036e+00,  1.27671093e-01,\n'
 '        -1.01735568e+00,  3.53739953e+00, -1.08611035e+00,\n'
 '        -1.24296928e+00, -4.01372641e-01, -1.60956860e+00,\n'
 '         6.37347341e-01,  1.23785341e+00,  2.63895750e-01,\n'
 '        -9.46871519e-01, -6.29268289e-01,  2.18047905e+00,\n'
 '         1.87581325e+00, -4.11944360e-01, -1.23790264e+00,\n'
 '        -1.70701265e+00,  8.90337825e-02,  1.31567073e+00,\n'
 '         8.24731827e-01, -5.07469058e-01, -1.10358787e+00,\n'
 '        -6.24387741e-01,  1.22499967e+00,  3.92629355e-02,\n'
 '        -1.88648081e+00, -1.43875504e+00,  8.58381167e-02,\n'
 '        -2.54458809e+00,  5.80335140e-01, -4.18194532e-01,\n'
 '         8.76294136e-01, -3.33230555e-01, -2.07673669e+00,\n'
 '        -2.14779139e+00, -6.90804541e-01,  2.95794100e-01,\n'
 '        -2.22783595e-01, -1.45486593e+00, -1.21630526e+00,\n'
 '         5.79609156e-01]])')
'test_inceptionnet | batch_shape is: [1]'
'test_inceptionnet | logits.shape is: ivy.Shape(1, 1000)'
'||'
'test_inceptionnet | indices_test | true_indices is: [258 270 279]'
'test_inceptionnet | indices_test | calc_indices is: [258 270 279]'
'test_inceptionnet | device is: cpu'
'test_inceptionnet | fw is: jax'
'test_inceptionnet | load_weights is: False'
'InceptionV3 | build | layer 1/22 built'
'InceptionV3 | build | layer 2/22 built'
'layer 3/22 built'
'InceptionV3 | build | layer 4/22 built'
'InceptionV3 | build | layer 5/22 built'
'InceptionV3 | build | layer 6/22 built'
'InceptionV3 | build | layer 7/22 built'
'InceptionV3 | build | layer 8/22 built'
'InceptionV3 | build | layer 9/22 built'
'InceptionV3 | build | layer 10/22 built'
'InceptionV3 | build | layer 11/22 built'
'InceptionV3 | build | layer 12/22 built'
'InceptionV3 | build | layer 13/22 built'
'InceptionV3 | build | layer 14/22 built'
'InceptionV3 | build | layer 15/22 built'
'InceptionV3 | build | layer 17/22 built'
'InceptionV3 | build | layer 18/22 built'
'InceptionV3 | build | layer 19/22 built'
'InceptionV3 | build | layer 20/22 built'
'InceptionV3 | build | layer 21/22 built'
'InceptionV3 | build | layer 22/22 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/4 built'
'layer 2/4 built'
'layer 3/4 built'
'layer 4/4 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/6 built'
'layer 2/6 built'
'layer 3/6 built'
'layer 4/6 built'
'layer 5/6 built'
'layer 6/6 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'inceptionNet_v3 | building InceptionV3 model | done 1/3'
'InceptionV3 | forward | input data_format is:NHWC | done 1/27'
'InceptionV3 | forward | data_format is going to be used is:NHWC | done 1/27'
'InceptionV3 | forward | input shape is:ivy.Shape(1, 224, 224, 3) | done 1/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 224, 224, 3) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 111, 111, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 111, 111, 32) | done 2/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 111, 111, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 32) | done 3/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 109, 109, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 64) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 64) | done 4/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 54, 54, 64) | done 5/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 54, 54, 80) | done 3/3'
'InceptionV3 | forward | is:ivy.Shape(1, 54, 54, 80) | done 6/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 80) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 52, 52, 192) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 52, 52, 192) | done 7/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 192) | done 8/27'
'input shape is:ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 32) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 32)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 25, 25, 256) | done 9/27'
'input shape is:ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 10/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 11/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 384) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 96) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 96)'
'one 20/20, output shape is:ivy.Shape(1, 12, 12, 288)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 12/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 12, 12, 768) | done 13/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 14/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 15/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 16/27'
'v3 16/27, output shape is:ivy.Shape(1, 12, 12, 768)'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 5, 5, 192)'
'one 7/20, output shape is:ivy.Shape(1, 5, 5, 768)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 1280) | done 17/27'
'input shape is:ivy.Shape(1, 5, 5, 1280)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 18/27'
'input shape is:ivy.Shape(1, 5, 5, 2048)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 19/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 20/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 5, 5) | done 21/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 1, 1) | done 22/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 27/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 24/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 25/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048) | done 26/27'
'InceptionV3 | forward | fc | done 27/27'
('test_inceptionnet | logits is: ivy.array([[ 2.27084395e+04,  9.02972500e+05, '
 '-1.48047031e+05,\n'
 '         1.50825562e+06,  7.02987812e+04,  2.68975719e+05,\n'
 '         6.10630688e+05,  6.24932812e+05,  1.30753211e+05,\n'
 '        -5.68577062e+05, -3.33157781e+05, -2.83188875e+05,\n'
 '         2.90093965e+04,  1.87509625e+05,  2.02536762e+06,\n'
 '         2.20257625e+05,  4.01504375e+05,  4.65943594e+04,\n'
 '        -1.58974672e+05,  9.40858875e+05,  4.19863281e+05,\n'
 '        -2.17941516e+05,  7.28214922e+04, -1.25830800e+06,\n'
 '        -7.19036484e+04,  3.19953594e+05,  1.62201538e+06,\n'
 '         7.42074062e+04,  5.88096438e+05, -1.70515750e+05,\n'
 '         4.23096133e+04,  2.08597375e+06, -1.19681888e+06,\n'
 '        -4.84080656e+05,  5.37465438e+05,  3.94377531e+05,\n'
 '         1.37637688e+06,  1.46621175e+06, -7.28789938e+05,\n'
 '         8.54831719e+04,  2.76134062e+05,  8.09559938e+05,\n'
 '         1.98899562e+05,  1.30644971e+04,  6.01807875e+05,\n'
 '         1.45819425e+06, -4.75434344e+05, -2.17449297e+05,\n'
 '         8.89954438e+05, -2.15412141e+05, -5.15748719e+05,\n'
 '        -8.10930688e+05,  1.21651850e+06, -7.21186062e+05,\n'
 '        -8.53000312e+05,  7.15168125e+04, -1.36163438e+05,\n'
 '         1.48243750e+05, -6.57639438e+05, -1.20536297e+05,\n'
 '        -1.18773075e+06, -5.68357250e+05, -8.83685312e+04,\n'
 '        -5.18229719e+05,  7.62716328e+04, -4.06820562e+05,\n'
 '        -4.36336656e+05,  1.60518675e+06, -3.06847469e+05,\n'
 '         6.21513562e+05,  5.66296750e+05,  8.42708516e+04,\n'
 '         9.35234625e+05, -2.00088172e+05,  1.16045050e+06,\n'
 '        -1.29850712e+06, -5.21900625e+05,  1.43596699e+04,\n'
 '         4.19007812e+05,  2.19740047e+05, -7.69785812e+05,\n'
 '         2.27287297e+05,  2.99672281e+05, -1.07860200e+06,\n'
 '        -9.58209125e+05,  1.23176609e+05,  6.40560062e+05,\n'
 '        -4.32720438e+05, -1.01383356e+06,  7.69803500e+05,\n'
 '        -4.29292906e+05,  2.63589875e+05,  1.24375112e+06,\n'
 '        -2.75201938e+05,  8.32796250e+05, -1.09594350e+06,\n'
 '         1.74809422e+05,  7.53624812e+05, -9.21690812e+05,\n'
 '        -1.21390875e+06,  8.20893625e+05,  9.73333500e+05,\n'
 '        -9.29228188e+05,  4.75898094e+05, -3.18229629e+04,\n'
 '        -3.21347312e+05, -1.85609638e+06,  1.43289750e+06,\n'
 '         7.85911484e+04, -6.27003250e+05, -1.78421825e+06,\n'
 '        -1.50463438e+06, -7.72830188e+05,  6.63451000e+05,\n'
 '        -5.87725438e+05,  1.36936212e+06,  1.04382150e+06,\n'
 '        -1.46193734e+05,  8.18876648e+02, -7.63183875e+05,\n'
 '         8.05949438e+05, -1.36493266e+05, -2.79889188e+05,\n'
 '         5.30569625e+05,  3.55141250e+05,  9.71362625e+05,\n'
 '        -7.56824125e+05,  6.17819625e+05, -8.90573594e+04,\n'
 '         5.77750703e+04, -6.86414688e+05,  8.09985312e+05,\n'
 '        -5.11538188e+05,  3.88458625e+05,  3.37547375e+05,\n'
 '         2.17688781e+05, -7.35891750e+05,  1.46289638e+06,\n'
 '         1.23493500e+06,  2.48038391e+05, -2.07810098e+04,\n'
 '        -9.59415188e+05,  2.65621062e+05,  2.43146609e+05,\n'
 '         1.22876212e+06, -9.83687750e+05, -3.88731094e+05,\n'
 '        -3.95030031e+05,  6.26916250e+05,  1.15571450e+06,\n'
 '         2.41193391e+05,  1.85555838e+06, -6.50659812e+05,\n'
 '         4.59495094e+05,  2.61582484e+05,  1.72828625e+06,\n'
 '        -1.02234769e+06, -4.56392656e+05,  5.22639281e+05,\n'
 '         8.57937125e+05,  8.31108438e+05,  2.33619359e+05,\n'
 '         4.92552422e+04,  4.39586812e+05, -1.35213238e+06,\n'
 '         7.16408500e+05,  3.20125449e+04,  2.40780906e+05,\n'
 '         6.80569625e+05,  7.89717812e+05, -1.15271175e+06,\n'
 '        -7.02726438e+05, -3.81885688e+05, -1.96929375e+05,\n'
 '        -2.92472875e+05,  1.30884212e+06, -3.95611125e+05,\n'
 '        -3.74716281e+05, -7.51081812e+05,  5.76059938e+05,\n'
 '        -5.64187109e+04, -6.60568438e+05, -7.08046000e+05,\n'
 '         7.78135562e+05,  2.18974453e+05,  7.40767125e+05,\n'
 '        -1.82856172e+05,  3.12592406e+05, -5.47137125e+05,\n'
 '         7.52161406e+04,  3.62288875e+05,  2.25959578e+05,\n'
 '         1.92623612e+06,  3.07432719e+05,  6.98658750e+05,\n'
 '         7.66415391e+04, -1.33137031e+05,  2.59632188e+05,\n'
 '         7.32712688e+05, -1.45349638e+06,  1.75446488e+06,\n'
 '         8.16790781e+04,  9.09932812e+05, -1.91672725e+06,\n'
 '        -4.99043438e+05, -1.13303212e+06, -2.00186469e+05,\n'
 '        -3.28237062e+05,  4.94655969e+05, -2.03303000e+06,\n'
 '         1.03794875e+05, -1.31923100e+06, -5.64653164e+04,\n'
 '         1.21348325e+06,  9.07457500e+05,  5.37380688e+05,\n'
 '         1.40278250e+05,  3.79335750e+05,  1.25540625e+06,\n'
 '         3.75894375e+05, -2.62877109e+04,  1.95657900e+06,\n'
 '        -1.46682812e+06, -1.08184250e+06,  9.01433312e+05,\n'
 '         1.54767281e+05, -3.73943688e+05,  1.07149412e+06,\n'
 '         1.04456856e+06,  1.78476609e+05, -6.26699188e+05,\n'
 '         1.04802531e+05, -4.39842750e+05, -4.61283281e+05,\n'
 '         4.22378312e+05,  8.72257125e+05, -4.11975719e+05,\n'
 '         5.51981938e+05, -5.99553938e+05, -3.97749594e+05,\n'
 '        -1.32340812e+06,  1.20767451e+04,  1.14941812e+06,\n'
 '        -1.07244797e+05, -7.22422062e+05,  2.61445547e+05,\n'
 '         1.37003450e+06, -6.91242875e+05,  4.60995219e+05,\n'
 '        -3.92568031e+05,  2.48722141e+05,  6.71538750e+04,\n'
 '        -1.44004312e+05,  2.88087781e+05, -6.22725062e+05,\n'
 '        -8.64359688e+05, -1.60492031e+05, -6.48684375e+05,\n'
 '         1.87939500e+05,  1.98981189e+03, -8.94329812e+05,\n'
 '        -1.01909269e+06, -1.84213531e+05,  1.48209450e+06,\n'
 '         1.39470075e+06,  1.37372850e+06,  2.15668691e+04,\n'
 '         6.27385750e+05,  1.09853012e+06, -2.86074219e+05,\n'
 '         5.03453781e+05, -1.60696062e+05,  2.05210200e+06,\n'
 '         5.86930500e+05,  1.40264038e+06, -2.50633422e+05,\n'
 '        -4.92803688e+05,  4.02463000e+05,  5.33786062e+05,\n'
 '        -3.05854719e+05, -7.87882375e+05, -5.14118969e+05,\n'
 '        -2.73146156e+05, -5.01138375e+05, -1.48372859e+05,\n'
 '        -1.15602388e+06,  1.47207641e+05, -5.15511062e+05,\n'
 '        -5.70746445e+04,  1.91043672e+05,  7.57703875e+05,\n'
 '         1.05512925e+06, -9.28310750e+05, -3.12541344e+05,\n'
 '        -1.90201100e+06, -4.62225664e+04, -9.08511062e+05,\n'
 '         1.09302539e+05, -4.85479438e+05, -1.02674269e+06,\n'
 '         3.36556062e+05, -7.47929141e+04, -4.60339656e+05,\n'
 '         3.89840500e+05,  2.05095266e+05, -2.60315750e+05,\n'
 '         5.35608000e+05, -1.56728712e+06,  7.43279750e+05,\n'
 '         3.97453250e+05,  4.54822031e+04,  1.36477850e+06,\n'
 '        -1.75557938e+05, -4.16768312e+05, -7.46268438e+05,\n'
 '        -5.54310000e+05, -1.00233606e+06,  1.68918050e+06,\n'
 '         1.00425431e+06,  3.55155250e+05,  6.23095188e+05,\n'
 '         2.92622250e+05, -1.06731125e+06,  2.08332219e+05,\n'
 '        -1.07421050e+06,  5.49440750e+05,  1.07688850e+06,\n'
 '         2.59701406e+05, -7.62969188e+05, -7.74702250e+05,\n'
 '         1.04487088e+06,  1.57227788e+06, -6.96917125e+05,\n'
 '         9.38282938e+05,  1.14312662e+06,  2.09476850e+06,\n'
 '         2.29207844e+05,  7.65937000e+05, -1.64462725e+06,\n'
 '        -5.71962383e+04,  1.37637688e+05, -1.05242800e+06,\n'
 '        -1.90963703e+05,  6.35949875e+05,  1.56954800e+06,\n'
 '        -1.26616612e+06,  3.95247812e+05,  1.99192297e+05,\n'
 '        -1.86013900e+06, -5.16028672e+04,  2.83365410e+04,\n'
 '         3.82021000e+05, -9.37556938e+05, -1.07378162e+06,\n'
 '         1.19848195e+05, -8.46073812e+05,  6.38205312e+05,\n'
 '         1.22826172e+05,  4.05804281e+05, -2.86442344e+05,\n'
 '         4.83463938e+05,  4.12525500e+05,  8.38660500e+05,\n'
 '        -1.14768638e+06,  3.76596000e+05,  5.48542500e+04,\n'
 '         7.93801000e+05,  6.86907000e+05, -4.52541219e+05,\n'
 '        -8.01828438e+05,  6.98008000e+05, -7.03807312e+05,\n'
 '         4.46524156e+05,  5.03399453e+04,  1.19284400e+06,\n'
 '        -1.37792912e+06, -5.55808375e+05,  1.76651297e+05,\n'
 '        -4.96840000e+05, -1.11596538e+06,  3.82885000e+05,\n'
 '        -1.41837875e+06,  1.65940312e+06,  4.12881188e+05,\n'
 '        -1.82565225e+06, -3.70386844e+05, -3.95065594e+05,\n'
 '        -1.20748488e+06, -4.21470812e+05,  8.45168688e+05,\n'
 '         5.56933750e+05, -6.94625812e+05, -1.14152266e+05,\n'
 '        -1.33040100e+06, -3.59714812e+05, -9.90715625e+05,\n'
 '        -7.71940562e+05,  7.21533188e+05, -1.27485462e+06,\n'
 '         1.72848300e+06, -1.53974188e+06,  5.98841375e+05,\n'
 '        -9.87896312e+05, -5.52485352e+04,  6.14740250e+05,\n'
 '         9.76677875e+05, -4.18782062e+05,  7.34768375e+05,\n'
 '         4.23655438e+05, -1.35882175e+06,  8.81446312e+05,\n'
 '         3.90757938e+05, -2.80798188e+05,  5.04923438e+05,\n'
 '        -6.51337438e+05,  1.90480656e+05,  2.95388156e+05,\n'
 '        -7.26610312e+04,  4.46717594e+05,  1.17269150e+06,\n'
 '         1.15506398e+05,  1.48547078e+05, -1.39120500e+05,\n'
 '         1.14865562e+06,  3.46532000e+05,  3.26983531e+05,\n'
 '        -5.15743156e+05,  4.13009594e+05, -6.02194375e+05,\n'
 '         1.42647725e+06,  1.07936836e+05, -6.82474438e+05,\n'
 '        -1.14221188e+05,  1.36054525e+06, -1.62322351e+03,\n'
 '         1.97578828e+05,  8.84178750e+05,  2.62142891e+05,\n'
 '        -3.95521094e+05,  5.83997812e+05, -1.06751912e+06,\n'
 '         4.21863625e+05,  7.49413750e+05, -1.07173212e+06,\n'
 '         8.22961719e+04, -3.07678531e+05, -2.22025975e+06,\n'
 '         1.40206875e+05, -8.68673438e+04, -7.31904453e+04,\n'
 '        -9.29801625e+05,  2.30731150e+06, -9.21194438e+05,\n'
 '         2.30537688e+05,  5.40924500e+05,  2.81615469e+05,\n'
 '         6.15488062e+05,  8.14787688e+05, -2.64272125e+05,\n'
 '         3.32288094e+05, -5.68552750e+05,  6.84758312e+05,\n'
 '         8.62265312e+05, -6.31073000e+05, -5.40629625e+05,\n'
 '         2.48431469e+05, -1.80827475e+06,  1.38531862e+06,\n'
 '         7.99734562e+05,  2.01591750e+06, -4.40999170e+03,\n'
 '         5.14470156e+05, -1.26430912e+06, -1.39299525e+06,\n'
 '         2.61358422e+05, -1.00200438e+06, -1.36715850e+06,\n'
 '         6.88174250e+05,  4.05390281e+05,  6.75570438e+05,\n'
 '        -2.13560273e+04, -1.15000412e+06,  1.55199953e+05,\n'
 '         5.30019688e+05,  7.71797062e+05, -1.58354859e+05,\n'
 '         1.79690844e+05,  1.50209512e+06,  4.19722344e+05,\n'
 '         3.62443062e+05, -7.28148250e+05,  3.49982422e+04,\n'
 '        -1.68797625e+06,  9.42571328e+04, -1.44442025e+06,\n'
 '         1.19755312e+04,  8.98598125e+05, -8.98940859e+04,\n'
 '         1.06205712e+06,  1.08757312e+06,  5.78625156e+04,\n'
 '         8.20948125e+04,  5.70025125e+05, -2.19163531e+05,\n'
 '        -3.58901938e+05,  1.78374297e+04, -2.43691484e+05,\n'
 '         2.49889531e+05, -6.41067125e+05,  4.87933250e+05,\n'
 '        -1.70969016e+05, -1.02148819e+06,  1.52062062e+06,\n'
 '        -7.30923188e+05,  6.97791875e+05, -5.50513188e+05,\n'
 '         1.80171138e+06,  4.45116188e+05, -1.85772359e+05,\n'
 '         1.16753800e+06, -3.94404500e+05, -1.00639300e+06,\n'
 '        -3.59689375e+05, -1.64956922e+05, -1.40841362e+06,\n'
 '        -5.53734424e+03, -3.62630094e+05, -1.17618088e+06,\n'
 '        -1.40571391e+05, -1.43034038e+06, -4.50712688e+05,\n'
 '        -7.96505938e+04,  1.50337362e+06, -1.49241975e+06,\n'
 '        -2.02633531e+05,  2.15233000e+05, -3.63074406e+05,\n'
 '        -6.14222383e+04, -4.22021523e+04, -8.65703375e+05,\n'
 '         8.11547375e+05, -1.60554312e+05,  6.22248625e+05,\n'
 '        -5.31342375e+05,  6.95865625e+04, -8.20804188e+05,\n'
 '        -7.52556688e+05,  8.02795812e+05, -5.64986812e+05,\n'
 '         7.06484219e+04, -2.75366969e+05, -1.13889062e+06,\n'
 '         3.96665219e+05, -1.65347462e+06,  3.81297070e+04,\n'
 '         4.02649438e+05,  1.25365138e+06,  1.27079462e+06,\n'
 '        -4.95469656e+05, -1.82857219e+05, -1.25939212e+06,\n'
 '         9.67801688e+05, -1.88724438e+05, -1.50761175e+06,\n'
 '        -1.44138562e+05,  4.24874594e+05, -2.61173625e+05,\n'
 '         8.08446625e+05, -9.50742188e+04, -4.42479812e+05,\n'
 '         4.68949125e+05, -3.39622250e+05,  1.70392350e+06,\n'
 '        -3.12471000e+05, -9.01093812e+05, -2.24732641e+05,\n'
 '         5.97289500e+05, -1.52318150e+06,  2.98857375e+05,\n'
 '        -4.96681688e+05, -1.03513012e+06,  8.90078188e+05,\n'
 '         1.94942391e+05,  6.13725742e+04,  5.47331812e+05,\n'
 '         1.34681650e+06, -2.97997594e+05, -1.22748075e+06,\n'
 '        -1.94616016e+05,  9.84827375e+05,  3.76015844e+05,\n'
 '        -1.00222258e+05,  8.62951688e+05, -5.93963984e+04,\n'
 '        -3.56981594e+05, -1.99279125e+05,  9.49325438e+05,\n'
 '         6.69539062e+05, -4.68403719e+05, -6.74919125e+05,\n'
 '        -3.62755594e+05, -7.91146562e+05,  7.08309453e+04,\n'
 '         8.74937188e+04,  2.34538125e+05,  1.15972212e+06,\n'
 '        -5.77441000e+05,  1.67352750e+05, -5.22249312e+05,\n'
 '         7.88284312e+05,  1.02704194e+06,  4.12872094e+05,\n'
 '         5.27219500e+05, -1.58521888e+06,  9.24713125e+05,\n'
 '         2.62229344e+05,  6.39620062e+05, -1.16177539e+04,\n'
 '        -9.08113500e+05,  1.32374750e+06,  1.33267512e+06,\n'
 '        -2.38153574e+04,  6.30908375e+05, -9.73825500e+05,\n'
 '         4.62256188e+05,  2.28857266e+05, -1.97358500e+06,\n'
 '        -8.12561500e+05, -3.02644219e+05,  1.46317262e+06,\n'
 '         1.50520359e+05, -2.09811625e+05,  1.26390175e+06,\n'
 '        -1.26793800e+06,  1.15505412e+06,  2.81820000e+05,\n'
 '        -5.39160625e+05,  3.16407250e+05,  3.12545312e+05,\n'
 '         9.06577750e+05,  2.00814094e+05,  1.35920812e+06,\n'
 '        -8.27918000e+05, -1.71361612e+06,  6.30509125e+05,\n'
 '         5.83808750e+05, -3.41343531e+05, -7.81941750e+05,\n'
 '         7.64577062e+05,  8.08521125e+05, -4.34193875e+05,\n'
 '        -9.24373125e+05, -9.30527266e+04,  9.15929812e+05,\n'
 '         6.43459000e+05, -2.95738594e+05,  1.96295900e+06,\n'
 '        -5.09570281e+05, -1.09431328e+05, -7.62834000e+05,\n'
 '        -6.15095875e+05,  1.03050594e+05,  1.90998516e+04,\n'
 '         1.08343262e+06, -5.23635500e+05,  9.90537938e+05,\n'
 '         1.42688969e+05,  7.10888000e+05, -4.29831094e+05,\n'
 '        -1.56238412e+06,  4.54556969e+05, -3.73602750e+05,\n'
 '         1.10121562e+06,  4.56195688e+05, -8.19388438e+05,\n'
 '         1.15271525e+06, -5.75328500e+05, -1.43965800e+06,\n'
 '         1.10569138e+06, -1.05508450e+06, -9.13289812e+05,\n'
 '         9.42776125e+05, -3.62666594e+05, -7.96357875e+05,\n'
 '        -8.21629938e+05, -4.77761094e+05,  6.06834312e+05,\n'
 '         6.28162750e+05,  1.69995031e+05,  8.14085750e+05,\n'
 '         1.15984788e+06,  9.15983750e+05, -3.11007812e+05,\n'
 '         4.72976469e+05, -1.01461844e+06,  4.52257594e+05,\n'
 '         3.23171406e+04,  4.91196250e+04, -7.91354062e+05,\n'
 '         4.44375531e+05, -7.17157562e+05,  3.11285906e+05,\n'
 '        -7.21715188e+05,  1.04439338e+06,  1.27689867e+05,\n'
 '        -3.63900781e+05,  1.38301312e+05, -6.27084258e+04,\n'
 '         5.22813469e+05, -1.23067100e+06,  6.40323750e+05,\n'
 '        -4.85705820e+04, -1.01203750e+05, -5.10921938e+05,\n'
 '        -1.68379350e+06,  9.37163250e+05,  9.11155156e+04,\n'
 '         2.58276525e+06,  2.70809500e+05, -8.14711312e+05,\n'
 '        -9.39403625e+05, -1.19054562e+06, -6.70934750e+05,\n'
 '         5.26936125e+05, -6.49491812e+05, -4.24938719e+05,\n'
 '         2.87811531e+05, -1.59637156e+05,  3.82491719e+05,\n'
 '        -7.78327000e+05,  2.75579750e+05,  1.84554297e+05,\n'
 '        -7.05086062e+05,  9.05459180e+03,  5.19070344e+05,\n'
 '         9.90307625e+05, -2.10956300e+06, -7.79882938e+05,\n'
 '         9.78354625e+05,  6.78559375e+04, -1.23904500e+06,\n'
 '        -5.19129453e+04,  3.49646094e+05, -1.62400612e+06,\n'
 '        -1.30687862e+06, -3.71802344e+04, -3.05626938e+05,\n'
 '         2.87357562e+05,  3.63732188e+05, -2.90001688e+05,\n'
 '        -2.14320859e+05,  2.62651062e+05,  6.12501875e+05,\n'
 '        -1.15810312e+06, -7.06190938e+05, -1.35722862e+06,\n'
 '         2.85307406e+05,  3.00312188e+05, -6.41766438e+05,\n'
 '         5.37723062e+05,  3.93349219e+05,  2.55418859e+05,\n'
 '         4.43621781e+05, -1.03633275e+06,  7.47406445e+03,\n'
 '        -1.34847656e+05,  7.42764812e+05, -6.93185625e+04,\n'
 '         1.14048975e+06, -8.91111000e+05, -1.69679988e+06,\n'
 '        -1.05524212e+06, -6.32073688e+05,  2.79687969e+05,\n'
 '         8.63609938e+05,  1.52908734e+05, -4.88472094e+05,\n'
 '        -1.41315662e+06,  5.87635812e+05, -7.01594438e+05,\n'
 '         1.22973641e+05, -1.02577109e+05, -4.33570469e+05,\n'
 '        -2.58075000e+05, -7.32435812e+05,  7.20186938e+05,\n'
 '         7.23285688e+05,  1.26857700e+06,  1.87966750e+05,\n'
 '        -1.50135550e+06, -8.80149219e+03, -8.79030875e+05,\n'
 '        -1.06649844e+05, -2.60005516e+05,  1.88685406e+05,\n'
 '        -3.44751125e+05, -2.37459688e+05, -1.13153938e+06,\n'
 '        -1.21080950e+06,  2.60553812e+05,  1.19474900e+06,\n'
 '        -7.92677875e+05,  2.24565109e+05, -3.66438188e+05,\n'
 '         8.72658906e+04,  1.44445225e+06, -3.66013469e+05,\n'
 '        -1.36231088e+06,  2.07035547e+05,  3.91077979e+03,\n'
 '         6.53184312e+05,  6.14978125e+05,  9.27509750e+05,\n'
 '         1.00306644e+06, -9.52440688e+05, -9.21691250e+05,\n'
 '        -3.92921594e+05, -7.02343125e+05,  1.88907719e+05,\n'
 '        -2.70035375e+05,  1.02456150e+06, -8.77804188e+05,\n'
 '        -3.50133359e+04,  1.20166900e+06,  7.93501875e+05,\n'
 '         2.72854469e+05, -2.92181125e+05,  7.85173984e+04,\n'
 '         1.49869162e+06,  4.47160594e+05, -3.92792812e+04,\n'
 '        -2.76478789e+04,  8.07951438e+05, -9.71275625e+05,\n'
 '        -1.28009338e+06,  1.68594062e+06,  6.24214562e+05,\n'
 '         9.38662312e+05, -5.50984938e+05,  6.90251625e+05,\n'
 '        -2.76022719e+05, -2.46431250e+05, -3.78154719e+05,\n'
 '        -9.16080188e+05, -7.42604688e+05, -5.56462734e+04,\n'
 '        -4.98757688e+05, -1.42557612e+06, -7.74051688e+05,\n'
 '         3.73114219e+05,  2.33265797e+05, -9.99750062e+05,\n'
 '         1.23287325e+06,  5.41457891e+04, -2.35233234e+05,\n'
 '         6.80171062e+05,  5.55091812e+05,  5.69809062e+05,\n'
 '         5.59522688e+05,  3.94537750e+05,  1.43355525e+06,\n'
 '         7.53863750e+05,  6.07625469e+04,  1.90707094e+05,\n'
 '        -7.83863750e+05,  2.32183578e+05,  4.87705469e+05,\n'
 '        -9.46947031e+04,  1.35413300e+06, -9.26950234e+04,\n'
 '        -1.21672088e+06,  6.07823125e+05, -2.47102828e+05,\n'
 '         2.50762363e+04, -1.30039388e+06, -8.11621500e+05,\n'
 '        -3.15730977e+04,  5.31300750e+05, -2.80446312e+05,\n'
 '         4.78108281e+05, -9.10854938e+05,  4.94714938e+05,\n'
 '        -5.23183375e+05, -3.58921656e+05, -6.45320742e+04,\n'
 '         5.42101750e+05,  2.02089359e+05,  9.63581562e+05,\n'
 '         1.00533419e+06, -3.22790156e+05, -5.21668469e+05,\n'
 '         7.52662625e+05, -3.05606750e+05,  4.05685281e+05,\n'
 '        -1.46442188e+05,  4.56535078e+04,  9.13729250e+05,\n'
 '         7.58584250e+05,  1.42608375e+06,  3.12428438e+05,\n'
 '         1.37281362e+06,  7.23585938e+05, -4.44447375e+05,\n'
 '         6.82772688e+05, -9.09513938e+05,  2.46396641e+05,\n'
 '        -5.53683938e+05,  9.13081000e+05, -1.80966516e+05,\n'
 '         1.60022734e+04, -6.64700438e+05,  4.35639453e+04,\n'
 '         4.51118656e+05, -3.98245906e+05,  2.30071031e+05,\n'
 '         1.66656588e+06,  8.22070312e+05, -5.96871375e+05,\n'
 '        -8.96781625e+05,  3.68316602e+04,  4.17928062e+05,\n'
 '        -3.45903094e+05, -1.18205438e+05, -1.27579775e+06,\n'
 '         1.36796975e+06,  8.40630750e+05,  8.79737891e+03,\n'
 '         1.45047922e+05, -7.05771719e+04, -2.26442312e+05,\n'
 '        -6.96615625e+05, -9.20170688e+05,  1.99631047e+05,\n'
 '        -5.19155625e+05, -4.46190688e+05, -3.21601844e+05,\n'
 '        -6.15022562e+05, -1.55029619e+04,  9.06098688e+05,\n'
 '         1.32059000e+06, -3.10154188e+05,  8.19848938e+05,\n'
 '        -7.84361562e+04,  3.17137637e+04,  3.58130656e+05,\n'
 '         1.25313338e+06, -7.57740312e+05,  6.55118688e+05,\n'
 '        -8.03117125e+05,  9.42087562e+05, -8.47913250e+05,\n'
 '        -1.42983875e+06,  1.35585250e+05,  1.44066925e+06,\n'
 '         4.65618469e+05, -4.46187188e+04,  2.53913984e+05,\n'
 '        -1.76670734e+05, -1.01574469e+06, -2.78105750e+05,\n'
 '        -1.23381047e+05, -8.18085438e+05, -8.10626312e+05,\n'
 '        -1.58370609e+05, -1.29610175e+06,  2.61925891e+05,\n'
 '        -1.90716700e+06,  1.17159225e+06, -1.13790075e+06,\n'
 '         4.74739750e+05, -2.67889250e+05, -7.38362438e+05,\n'
 '         6.44241750e+05, -3.56749344e+05, -1.97098425e+06,\n'
 '        -4.14758633e+04,  1.27711025e+06, -8.10065812e+05,\n'
 '         1.84526938e+06, -1.30830250e+06, -1.22108662e+06,\n'
 '        -1.91218328e+05,  1.41957312e+06, -2.65781781e+05,\n'
 '         2.88492938e+05, -6.63087625e+05,  9.88722625e+05,\n'
 '        -4.27766656e+05, -7.56106125e+05, -1.67167234e+05,\n'
 '         1.23355262e+06, -3.22191375e+05,  6.43785438e+05,\n'
 '        -3.03078250e+05,  2.05577225e+06,  1.38688825e+06,\n'
 '        -5.44754258e+04,  1.21694100e+06,  2.35964656e+05,\n'
 '        -8.22704812e+05]])')
'test_inceptionnet | batch_shape is: [1]'
'test_inceptionnet | logits.shape is: ivy.Shape(1, 1000)'
'||'
'test_inceptionnet | device is: cpu'
'test_inceptionnet | fw is: jax'
'test_inceptionnet | load_weights is: True'
'InceptionV3 | build | layer 1/22 built'
'InceptionV3 | build | layer 2/22 built'
'layer 3/22 built'
'InceptionV3 | build | layer 4/22 built'
'InceptionV3 | build | layer 5/22 built'
'InceptionV3 | build | layer 6/22 built'
'InceptionV3 | build | layer 7/22 built'
'InceptionV3 | build | layer 8/22 built'
'InceptionV3 | build | layer 9/22 built'
'InceptionV3 | build | layer 10/22 built'
'InceptionV3 | build | layer 11/22 built'
'InceptionV3 | build | layer 12/22 built'
'InceptionV3 | build | layer 13/22 built'
'InceptionV3 | build | layer 14/22 built'
'InceptionV3 | build | layer 15/22 built'
'InceptionV3 | build | layer 17/22 built'
'InceptionV3 | build | layer 18/22 built'
'InceptionV3 | build | layer 19/22 built'
'InceptionV3 | build | layer 20/22 built'
'InceptionV3 | build | layer 21/22 built'
'InceptionV3 | build | layer 22/22 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/4 built'
'layer 2/4 built'
'layer 3/4 built'
'layer 4/4 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/6 built'
'layer 2/6 built'
'layer 3/6 built'
'layer 4/6 built'
'layer 5/6 built'
'layer 6/6 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'inceptionNet_v3 | building InceptionV3 model | done 1/3'
'inceptionNet_v3 | clearning pretrained weights | done 2/3'
'inceptionNet_v3 | loading pretrained weights | done 3/3'
'InceptionV3 | forward | input data_format is:NHWC | done 1/27'
'InceptionV3 | forward | data_format is going to be used is:NHWC | done 1/27'
'InceptionV3 | forward | input shape is:ivy.Shape(1, 224, 224, 3) | done 1/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 224, 224, 3) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 111, 111, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 111, 111, 32) | done 2/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 111, 111, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 32) | done 3/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 109, 109, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 64) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 64) | done 4/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 54, 54, 64) | done 5/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 54, 54, 80) | done 3/3'
'InceptionV3 | forward | is:ivy.Shape(1, 54, 54, 80) | done 6/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 80) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 52, 52, 192) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 52, 52, 192) | done 7/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 192) | done 8/27'
'input shape is:ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 32) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 32)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 25, 25, 256) | done 9/27'
'input shape is:ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 10/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 11/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 384) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 96) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 96)'
'one 20/20, output shape is:ivy.Shape(1, 12, 12, 288)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 12/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 12, 12, 768) | done 13/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 14/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 15/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 16/27'
'v3 16/27, output shape is:ivy.Shape(1, 12, 12, 768)'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 5, 5, 192)'
'one 7/20, output shape is:ivy.Shape(1, 5, 5, 768)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 1280) | done 17/27'
'input shape is:ivy.Shape(1, 5, 5, 1280)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 18/27'
'input shape is:ivy.Shape(1, 5, 5, 2048)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 19/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 20/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 5, 5) | done 21/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 1, 1) | done 22/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 27/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 24/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 25/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048) | done 26/27'
'InceptionV3 | forward | fc | done 27/27'
('test_inceptionnet | logits is: ivy.array([[ 1.31299067e+00, '
 '-9.10785675e-01,  3.29865634e-01,\n'
 '         2.95258331e+00,  8.10467839e-01, -1.74668193e-01,\n'
 '         3.33803892e+00, -4.99150723e-01,  3.54579031e-01,\n'
 '        -2.29515171e+00, -8.64671648e-01, -1.98412105e-01,\n'
 '        -3.90140653e-01,  7.65480340e-01,  1.74564564e+00,\n'
 '        -2.13141465e+00, -7.49898195e-01, -5.30144215e-01,\n'
 '        -8.65069032e-02,  7.65097320e-01,  2.37927437e+00,\n'
 '        -1.88421369e+00,  2.49732637e+00, -1.08412588e+00,\n'
 '        -4.48239707e-02, -1.80822110e+00, -1.82645321e+00,\n'
 '        -1.37985373e+00, -1.37592447e+00, -2.46960449e+00,\n'
 '         3.62911224e-01,  2.09339738e+00,  2.26349568e+00,\n'
 '         2.32192755e-01,  1.15667307e+00, -2.12245965e+00,\n'
 '         1.59595132e+00, -4.85648304e-01, -1.03329372e+00,\n'
 '         1.12369633e+00,  2.13360620e+00,  8.51906762e-02,\n'
 '        -2.22364634e-01, -8.22054446e-02, -1.68499076e+00,\n'
 '        -2.53725553e+00,  3.35364044e-01,  2.46555448e-01,\n'
 '        -6.07675493e-01, -7.94708192e-01, -6.19937956e-01,\n'
 '        -1.70803368e-01, -2.56604493e-01, -2.32648611e+00,\n'
 '        -6.46273255e-01,  1.80998161e-01, -2.00289607e+00,\n'
 '        -1.29700410e+00, -3.74266028e-01, -1.41839993e+00,\n'
 '         1.94198862e-01,  1.05324566e+00, -2.64131141e+00,\n'
 '        -2.48587108e+00, -1.18723214e+00, -1.12153977e-01,\n'
 '        -1.62936866e+00,  3.90243769e-01, -7.47307062e-01,\n'
 '        -7.88031340e-01, -3.14520538e-01, -7.76716471e-01,\n'
 '         6.24767959e-01, -3.83098424e-01,  5.94073296e-01,\n'
 '        -1.92174941e-01, -9.85341787e-01,  7.41531908e-01,\n'
 '         4.97027725e-01,  5.51002264e-01, -1.69560388e-01,\n'
 '         7.84854651e-01, -3.09239179e-02,  7.80681789e-01,\n'
 '         2.94969416e+00, -2.50253499e-01, -1.36229396e+00,\n'
 '        -9.51480746e-01, -5.76352656e-01, -1.02229804e-01,\n'
 '        -1.15596259e+00,  1.81373286e+00, -4.51190352e-01,\n'
 '         1.76809371e-01,  6.65757060e-03, -1.17695928e+00,\n'
 '         1.18426228e+00, -1.24287569e+00, -2.47133231e+00,\n'
 '         2.64641666e+00,  4.80793059e-01, -6.29718900e-02,\n'
 '        -1.69238162e+00, -3.68132055e-01,  2.51331478e-02,\n'
 '        -3.57979584e+00, -2.13572502e+00, -1.47107136e+00,\n'
 '        -3.67922246e-01,  7.73108006e-02,  7.72117734e-01,\n'
 '        -1.33344305e+00,  3.25181222e+00,  2.34909773e+00,\n'
 '         2.54470634e+00, -1.09623992e+00, -1.46703267e+00,\n'
 '         7.89947748e-01, -1.55221403e+00,  7.41268873e-01,\n'
 '         6.34541392e-01, -2.41852617e+00,  1.27628958e+00,\n'
 '         2.69252658e-01, -3.58522153e+00, -1.62909090e-01,\n'
 '         6.48843884e-01,  1.82130682e+00,  6.06242530e-02,\n'
 '        -5.22779077e-02,  1.23804069e+00,  1.93971109e+00,\n'
 '         1.81441760e+00, -2.88097322e-01,  1.18351400e+00,\n'
 '         1.01108658e+00,  2.07667398e+00,  2.81822771e-01,\n'
 '         2.80646443e-01, -1.04469299e+00,  1.24296546e-02,\n'
 '        -3.98072630e-01, -2.22682929e+00, -1.52165949e-01,\n'
 '         3.02570128e+00, -6.50846600e-01,  1.45742750e+00,\n'
 '        -1.76012969e+00,  2.83863872e-01,  8.52133572e-01,\n'
 '         2.07457352e+00, -5.65059721e-01,  2.64077449e+00,\n'
 '         3.31345797e-02,  1.51128924e+00, -3.20420456e+00,\n'
 '        -1.04575205e+00,  2.29367566e+00, -2.14352274e+00,\n'
 '        -1.43027484e-01,  1.52774191e+00, -1.16168821e+00,\n'
 '        -2.65519500e+00,  5.28248429e-01, -4.31282371e-01,\n'
 '         1.10443793e-01, -1.95469415e+00,  4.07777756e-01,\n'
 '        -3.58594283e-02,  2.39306212e+00,  1.20718598e+00,\n'
 '        -7.08570301e-01, -1.38096297e+00,  6.67411625e-01,\n'
 '         2.00255465e+00, -7.56753445e-01,  6.92432106e-01,\n'
 '         3.13523412e-02,  1.53631449e+00, -5.89829803e-01,\n'
 '        -8.13118577e-01,  8.87891769e-01, -1.78675127e+00,\n'
 '        -7.75644302e-01, -7.57714331e-01,  1.58457935e+00,\n'
 '         2.83245373e+00, -1.06754446e+00, -1.07357359e+00,\n'
 '        -3.35644245e+00, -7.28168726e-01, -2.97324002e-01,\n'
 '         6.30246818e-01, -1.64007974e+00, -1.11458659e+00,\n'
 '        -1.01202786e+00, -1.58511639e+00,  1.41391706e+00,\n'
 '        -1.13703072e+00,  4.65241894e-02, -5.28113306e-01,\n'
 '        -6.40718996e-01, -2.75182873e-01,  4.22725916e+00,\n'
 '        -1.78423560e+00, -1.76112258e+00, -2.05757666e+00,\n'
 '         1.09190285e+00, -1.29299629e+00, -9.01336670e-01,\n'
 '        -3.43763739e-01, -2.77540278e+00,  4.84750420e-01,\n'
 '         6.86079264e-01,  1.78497672e+00, -4.74998415e-01,\n'
 '         6.69976592e-01, -2.74188906e-01,  1.61644006e+00,\n'
 '        -3.11041594e+00, -3.58595073e-01,  5.54959893e-01,\n'
 '         4.12714243e+00,  1.60246134e+00,  2.92876053e+00,\n'
 '        -2.00099921e+00,  1.15416884e+00, -2.76475000e+00,\n'
 '        -2.85969615e-01,  4.27217752e-01, -8.16433489e-01,\n'
 '         1.22574461e+00,  1.16542137e+00,  1.19505251e+00,\n'
 '        -3.03234965e-01,  5.01928210e-01,  5.65953851e-01,\n'
 '        -2.18483543e+00,  5.79733491e-01,  6.46641254e-02,\n'
 '         8.06972146e-01,  5.15662193e-01,  7.23054409e-01,\n'
 '        -2.46766615e+00, -2.19184780e+00, -4.98505682e-01,\n'
 '        -7.70313322e-01,  1.89824730e-01,  7.47451925e+00,\n'
 '         5.33715677e+00,  3.57476711e+00, -5.85550487e-01,\n'
 '        -2.40829658e+00, -1.38735032e+00, -1.58301556e+00,\n'
 '         1.08667254e+00,  8.84922862e-01,  8.00869846e+00,\n'
 '         1.86811581e+01,  5.27261925e+00,  5.41108274e+00,\n'
 '         7.16846991e+00, -2.35829353e+00, -1.51112580e+00,\n'
 '        -9.16061759e-01, -3.91483307e-01, -7.69016683e-01,\n'
 '         1.72555733e+00, -7.60342300e-01,  2.46913552e+00,\n'
 '         1.30873938e+01, -1.09022427e+00,  1.53984040e-01,\n'
 '         1.07574791e-01,  5.75494409e-01, -1.79728949e+00,\n'
 '         5.41732788e-01,  2.76693296e+00,  4.58031595e-02,\n'
 '         1.14548016e+01,  4.72625434e-01, -1.26451135e+00,\n'
 '        -7.22915232e-01,  3.83806276e+00, -4.54343468e-01,\n'
 '        -1.82099319e+00, -1.46204531e+00,  1.23415029e+00,\n'
 '         4.09051090e-01,  6.75023913e-01, -5.92758417e-01,\n'
 '         9.47472453e-01,  6.45741969e-02, -1.80035740e-01,\n'
 '        -8.68863344e-01, -1.30519807e+00,  4.78442478e+00,\n'
 '        -1.01080978e+00, -1.25170791e+00, -3.40994310e+00,\n'
 '        -6.45140350e-01, -1.59595239e+00,  7.79892683e-01,\n'
 '        -3.89477611e-02,  7.37080455e-01,  7.20574141e-01,\n'
 '         1.91789538e-01,  1.95250988e+00, -2.82944798e-01,\n'
 '        -6.86722279e-01, -1.11642837e+00,  5.44559717e-01,\n'
 '         1.27283311e+00, -9.63974297e-01, -4.01734650e-01,\n'
 '        -1.21175826e-01, -7.24398911e-01,  6.01847291e-01,\n'
 '        -5.64895153e-01, -1.42287087e+00,  1.83003068e+00,\n'
 '         1.06475651e-02,  5.55099964e-01, -8.66380334e-03,\n'
 '        -2.55518651e+00, -7.32988715e-01,  9.79528248e-01,\n'
 '         6.38596356e-01,  1.58810270e+00, -5.13626337e-01,\n'
 '        -1.02179825e+00,  3.04675841e+00,  2.72728872e+00,\n'
 '        -6.01510108e-01,  2.21661493e-01, -1.81530941e+00,\n'
 '        -1.89841116e+00,  1.00948143e+00,  3.34566474e+00,\n'
 '        -1.97105551e+00,  1.10418093e+00, -5.04382849e-01,\n'
 '        -2.12546140e-01,  7.99889684e-01, -7.32955337e-01,\n'
 '        -8.72524977e-02,  1.73876002e-01,  1.90280581e+00,\n'
 '        -2.09559023e-01, -9.66729343e-01, -6.75118491e-02,\n'
 '         7.48282433e-01,  4.70520139e-01,  8.34827959e-01,\n'
 '        -1.49499810e+00,  1.20835495e+00,  1.91914117e+00,\n'
 '        -1.08129948e-01,  1.28818119e+00,  9.15043354e-01,\n'
 '        -8.54649365e-01, -4.04508650e-01, -1.37287772e+00,\n'
 '         6.25299215e-01, -1.75490856e+00, -2.63772321e+00,\n'
 '        -2.72249723e+00, -2.24484778e+00, -1.42087948e+00,\n'
 '        -2.89774680e+00, -4.41263258e-01, -1.85462749e+00,\n'
 '        -2.26076558e-01, -2.43480146e-01,  1.01193786e-03,\n'
 '        -1.52000487e+00, -1.49550355e+00,  3.14483374e-01,\n'
 '         7.26479590e-01, -2.40330315e+00,  1.92579776e-01,\n'
 '        -2.77527118e+00, -1.40981698e+00, -2.29490447e+00,\n'
 '        -1.14794582e-01,  1.32535055e-01, -1.15686202e+00,\n'
 '         9.58482802e-01,  6.36359453e-01, -4.60347116e-01,\n'
 '        -1.22729570e-01, -1.24424684e+00,  1.11992538e+00,\n'
 '         5.71606457e-01, -5.41466325e-02, -1.19493484e-01,\n'
 '         2.31377578e+00,  9.46654797e-01,  2.04292726e+00,\n'
 '         4.52802539e-01, -5.46546936e-01, -1.79551744e+00,\n'
 '        -5.34612358e-01,  3.94421578e-01,  2.10508084e+00,\n'
 '         7.37293840e-01,  3.27955753e-01,  1.18199587e+00,\n'
 '         7.41559088e-01,  6.45167410e-01, -2.10318708e+00,\n'
 '        -5.73161721e-01, -2.42679572e+00, -1.12600243e+00,\n'
 '        -3.43039012e+00, -6.08257830e-01,  3.82181972e-01,\n'
 '         1.26612282e+00, -1.76849031e+00, -1.27043378e+00,\n'
 '        -7.66261518e-01, -2.94174981e+00, -1.49211407e+00,\n'
 '        -7.64558137e-01, -5.93529105e-01,  1.88867891e+00,\n'
 '        -5.09509027e-01,  8.63235474e-01, -6.52929544e-01,\n'
 '        -3.48426029e-02, -1.08903933e+00, -2.07611006e-02,\n'
 '        -4.17091519e-01,  1.17070401e+00, -1.21371615e+00,\n'
 '        -3.49706471e-01,  3.09930325e-01,  3.45139742e-01,\n'
 '        -2.12601447e+00,  9.35607314e-01,  3.82426321e-01,\n'
 '        -1.20760131e+00,  9.27040696e-01, -4.55548585e-01,\n'
 '        -5.51223099e-01,  1.52782249e+00, -2.85784245e+00,\n'
 '        -1.59772277e+00,  1.41056967e+00,  5.26244760e-01,\n'
 '         2.21086907e+00,  6.93734050e-01,  1.02244687e+00,\n'
 '        -1.21651757e+00,  8.88054967e-01, -1.37543631e+00,\n'
 '         8.11694324e-01, -7.69364834e-02, -2.18104982e+00,\n'
 '         4.87872399e-02, -4.58546281e-01, -9.25517678e-01,\n'
 '         1.95290148e+00,  1.00871146e+00,  9.84572172e-01,\n'
 '        -1.73531139e+00, -7.47951865e-01, -8.86001587e-01,\n'
 '         2.37438607e+00,  9.70177889e-01, -8.71894777e-01,\n'
 '        -3.62190366e-01, -1.62679410e+00,  1.23366380e+00,\n'
 '         1.05515420e-02,  9.16512907e-02,  4.42933083e+00,\n'
 '        -2.01546359e+00,  4.99840707e-01,  4.22400117e-01,\n'
 '        -2.05364972e-01, -1.50577456e-01, -1.04025876e+00,\n'
 '         6.19859934e-01,  6.12926364e-01, -2.16588473e+00,\n'
 '        -1.22494757e+00, -9.42519307e-01, -1.90435350e-03,\n'
 '        -3.46736252e-01,  5.38926959e-01,  1.72458291e+00,\n'
 '        -2.77202904e-01, -1.01548994e+00, -8.93109918e-01,\n'
 '         3.51765603e-01,  4.30259526e-01, -1.58520126e+00,\n'
 '         2.35348299e-01,  2.24259257e+00, -1.96689534e+00,\n'
 '        -1.28541261e-01,  3.36222708e-01, -1.76920295e+00,\n'
 '        -2.18321145e-01,  1.23644805e+00,  2.26640773e+00,\n'
 '         5.95559359e-01,  7.05029666e-02, -2.08216011e-01,\n'
 '         1.85138428e+00,  1.08320981e-01,  8.04521024e-01,\n'
 '        -1.16623962e+00, -1.21253228e+00, -9.98358309e-01,\n'
 '        -2.16863131e+00, -2.54282951e-01, -3.33209562e+00,\n'
 '        -2.98506141e+00, -1.53341103e+00,  4.45210576e-01,\n'
 '        -8.99410784e-01, -1.88145673e+00,  1.37210679e+00,\n'
 '        -9.40194130e-01, -1.61517215e+00, -3.60559773e+00,\n'
 '        -1.03777111e+00, -1.44762313e+00,  2.38241982e+00,\n'
 '         2.44416094e+00, -2.55858958e-01, -7.51895010e-01,\n'
 '         1.45174396e+00, -1.34915328e+00, -1.14940572e+00,\n'
 '         3.80013847e+00,  1.71430957e+00, -2.47186804e+00,\n'
 '         6.39586866e-01,  1.23334205e+00, -1.57204628e-01,\n'
 '         1.53114402e+00, -8.68448764e-02,  1.88791871e-01,\n'
 '        -2.45802879e-01,  2.20388323e-02, -2.79334021e+00,\n'
 '        -1.96329206e-01,  1.29788160e+00,  2.10646331e-01,\n'
 '        -1.30698085e-01, -4.02968836e+00,  7.97784925e-01,\n'
 '        -5.22951305e-01, -1.83197951e+00,  7.25605488e-01,\n'
 '        -7.82709777e-01,  2.15402991e-01,  4.86574799e-01,\n'
 '        -1.97193336e+00,  5.20665216e+00,  2.11060691e+00,\n'
 '         9.99555051e-01, -6.38246894e-01, -1.45385697e-01,\n'
 '         5.69691658e-01,  1.96416128e+00, -4.38162595e-01,\n'
 '         1.06997383e+00,  7.67360330e-01,  3.52091193e-01,\n'
 '         1.93418050e+00, -4.68877763e-01,  6.91629589e-01,\n'
 '         1.61171091e+00, -1.33255112e+00,  5.97281754e-01,\n'
 '        -1.17914844e+00,  8.56694341e-01,  1.53494984e-01,\n'
 '         8.56296659e-01, -1.22157717e+00,  1.12803507e+00,\n'
 '         3.69907439e-01, -2.45175457e+00, -7.25715041e-01,\n'
 '        -1.35353637e+00,  1.74381733e-02, -4.47029918e-02,\n'
 '         8.11541319e-01, -1.87433943e-01,  4.35248643e-01,\n'
 '         5.52488565e-02,  8.07267129e-01,  1.13799918e+00,\n'
 '        -1.17867017e+00, -1.92569923e+00, -1.55909824e+00,\n'
 '        -2.23679805e+00, -1.10633659e+00, -1.06066585e+00,\n'
 '         1.10950172e-01,  1.78208780e+00, -2.82214850e-01,\n'
 '         3.15347481e+00,  4.59222227e-01,  1.67374444e+00,\n'
 '        -3.65418285e-01,  2.26554275e-01, -7.31410742e-01,\n'
 '         1.89347744e+00,  7.48301566e-01,  5.99203885e-01,\n'
 '        -2.41923034e-01, -1.16421258e+00,  1.38349473e-01,\n'
 '        -9.19864953e-01, -8.62855494e-01, -1.59739566e+00,\n'
 '         1.66514122e+00,  1.29912662e+00, -9.26990747e-01,\n'
 '        -3.80122691e-01,  2.17164755e+00, -3.85546803e-01,\n'
 '         1.18578517e+00,  3.80796528e+00, -6.27548993e-02,\n'
 '        -3.48472500e+00, -1.56139171e+00, -2.60830689e+00,\n'
 '         7.48721242e-01, -3.77193856e+00, -1.73276877e+00,\n'
 '        -1.14822602e+00,  6.82441473e-01, -6.29153401e-02,\n'
 '         1.75510013e+00, -1.38898528e+00, -1.09769499e+00,\n'
 '         5.44754624e-01,  5.33089042e-01, -9.76034641e-01,\n'
 '        -4.06620651e-01,  1.59488380e+00, -8.10146630e-01,\n'
 '        -6.45726740e-01, -1.75891876e-01, -2.38749742e+00,\n'
 '         8.79703462e-03,  1.00060821e+00, -1.01359093e+00,\n'
 '        -3.10292363e-01, -6.98265016e-01,  1.18437898e+00,\n'
 '        -9.25673366e-01, -1.02924514e+00, -5.15683651e-01,\n'
 '        -1.06816244e+00,  5.87226510e-01,  1.08612084e+00,\n'
 '        -1.72632694e+00, -2.29405356e+00,  4.58127916e-01,\n'
 '        -2.04894280e+00,  2.30146378e-01,  7.48086274e-01,\n'
 '         1.17469037e+00,  7.94919074e-01, -1.41706419e+00,\n'
 '         2.57762766e+00, -2.27460074e+00, -1.09097838e+00,\n'
 '         3.07076484e-01,  3.02782536e-01, -1.36510932e+00,\n'
 '         1.20123673e+00,  8.30039144e-01,  1.86558962e-01,\n'
 '        -2.26777697e+00,  2.63456607e+00,  1.64245391e+00,\n'
 '        -4.65218663e-01, -4.84273672e-01, -1.16817188e+00,\n'
 '         6.33337438e-01, -2.10849690e+00,  2.77711451e-01,\n'
 '        -6.16892219e-01, -1.38678706e+00, -1.17077434e+00,\n'
 '        -1.60248280e+00,  9.66425121e-01,  2.56386280e+00,\n'
 '         1.50455213e+00,  1.16721720e-01,  1.06051052e+00,\n'
 '         8.36043477e-01, -3.69278288e+00, -7.28323340e-01,\n'
 '        -9.62186456e-01,  2.33851477e-01, -2.36694002e+00,\n'
 '        -3.58564973e+00,  7.86804915e-01, -1.93159175e+00,\n'
 '         1.49680167e-01, -1.64785516e+00,  1.28804743e+00,\n'
 '        -1.13643333e-01, -3.11974049e+00, -2.90349746e+00,\n'
 '        -1.57857612e-02,  1.19122302e+00, -1.05485237e+00,\n'
 '        -4.04773206e-01,  1.74457049e+00,  5.37680447e-01,\n'
 '         4.06473935e-01, -1.47137070e+00, -4.30740267e-01,\n'
 '         1.91788971e+00,  2.31595564e+00, -2.16161579e-01,\n'
 '        -2.75379241e-01, -4.11452502e-01, -1.42050064e+00,\n'
 '         1.07995200e+00, -7.72465468e-01,  2.08955121e+00,\n'
 '        -6.16471656e-02, -1.86309910e+00, -7.17742443e-01,\n'
 '        -2.05390406e+00, -1.97069228e+00, -3.49157602e-01,\n'
 '         2.13319674e-01,  4.52322736e-02,  8.81628573e-01,\n'
 '         4.86824930e-01,  7.00780809e-01, -1.90915144e+00,\n'
 '        -4.48268235e-01, -2.32732320e+00,  4.72917604e+00,\n'
 '        -3.76894951e-01,  3.09840024e-01,  6.39951169e-01,\n'
 '        -5.76846898e-01,  1.15659058e+00,  2.81492639e+00,\n'
 '        -3.64059115e+00, -3.06490159e+00, -5.41360200e-01,\n'
 '        -2.37523055e+00,  3.74071836e-01,  2.58048773e+00,\n'
 '        -2.17918301e+00, -3.15875268e+00, -2.13588905e+00,\n'
 '         2.62106925e-01,  1.54182649e+00, -1.99269652e+00,\n'
 '         1.29388082e+00,  5.44114828e-01, -1.26740491e+00,\n'
 '        -1.34050155e+00,  1.34792352e+00, -1.07968235e+00,\n'
 '        -6.11343622e-01, -1.19404209e+00, -2.42637420e+00,\n'
 '        -1.17271566e+00,  1.42386103e+00,  1.41675639e+00,\n'
 '        -5.26624203e-01, -1.86013329e+00, -7.11946428e-01,\n'
 '         2.98758173e+00,  2.02285782e-01, -5.98860979e-01,\n'
 '        -9.68651652e-01, -1.68987215e+00, -2.59272516e-01,\n'
 '         7.87679553e-02, -8.43708873e-01,  1.22300279e+00,\n'
 '         3.58421773e-01,  7.46525526e-01,  1.92916191e+00,\n'
 '         9.07877088e-01, -9.94392633e-01,  1.58759579e-01,\n'
 '        -1.05808639e+00, -2.41876721e+00, -1.90979838e+00,\n'
 '        -8.94129753e-01,  9.23582554e-01,  8.67985904e-01,\n'
 '         5.15782833e-01,  2.46541405e+00,  3.13095760e+00,\n'
 '        -2.15584064e+00,  1.09284759e+00, -3.47852564e+00,\n'
 '        -2.16483545e+00,  9.58190560e-01, -6.25417531e-01,\n'
 '         4.30167317e-01, -1.25430083e+00,  2.03081465e+00,\n'
 '         2.43094587e+00,  8.21640372e-01,  2.49755406e+00,\n'
 '         6.92541122e-01, -2.45759964e-01, -6.29885793e-01,\n'
 '         7.34316349e-01, -9.19881463e-02, -1.39759970e+00,\n'
 '         1.29274368e+00, -1.01905656e+00, -5.07230163e-01,\n'
 '        -7.56654799e-01,  5.36950290e-01,  1.10946655e+00,\n'
 '         2.80049729e+00, -5.38586974e-01,  4.44006264e-01,\n'
 '        -8.83946300e-01,  2.05146694e+00,  1.04112184e+00,\n'
 '        -6.18576288e-01, -1.32607788e-01,  1.09340298e+00,\n'
 '         1.88622922e-01,  2.83685327e-02, -7.64781535e-01,\n'
 '         3.64699721e-01, -5.10282330e-02,  1.92943132e+00,\n'
 '         3.07792902e+00,  4.33655620e-01, -2.91050076e-01,\n'
 '        -1.81725287e+00, -1.18990552e+00,  1.31468844e+00,\n'
 '         3.26648980e-01,  7.34665513e-01, -7.59813547e-01,\n'
 '         1.92051828e+00,  1.43334895e-01, -6.02307796e-01,\n'
 '        -1.24796927e-02, -1.66539502e+00,  4.65485096e-01,\n'
 '         4.20420915e-01, -3.94917905e-01,  1.30495143e+00,\n'
 '         1.40560079e+00,  1.97081476e-01,  1.22592568e+00,\n'
 '        -3.61966038e+00,  2.34814429e+00,  1.02485144e+00,\n'
 '         6.58562660e-01, -2.72794581e+00, -1.97141305e-01,\n'
 '         1.84729433e+00,  6.37867689e-01,  1.36250511e-01,\n'
 '        -7.06490278e-01, -1.17657936e+00, -6.39389276e-01,\n'
 '         9.72281814e-01, -3.83395553e+00,  1.44216371e+00,\n'
 '        -4.03670222e-01, -2.34627938e+00, -1.42738128e+00,\n'
 '        -2.04205364e-02, -2.05985904e+00,  8.34638357e-01,\n'
 '        -1.93759143e-01, -2.07830250e-01,  1.45636427e+00,\n'
 '        -1.24094689e+00,  8.80069137e-02,  8.02767932e-01,\n'
 '         1.33108520e+00, -2.00015736e+00,  4.86477554e-01,\n'
 '        -3.42551899e+00, -4.95351195e-01,  1.59944892e+00,\n'
 '        -7.85257220e-01,  1.69209301e-01,  4.32604253e-01,\n'
 '         1.52945840e+00, -3.12261319e+00,  1.88201666e-04,\n'
 '        -1.96887028e+00, -1.31541944e+00, -1.74799776e+00,\n'
 '        -1.24985170e+00,  7.69946575e-01,  2.34138161e-01,\n'
 '         4.11963731e-01,  5.49046934e-01, -2.03019738e-01,\n'
 '        -7.94441760e-01,  2.79753303e+00,  8.20819139e-01,\n'
 '         5.25583804e-01,  4.10407782e-03, -1.02674544e+00,\n'
 '        -2.50772893e-01, -1.05710357e-01, -3.15211952e-01,\n'
 '        -2.51639962e-01, -7.33663857e-01,  1.60687673e+00,\n'
 '        -1.65173638e+00,  1.72040284e+00, -8.01921129e-01,\n'
 '        -1.05521095e+00,  2.49657452e-01, -3.97244364e-01,\n'
 '         1.33953166e+00, -8.48071516e-01, -1.67218184e+00,\n'
 '        -1.17528021e+00, -1.60594881e+00, -6.40400112e-01,\n'
 '         9.71419215e-01,  1.12058687e+00, -2.49036372e-01,\n'
 '         5.57493210e-01, -8.38624597e-01,  8.91080856e-01,\n'
 '         1.45268047e+00,  8.01752210e-02,  1.39021075e+00,\n'
 '         3.11084628e-01, -3.68387937e-01, -2.98150003e-01,\n'
 '         2.98545152e-01, -1.21998859e+00, -1.47188187e-01,\n'
 '         1.10657299e+00,  1.63822102e+00,  4.69196320e-01,\n'
 '         1.26743209e+00,  1.83261001e+00,  1.70370841e+00,\n'
 '         5.25117934e-01,  3.63950133e-01, -3.59097183e-01,\n'
 '        -1.98337054e+00,  2.27274513e+00, -2.50685191e+00,\n'
 '        -2.09353685e-01,  3.04510891e-01, -1.01166213e+00,\n'
 '        -6.03046715e-01,  1.84628940e+00, -3.75565767e-01,\n'
 '        -8.51219058e-01, -1.93185031e+00,  1.44500208e+00,\n'
 '         1.13336349e+00, -9.60518360e-01, -8.01165462e-01,\n'
 '        -1.58961749e+00, -3.12870145e-01,  2.16207242e+00,\n'
 '         4.43394244e-01, -1.25083160e+00, -2.31580448e+00,\n'
 '        -7.15183497e-01, -3.27821255e-01,  5.62845051e-01,\n'
 '        -9.26003456e-02, -4.27219272e-02,  1.05260801e+00,\n'
 '        -5.60662270e-01,  6.35895729e-01, -1.49478689e-01,\n'
 '        -3.31471920e-01,  3.48633915e-01, -2.98962784e+00,\n'
 '        -1.24465060e+00, -3.55747294e+00,  5.79241514e-01,\n'
 '        -6.73242435e-02, -4.90707070e-01, -6.67316675e-01,\n'
 '        -2.36328125e+00]])')
'test_inceptionnet | batch_shape is: [1]'
'test_inceptionnet | logits.shape is: ivy.Shape(1, 1000)'
'||'
'test_inceptionnet | indices_test | true_indices is: [258 270 279]'
'test_inceptionnet | indices_test | calc_indices is: [258 270 279]'
'test_inceptionnet | device is: cpu'
'test_inceptionnet | fw is: jax'
'test_inceptionnet | load_weights is: False'
'InceptionV3 | build | layer 1/22 built'
'InceptionV3 | build | layer 2/22 built'
'layer 3/22 built'
'InceptionV3 | build | layer 4/22 built'
'InceptionV3 | build | layer 5/22 built'
'InceptionV3 | build | layer 6/22 built'
'InceptionV3 | build | layer 7/22 built'
'InceptionV3 | build | layer 8/22 built'
'InceptionV3 | build | layer 9/22 built'
'InceptionV3 | build | layer 10/22 built'
'InceptionV3 | build | layer 11/22 built'
'InceptionV3 | build | layer 12/22 built'
'InceptionV3 | build | layer 13/22 built'
'InceptionV3 | build | layer 14/22 built'
'InceptionV3 | build | layer 15/22 built'
'InceptionV3 | build | layer 17/22 built'
'InceptionV3 | build | layer 18/22 built'
'InceptionV3 | build | layer 19/22 built'
'InceptionV3 | build | layer 20/22 built'
'InceptionV3 | build | layer 21/22 built'
'InceptionV3 | build | layer 22/22 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/4 built'
'layer 2/4 built'
'layer 3/4 built'
'layer 4/4 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/6 built'
'layer 2/6 built'
'layer 3/6 built'
'layer 4/6 built'
'layer 5/6 built'
'layer 6/6 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'inceptionNet_v3 | building InceptionV3 model | done 1/3'
'InceptionV3 | forward | input data_format is:NCHW | done 1/27'
'InceptionV3 | forward | data_format is going to be used is:NCHW | done 1/27'
'InceptionV3 | forward | input shape is:ivy.Shape(1, 224, 224, 3) | done 1/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 224, 224, 3) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 111, 111, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 111, 111, 32) | done 2/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 111, 111, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 32) | done 3/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 109, 109, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 64) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 64) | done 4/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 54, 54, 64) | done 5/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 54, 54, 80) | done 3/3'
'InceptionV3 | forward | is:ivy.Shape(1, 54, 54, 80) | done 6/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 80) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 52, 52, 192) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 52, 52, 192) | done 7/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 192) | done 8/27'
'input shape is:ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 32) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 32)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 25, 25, 256) | done 9/27'
'input shape is:ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 10/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 11/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 384) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 96) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 96)'
'one 20/20, output shape is:ivy.Shape(1, 12, 12, 288)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 12/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 12, 12, 768) | done 13/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 14/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 15/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 16/27'
'v3 16/27, output shape is:ivy.Shape(1, 12, 12, 768)'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 5, 5, 192)'
'one 7/20, output shape is:ivy.Shape(1, 5, 5, 768)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 1280) | done 17/27'
'input shape is:ivy.Shape(1, 5, 5, 1280)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 18/27'
'input shape is:ivy.Shape(1, 5, 5, 2048)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 19/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 20/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 5, 5) | done 21/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 1, 1) | done 22/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 27/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 24/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 25/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048) | done 26/27'
'InceptionV3 | forward | fc | done 27/27'
('test_inceptionnet | logits is: ivy.array([[ 6.91111125e+05,  '
 '6.97916562e+05,  1.00593289e+05,\n'
 '        -1.04020469e+06,  2.09222453e+05, -8.65960562e+05,\n'
 '         9.52952188e+05, -1.63872625e+05,  5.10722969e+05,\n'
 '         2.16652703e+05, -1.14759047e+05,  2.13934438e+05,\n'
 '        -1.72311203e+05,  1.22441102e+05,  2.16106531e+05,\n'
 '        -9.65645703e+04,  7.63063625e+05, -2.39239141e+05,\n'
 '         1.36962250e+05, -4.99238562e+05,  2.85963344e+05,\n'
 '        -5.39946688e+05, -3.42197906e+05, -3.46465219e+05,\n'
 '         5.11760375e+05,  2.39466547e+05, -1.61599953e+05,\n'
 '        -6.01601875e+05, -2.19410625e+05, -1.03032477e+05,\n'
 '         4.00213438e+05, -5.22400469e+05, -1.21420672e+05,\n'
 '         8.10527688e+05, -3.64317406e+05, -2.41157219e+05,\n'
 '        -7.36430625e+05,  1.40438297e+05, -3.92841156e+05,\n'
 '        -2.72358906e+05, -2.50959082e+04, -1.46741500e+05,\n'
 '        -3.08612062e+05, -7.58349125e+05, -1.68389312e+05,\n'
 '         1.49064875e+05,  2.89368812e+05, -1.04474984e+05,\n'
 '        -2.09837312e+05,  1.04539925e+06,  1.03648328e+05,\n'
 '         4.12260188e+05,  1.97076000e+05,  5.33259250e+05,\n'
 '         1.92255508e+04,  3.49268812e+05,  4.82508000e+05,\n'
 '         6.01188000e+05,  6.00840688e+05, -3.81917422e+04,\n'
 '         4.36226719e+04, -3.95942500e+05,  2.73540188e+05,\n'
 '        -1.01333219e+05,  5.58091953e+04, -2.28374172e+05,\n'
 '         2.05016156e+05, -8.08033438e+05, -9.52965500e+05,\n'
 '         2.18289492e+04, -6.11254688e+05, -3.95732406e+05,\n'
 '        -1.77364812e+05, -3.04718938e+05, -1.14263888e+06,\n'
 '         2.08783984e+05,  5.66119688e+05, -3.02483781e+05,\n'
 '        -4.65311281e+05,  2.93462734e+04,  4.75022094e+05,\n'
 '        -8.78002500e+04,  4.99897594e+05, -2.49959688e+04,\n'
 '         1.07474500e+05,  1.96696891e+05, -9.17279375e+04,\n'
 '         3.03508812e+05, -2.74975312e+05,  5.87497062e+05,\n'
 '         6.97827688e+05,  2.12908130e+03,  4.66263031e+05,\n'
 '         3.16162125e+05,  1.06751800e+06, -1.74441219e+05,\n'
 '        -1.21270227e+05, -2.21223438e+05, -4.85719281e+05,\n'
 '        -8.13200938e+05, -4.88628375e+05,  1.64464844e+05,\n'
 '        -4.31886344e+05,  3.61700156e+04, -2.37039031e+05,\n'
 '         6.22786250e+05, -6.38087375e+05, -2.37811312e+05,\n'
 '        -9.24290430e+03,  6.71951625e+05,  3.07062375e+05,\n'
 '        -7.08157188e+05,  3.22851250e+05,  2.54397688e+05,\n'
 '        -2.72882188e+05, -1.45144078e+05,  7.11682438e+05,\n'
 '        -2.29158609e+05,  2.94980250e+05,  3.48934094e+05,\n'
 '         6.66750469e+04, -1.95967109e+05, -6.61425250e+05,\n'
 '        -2.14322141e+05, -3.24274844e+05,  1.51451469e+05,\n'
 '         4.54900594e+05, -3.27037969e+05,  2.06713516e+05,\n'
 '         4.11132000e+05,  4.38470500e+05, -3.77669844e+05,\n'
 '         6.37791562e+05, -1.02829619e+06, -3.74319023e+04,\n'
 '         4.63425062e+05, -8.97691062e+05,  4.48056750e+05,\n'
 '         7.81133312e+05, -7.82965375e+05,  2.82989219e+05,\n'
 '         1.91052562e+05,  9.66953250e+05, -7.03584000e+05,\n'
 '        -8.40799938e+05,  3.87705812e+05,  2.16431828e+05,\n'
 '         3.43302094e+05,  1.82190844e+05, -3.38377281e+05,\n'
 '        -1.92044641e+05,  1.14983500e+06,  5.64262500e+05,\n'
 '        -6.69351812e+05, -4.25936992e+04,  1.97760215e+04,\n'
 '         3.98573125e+04,  5.22194312e+05,  1.12758588e+06,\n'
 '        -1.36205150e+06, -6.70110438e+05,  3.24635156e+05,\n'
 '        -8.21170000e+05,  8.70118203e+04,  6.59536625e+05,\n'
 '         2.58780906e+05, -4.83925969e+05, -4.79831000e+05,\n'
 '        -8.40101797e+04, -2.80312844e+05,  6.02533398e+04,\n'
 '         4.69315844e+05, -2.40496953e+05, -9.96466438e+05,\n'
 '        -1.15359125e+06,  3.21451969e+05, -7.85060562e+05,\n'
 '         2.62921719e+05, -3.33601312e+05,  2.96774927e+03,\n'
 '        -7.82079609e+04,  6.01216758e+04,  2.93432469e+05,\n'
 '         4.12514312e+05,  8.52346188e+05, -9.63773281e+04,\n'
 '        -4.07576641e+04,  1.23121953e+05,  1.05960662e+06,\n'
 '         9.07036188e+05,  6.20135562e+05, -3.40036406e+05,\n'
 '        -2.30355359e+05,  6.41425352e+04, -5.70522125e+05,\n'
 '        -4.24551781e+05, -5.42585000e+05, -4.98339625e+05,\n'
 '        -3.03502656e+05, -1.82919938e+05,  4.45221750e+05,\n'
 '         1.68496844e+05, -7.98816125e+05,  2.85454219e+05,\n'
 '         1.00390325e+06, -5.03073984e+04,  2.32295195e+04,\n'
 '         5.23770812e+05,  7.15508562e+05, -2.37044750e+05,\n'
 '        -6.88841000e+05,  7.69621688e+05, -5.46202188e+05,\n'
 '         4.04354844e+05, -9.23090625e+04, -2.91572375e+05,\n'
 '         1.56807625e+05,  2.99019719e+05, -8.89782500e+04,\n'
 '        -4.87451500e+05, -2.27599922e+05, -1.23864344e+05,\n'
 '         2.88934938e+05, -5.24175688e+05,  3.10165449e+04,\n'
 '         7.28041375e+05,  9.10543250e+05, -2.56576953e+05,\n'
 '        -2.51341406e+05, -2.59470516e+05,  9.29484938e+05,\n'
 '        -2.60717438e+05, -5.01381875e+04, -3.31249875e+05,\n'
 '         6.75494938e+05, -1.23492633e+05,  3.66191125e+05,\n'
 '        -3.01138812e+05, -1.46449538e+06,  2.33138125e+05,\n'
 '         5.68060500e+05, -3.60520969e+05,  1.32998375e+05,\n'
 '         1.99457844e+05,  7.56797625e+05,  2.73096500e+05,\n'
 '        -1.77503375e+05, -2.04922859e+05, -1.83681328e+05,\n'
 '        -2.54339750e+05,  2.16070938e+05,  5.06467781e+05,\n'
 '        -4.06771656e+05, -6.97845562e+05, -7.57565125e+05,\n'
 '        -7.01767750e+05, -4.03351281e+05, -1.28176412e+06,\n'
 '         3.39443406e+05, -2.78906660e+04,  2.24095125e+05,\n'
 '         5.88920938e+05, -2.90976250e+05, -1.33468938e+05,\n'
 '        -4.34027750e+05,  4.01083156e+05, -8.30775703e+04,\n'
 '        -1.06281508e+05, -7.84010812e+05,  6.99220062e+05,\n'
 '        -6.05013875e+05,  3.62283688e+05, -3.49516719e+05,\n'
 '        -7.34060375e+05,  2.63437969e+05,  6.59530062e+05,\n'
 '        -9.75368984e+04, -5.55870438e+05,  3.31055312e+05,\n'
 '         1.07438789e+05,  2.71749188e+05, -2.34556141e+05,\n'
 '        -2.38020797e+05, -1.69459953e+05,  1.75334297e+04,\n'
 '        -1.52317703e+05,  2.65562625e+05, -7.73759938e+05,\n'
 '        -5.38300188e+05, -2.90482000e+05,  5.04643516e+04,\n'
 '         2.38711484e+05,  8.55448312e+05, -3.71877383e+04,\n'
 '         7.83601125e+05, -2.56994000e+05,  2.16534531e+05,\n'
 '         2.59588172e+05,  5.02755750e+05,  2.61583730e+04,\n'
 '        -3.58474727e+04, -1.37119844e+05,  1.50099844e+05,\n'
 '         9.60059688e+05, -1.11808375e+06, -1.10153027e+04,\n'
 '         7.42269562e+05,  3.22952656e+05, -5.26158062e+05,\n'
 '        -1.51316875e+05, -6.93057250e+05, -1.17380289e+05,\n'
 '         4.51964531e+05, -3.36348094e+05, -3.84339031e+05,\n'
 '         1.08987988e+06, -8.53444812e+05,  3.11408094e+05,\n'
 '         3.77761375e+05,  3.09014668e+04,  5.82055117e+04,\n'
 '         4.17815500e+05,  4.84105438e+05, -9.52197312e+05,\n'
 '        -5.16099812e+05,  1.85913027e+04,  4.84936125e+05,\n'
 '        -8.38414922e+04, -4.95038320e+04,  6.83303375e+05,\n'
 '         1.18985638e+06,  3.97789500e+05, -2.46699453e+05,\n'
 '        -5.92818562e+05, -3.58676656e+05,  3.35121375e+05,\n'
 '         8.24449219e+04,  3.11634344e+05,  2.00962250e+05,\n'
 '        -4.21585781e+05,  2.60423938e+05,  2.87795219e+05,\n'
 '         5.97941062e+05,  1.13530375e+06,  8.94438250e+05,\n'
 '         3.44222906e+05, -5.08633188e+05,  3.64940812e+05,\n'
 '         5.30486812e+05, -7.43078750e+05, -3.16557715e+04,\n'
 '         5.85355188e+05, -6.56493000e+05,  5.46474258e+04,\n'
 '         3.65252156e+05, -7.65153625e+05, -1.26595875e+05,\n'
 '        -2.23423297e+05, -5.80201625e+05,  4.57374812e+05,\n'
 '        -8.36078125e+05,  4.77198719e+05, -5.86735125e+05,\n'
 '        -2.72221562e+05,  3.06420125e+05,  5.74085039e+04,\n'
 '        -4.76728781e+05, -3.56244344e+05, -3.57684625e+05,\n'
 '        -1.28685109e+05, -4.49433625e+05,  4.32281188e+05,\n'
 '         2.81300719e+05, -1.91685844e+05, -5.35282875e+05,\n'
 '         1.81914590e+04, -5.02855625e+05,  2.74798344e+05,\n'
 '         3.81160906e+05, -8.62521484e+04, -3.94231781e+05,\n'
 '         3.41770938e+05, -3.35433312e+05, -4.13071094e+05,\n'
 '         3.34124750e+05,  4.02680656e+05,  2.69761375e+05,\n'
 '        -5.54796688e+05, -7.72458188e+05,  7.21371500e+05,\n'
 '        -4.89357266e+04,  1.26795150e+06, -3.36237156e+05,\n'
 '         4.56120906e+05, -6.30508062e+05, -1.02454681e+06,\n'
 '        -1.18732050e+06,  1.20962562e+06, -3.82055250e+05,\n'
 '        -1.54714594e+05,  5.88838188e+05,  4.53770750e+05,\n'
 '        -4.45927588e+03,  1.57530656e+05,  2.67601750e+05,\n'
 '        -6.61657750e+05,  7.79614750e+05, -5.30982562e+05,\n'
 '         3.12245728e+03,  7.15325938e+05,  4.39785375e+05,\n'
 '         5.95582500e+05, -5.03142734e+04,  3.33386406e+05,\n'
 '        -8.43867312e+05, -3.84886438e+05, -3.53207750e+05,\n'
 '        -5.22731103e+03,  4.96843531e+05,  2.65094469e+05,\n'
 '        -9.73314875e+05,  7.38570625e+04, -2.43387266e+05,\n'
 '        -4.79870094e+05, -1.95328766e+05,  1.92529812e+05,\n'
 '         3.93366812e+05, -2.56520562e+05,  1.61081547e+05,\n'
 '         2.91747031e+05, -1.69551156e+05,  3.59306000e+05,\n'
 '        -3.88892773e+04, -6.54255938e+05, -1.86528000e+05,\n'
 '        -1.07724365e+04,  1.06281492e+05,  2.46644141e+05,\n'
 '        -4.03860562e+05,  5.65199438e+05,  5.47011836e+04,\n'
 '        -1.40812109e+05, -5.94935438e+05, -3.12208781e+05,\n'
 '        -8.53933125e+05, -1.48703775e+06,  8.42786562e+05,\n'
 '        -5.24867812e+05, -2.59227891e+05,  7.83628875e+05,\n'
 '        -1.98716281e+05, -1.34583672e+05, -2.76637000e+05,\n'
 '        -3.22616625e+05,  4.27357688e+05, -9.00460062e+05,\n'
 '         1.08992828e+05, -2.15160047e+05,  3.49051656e+05,\n'
 '        -1.39885594e+05,  4.02069344e+05,  8.80140688e+05,\n'
 '         3.60214594e+05,  2.37476594e+05, -1.62503953e+05,\n'
 '        -5.93947125e+05, -1.94964125e+05,  5.90145625e+05,\n'
 '        -3.04811594e+05, -1.36571484e+05, -2.99986562e+05,\n'
 '        -1.93459547e+05, -5.55154375e+05, -1.02933138e+06,\n'
 '        -5.25588625e+05,  4.94570531e+05,  6.41542125e+05,\n'
 '         1.78637891e+05, -2.01613281e+04, -2.13828188e+05,\n'
 '        -3.94469219e+05,  1.28913289e+05, -5.00009562e+05,\n'
 '        -1.34667578e+05,  3.23235281e+05, -1.94322375e+05,\n'
 '        -4.62075312e+05,  5.15527312e+05, -1.25484453e+05,\n'
 '         1.39218859e+05, -3.63176602e+04, -2.66473625e+05,\n'
 '         1.17297836e+05,  1.59039000e+06,  6.22684375e+05,\n'
 '         2.82784219e+04, -4.17143500e+05,  3.91838625e+05,\n'
 '        -6.71957688e+05, -1.23358914e+05, -5.62560812e+05,\n'
 '         9.97454844e+04,  3.79793156e+05, -4.90302719e+05,\n'
 '        -7.17770234e+04, -3.84384688e+04, -4.43478555e+04,\n'
 '        -3.93895156e+05,  5.84234438e+05, -5.52894062e+05,\n'
 '        -1.44661906e+05, -9.58500875e+05,  1.44265500e+05,\n'
 '         3.82804344e+05,  3.26870531e+05, -1.88794922e+05,\n'
 '         8.19725125e+05,  3.49749844e+05,  2.58505031e+05,\n'
 '         3.79118203e+04,  7.44672938e+05, -4.71233000e+05,\n'
 '        -4.50235656e+05,  6.94743938e+05,  1.52477562e+05,\n'
 '        -5.42516688e+05, -1.40665078e+05, -3.24930469e+05,\n'
 '         2.23226438e+05,  1.19040615e+04,  1.27739150e+04,\n'
 '        -3.91430031e+05,  1.30772812e+06, -4.38324406e+05,\n'
 '        -3.93393250e+05, -1.64873362e+06, -4.50188656e+05,\n'
 '         2.46929641e+05,  3.59151250e+05, -1.06868570e+05,\n'
 '        -3.55594312e+05,  3.05355293e+04,  5.22063188e+05,\n'
 '         4.57888344e+05, -9.36985312e+04, -1.43428625e+05,\n'
 '        -6.29508320e+04,  4.65436250e+05,  1.46392281e+05,\n'
 '         6.70603938e+05,  5.34882125e+05, -1.97850344e+05,\n'
 '         8.26004062e+05, -1.03120578e+05, -3.08121719e+05,\n'
 '         7.38631172e+04, -9.53044500e+05, -5.25403477e+04,\n'
 '        -5.91686500e+05, -7.25327562e+05,  7.11045625e+04,\n'
 '         2.30729609e+05, -5.82289062e+05,  3.52878500e+05,\n'
 '         2.33503781e+05,  2.36374434e+04, -5.86151438e+05,\n'
 '        -3.13507188e+05, -2.57330625e+05, -8.55889531e+04,\n'
 '        -1.33794734e+05, -2.34769547e+05, -1.04446195e+05,\n'
 '        -3.77852062e+05,  4.06205156e+05, -7.20894688e+05,\n'
 '         2.77184281e+05,  2.07382672e+05,  3.80188375e+05,\n'
 '         3.55859375e+05, -7.13890875e+05, -2.89685781e+05,\n'
 '        -4.70539502e+03,  2.51902234e+05,  3.63798438e+04,\n'
 '         9.86424938e+05, -5.21264062e+05, -6.59055562e+05,\n'
 '        -3.18718250e+05, -1.31991462e+06, -8.38304375e+05,\n'
 '        -8.23358828e+04,  2.78740062e+05,  1.15098953e+05,\n'
 '         2.02434290e+03, -2.37024609e+05, -6.77935625e+05,\n'
 '        -2.07798109e+05, -6.84734812e+05,  4.07151844e+05,\n'
 '        -1.73537070e+04, -3.66065594e+05,  2.05152266e+04,\n'
 '         4.64283344e+05,  2.78773625e+05, -4.90666875e+05,\n'
 '         2.75790594e+05,  6.21382578e+04,  4.67078344e+05,\n'
 '        -5.29213000e+05, -5.94753812e+05,  2.23709750e+05,\n'
 '         2.86455406e+05, -6.26588062e+05,  4.55774062e+04,\n'
 '        -6.50514750e+05,  6.16558500e+05, -1.05529258e+05,\n'
 '        -9.38263750e+05, -5.41155688e+05, -1.34250094e+05,\n'
 '         2.85784750e+05,  6.79012266e+04,  2.45426969e+05,\n'
 '         5.74989688e+04, -3.24179250e+05,  1.82747150e+06,\n'
 '        -2.14915734e+05, -7.13276250e+05,  3.21146688e+05,\n'
 '        -1.23424641e+05, -1.43049812e+05,  3.23138031e+05,\n'
 '        -4.80061562e+05,  6.19166312e+05,  7.19977188e+04,\n'
 '         8.21330062e+05,  1.10220742e+05, -5.92148250e+05,\n'
 '         2.64284281e+05, -3.87458906e+04,  3.96766500e+05,\n'
 '         7.71109562e+05,  2.47360484e+05,  4.35344766e+04,\n'
 '         5.88010062e+05,  8.37281125e+05,  1.84388906e+05,\n'
 '         3.58925375e+05,  6.96707500e+04,  2.52850703e+05,\n'
 '        -2.04954953e+05, -8.56673125e+05,  2.56360750e+05,\n'
 '         1.78263938e+05, -3.64680031e+05, -6.49302250e+05,\n'
 '         2.07967938e+05, -2.63213438e+05, -8.46588625e+05,\n'
 '        -1.51070953e+05, -5.54441312e+05, -4.61154625e+05,\n'
 '         2.79210969e+05,  2.61089250e+05,  1.39349266e+05,\n'
 '        -3.96328250e+05,  2.53667188e+04, -3.68630281e+05,\n'
 '         9.58219688e+05, -2.72074188e+05,  8.66387344e+04,\n'
 '        -7.24571750e+05,  7.79923906e+04,  7.77615312e+04,\n'
 '        -6.48711562e+05, -2.61920820e+04, -4.57680469e+05,\n'
 '         2.47479453e+04, -7.40612734e+04, -4.45710312e+05,\n'
 '        -1.10887432e+04, -4.54056875e+05,  9.27826250e+05,\n'
 '        -2.31966156e+05, -1.08815188e+05, -6.56767422e+04,\n'
 '         1.33131922e+05,  8.00559312e+05, -1.95410453e+05,\n'
 '        -9.57049500e+05, -3.89608555e+04,  1.96526594e+05,\n'
 '         1.72661125e+05,  1.79150250e+05, -5.43258398e+03,\n'
 '         1.39955500e+05, -2.97484812e+05,  5.80203375e+05,\n'
 '        -1.39412207e+04, -8.12491062e+05, -1.75795344e+05,\n'
 '        -6.95159875e+05,  6.62301938e+05,  5.63714188e+05,\n'
 '        -6.68388750e+05,  1.67402031e+05,  1.81414328e+05,\n'
 '        -9.17884863e+03, -2.77252844e+05,  1.87151344e+05,\n'
 '        -4.27636875e+05, -3.87707812e+05,  9.12121188e+05,\n'
 '         2.10078484e+05,  3.92350742e+04, -6.01462875e+05,\n'
 '         4.71375469e+05,  3.22675996e+04,  3.38871844e+05,\n'
 '        -6.61842125e+05,  1.63752812e+05, -1.18477945e+05,\n'
 '         1.28383875e+05,  4.99588469e+05,  3.80183938e+05,\n'
 '         1.10380703e+05,  8.50233359e+04, -2.23638422e+05,\n'
 '        -5.29376312e+05, -5.70713250e+05,  8.21777750e+05,\n'
 '        -6.47703438e+05,  8.20933938e+05,  3.24806484e+04,\n'
 '        -9.13112188e+04,  9.48883812e+05,  3.97751594e+05,\n'
 '         8.83550547e+04,  1.06369609e+05,  7.44442312e+05,\n'
 '        -3.74067422e+04, -5.25815000e+05,  1.00262086e+05,\n'
 '        -5.30286312e+05,  1.67108438e+05,  1.04308925e+06,\n'
 '         8.36778203e+04,  2.68804125e+05,  3.05935156e+05,\n'
 '         7.80784141e+04,  1.86117562e+05,  8.18356688e+05,\n'
 '         7.70493250e+05,  2.38172500e+05, -6.06623375e+05,\n'
 '        -2.37480098e+04, -7.67904000e+05, -5.18656438e+05,\n'
 '         5.09917688e+05,  4.89643562e+05,  5.45869453e+04,\n'
 '         7.79687938e+05,  5.09285812e+05, -5.74693875e+05,\n'
 '         3.07094344e+05, -6.68067250e+05,  2.78621188e+05,\n'
 '        -5.12534453e+04, -2.80576125e+05,  6.45668625e+05,\n'
 '         3.57239219e+05, -2.97244344e+05, -4.22378406e+05,\n'
 '        -7.20461312e+05, -9.78925703e+04,  7.10165438e+05,\n'
 '         6.82739219e+04,  3.63917688e+05, -6.71442656e+04,\n'
 '         4.53399125e+05,  7.76155938e+05, -5.64647438e+05,\n'
 '        -3.14059875e+05,  6.27887625e+05, -1.22566641e+05,\n'
 '         8.11144219e+04,  3.62639250e+05,  7.50813312e+05,\n'
 '         1.66388469e+05,  3.05784250e+05, -8.28695125e+05,\n'
 '         1.19338852e+05,  4.47400656e+05, -3.42914453e+04,\n'
 '         5.89032344e+04,  3.62466906e+05,  4.98188164e+04,\n'
 '         5.24995820e+04, -2.23097016e+05,  6.25927750e+05,\n'
 '         1.32674828e+05, -1.86517891e+04,  3.70881500e+05,\n'
 '        -1.78117719e+05, -2.39076109e+05,  5.67159125e+05,\n'
 '         3.63190750e+05,  1.05841852e+05, -2.58893156e+05,\n'
 '        -4.83341406e+04,  3.49477156e+05, -4.50259180e+04,\n'
 '         5.23453156e+05,  3.91312750e+05,  6.85068125e+05,\n'
 '        -1.59864062e+05,  3.78582562e+05, -5.50667625e+05,\n'
 '         8.87206312e+05, -3.94877438e+05, -1.06097225e+06,\n'
 '         4.61677375e+05, -2.61096344e+05, -1.09530625e+05,\n'
 '        -4.83575656e+05, -7.16949297e+04, -3.25141531e+05,\n'
 '        -6.78281250e+05,  4.76905273e+04, -3.81902531e+05,\n'
 '        -1.64988109e+05, -8.09887344e+04,  1.00410600e+06,\n'
 '         4.08144156e+05, -1.51591062e+05,  6.02591750e+05,\n'
 '         5.62745188e+05,  1.22502023e+05, -1.87222562e+05,\n'
 '         4.27080531e+05, -2.38158141e+05,  1.09889138e+06,\n'
 '        -1.90137531e+05, -1.12716888e+06, -3.01812094e+05,\n'
 '         5.73995688e+05,  1.38636250e+05,  3.90652375e+05,\n'
 '         2.22861984e+05,  1.14456738e+06, -3.78716219e+05,\n'
 '         1.08713242e+05, -3.07185938e+04,  3.30151062e+05,\n'
 '         3.32874562e+05, -1.53168000e+05, -8.64857562e+05,\n'
 '         1.20721734e+05,  4.48600531e+05, -6.80231438e+05,\n'
 '         2.29680094e+05,  1.47202859e+05,  2.50864000e+05,\n'
 '         3.24862719e+05,  6.81595000e+05, -4.95154156e+05,\n'
 '        -4.13514062e+04,  9.99490938e+05,  5.39348938e+05,\n'
 '         2.46723969e+05, -3.84838125e+05,  1.70307266e+05,\n'
 '        -1.60089922e+05, -4.73765688e+05,  2.57710219e+05,\n'
 '         5.33157578e+04, -2.72705375e+05,  4.02196219e+05,\n'
 '        -7.06357375e+05, -4.29995375e+05, -9.09906438e+05,\n'
 '        -1.03222913e+03, -7.01895812e+05, -5.02457852e+04,\n'
 '         2.49606516e+05, -2.54769719e+05, -1.09339512e+06,\n'
 '        -2.22914828e+05,  2.86235410e+04, -1.25676398e+05,\n'
 '        -2.91606000e+05,  1.00615112e+06, -7.23071562e+04,\n'
 '         3.27889344e+05,  1.69310430e+04, -2.95821906e+05,\n'
 '        -3.78563688e+05,  9.54532375e+05,  3.84054875e+05,\n'
 '        -2.01228953e+05, -2.96307344e+05, -1.47486709e+04,\n'
 '         1.19434016e+05,  2.08240844e+05,  3.27476719e+05,\n'
 '        -3.17631062e+05, -4.00836562e+05,  1.72435719e+05,\n'
 '        -4.11182344e+05,  4.72720906e+05, -3.97018938e+05,\n'
 '         2.30965984e+05,  4.50233312e+05, -9.10677344e+04,\n'
 '        -8.41606641e+04,  1.02375146e+04, -2.96352812e+05,\n'
 '         1.65239750e+05, -3.73026156e+05, -8.12904062e+05,\n'
 '         8.58357562e+05,  4.33756750e+05, -5.96546312e+05,\n'
 '         2.39152031e+05, -7.28657312e+05, -5.93700812e+05,\n'
 '        -1.97670938e+05, -4.71130742e+04, -2.75873500e+05,\n'
 '         1.74152188e+05,  2.57893453e+05,  7.62842891e+04,\n'
 '         1.17713875e+05, -1.33005578e+05, -3.50132250e+05,\n'
 '         1.13634992e+05,  8.94893203e+04, -9.93266188e+05,\n'
 '         2.73179812e+05, -1.40488766e+05,  3.45086906e+05,\n'
 '         7.24627295e+03, -4.09376844e+05, -3.48669492e+04,\n'
 '         1.02065188e+06,  4.90924875e+05, -8.11794250e+05,\n'
 '        -3.81638188e+05, -8.30406172e+04, -5.09952500e+05,\n'
 '        -3.94208375e+05,  9.27456812e+05, -8.60364625e+05,\n'
 '         2.63980188e+05,  6.26281172e+04,  4.27055125e+05,\n'
 '         9.51624297e+04,  1.68459297e+05, -6.89469609e+04,\n'
 '        -3.38481750e+05,  7.51912125e+05, -2.44882484e+05,\n'
 '         6.60299688e+05, -6.74445688e+05, -8.62290438e+05,\n'
 '         1.02667773e+05,  2.83779625e+05,  5.45979000e+05,\n'
 '         5.88722750e+05, -1.07847125e+06, -4.85714125e+05,\n'
 '         8.93721875e+04, -8.55656250e+04, -7.66428750e+05,\n'
 '         2.86465562e+05, -7.70293375e+05, -3.85858531e+05,\n'
 '        -8.35550781e+04,  2.80386438e+05,  2.42681812e+05,\n'
 '         3.11802844e+05, -2.84915656e+05, -2.89026062e+05,\n'
 '         2.72310219e+05,  1.35608594e+05, -1.23416662e+06,\n'
 '         2.99332637e+04,  2.78616344e+05,  2.41805266e+05,\n'
 '        -2.42771094e+05,  5.79468562e+05,  2.51325250e+05,\n'
 '        -6.25331562e+05, -2.13106656e+05,  5.59794750e+05,\n'
 '        -2.98182844e+05, -6.61834875e+05,  8.43617688e+05,\n'
 '        -1.27015688e+05]])')
'test_inceptionnet | batch_shape is: [1]'
'test_inceptionnet | logits.shape is: ivy.Shape(1, 1000)'
'||'
'test_inceptionnet | device is: cpu'
'test_inceptionnet | fw is: jax'
'test_inceptionnet | load_weights is: True'
'InceptionV3 | build | layer 1/22 built'
'InceptionV3 | build | layer 2/22 built'
'layer 3/22 built'
'InceptionV3 | build | layer 4/22 built'
'InceptionV3 | build | layer 5/22 built'
'InceptionV3 | build | layer 6/22 built'
'InceptionV3 | build | layer 7/22 built'
'InceptionV3 | build | layer 8/22 built'
'InceptionV3 | build | layer 9/22 built'
'InceptionV3 | build | layer 10/22 built'
'InceptionV3 | build | layer 11/22 built'
'InceptionV3 | build | layer 12/22 built'
'InceptionV3 | build | layer 13/22 built'
'InceptionV3 | build | layer 14/22 built'
'InceptionV3 | build | layer 15/22 built'
'InceptionV3 | build | layer 17/22 built'
'InceptionV3 | build | layer 18/22 built'
'InceptionV3 | build | layer 19/22 built'
'InceptionV3 | build | layer 20/22 built'
'InceptionV3 | build | layer 21/22 built'
'InceptionV3 | build | layer 22/22 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/4 built'
'layer 2/4 built'
'layer 3/4 built'
'layer 4/4 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/6 built'
'layer 2/6 built'
'layer 3/6 built'
'layer 4/6 built'
'layer 5/6 built'
'layer 6/6 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'inceptionNet_v3 | building InceptionV3 model | done 1/3'
'inceptionNet_v3 | clearning pretrained weights | done 2/3'
'inceptionNet_v3 | loading pretrained weights | done 3/3'
'InceptionV3 | forward | input data_format is:NCHW | done 1/27'
'InceptionV3 | forward | data_format is going to be used is:NCHW | done 1/27'
'InceptionV3 | forward | input shape is:ivy.Shape(1, 224, 224, 3) | done 1/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 224, 224, 3) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 111, 111, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 111, 111, 32) | done 2/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 111, 111, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 32) | done 3/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 109, 109, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 64) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 64) | done 4/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 54, 54, 64) | done 5/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 54, 54, 80) | done 3/3'
'InceptionV3 | forward | is:ivy.Shape(1, 54, 54, 80) | done 6/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 80) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 52, 52, 192) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 52, 52, 192) | done 7/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 192) | done 8/27'
'input shape is:ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 32) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 32)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 25, 25, 256) | done 9/27'
'input shape is:ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 10/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 11/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 384) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 96) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 96)'
'one 20/20, output shape is:ivy.Shape(1, 12, 12, 288)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 12/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 12, 12, 768) | done 13/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 14/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 15/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 16/27'
'v3 16/27, output shape is:ivy.Shape(1, 12, 12, 768)'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 5, 5, 192)'
'one 7/20, output shape is:ivy.Shape(1, 5, 5, 768)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 1280) | done 17/27'
'input shape is:ivy.Shape(1, 5, 5, 1280)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 18/27'
'input shape is:ivy.Shape(1, 5, 5, 2048)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 19/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 20/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 5, 5) | done 21/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 1, 1) | done 22/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 27/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 24/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 25/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048) | done 26/27'
'InceptionV3 | forward | fc | done 27/27'
('test_inceptionnet | logits is: ivy.array([[-1.55690461e-01, -1.34749949e+00, '
 '-2.29122728e-01,\n'
 '         1.32712638e+00, -1.75874412e-01,  8.83178353e-01,\n'
 '         2.57571626e+00, -9.02108252e-02, -4.15482611e-01,\n'
 '        -2.71436500e+00, -4.66130048e-01,  3.17997813e-01,\n'
 '        -2.53521204e-02,  1.09315550e+00,  2.44289398e+00,\n'
 '         1.04927278e+00, -2.94063401e+00, -4.62971807e-01,\n'
 '        -8.88365507e-02,  1.28523183e+00,  3.09394908e+00,\n'
 '        -2.50446606e+00,  9.20041442e-01, -2.09793186e+00,\n'
 '        -6.61274552e-01, -3.59484792e-01, -5.39409816e-02,\n'
 '        -9.46308851e-01,  6.57562614e-01, -1.29101825e+00,\n'
 '         7.82457709e-01,  1.07118130e+00,  1.77567279e+00,\n'
 '         3.30164909e-01,  1.58258212e+00, -5.55502057e-01,\n'
 '         1.77217579e+00, -5.40360749e-01, -8.25820506e-01,\n'
 '         1.90413821e+00,  1.00089443e+00,  1.51032341e+00,\n'
 '         1.27386761e+00,  1.24244869e+00,  3.48232090e-02,\n'
 '         1.01748872e+00, -8.05178165e-01,  1.04030609e+00,\n'
 '        -6.40948862e-02, -2.03059480e-01,  4.84178096e-01,\n'
 '         9.88848448e-01,  1.76331329e+00, -7.25564957e-01,\n'
 '         2.15007162e+00,  1.00783348e+00, -1.48189211e+00,\n'
 '         2.90979147e-01,  1.23690295e+00,  4.10424173e-01,\n'
 '        -1.03432953e+00,  2.24872160e+00, -3.94010484e-01,\n'
 '        -4.04884636e-01, -1.18568993e+00, -1.47191560e+00,\n'
 '         1.53627837e+00,  2.02963424e+00,  2.02145362e+00,\n'
 '        -1.43864214e+00, -4.18877691e-01, -2.11823314e-01,\n'
 '        -1.50273430e+00, -1.25624466e+00,  3.02458972e-01,\n'
 '         3.47002924e-01, -1.48169398e+00, -2.74914742e-01,\n'
 '         4.84958887e-01,  1.10505056e+00, -1.56978512e+00,\n'
 '         2.29398704e+00, -1.48685977e-01, -7.60322452e-01,\n'
 '        -3.98541749e-01, -3.35930407e-01, -8.40928078e-01,\n'
 '        -2.04742885e+00, -1.56885952e-01,  5.44519186e-01,\n'
 '        -2.56128758e-01,  1.44498634e+00, -3.79516602e-01,\n'
 '         2.69466758e-01, -1.81954050e+00, -1.63965344e+00,\n'
 '         1.14338350e+00,  6.17472529e-01, -4.08521175e-01,\n'
 '         1.32309771e+00,  1.75311804e+00,  6.47935391e-01,\n'
 '         1.05589867e-01, -8.34159493e-01,  2.35403109e+00,\n'
 '        -2.37211108e+00, -9.30327773e-01,  1.91537964e+00,\n'
 '         1.85091257e+00, -9.62257624e-01, -1.75616354e-01,\n'
 '        -2.41782761e+00,  4.05317783e+00,  3.49199057e+00,\n'
 '        -4.27045882e-01, -1.85975599e+00, -6.26547217e-01,\n'
 '        -1.55318439e+00, -1.39259839e+00,  1.17750548e-01,\n'
 '        -1.22674358e+00, -1.58035553e+00,  1.66510534e+00,\n'
 '        -6.27899170e-02, -2.64008880e+00,  5.36227643e-01,\n'
 '        -1.86392331e+00,  2.03045082e+00,  4.42157060e-01,\n'
 '         3.51360917e-01,  6.00007415e-01,  7.11022377e-01,\n'
 '         1.56178689e+00, -2.29236627e+00, -7.13864922e-01,\n'
 '         5.97521007e-01,  7.00696826e-01,  1.57659686e+00,\n'
 '        -1.28999257e+00, -1.57233691e+00, -5.94553113e-01,\n'
 '        -1.87454343e-01, -1.00100958e+00,  4.99954402e-01,\n'
 '         2.91480112e+00,  7.82355666e-01,  1.15550220e-01,\n'
 '        -7.86914051e-01,  8.64458978e-01,  6.36390388e-01,\n'
 '        -4.44640934e-01,  1.25342607e-03,  2.96652055e+00,\n'
 '        -1.46553516e-02, -5.32614052e-01, -2.25715089e+00,\n'
 '         8.68773103e-01,  4.19426155e+00, -2.83502936e+00,\n'
 '        -7.04241753e-01,  9.03651535e-01, -2.89957690e+00,\n'
 '        -1.87093043e+00,  4.41654384e-01, -1.43621266e-01,\n'
 '        -1.44805944e+00, -9.40699577e-01, -6.85455144e-01,\n'
 '        -2.38997459e+00,  2.89691186e+00,  8.66189659e-01,\n'
 '        -8.22011948e-01,  1.02412367e+00,  2.05593085e+00,\n'
 '         5.07771671e-01, -1.32701492e+00, -1.29840910e+00,\n'
 '        -9.54409316e-02,  7.23320723e-01,  1.49142659e+00,\n'
 '         1.09172940e+00,  6.20460630e-01, -1.21655655e+00,\n'
 '         1.23654902e+00,  1.19210049e-01,  1.31056440e+00,\n'
 '         2.54025006e+00, -8.51049900e-01, -1.34687281e+00,\n'
 '        -2.03535032e+00,  4.35728073e-01, -4.30508137e-01,\n'
 '        -1.61951613e+00, -6.34601593e-01, -3.42008233e+00,\n'
 '        -1.40272641e+00, -2.15741777e+00,  2.00123739e+00,\n'
 '        -2.90094465e-01,  4.29021359e-01,  1.01915824e+00,\n'
 '        -2.64845061e+00, -9.16265786e-01,  6.60368872e+00,\n'
 '        -2.35786319e+00, -2.55337262e+00, -1.64892971e+00,\n'
 '         4.42462504e-01, -2.62020445e+00, -1.28119183e+00,\n'
 '        -1.67500997e+00, -1.25733113e+00, -1.18572152e+00,\n'
 '        -3.74090344e-01,  2.28325605e+00,  2.49217823e-01,\n'
 '         1.96238124e+00,  7.31784105e-01,  5.08507609e-01,\n'
 '        -3.07913470e+00, -1.50003219e+00,  5.59717655e-01,\n'
 '         3.79429150e+00,  2.64576960e+00,  5.64156055e+00,\n'
 '        -2.83059645e+00,  2.07682347e+00, -3.19174600e+00,\n'
 '         1.40263879e+00,  9.35061038e-01,  2.18201184e+00,\n'
 '         3.63821053e+00,  3.21190500e+00,  2.22467351e+00,\n'
 '        -2.43039101e-01, -4.73717116e-02,  3.58646214e-01,\n'
 '        -1.77016282e+00, -8.30522180e-01, -9.44413662e-01,\n'
 '         3.29590112e-01, -2.02002740e+00,  2.15504313e+00,\n'
 '         3.23327780e-01, -8.71000290e-01,  2.36212879e-01,\n'
 '        -2.69963116e-01,  1.38608718e+00,  7.90899992e+00,\n'
 '         4.30811453e+00,  3.67498374e+00,  7.27693379e-01,\n'
 '        -2.30351210e+00,  5.89714468e-01, -8.62499952e-01,\n'
 '        -9.46907818e-01,  1.87682772e+00,  7.68573570e+00,\n'
 '         1.95489960e+01,  5.78779411e+00,  3.76320052e+00,\n'
 '         4.26566887e+00, -2.06913209e+00, -5.04994512e-01,\n'
 '        -1.18178010e+00, -6.20411634e-01, -1.86133838e+00,\n'
 '         2.16914868e+00,  2.62937069e-01,  1.12844276e+00,\n'
 '         1.02186174e+01, -2.46654010e+00, -1.30088997e+00,\n'
 '        -9.23619449e-01, -1.30390906e+00, -2.77049589e+00,\n'
 '         2.94787973e-01, -4.65063453e-01, -3.00087094e+00,\n'
 '         9.63316250e+00,  1.92381203e-01, -1.81962684e-01,\n'
 '        -8.50308180e-01,  2.08346939e+00, -3.13149309e+00,\n'
 '        -8.97578359e-01, -9.84556317e-01,  3.42324227e-01,\n'
 '         1.81816578e+00,  6.85901046e-01,  6.01755828e-02,\n'
 '         6.91633701e-01,  7.57953703e-01, -2.09911203e+00,\n'
 '        -1.09276116e-01, -2.23958611e-01,  4.72809792e+00,\n'
 '         3.79210413e-02, -3.61047316e+00, -1.84027553e+00,\n'
 '        -1.25795439e-01,  1.12062439e-01,  1.20316112e+00,\n'
 '         1.98727226e+00,  5.36049962e-01,  1.51048601e-02,\n'
 '         3.16786915e-01,  1.68610096e+00,  1.32323301e+00,\n'
 '         1.01806927e+00, -3.95073414e-01,  3.34124789e-02,\n'
 '        -4.50305402e-01, -2.27124524e+00, -2.13618889e-01,\n'
 '        -3.70038390e-01, -1.98508215e+00,  5.59354007e-01,\n'
 '        -7.28308320e-01, -5.37769675e-01,  4.81452435e-01,\n'
 '        -8.23228210e-02, -4.95840967e-01,  3.03514433e+00,\n'
 '        -2.77630782e+00,  1.08321559e+00,  1.47431648e+00,\n'
 '         1.30431581e+00,  4.49147254e-01, -4.55608308e-01,\n'
 '         2.16490999e-01,  2.32537222e+00,  1.43296349e+00,\n'
 '        -1.60099649e+00, -1.99959862e+00, -2.56230044e+00,\n'
 '        -2.18704748e+00, -2.36226887e-01,  9.73025441e-01,\n'
 '         1.05876178e-02, -4.74515319e-01,  2.54361772e+00,\n'
 '        -1.66842103e-01,  5.11542440e-01, -3.75320166e-01,\n'
 '         2.39049244e+00,  1.41211700e+00,  2.62213230e-01,\n'
 '         1.86515140e+00,  6.77424073e-02, -1.54334712e+00,\n'
 '        -9.91216481e-01, -2.18377876e+00, -8.47474694e-01,\n'
 '        -3.40276003e-01,  1.63825917e+00,  3.41205537e-01,\n'
 '        -5.98539770e-01,  1.55066538e+00, -1.50998938e+00,\n'
 '        -1.26681948e+00, -1.25371504e+00, -2.26692796e+00,\n'
 '         1.01829171e+00, -2.76500440e+00, -4.09727049e+00,\n'
 '        -1.89442718e+00,  5.94475865e-01, -1.87830818e+00,\n'
 '        -3.41062760e+00, -1.20861685e+00, -1.91311502e+00,\n'
 '        -1.01732636e+00,  1.78923666e-01, -9.62748051e-01,\n'
 '        -2.72869587e+00, -1.40412808e+00, -2.12281299e+00,\n'
 '        -3.18119430e+00, -3.20257950e+00, -3.21349597e+00,\n'
 '        -2.33127356e+00, -3.16365075e+00, -2.31568742e+00,\n'
 '        -3.16668534e+00,  3.95886272e-01, -4.25716400e-01,\n'
 '        -6.47887587e-01, -6.15427375e-01,  8.22816610e-01,\n'
 '        -7.89180577e-01, -2.98597813e-01,  4.84454632e-03,\n'
 '         6.56776130e-01,  1.48626232e+00, -1.43677795e+00,\n'
 '         1.94620276e+00, -9.57698703e-01,  1.55498838e+00,\n'
 '         1.22989941e+00, -2.78439546e+00,  4.41262811e-01,\n'
 '         1.54485774e+00,  2.69894695e+00,  1.57762849e+00,\n'
 '         1.50775218e+00, -2.57656455e-01, -1.96914554e+00,\n'
 '        -7.24841654e-02, -1.45338273e+00, -1.48837364e+00,\n'
 '        -3.41987801e+00, -3.78314209e+00, -2.31231189e+00,\n'
 '        -8.51143122e-01,  6.88358367e-01, -2.00367856e+00,\n'
 '         3.09602439e-01, -5.91362298e-01, -9.63716507e-01,\n'
 '         2.58202553e-01, -3.13608336e+00, -7.24562049e-01,\n'
 '         1.31144774e+00,  3.05701065e+00,  3.72355700e+00,\n'
 '        -3.40120971e-01, -7.12665796e-01,  1.17753387e+00,\n'
 '        -2.05744147e-01,  9.81129885e-01, -3.46721262e-01,\n'
 '         9.31122303e-01, -9.39743757e-01, -1.39242959e+00,\n'
 '        -1.80533603e-01, -4.91996616e-01, -8.13870072e-01,\n'
 '        -4.27271068e-01, -1.03467500e+00,  7.28947639e-01,\n'
 '        -7.00390339e-01, -2.08405018e+00, -1.98671961e+00,\n'
 '        -1.00968718e+00,  1.24759173e+00, -1.46670055e+00,\n'
 '        -1.60079026e+00,  4.07704711e-01, -1.43521667e-01,\n'
 '        -8.74258995e-01,  1.01703393e+00, -2.21395469e+00,\n'
 '        -9.24805105e-02,  7.06991315e-01,  2.46617421e-01,\n'
 '        -3.96257818e-01,  1.35719895e+00,  7.54067481e-01,\n'
 '        -1.44191122e+00, -1.16390228e+00, -1.98292208e+00,\n'
 '         6.79522514e-01, -6.80368841e-01,  1.00719380e+00,\n'
 '        -3.40731311e+00,  1.54411864e+00,  6.80826783e-01,\n'
 '         4.62212682e-01,  1.07596791e+00,  1.49213600e+00,\n'
 '        -2.85292983e+00, -1.03081358e+00,  2.43530989e+00,\n'
 '        -2.17429519e-01, -3.42431426e+00,  3.18943834e+00,\n'
 '        -3.04495752e-01,  3.80071282e+00, -7.65214443e-01,\n'
 '        -1.27274013e+00, -1.75114080e-01,  2.63639569e-01,\n'
 '        -5.71413934e-01,  9.37602520e-01, -1.34805751e+00,\n'
 '         2.57172287e-01,  2.33730465e-01,  2.62023497e+00,\n'
 '         2.61384416e+00,  1.23096275e+00,  2.71241021e+00,\n'
 '        -1.19882774e+00, -7.86568522e-01, -2.07373047e+00,\n'
 '         3.87128234e-01, -1.98279524e+00, -2.79346824e+00,\n'
 '         1.00978064e+00, -8.50936696e-02, -1.84849477e+00,\n'
 '        -1.05712509e+00, -7.53391027e-01, -6.59563780e-01,\n'
 '        -1.60158360e+00,  7.80439377e-01, -1.86700356e+00,\n'
 '         4.07612175e-02,  1.29148197e+00, -1.34350336e+00,\n'
 '         6.14990234e-01,  1.39013529e-02,  1.80820778e-01,\n'
 '         6.60944700e-01,  9.28133786e-01,  5.55834293e-01,\n'
 '        -8.72404456e-01,  1.26794970e+00, -3.47319722e+00,\n'
 '        -4.78054464e-01,  4.31086659e-01,  1.65635765e-01,\n'
 '         1.08887427e-01, -5.94040871e-01, -1.44530487e+00,\n'
 '        -2.15777159e-02, -3.68749678e-01, -2.36998129e+00,\n'
 '        -7.51074254e-01, -1.88555324e+00,  4.39608634e-01,\n'
 '         3.58324111e-01,  2.10942611e-01, -9.64421451e-01,\n'
 '        -1.58969307e+00, -5.95203400e-01, -1.06678367e+00,\n'
 '         1.93636072e+00, -1.62456715e+00,  1.86980796e+00,\n'
 '        -3.89579773e-01, -3.75549376e-01, -7.14078426e-01,\n'
 '         9.06935632e-01,  1.32448113e+00, -5.96781731e-01,\n'
 '         3.35896349e+00,  2.15624884e-01, -1.31897378e+00,\n'
 '        -3.81023556e-01, -3.79433811e-01, -1.32786202e+00,\n'
 '        -1.19901395e+00, -1.40154684e+00, -3.71968806e-01,\n'
 '        -1.58724976e+00,  9.56450105e-02, -2.88746893e-01,\n'
 '        -6.15669191e-01, -3.92640650e-01, -1.05631709e+00,\n'
 '        -4.12028938e-01,  3.78069520e+00,  1.42555952e+00,\n'
 '         5.44037938e-01, -9.19098377e-01,  9.76515532e-01,\n'
 '        -2.49850631e+00, -1.76468387e-01, -1.60944462e+00,\n'
 '        -1.23403990e+00,  1.73711062e-01,  5.83981931e-01,\n'
 '         2.21329141e+00, -1.13369751e+00, -8.07337880e-01,\n'
 '         4.47293848e-01, -1.37685549e+00, -7.42877424e-02,\n'
 '        -1.43828440e+00,  2.44322920e+00,  2.30714321e-01,\n'
 '         2.68762851e+00, -4.09757853e-01,  1.43022358e+00,\n'
 '         6.70477331e-01, -3.41152549e+00, -5.65106511e-01,\n'
 '        -1.16220903e+00,  6.68446422e-01,  9.45520461e-01,\n'
 '        -6.99756384e-01,  2.05701923e+00,  1.16161275e+00,\n'
 '         2.38984513e+00,  2.20290884e-01,  9.74937081e-01,\n'
 '         1.73018098e-01, -2.36248660e+00, -5.25720716e-02,\n'
 '        -7.54700899e-01, -1.71240628e+00, -1.90575147e+00,\n'
 '         8.08175683e-01,  2.00760484e+00, -1.52074587e+00,\n'
 '         4.25806236e+00,  8.11961293e-01,  1.34986150e+00,\n'
 '        -5.23151338e-01, -1.54518688e+00,  2.54418445e+00,\n'
 '         1.08452618e+00,  2.55256176e-01, -5.90255678e-01,\n'
 '        -4.12076092e+00, -2.30382979e-01, -9.52136278e-01,\n'
 '        -1.70390630e+00, -9.11825716e-01, -1.03573918e+00,\n'
 '         1.02513254e+00,  5.27280688e-01, -3.14616382e-01,\n'
 '         9.56770062e-01,  1.77596939e+00,  1.05133224e+00,\n'
 '        -1.11331391e+00,  2.98325992e+00, -1.00259751e-01,\n'
 '        -9.19739902e-01, -2.12366867e+00, -1.89166522e+00,\n'
 '        -2.72811413e+00, -1.42025387e+00, -2.07952428e+00,\n'
 '         5.07039964e-01, -3.88683766e-01, -8.86802673e-01,\n'
 '        -6.14159882e-01,  3.52865756e-01, -8.90391767e-01,\n'
 '        -6.22681528e-02,  5.56643605e-01, -2.25764900e-01,\n'
 '        -3.25918108e-01,  3.68192673e-01, -1.10081220e+00,\n'
 '         4.39622402e-02,  2.43921638e-01, -4.81998324e-02,\n'
 '        -2.85028148e+00, -1.02032647e-01, -2.34630394e+00,\n'
 '        -7.31400847e-01, -3.43023848e+00,  9.13357616e-01,\n'
 '        -3.46161914e+00,  1.66708380e-02, -1.71665204e+00,\n'
 '        -1.11007965e+00,  6.51731908e-01,  2.78090692e+00,\n'
 '        -2.96796083e+00,  6.12292886e-01,  6.33430362e-01,\n'
 '        -1.61078548e+00, -1.72219682e+00, -2.65268183e+00,\n'
 '         1.66099012e+00,  1.09689689e+00, -1.37936044e+00,\n'
 '         2.18875468e-01, -2.61322439e-01,  8.45392346e-01,\n'
 '        -1.46878445e+00,  1.05476677e+00, -1.74721062e-01,\n'
 '         1.19118381e+00, -1.60379231e-01, -9.26069021e-02,\n'
 '        -3.92814684e+00,  2.65476870e+00,  1.32832623e+00,\n'
 '         1.65311313e+00,  1.01579860e-01, -1.06426036e+00,\n'
 '         2.66438901e-01, -5.17610669e-01, -3.03424336e-02,\n'
 '         5.47456741e-01, -1.08623993e+00, -4.83728886e-01,\n'
 '        -3.60781383e+00, -6.09067500e-01,  2.49455428e+00,\n'
 '         6.49657011e-01, -5.23370326e-01,  1.42945015e+00,\n'
 '        -3.38666767e-01, -6.09259069e-01, -5.16079187e-01,\n'
 '        -3.93927789e+00, -1.97660044e-01, -2.74061203e+00,\n'
 '        -3.69574189e+00,  9.60658371e-01,  2.69750953e+00,\n'
 '        -1.49507701e+00, -1.73025286e+00,  4.55238134e-01,\n'
 '         9.03205037e-01, -1.70440924e+00, -3.12844706e+00,\n'
 '         2.24356628e+00, -1.28061891e-01, -5.54203749e-01,\n'
 '         1.38507500e-01,  1.46957803e+00,  1.12630582e+00,\n'
 '        -1.76694393e+00, -2.07893610e+00, -1.07859123e+00,\n'
 '        -8.58241439e-01,  2.41948462e+00,  6.75721243e-02,\n'
 '         4.21703219e-01, -1.81593388e-01,  2.73982501e+00,\n'
 '        -4.17822599e-01,  4.29186314e-01, -1.42118156e-01,\n'
 '        -1.92798460e+00, -2.67598689e-01, -1.15798855e+00,\n'
 '        -7.56928205e-01, -1.25063455e+00, -4.94182676e-01,\n'
 '         3.51388097e-01,  5.75810850e-01,  2.23860335e+00,\n'
 '         6.11863196e-01, -1.42103410e+00, -8.18053246e-01,\n'
 '        -1.38980460e+00, -2.47237921e+00,  2.56332064e+00,\n'
 '        -2.25593018e+00,  3.08616161e-02, -1.31671512e+00,\n'
 '        -1.53279030e+00,  2.44906202e-01, -1.68078974e-01,\n'
 '        -4.85572591e-02, -1.72003937e+00,  1.36598265e+00,\n'
 '        -1.29999447e+00,  4.56296802e-02,  8.08907747e-01,\n'
 '        -1.82670331e+00, -2.53185844e+00, -3.97090912e-02,\n'
 '         9.68993604e-02, -3.23041201e-01, -2.97157931e+00,\n'
 '         9.07546639e-01, -3.93778294e-01,  1.74622130e+00,\n'
 '         1.14614248e-01,  1.14306092e+00,  1.02980614e+00,\n'
 '        -8.41693640e-01, -9.78214979e-01, -1.84291041e+00,\n'
 '         9.51609075e-01, -3.12264889e-01,  2.06993341e+00,\n'
 '         1.69098723e+00, -1.34645665e+00, -7.77048886e-01,\n'
 '         3.28800130e+00,  1.27575362e+00,  6.44402087e-01,\n'
 '        -1.46532393e+00, -2.13571572e+00, -1.05452895e+00,\n'
 '         1.38603878e+00,  6.94946349e-01,  1.39833689e+00,\n'
 '        -7.66764045e-01,  1.43920541e+00,  1.86765230e+00,\n'
 '         2.74494600e+00,  5.51329851e-01, -9.49951053e-01,\n'
 '        -5.40592849e-01, -1.69732600e-01, -3.43809032e+00,\n'
 '         8.71499419e-01,  1.55860972e+00,  4.39164817e-01,\n'
 '         9.33746338e-01,  3.22923708e+00,  9.45041657e-01,\n'
 '        -2.37353039e+00, -3.38634580e-01, -2.69999242e+00,\n'
 '         1.68948069e-01,  5.91681242e-01, -4.96268272e-01,\n'
 '         1.86996520e+00,  1.75178516e+00,  1.47251666e+00,\n'
 '        -6.64904237e-01,  1.31802797e+00,  1.28579426e+00,\n'
 '         8.77466440e-01, -8.60124111e-01, -1.90422428e+00,\n'
 '         4.51957017e-01, -5.93046248e-01, -2.20820713e+00,\n'
 '         1.06064534e+00, -2.38721311e-01, -3.86187136e-01,\n'
 '         2.44910121e-02,  1.41889191e+00,  2.78206676e-01,\n'
 '         1.59040523e+00, -1.05946338e+00, -2.78129458e-01,\n'
 '         5.90336174e-02,  8.70527506e-01,  8.63460660e-01,\n'
 '        -8.59676242e-01, -1.11567485e+00,  1.32257426e+00,\n'
 '        -1.11651945e+00,  1.76647091e+00, -3.30788463e-01,\n'
 '        -3.21054280e-01, -7.05313802e-01, -6.27530217e-01,\n'
 '         2.44509125e+00,  2.51754522e+00, -1.61750841e+00,\n'
 '        -1.30769992e+00, -2.12887406e+00,  1.47295308e+00,\n'
 '         3.15493673e-01, -4.82030779e-01, -2.90556699e-02,\n'
 '         1.18366194e+00,  5.36060691e-01, -1.07455218e+00,\n'
 '        -7.87571371e-01, -3.06211293e-01,  1.99166584e+00,\n'
 '         1.49495113e+00,  1.20158708e+00,  2.15443921e+00,\n'
 '         3.65256429e-01, -6.27708435e-01, -9.11599040e-01,\n'
 '        -1.92245817e+00, -1.22757947e+00,  3.32443476e-01,\n'
 '         1.35693061e+00, -1.87586009e+00, -1.54457331e+00,\n'
 '         3.98792386e-01,  2.66971558e-01,  3.56329620e-01,\n'
 '        -7.78558314e-01, -1.77457750e+00, -6.06437385e-01,\n'
 '         6.90107644e-01, -2.44554114e+00,  2.44047141e+00,\n'
 '        -2.91465372e-01, -3.35316777e+00, -1.72140288e+00,\n'
 '         2.01139998e+00, -1.17475939e+00, -1.69899130e+00,\n'
 '        -1.83821011e+00,  1.81918228e+00, -5.24143696e-01,\n'
 '        -1.09083950e+00,  5.06289840e-01, -8.12597930e-01,\n'
 '         2.78618753e-01, -1.51498330e+00,  1.65994084e+00,\n'
 '        -5.65867066e-01, -8.93425584e-01,  2.04470396e+00,\n'
 '        -2.66922426e+00,  9.58201349e-01,  1.99640727e+00,\n'
 '        -3.29829186e-01,  6.47778869e-01,  3.06030095e-01,\n'
 '        -2.37959290e+00, -8.09842765e-01,  4.70839232e-01,\n'
 '        -2.07179815e-01,  8.61163974e-01,  1.16905308e+00,\n'
 '         4.39831883e-01, -4.66402441e-01, -6.38777018e-02,\n'
 '         5.66368341e-01,  2.65078473e+00, -5.42195439e-01,\n'
 '         1.38700283e+00, -5.17255306e-01, -6.16508841e-01,\n'
 '         1.46953329e-01,  4.11149949e-01, -2.01759648e+00,\n'
 '         3.32998872e-01,  2.40370393e+00,  1.37558997e+00,\n'
 '        -1.56275690e+00, -1.29140839e-01, -1.32636285e+00,\n'
 '        -2.54887152e+00,  1.28765082e+00, -9.95887160e-01,\n'
 '         1.38675451e+00, -1.10216475e+00, -1.77493012e+00,\n'
 '        -1.95359564e+00, -1.75644743e+00, -1.50208902e+00,\n'
 '         4.15880531e-01,  4.76945341e-01,  2.63124168e-01,\n'
 '         1.39474422e-01,  3.55637670e-01,  1.30753040e+00,\n'
 '         1.89863372e+00,  2.86276484e+00,  8.29124272e-01,\n'
 '         1.06025112e+00,  9.68182862e-01, -3.38979125e-01,\n'
 '        -1.44085634e+00, -6.04110658e-02,  1.83592606e+00,\n'
 '         1.72915816e+00,  2.34097123e+00,  8.26344788e-02,\n'
 '         1.28770506e+00,  2.45842314e+00,  2.57669330e+00,\n'
 '         2.95367241e+00, -2.16753900e-01, -7.95834303e-01,\n'
 '        -3.44852149e-01,  1.03267098e+00, -1.01094603e+00,\n'
 '        -8.36148202e-01, -1.58683682e+00, -1.69613123e+00,\n'
 '         1.44474602e+00,  1.10909176e+00, -1.58744132e+00,\n'
 '        -5.99977970e-01,  1.29846370e+00,  1.41766000e+00,\n'
 '        -8.69199634e-02, -1.46985006e+00,  1.24610603e-01,\n'
 '        -4.04729783e-01, -1.94686794e+00,  2.92417193e+00,\n'
 '         1.54665041e+00, -5.14898658e-01, -7.76035607e-01,\n'
 '        -2.06747341e+00, -1.41792929e+00,  1.28920197e+00,\n'
 '        -7.36820698e-02, -2.11389661e-02, -1.86054945e-01,\n'
 '         8.01777124e-01,  1.09913123e+00,  1.04084289e+00,\n'
 '        -5.78327417e-01, -1.62814450e+00, -1.46645784e+00,\n'
 '        -1.86250448e+00, -1.41805696e+00,  1.21591508e+00,\n'
 '        -1.45819283e+00, -1.13771474e+00,  4.21664089e-01,\n'
 '         1.11385018e-01]])')
'test_inceptionnet | batch_shape is: [1]'
'test_inceptionnet | logits.shape is: ivy.Shape(1, 1000)'
'||'
'test_inceptionnet | indices_test | true_indices is: [258 270 279]'
'test_inceptionnet | indices_test | calc_indices is: [258 270 279]'
'test_inceptionnet | device is: cpu'
'test_inceptionnet | fw is: tensorflow'
'test_inceptionnet | load_weights is: False'
'InceptionV3 | build | layer 1/22 built'
'InceptionV3 | build | layer 2/22 built'
'layer 3/22 built'
'InceptionV3 | build | layer 4/22 built'
'InceptionV3 | build | layer 5/22 built'
'InceptionV3 | build | layer 6/22 built'
'InceptionV3 | build | layer 7/22 built'
'InceptionV3 | build | layer 8/22 built'
'InceptionV3 | build | layer 9/22 built'
'InceptionV3 | build | layer 10/22 built'
'InceptionV3 | build | layer 11/22 built'
'InceptionV3 | build | layer 12/22 built'
'InceptionV3 | build | layer 13/22 built'
'InceptionV3 | build | layer 14/22 built'
'InceptionV3 | build | layer 15/22 built'
'InceptionV3 | build | layer 17/22 built'
'InceptionV3 | build | layer 18/22 built'
'InceptionV3 | build | layer 19/22 built'
'InceptionV3 | build | layer 20/22 built'
'InceptionV3 | build | layer 21/22 built'
'InceptionV3 | build | layer 22/22 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/4 built'
'layer 2/4 built'
'layer 3/4 built'
'layer 4/4 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/6 built'
'layer 2/6 built'
'layer 3/6 built'
'layer 4/6 built'
'layer 5/6 built'
'layer 6/6 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'inceptionNet_v3 | building InceptionV3 model | done 1/3'
'InceptionV3 | forward | input data_format is:NHWC | done 1/27'
'InceptionV3 | forward | data_format is going to be used is:NHWC | done 1/27'
'InceptionV3 | forward | input shape is:ivy.Shape(1, 224, 224, 3) | done 1/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 224, 224, 3) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 111, 111, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 111, 111, 32) | done 2/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 111, 111, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 32) | done 3/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 109, 109, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 64) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 64) | done 4/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 54, 54, 64) | done 5/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 54, 54, 80) | done 3/3'
'InceptionV3 | forward | is:ivy.Shape(1, 54, 54, 80) | done 6/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 80) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 52, 52, 192) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 52, 52, 192) | done 7/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 192) | done 8/27'
'input shape is:ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 32) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 32)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 25, 25, 256) | done 9/27'
'input shape is:ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 10/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 11/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 384) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 96) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 96)'
'one 20/20, output shape is:ivy.Shape(1, 12, 12, 288)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 12/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 12, 12, 768) | done 13/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 14/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 15/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 16/27'
'v3 16/27, output shape is:ivy.Shape(1, 12, 12, 768)'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 5, 5, 192)'
'one 7/20, output shape is:ivy.Shape(1, 5, 5, 768)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 1280) | done 17/27'
'input shape is:ivy.Shape(1, 5, 5, 1280)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 18/27'
'input shape is:ivy.Shape(1, 5, 5, 2048)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 19/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 20/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 5, 5) | done 21/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 1, 1) | done 22/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 27/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 24/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 25/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048) | done 26/27'
'InceptionV3 | forward | fc | done 27/27'
('test_inceptionnet | logits is: ivy.array([[ 1.23843250e+05, -5.32280250e+05, '
 '-1.78594516e+05,\n'
 '         3.29876625e+05, -8.44860469e+04, -7.96063750e+05,\n'
 '         1.53208984e+05,  1.22777055e+05,  4.22125031e+05,\n'
 '         7.28320312e+04, -1.66896234e+05, -8.63081375e+05,\n'
 '         2.76428781e+05,  8.45832062e+05, -4.09021750e+05,\n'
 '        -5.54260562e+05,  2.71249781e+05, -1.07968738e+06,\n'
 '         1.96730781e+05, -1.30244775e+06,  4.60476719e+05,\n'
 '         1.42378609e+05, -2.89421250e+05, -6.11336312e+05,\n'
 '        -1.17640575e+06,  7.40686812e+05, -1.36575031e+05,\n'
 '        -5.77686500e+05,  3.77553375e+05, -6.44055250e+05,\n'
 '        -1.16108773e+05,  1.65776484e+05,  1.94116438e+05,\n'
 '         7.04034500e+05, -5.93380062e+05, -7.30017109e+04,\n'
 '         7.66305750e+05, -1.48255615e+03,  1.04417300e+06,\n'
 '        -1.95200500e+05, -8.48277344e+04, -7.15042875e+05,\n'
 '         1.00511162e+06, -8.25288625e+05, -1.13795562e+06,\n'
 '        -1.00215544e+06,  7.02986797e+04,  2.60304141e+05,\n'
 '        -5.28148812e+05, -7.74445500e+05,  5.07325031e+05,\n'
 '         8.98085000e+05,  6.72107688e+05,  6.12542562e+05,\n'
 '        -1.27591500e+06, -2.23174922e+05, -1.08250000e+06,\n'
 '         5.18119812e+05, -5.96575938e+05,  7.33317031e+04,\n'
 '        -5.41310000e+05, -3.10378969e+05, -6.66968625e+05,\n'
 '         6.09430688e+05,  7.19250234e+04, -1.00125475e+06,\n'
 '         6.49130156e+04, -7.62681000e+05,  5.87245875e+05,\n'
 '         2.70554969e+05, -1.56287112e+06, -4.54748219e+05,\n'
 '        -3.56376625e+05, -8.91305562e+05,  1.01812852e+05,\n'
 '        -5.63200000e+05,  2.67945938e+05, -1.85508398e+04,\n'
 '         2.19771875e+05, -8.31304375e+05,  2.79291844e+05,\n'
 '         2.35411641e+05,  5.25031438e+05, -1.30519188e+05,\n'
 '        -1.36087953e+05,  1.94907562e+05,  5.12348750e+05,\n'
 '        -1.70582922e+05, -2.53845297e+05, -4.56419531e+05,\n'
 '        -1.82241469e+05,  6.36701500e+05,  8.13367000e+05,\n'
 '        -4.65364883e+04, -2.94135844e+05,  3.60456500e+05,\n'
 '         1.38625138e+06, -2.75325250e+05,  4.24103188e+05,\n'
 '        -6.05965125e+05,  1.29745086e+05,  3.93046875e+05,\n'
 '         1.86239906e+05,  2.38062562e+05, -3.81752906e+05,\n'
 '        -7.06422000e+05,  1.64200234e+05, -2.23423266e+05,\n'
 '        -3.47774531e+05,  2.41137719e+05,  3.95999062e+05,\n'
 '        -1.18285078e+05, -4.37156211e+04,  4.57340234e+04,\n'
 '         8.45285875e+05,  5.49927000e+05, -5.47366500e+05,\n'
 '        -6.00261938e+05,  3.85720031e+05,  1.41405791e+04,\n'
 '        -1.93304312e+05,  9.01025938e+05, -3.95275250e+05,\n'
 '         2.31101922e+05,  7.85034188e+05,  1.86034531e+05,\n'
 '         1.10565164e+05,  7.53891500e+05, -5.57348812e+05,\n'
 '         3.87787031e+05,  1.36356391e+05,  2.25784297e+05,\n'
 '        -2.13257656e+05, -2.44913578e+05,  3.65967062e+05,\n'
 '         2.41933641e+05,  2.64925219e+05, -1.21897962e+06,\n'
 '        -4.65049156e+05, -8.97603828e+04, -7.77843984e+04,\n'
 '         3.02081031e+05,  6.75414625e+05,  5.97675234e+04,\n'
 '         1.42639906e+05, -1.97169656e+05,  1.91278266e+05,\n'
 '        -1.56574712e+06,  8.74879062e+04,  3.87765031e+05,\n'
 '        -3.22544875e+05,  1.40582844e+05,  1.24747469e+05,\n'
 '         2.56738281e+05, -5.36589312e+05, -2.35002797e+05,\n'
 '         2.75058062e+05,  7.99720000e+05,  3.92781812e+05,\n'
 '        -2.25010953e+05,  4.01334438e+05,  6.92863562e+05,\n'
 '         7.76867500e+05, -2.88466031e+05, -3.01931562e+05,\n'
 '         7.47157438e+05,  5.33164844e+04,  5.37322461e+04,\n'
 '         3.30993906e+05,  2.64365062e+05, -2.53155750e+05,\n'
 '        -2.10921328e+05, -3.81677469e+05,  7.92198375e+05,\n'
 '         3.91446781e+05, -3.25375781e+05, -8.26655391e+04,\n'
 '        -1.98442984e+05,  2.12002297e+05, -1.07980150e+06,\n'
 '         7.53169844e+04,  3.29904844e+05,  4.76072227e+04,\n'
 '         8.71876953e+03,  5.86013812e+05, -8.22178688e+05,\n'
 '         1.50057516e+05, -2.90946500e+05, -6.06222188e+05,\n'
 '        -4.68555188e+05, -4.24263938e+05, -4.04744562e+05,\n'
 '         6.03191688e+05,  8.44125000e+05,  1.96738781e+05,\n'
 '        -5.49760000e+05,  2.67203469e+05, -3.25568906e+05,\n'
 '        -2.50137438e+05, -5.60967375e+05,  6.62795000e+05,\n'
 '        -1.03106562e+05, -5.39643375e+05,  9.63990938e+05,\n'
 '         2.50885734e+05,  1.74653438e+05, -9.13622969e+04,\n'
 '         7.13034312e+05,  4.31707281e+05,  9.19808312e+05,\n'
 '         4.03355406e+05, -3.47763250e+05, -4.42539312e+05,\n'
 '        -1.39241750e+05,  1.48951250e+05, -5.56013750e+05,\n'
 '         9.94368125e+04, -7.41621188e+05,  7.26705781e+04,\n'
 '        -1.44206125e+05,  3.81473156e+05, -1.29862531e+05,\n'
 '         1.66602325e+06, -1.02613194e+06, -1.77989062e+05,\n'
 '        -7.76557250e+05,  3.05115469e+05, -5.37470500e+05,\n'
 '         7.68645938e+04, -5.26776812e+05, -9.62877125e+05,\n'
 '        -5.55933500e+05,  4.74720781e+05,  3.42027844e+05,\n'
 '         7.83926812e+05,  6.53857000e+05, -5.33223188e+05,\n'
 '        -1.04015575e+06, -5.16788250e+05,  1.00530844e+05,\n'
 '         1.51406031e+05,  1.51450547e+05,  1.36159275e+06,\n'
 '        -2.66358219e+05, -2.79236688e+05,  8.71440188e+05,\n'
 '         3.71306500e+05, -7.93443562e+05,  2.94964000e+05,\n'
 '        -7.26618562e+05, -1.09163675e+06, -8.10478203e+04,\n'
 '        -4.46923000e+05, -3.68207109e+04, -7.06670875e+05,\n'
 '        -4.42673281e+04, -3.76416844e+05, -8.94124125e+05,\n'
 '        -1.60043412e+06, -5.16867406e+05, -4.68440562e+05,\n'
 '         3.71435078e+04, -6.98750078e+04, -1.25678038e+06,\n'
 '        -6.54745500e+05,  6.45836188e+05, -3.21307562e+05,\n'
 '        -6.36914938e+05, -4.50252188e+05,  4.76574969e+05,\n'
 '        -1.92763469e+05, -1.19820150e+06, -7.66411406e+04,\n'
 '        -1.30693086e+04, -1.03966081e+06, -1.63357359e+05,\n'
 '        -3.22897969e+05,  3.67894562e+05,  7.01814766e+04,\n'
 '        -3.17269375e+05, -6.80164141e+04, -1.79039344e+05,\n'
 '        -1.56393859e+05,  1.19795297e+05,  5.83885703e+04,\n'
 '        -5.21379656e+05,  4.13615500e+05, -2.25313672e+05,\n'
 '         2.29983844e+05,  2.90303250e+05, -9.31402375e+05,\n'
 '        -5.86987750e+05, -4.87567969e+05,  1.24626859e+05,\n'
 '        -5.12623531e+05, -2.35932750e+05, -9.52998500e+05,\n'
 '         3.08221219e+05, -9.43716812e+05, -5.47650875e+05,\n'
 '        -1.28650977e+03, -9.19248906e+04,  5.85543125e+04,\n'
 '        -3.55066969e+05, -4.23105375e+05, -1.25698445e+05,\n'
 '        -3.27541312e+05, -7.25900156e+04, -1.89394492e+04,\n'
 '         3.58189094e+05,  3.22722250e+05, -2.21620969e+05,\n'
 '        -1.28161325e+06,  8.90138125e+04,  1.26813862e+06,\n'
 '        -2.07242844e+05, -2.83818250e+05,  5.81954250e+05,\n'
 '         9.18551375e+05,  3.05912062e+05, -2.39124781e+05,\n'
 '        -1.57025462e+06,  7.70114375e+05,  1.76583438e+05,\n'
 '         1.14356200e+06,  5.97643875e+05, -1.19700188e+06,\n'
 '        -1.77645625e+05, -5.21159938e+05, -7.77858875e+05,\n'
 '         6.32325750e+05, -5.41492266e+04, -2.98828125e+05,\n'
 '        -3.15225938e+05, -6.01047500e+05,  3.30668812e+05,\n'
 '        -3.23734648e+04,  6.05418750e+05,  5.10540391e+04,\n'
 '        -1.72218375e+05,  6.24393312e+05, -4.61556875e+04,\n'
 '         2.15436469e+05, -1.46712562e+06,  8.42620312e+05,\n'
 '         9.59203688e+05,  1.11821275e+06, -2.41405859e+05,\n'
 '        -7.70330562e+05, -5.54126250e+05, -1.25941662e+06,\n'
 '         8.10035000e+04, -8.26568438e+04,  7.05253500e+05,\n'
 '         5.42484188e+05, -3.14196289e+04, -2.82380188e+05,\n'
 '        -9.67381562e+05, -4.01805531e+05,  8.63534125e+05,\n'
 '         6.33914250e+05, -4.98942562e+05,  2.17599922e+05,\n'
 '         9.44105188e+05,  8.49792031e+04,  3.47497422e+04,\n'
 '        -4.80715500e+05,  2.51791859e+05, -1.40478281e+05,\n'
 '        -3.14249375e+05,  1.89794922e+05, -7.46486562e+05,\n'
 '         6.72178938e+05,  6.08000062e+05,  5.85892750e+05,\n'
 '         9.83976250e+05,  9.91169312e+05, -1.22570938e+05,\n'
 '         6.05961938e+05,  3.02901281e+05, -9.97707812e+05,\n'
 '        -7.31220938e+05, -1.62415500e+06,  1.62210031e+05,\n'
 '        -3.62049094e+05, -5.23317094e+05,  2.00670750e+05,\n'
 '        -2.63761250e+05, -1.11630900e+06, -7.92096250e+05,\n'
 '         9.24233688e+05,  7.78495312e+05,  5.12459031e+05,\n'
 '        -6.13238984e+04, -5.57352539e+03,  5.95543000e+05,\n'
 '         2.10847984e+05,  1.93311816e+04, -3.31327562e+05,\n'
 '         4.51777344e+05,  4.22039500e+05,  1.87142359e+05,\n'
 '         7.10349062e+05,  6.48067188e+04,  3.67463688e+05,\n'
 '        -5.10162438e+05,  4.02616375e+05,  1.01595775e+06,\n'
 '        -4.42747125e+05,  1.16317288e+06,  5.29231375e+05,\n'
 '        -6.42782500e+04,  1.47558984e+03, -5.70474500e+05,\n'
 '         3.02346188e+05, -9.29996875e+05,  9.22770312e+05,\n'
 '        -1.26400289e+05,  1.69042891e+05, -7.29710188e+05,\n'
 '         8.11618115e+03, -7.95653875e+05, -9.21832812e+04,\n'
 '        -1.00790703e+05, -3.03275906e+05,  3.75098219e+05,\n'
 '         5.39335188e+05, -3.20091438e+05, -9.63638203e+04,\n'
 '         8.69442062e+05,  3.45529625e+05,  2.34338422e+05,\n'
 '        -4.00028375e+05, -2.60062141e+05, -3.62018625e+05,\n'
 '        -4.05894961e+04, -4.10077906e+05, -2.93974719e+05,\n'
 '        -6.27340938e+05, -3.64743812e+05,  1.82403484e+05,\n'
 '        -1.23998828e+05,  6.44477750e+05, -5.34359625e+05,\n'
 '         7.37467969e+04,  7.41331562e+05, -7.42705000e+05,\n'
 '        -3.48667156e+05, -6.43232852e+04,  8.40386250e+04,\n'
 '         1.17846012e+06, -6.68805125e+05,  8.54114000e+05,\n'
 '        -2.97128750e+05,  3.45194438e+05, -1.49333453e+05,\n'
 '        -9.12458188e+05,  1.87558812e+05, -4.12720594e+05,\n'
 '         9.32266250e+04,  1.28678575e+06,  5.21211781e+05,\n'
 '         8.76315188e+05,  1.57384688e+05,  9.43451500e+05,\n'
 '         2.25879875e+05, -2.04287750e+05, -2.07144188e+05,\n'
 '        -9.36989875e+05,  6.21339625e+05,  2.34694844e+05,\n'
 '         8.96687062e+05, -1.05759988e+06,  6.25407930e+04,\n'
 '        -1.20758550e+06, -7.81767875e+05, -7.11665188e+05,\n'
 '         4.23382812e+05,  1.73603375e+05,  1.01717069e+06,\n'
 '        -9.54927969e+04, -1.95791109e+05, -3.13524812e+05,\n'
 '         1.06516562e+06,  2.24750156e+05,  2.35188945e+04,\n'
 '         2.04370137e+04,  4.79988250e+05, -9.54609312e+05,\n'
 '        -2.44636328e+04, -1.40214109e+05,  7.62211062e+05,\n'
 '        -5.98786938e+05, -9.70789750e+05,  4.10977562e+05,\n'
 '         8.86847500e+04,  4.20990625e+05,  3.48276758e+04,\n'
 '         3.29835156e+05,  8.88859688e+04, -1.15211562e+06,\n'
 '         1.10006825e+06,  5.02915781e+04, -4.23985188e+05,\n'
 '         8.79013750e+05,  9.71358625e+05, -3.67044492e+04,\n'
 '         4.90797219e+05,  8.91982125e+05,  3.64607281e+05,\n'
 '         1.10603680e+05,  3.43774125e+05,  1.64839562e+05,\n'
 '        -4.08245469e+05,  2.66129824e+04, -1.48383047e+05,\n'
 '         2.39261312e+05, -9.69003875e+05, -6.33621000e+05,\n'
 '        -2.46172812e+05,  8.57278688e+05, -4.49409750e+05,\n'
 '         8.00321094e+03, -7.60669875e+05, -1.14091250e+06,\n'
 '         7.09501094e+04,  3.25824406e+05,  2.74223812e+05,\n'
 '        -3.65998906e+04,  5.82249625e+05,  6.81498250e+05,\n'
 '         5.50155250e+05,  9.76125750e+05,  4.91902750e+05,\n'
 '        -2.25471391e+05, -2.00592547e+05,  6.32211312e+05,\n'
 '        -5.29889414e+04,  4.67430000e+04, -1.34788406e+05,\n'
 '        -2.67285664e+04,  2.90789562e+05, -2.16716219e+05,\n'
 '        -2.84595234e+04, -6.40242875e+05,  1.03612062e+06,\n'
 '         5.40116641e+04, -6.92038312e+05,  3.90777625e+05,\n'
 '         5.33410250e+05,  5.39492969e+03, -2.71656875e+05,\n'
 '         2.59207578e+05,  1.13483188e+06, -2.05864641e+05,\n'
 '        -8.85744750e+05, -5.65550039e+04,  9.18131688e+05,\n'
 '        -7.86192688e+05, -7.34796000e+05,  5.64876125e+05,\n'
 '        -9.16021812e+05,  3.42804438e+05, -5.45864922e+04,\n'
 '         2.48495547e+05, -6.08057438e+05, -1.95191812e+05,\n'
 '        -2.11576969e+05,  3.71498844e+05, -3.07120352e+04,\n'
 '         8.57707812e+05, -8.88941438e+05,  4.25651125e+05,\n'
 '         5.20837062e+05,  6.70748875e+05,  4.51270750e+05,\n'
 '         1.00894016e+05, -1.37708031e+05, -2.30235609e+05,\n'
 '        -4.53458219e+05,  4.44832781e+05, -4.80390156e+05,\n'
 '         7.52069062e+05,  3.40018594e+04,  2.04191547e+05,\n'
 '        -3.28734469e+05,  4.08135500e+05, -9.45076484e+04,\n'
 '        -1.25995638e+06, -1.40694812e+05,  3.03598625e+05,\n'
 '        -4.58692305e+04, -3.89649375e+05, -2.74828031e+05,\n'
 '        -5.20956562e+05, -2.30690094e+05, -2.33490031e+05,\n'
 '         3.48008969e+05, -3.43293656e+05, -1.53341375e+05,\n'
 '         2.20098828e+05,  9.40602031e+04,  1.21552211e+05,\n'
 '         5.83759062e+05, -5.82558750e+05, -7.98587375e+05,\n'
 '         5.97127625e+05,  1.17199414e+05,  5.09021062e+05,\n'
 '         1.22846950e+06,  3.33937938e+05, -3.68178438e+04,\n'
 '        -2.75113875e+05, -2.32849500e+05, -1.60772516e+05,\n'
 '        -8.68084000e+05, -9.94464688e+05,  7.10564062e+04,\n'
 '         1.59963453e+05, -5.86568562e+05,  3.45071438e+05,\n'
 '        -1.39794862e+06, -4.21926367e+04,  3.00951562e+05,\n'
 '        -9.75142578e+04,  3.47172969e+04,  7.59804875e+05,\n'
 '         1.88812891e+05,  9.52806172e+04, -6.62881438e+05,\n'
 '        -1.58443062e+05, -5.43001750e+05,  1.05053400e+06,\n'
 '         3.72965594e+05, -1.69823088e+06,  1.68132703e+05,\n'
 '        -1.01131594e+05,  7.71162938e+05,  3.38425250e+05,\n'
 '        -2.40324625e+05, -8.67694219e+04,  1.26365109e+05,\n'
 '        -1.95498625e+05,  1.05943300e+06, -2.97855062e+05,\n'
 '         1.18483844e+05,  4.73486328e+04,  7.42404812e+05,\n'
 '         5.21162219e+05, -2.10404484e+05, -7.37973312e+05,\n'
 '         5.18184594e+05, -7.13099000e+05, -3.14765281e+05,\n'
 '         2.18209844e+05, -5.52622500e+05,  1.04369044e+06,\n'
 '        -1.56995781e+05,  2.00843891e+05, -2.21701641e+05,\n'
 '         6.62123875e+05, -7.56041562e+04,  6.02897000e+05,\n'
 '         3.53012312e+05, -2.02050688e+05, -1.03678381e+06,\n'
 '        -9.83006250e+04, -4.06801406e+05,  2.24129328e+05,\n'
 '        -8.59372375e+05, -2.50823453e+05,  2.49913250e+05,\n'
 '         3.85502531e+05,  5.07124250e+05,  1.68921469e+05,\n'
 '        -5.33374438e+05,  4.49881006e+03, -1.02085141e+05,\n'
 '         8.20216797e+03, -3.45014156e+05,  6.30705062e+05,\n'
 '        -2.69451953e+03,  1.15032525e+06,  7.01504531e+04,\n'
 '         6.01086938e+05,  2.90017656e+04, -8.82956406e+04,\n'
 '         6.93654938e+05, -3.75762125e+05, -1.58612750e+05,\n'
 '         2.25877156e+05, -6.92368312e+05,  1.23039375e+05,\n'
 '         4.82158812e+05, -9.88973359e+04, -2.01380406e+05,\n'
 '         4.37557422e+03, -7.18819375e+05, -5.31534500e+05,\n'
 '         5.68910188e+05,  2.31771875e+05,  1.93837906e+05,\n'
 '         9.72574219e+02, -6.21844688e+05, -4.12340656e+05,\n'
 '        -8.53432891e+04,  2.94842344e+05,  9.64304250e+05,\n'
 '         5.21323812e+05, -5.02109906e+05,  2.23603016e+05,\n'
 '         8.23321000e+05, -4.29836133e+04,  2.78101156e+05,\n'
 '         1.85119828e+05, -2.50115281e+05,  2.44833594e+05,\n'
 '         2.04850562e+05,  1.88689484e+05, -6.25993688e+05,\n'
 '        -2.93842812e+05, -4.81791812e+05, -2.90970500e+05,\n'
 '        -7.90620500e+05,  4.42309375e+05, -5.37922250e+05,\n'
 '        -1.92260234e+05,  5.56722375e+05,  8.13122375e+05,\n'
 '         6.04494062e+05, -1.23742234e+05, -2.10569438e+05,\n'
 '        -9.94826188e+05, -5.22906750e+05, -5.40808125e+05,\n'
 '        -6.57106188e+05, -8.61275000e+05, -4.84310688e+05,\n'
 '        -1.48751656e+05, -9.78218594e+04,  5.04231250e+05,\n'
 '        -6.95700812e+05, -3.00403625e+05,  4.30392461e+04,\n'
 '        -2.57524312e+05,  4.12475000e+05,  5.30201000e+05,\n'
 '        -3.71125531e+05,  6.98691438e+05, -2.26917891e+04,\n'
 '         4.34739562e+05,  3.17456375e+05, -2.29645609e+05,\n'
 '        -5.36449875e+05, -6.19545312e+04, -7.46699750e+05,\n'
 '         5.76433555e+04, -3.35301656e+05, -1.11499250e+05,\n'
 '         2.17555281e+05, -5.41818398e+04, -5.73902688e+05,\n'
 '         7.10413875e+05, -3.54730531e+05, -2.74300812e+05,\n'
 '        -1.37019550e+06, -4.97043047e+04, -9.47240000e+05,\n'
 '        -2.65794750e+05, -1.15934075e+06,  5.91111094e+04,\n'
 '        -4.38771219e+05, -2.13225750e+05,  2.96281625e+05,\n'
 '        -2.35320875e+05, -5.24478438e+05,  4.47449562e+05,\n'
 '        -4.86896094e+05, -5.90940938e+05,  1.99482656e+05,\n'
 '         5.84211562e+05,  4.21180438e+05,  6.40595375e+05,\n'
 '         2.99545508e+04,  1.08374750e+06,  9.28794188e+05,\n'
 '        -1.04541244e+06,  1.89320656e+05, -1.14448188e+06,\n'
 '        -6.91512812e+04, -7.28237562e+05,  4.87123594e+04,\n'
 '         1.97531641e+05,  7.75001750e+05,  5.78185812e+05,\n'
 '        -1.89690734e+05, -1.06546992e+05, -3.64238938e+05,\n'
 '        -1.02242988e+06,  6.35242312e+05, -1.12346200e+06,\n'
 '        -8.38534812e+05,  2.49239844e+05, -5.21417219e+05,\n'
 '         8.34637125e+05, -7.43890781e+04,  2.66023188e+05,\n'
 '        -1.08226586e+05, -3.37987688e+05,  4.54672852e+04,\n'
 '        -4.95931500e+05,  2.21147031e+05, -2.43352016e+05,\n'
 '         8.27466062e+05, -5.44915500e+05,  1.10834641e+05,\n'
 '        -7.38681438e+05, -1.06031906e+05, -3.56344531e+05,\n'
 '         1.22178172e+05,  6.32652148e+03,  5.38634531e+04,\n'
 '        -3.17860250e+05,  7.45193938e+05,  2.82403094e+05,\n'
 '         7.41864438e+05,  5.24172875e+05, -4.70294062e+05,\n'
 '        -2.40007047e+05,  8.53478125e+05, -2.62313219e+05,\n'
 '         2.89383312e+05, -4.01653281e+05, -9.20296875e+05,\n'
 '         2.70862031e+05,  1.23811289e+04,  9.29455812e+05,\n'
 '        -1.03588294e+06,  8.44195625e+05, -4.71762750e+05,\n'
 '         2.93904922e+04, -3.94483750e+05,  7.90352656e+04,\n'
 '         8.74853125e+05, -4.18320906e+05, -1.57534188e+05,\n'
 '         9.97377812e+04, -9.37289062e+05,  1.10077797e+05,\n'
 '        -6.03984875e+05,  5.71196000e+05, -3.69249938e+05,\n'
 '        -1.06088912e+06, -1.36394203e+05, -1.02795328e+05,\n'
 '         4.79820844e+05,  1.21447638e+06,  4.48208531e+05,\n'
 '        -2.16576125e+05, -3.84468438e+05, -3.63114312e+05,\n'
 '         1.34316703e+05, -1.10994234e+05, -2.44271680e+04,\n'
 '         3.80716094e+05, -1.31635156e+05,  2.70792594e+05,\n'
 '         1.50904825e+06,  5.03043594e+05,  1.14779562e+05,\n'
 '        -9.38814531e+04,  1.42255859e+05,  3.51750469e+05,\n'
 '        -8.05768125e+05,  1.50042781e+05, -4.40600938e+04,\n'
 '        -2.31755906e+05,  5.73074062e+05, -5.39612500e+05,\n'
 '         2.12704703e+05,  2.61023719e+05,  3.37324250e+05,\n'
 '        -8.11614188e+05, -3.22582844e+05,  7.75013250e+05,\n'
 '         1.03304328e+05,  6.56661062e+05, -1.88213141e+05,\n'
 '        -6.41952812e+04,  1.24717266e+05,  3.39883438e+05,\n'
 '        -1.86057266e+05,  1.48903344e+05, -2.73091031e+05,\n'
 '        -1.03969069e+06,  1.14838852e+05,  1.81112531e+05,\n'
 '        -3.29092781e+05, -5.60990000e+05, -1.00106412e+06,\n'
 '        -8.04383812e+05, -1.50988844e+05,  4.02418875e+05,\n'
 '         1.45255675e+06, -3.10759625e+05,  1.82996656e+05,\n'
 '         6.00086312e+05, -5.60948438e+05,  6.75029000e+05,\n'
 '         2.69125844e+05, -3.37730938e+05,  3.23826656e+05,\n'
 '        -9.37511875e+05, -7.44980125e+05, -4.14031094e+05,\n'
 '        -9.18352875e+05,  2.62174453e+04,  2.76798688e+05,\n'
 '         7.11208625e+05,  1.61694719e+05, -7.35029312e+05,\n'
 '        -6.01954312e+05,  8.59939438e+05, -8.60910562e+05,\n'
 '        -2.33209766e+03, -2.26537250e+05,  4.37074125e+05,\n'
 '        -1.96914219e+05, -2.83154781e+05,  7.44007625e+05,\n'
 '        -1.00896508e+05,  2.86940125e+05, -5.57818188e+05,\n'
 '         3.45667281e+05, -4.03224812e+05, -2.85190840e+04,\n'
 '         3.93879844e+05,  3.04787422e+04,  8.38753750e+05,\n'
 '         3.33174875e+05, -3.00256719e+05, -5.02534531e+05,\n'
 '         1.71170250e+05, -4.91632062e+05, -4.67077812e+05,\n'
 '        -2.85208781e+05, -2.81230195e+04,  2.37593418e+04,\n'
 '         5.06021625e+05, -5.88670156e+04,  5.35308125e+05,\n'
 '         2.31071484e+03,  6.24531062e+05, -8.60673938e+05,\n'
 '         3.93881719e+05, -2.90035469e+04,  4.67486562e+04,\n'
 '        -7.59925750e+05,  8.55034125e+05,  2.28547297e+05,\n'
 '         5.93495188e+05,  6.48049375e+04, -2.95883250e+05,\n'
 '         6.75783250e+05,  2.86909625e+05, -1.49120531e+05,\n'
 '        -3.12696875e+05, -1.15289961e+05, -2.13352719e+05,\n'
 '        -4.98436688e+05,  1.26196438e+06,  1.78381766e+05,\n'
 '        -8.84715078e+04, -5.21021953e+04, -6.23888000e+05,\n'
 '         9.72035000e+05, -2.97753844e+05, -4.97592578e+03,\n'
 '         3.29506625e+05, -1.76968945e+04,  4.40876953e+02,\n'
 '         5.95959875e+05,  9.70136562e+05, -6.14040312e+05,\n'
 '         3.85495273e+04,  3.82950281e+05, -2.45955312e+05,\n'
 '        -1.68668406e+05,  9.08011375e+05,  5.13083406e+05,\n'
 '         6.92854297e+04,  2.52047219e+05,  1.02143744e+06,\n'
 '         1.55860906e+05,  6.89267188e+05, -4.37998688e+05,\n'
 '        -6.06290250e+05, -5.75116688e+05, -2.24124875e+05,\n'
 '        -8.29344938e+05]])')
'test_inceptionnet | batch_shape is: [1]'
'test_inceptionnet | logits.shape is: ivy.Shape(1, 1000)'
'||'
'test_inceptionnet | device is: cpu'
'test_inceptionnet | fw is: tensorflow'
'test_inceptionnet | load_weights is: True'
'InceptionV3 | build | layer 1/22 built'
'InceptionV3 | build | layer 2/22 built'
'layer 3/22 built'
'InceptionV3 | build | layer 4/22 built'
'InceptionV3 | build | layer 5/22 built'
'InceptionV3 | build | layer 6/22 built'
'InceptionV3 | build | layer 7/22 built'
'InceptionV3 | build | layer 8/22 built'
'InceptionV3 | build | layer 9/22 built'
'InceptionV3 | build | layer 10/22 built'
'InceptionV3 | build | layer 11/22 built'
'InceptionV3 | build | layer 12/22 built'
'InceptionV3 | build | layer 13/22 built'
'InceptionV3 | build | layer 14/22 built'
'InceptionV3 | build | layer 15/22 built'
'InceptionV3 | build | layer 17/22 built'
'InceptionV3 | build | layer 18/22 built'
'InceptionV3 | build | layer 19/22 built'
'InceptionV3 | build | layer 20/22 built'
'InceptionV3 | build | layer 21/22 built'
'InceptionV3 | build | layer 22/22 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/4 built'
'layer 2/4 built'
'layer 3/4 built'
'layer 4/4 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/6 built'
'layer 2/6 built'
'layer 3/6 built'
'layer 4/6 built'
'layer 5/6 built'
'layer 6/6 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'inceptionNet_v3 | building InceptionV3 model | done 1/3'
'inceptionNet_v3 | clearning pretrained weights | done 2/3'
'inceptionNet_v3 | loading pretrained weights | done 3/3'
'InceptionV3 | forward | input data_format is:NHWC | done 1/27'
'InceptionV3 | forward | data_format is going to be used is:NHWC | done 1/27'
'InceptionV3 | forward | input shape is:ivy.Shape(1, 224, 224, 3) | done 1/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 224, 224, 3) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 111, 111, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 111, 111, 32) | done 2/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 111, 111, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 32) | done 3/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 109, 109, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 64) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 64) | done 4/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 54, 54, 64) | done 5/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 54, 54, 80) | done 3/3'
'InceptionV3 | forward | is:ivy.Shape(1, 54, 54, 80) | done 6/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 80) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 52, 52, 192) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 52, 52, 192) | done 7/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 192) | done 8/27'
'input shape is:ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 32) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 32)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 25, 25, 256) | done 9/27'
'input shape is:ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 10/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 11/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 384) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 96) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 96)'
'one 20/20, output shape is:ivy.Shape(1, 12, 12, 288)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 12/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 12, 12, 768) | done 13/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 14/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 15/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 16/27'
'v3 16/27, output shape is:ivy.Shape(1, 12, 12, 768)'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 5, 5, 192)'
'one 7/20, output shape is:ivy.Shape(1, 5, 5, 768)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 1280) | done 17/27'
'input shape is:ivy.Shape(1, 5, 5, 1280)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 18/27'
'input shape is:ivy.Shape(1, 5, 5, 2048)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 19/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 20/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 5, 5) | done 21/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 1, 1) | done 22/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 27/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 24/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 25/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048) | done 26/27'
'InceptionV3 | forward | fc | done 27/27'
('test_inceptionnet | logits is: ivy.array([[-4.77875769e-03, -3.61040413e-01, '
 '-1.57675242e+00,\n'
 '         2.31027985e+00,  6.44569218e-01,  1.22460015e-01,\n'
 '         2.95743513e+00, -7.18561113e-01,  9.47545886e-01,\n'
 '        -1.29063451e+00,  4.44473386e-01,  4.71810937e-01,\n'
 '         3.66034865e-01,  1.28494692e+00,  1.43590486e+00,\n'
 '         9.10717189e-01, -3.36059481e-01, -3.15413177e-02,\n'
 '        -7.27286935e-01,  4.49517965e-01,  1.93046391e+00,\n'
 '        -2.64231515e+00,  1.28766465e+00, -1.52560961e+00,\n'
 '        -7.60001540e-02, -6.05696678e-01, -2.44050711e-01,\n'
 '        -7.57097304e-02, -8.16086829e-01,  3.99832070e-01,\n'
 '         1.42044890e+00,  1.79523623e+00,  3.30330461e-01,\n'
 '        -1.30920732e+00,  9.74867582e-01, -3.25932908e+00,\n'
 '         1.18602920e+00, -1.83020735e+00, -2.32950375e-01,\n'
 '        -2.74326503e-02,  3.34948599e-01,  2.54398680e+00,\n'
 '        -9.88490879e-02, -5.58717847e-01,  6.98424876e-02,\n'
 '         1.14427507e-03, -5.75818300e-01,  9.58108127e-01,\n'
 '        -7.10583091e-01,  1.62167132e-01, -1.71670342e+00,\n'
 '         6.38293624e-01,  1.07731140e+00, -9.28286314e-01,\n'
 '        -9.09276009e-02,  2.07884002e+00, -1.75742578e+00,\n'
 '        -3.39450926e-01,  1.34548497e+00,  2.71176547e-01,\n'
 '        -8.90665531e-01,  1.30305409e+00, -9.39710081e-01,\n'
 '         2.61528313e-01, -3.06964755e-01, -1.76441938e-01,\n'
 '         7.45442152e-01,  1.64439213e+00,  8.33401918e-01,\n'
 '        -4.17158186e-01, -8.66448820e-01,  7.12987304e-01,\n'
 '        -2.01073289e+00, -2.09057188e+00, -1.70213759e+00,\n'
 '        -3.20028216e-01, -7.14226842e-01, -1.64613306e+00,\n'
 '         1.23476851e+00,  3.15040922e+00, -2.58825374e+00,\n'
 '         1.00169337e+00,  8.50197792e-01, -2.41273999e-01,\n'
 '         1.24502110e+00, -1.59259057e+00, -1.08032429e+00,\n'
 '        -2.15093923e+00,  1.66869581e-01, -1.14518392e+00,\n'
 '        -4.35930252e-01,  1.07876873e+00, -8.81290078e-01,\n'
 '         7.54049778e-01, -1.24749446e+00, -5.48724711e-01,\n'
 '         1.67147172e+00, -1.30674005e+00, -1.35034823e+00,\n'
 '        -4.65489149e-01,  5.76427221e-01,  1.53306413e+00,\n'
 '        -6.91253603e-01, -6.49316371e-01,  1.98263979e+00,\n'
 '        -3.00972032e+00, -6.55477047e-01,  1.34664261e+00,\n'
 '         3.89729261e-01, -3.32605749e-01,  1.26761854e-01,\n'
 '        -8.06102514e-01,  9.98802304e-01,  4.01495886e+00,\n'
 '         1.16799068e+00, -8.86571646e-01, -2.42897630e+00,\n'
 '         4.29653525e-01, -2.93352270e+00, -1.10479271e+00,\n'
 '        -7.33173132e-01, -2.15044260e+00, -2.11765289e+00,\n'
 '        -1.04627609e-02, -2.57150340e+00, -1.11536694e+00,\n'
 '        -1.18759644e+00,  8.79049659e-01,  7.95654774e-01,\n'
 '         3.43492985e-01,  2.37494969e+00, -3.36548835e-01,\n'
 '         1.12028527e+00, -8.21135640e-01, -1.70320475e+00,\n'
 '         9.33188319e-01,  1.05073857e+00, -1.14555633e+00,\n'
 '        -6.28450632e-01, -2.00510716e+00, -1.61566496e+00,\n'
 '         5.24295330e-01, -2.47617531e+00,  4.62114215e-01,\n'
 '         2.29786348e+00,  7.36418486e-01,  1.81450057e+00,\n'
 '        -1.39399123e+00,  6.53214037e-01,  1.10272384e+00,\n'
 '        -1.18237352e+00,  2.27645069e-01,  3.82572699e+00,\n'
 '        -1.11109376e-01,  1.57799458e+00, -2.68517661e+00,\n'
 '        -7.64049143e-02,  5.15065527e+00, -1.48390913e+00,\n'
 '         1.00750768e+00,  8.59613717e-01, -3.11214137e+00,\n'
 '        -2.37572360e+00,  1.47444773e+00, -2.36923248e-01,\n'
 '        -1.08170021e+00, -1.25194859e+00,  4.11125809e-01,\n'
 '         1.07732391e+00,  1.57296562e+00,  1.86270809e+00,\n'
 '        -5.41606724e-01,  1.00028467e+00,  4.71888244e-01,\n'
 '         4.72050726e-01, -6.72242641e-01, -2.10564828e+00,\n'
 '        -9.33978379e-01,  1.00549078e+00,  1.62066311e-01,\n'
 '        -1.79823816e-01,  1.03335321e+00,  5.71364462e-02,\n'
 '        -4.70227361e-01,  7.08900988e-01,  1.97939110e+00,\n'
 '         4.47078896e+00, -1.68162787e+00, -6.68315709e-01,\n'
 '        -2.76193666e+00, -1.39479190e-01, -3.32012415e-01,\n'
 '        -1.83800638e-01, -2.57556129e+00, -1.22025597e+00,\n'
 '        -2.19566464e-01, -2.20662355e+00,  2.47367650e-01,\n'
 '        -1.21360278e+00,  1.32340479e+00, -8.93273652e-01,\n'
 '        -2.78495836e+00, -9.83043492e-01,  4.85264683e+00,\n'
 '        -2.40223098e+00, -2.70577860e+00, -8.77966404e-01,\n'
 '         8.96398246e-01, -1.60479283e+00, -1.19596040e+00,\n'
 '        -9.74473596e-01, -2.95597374e-01, -1.32500482e+00,\n'
 '         1.96898603e+00,  2.46889782e+00,  6.34541571e-01,\n'
 '         1.08459818e+00, -1.16150892e+00,  5.57989359e-01,\n'
 '        -3.18876433e+00,  5.58735848e-01, -3.59818876e-01,\n'
 '         3.64028812e+00,  1.74647677e+00,  5.16075230e+00,\n'
 '        -1.43917060e+00,  3.05611682e+00, -1.40982425e+00,\n'
 '         2.04654384e+00,  1.73554182e+00,  7.89670706e-01,\n'
 '         1.95344555e+00,  3.62656188e+00,  1.29924762e+00,\n'
 '        -7.18807221e-01,  1.11164606e+00, -8.73572171e-01,\n'
 '        -2.77119458e-01, -1.70885730e+00, -1.14086902e+00,\n'
 '        -7.15357214e-02,  1.56262314e+00,  2.01996660e+00,\n'
 '         3.55933905e-01, -9.99337912e-01, -4.27742988e-01,\n'
 '         1.40757596e+00,  2.74186230e+00,  7.95777130e+00,\n'
 '         5.68037224e+00,  4.41226721e+00,  2.48302698e-01,\n'
 '        -9.99239445e-01,  4.20305908e-01,  1.86331615e-01,\n'
 '         9.61256623e-02,  2.83186865e+00,  7.40642643e+00,\n'
 '         1.92795601e+01,  7.42004871e+00,  5.41485548e+00,\n'
 '         7.82128143e+00,  3.35383743e-01,  6.97597384e-01,\n'
 '         9.58817601e-01,  8.37570429e-01, -1.47254515e+00,\n'
 '         4.07634211e+00,  2.88762569e-01,  1.50898230e+00,\n'
 '         1.22345810e+01, -1.35868740e+00,  8.10471624e-02,\n'
 '         2.65960765e+00,  1.12515545e+00, -2.58473420e+00,\n'
 '        -5.32657623e-01,  3.07264376e+00, -1.49498534e+00,\n'
 '         1.35477028e+01,  2.52978969e+00,  4.46298867e-01,\n'
 '         1.24429226e-01,  4.20143509e+00, -5.17441213e-01,\n'
 '         2.41426796e-01, -1.30025744e-02,  1.95045900e+00,\n'
 '        -5.33481181e-01,  1.33567870e+00, -2.19047737e+00,\n'
 '         9.33128476e-01,  7.46213674e-01, -9.97433066e-01,\n'
 '        -1.67299807e+00, -1.84269214e+00,  4.03637314e+00,\n'
 '         1.71736732e-01, -2.28667760e+00, -9.13678646e-01,\n'
 '        -3.22047919e-01,  2.23156944e-01,  1.56965888e+00,\n'
 '         8.94255161e-01,  1.04897237e+00, -9.71289396e-01,\n'
 '        -5.97352207e-01,  1.42499018e+00,  5.59977293e-01,\n'
 '         4.16436851e-01, -6.09414280e-01, -3.09139281e-01,\n'
 '         7.76943922e-01,  5.48443019e-01,  1.11646541e-01,\n'
 '         2.26976895e+00, -8.52625191e-01,  4.74469960e-01,\n'
 '         4.87466842e-01, -6.12565041e-01,  1.86358798e+00,\n'
 '        -2.21298426e-01,  3.03887546e-01,  1.76397908e+00,\n'
 '        -2.17301345e+00,  4.26748902e-01,  2.29654717e+00,\n'
 '         1.10087705e+00,  1.46955579e-01, -1.41568971e+00,\n'
 '        -8.20574462e-02,  2.17937732e+00,  3.87433291e+00,\n'
 '         2.74577647e-01, -9.93464410e-01, -1.00741780e+00,\n'
 '        -1.75038278e+00, -1.04842377e+00,  2.27182055e+00,\n'
 '         3.65597129e-01,  4.13101137e-01,  9.97976184e-01,\n'
 '        -3.43525708e-01,  1.45058662e-01, -1.57997215e+00,\n'
 '        -1.52239204e-03, -3.88298333e-02, -2.12240130e-01,\n'
 '         8.75674546e-01,  1.72473073e-01, -6.40818179e-01,\n'
 '        -3.92334998e-01, -8.19239914e-02,  1.70197868e+00,\n'
 '        -4.86755192e-01,  2.82954955e+00,  2.23133397e+00,\n'
 '        -9.12295356e-02,  1.70606327e+00, -6.63554430e-01,\n'
 '        -3.13231254e+00, -1.09108813e-01, -2.39713049e+00,\n'
 '         4.36235100e-01, -1.87627685e+00, -4.42624867e-01,\n'
 '        -1.15448916e+00, -1.73655713e+00,  1.23116124e+00,\n'
 '        -1.76074016e+00,  6.84645027e-02, -1.50360215e+00,\n'
 '        -1.90297162e+00, -5.56599617e-01,  8.90973955e-02,\n'
 '        -3.15944624e+00, -4.91478980e-01, -9.00455833e-01,\n'
 '        -1.66065180e+00, -2.44092560e+00, -1.50912702e-01,\n'
 '        -3.34884810e+00, -1.50323927e+00, -1.33852065e+00,\n'
 '         1.11424565e-01, -3.97071809e-01, -1.72468543e+00,\n'
 '        -1.32977188e-01, -1.56854641e+00,  3.21812749e-01,\n'
 '        -5.33236265e-01, -2.02447653e-01, -7.04540074e-01,\n'
 '         1.39961481e+00,  6.89939558e-02, -3.84557813e-01,\n'
 '         1.18604040e+00, -7.13135541e-01,  5.59670448e-01,\n'
 '         2.31947756e+00, -1.02233231e+00, -3.29152465e-01,\n'
 '         2.46147418e+00,  1.38538346e-01,  1.54094744e+00,\n'
 '         6.64896131e-01, -3.81998032e-01, -1.84977817e+00,\n'
 '        -1.12492990e+00, -3.53954583e-01, -8.16974402e-01,\n'
 '        -2.43222880e+00, -3.77971292e+00, -5.59101164e-01,\n'
 '        -7.27606296e-01,  3.83078158e-02, -2.03485727e-01,\n'
 '         1.18791699e+00, -9.86833394e-01, -8.96978974e-01,\n'
 '         4.02797163e-01, -1.08990252e+00, -3.67660135e-01,\n'
 '        -7.73042381e-01,  1.91791022e+00,  2.00998259e+00,\n'
 '        -6.86940998e-02,  3.29738468e-01, -2.82827807e+00,\n'
 '         8.66872847e-01, -1.16571593e+00, -7.08032489e-01,\n'
 '        -5.26497066e-02,  5.62493443e-01, -1.74844468e+00,\n'
 '         9.29259136e-02, -1.20304179e+00, -2.85111487e-01,\n'
 '        -2.48425588e-01, -5.02660215e-01,  1.34172285e+00,\n'
 '        -7.32369125e-01,  7.49156356e-01, -1.75812411e+00,\n'
 '        -5.96996307e-01,  1.89116383e+00, -2.58406496e+00,\n'
 '        -1.75887609e+00,  7.66065300e-01, -3.28250945e-01,\n'
 '         5.80853820e-01, -7.51397237e-02, -1.32512665e+00,\n'
 '         2.51452357e-01,  8.30277801e-01, -5.45125902e-02,\n'
 '        -5.64171255e-01, -5.95079184e-01, -9.86792326e-01,\n'
 '         7.97636658e-02, -1.53716326e-01, -2.11503077e+00,\n'
 '         1.10433459e+00, -9.64670777e-01, -4.33056533e-01,\n'
 '        -2.72456765e+00, -6.48026347e-01, -3.83464813e-01,\n'
 '         6.63494885e-01,  4.14003819e-01,  2.07435203e+00,\n'
 '        -9.45529640e-01, -1.89614189e+00,  6.42394304e-01,\n'
 '        -8.72786701e-01, -1.75985837e+00,  3.29117584e+00,\n'
 '        -1.80641484e+00,  5.44742167e-01, -4.19087529e-01,\n'
 '        -1.10286486e+00,  1.18734288e+00, -2.63612747e+00,\n'
 '        -7.07907021e-01,  6.59049153e-01, -2.37163114e+00,\n'
 '         6.80819035e-01, -9.08632040e-01,  1.58588660e+00,\n'
 '         8.63553509e-02,  4.34499681e-01,  1.50397778e+00,\n'
 '        -2.01865006e+00, -5.21311164e-01, -2.77661324e-01,\n'
 '         1.84362698e+00, -1.23275518e+00, -1.21788979e+00,\n'
 '         4.00056958e-01, -6.77472413e-01, -2.56446934e+00,\n'
 '        -1.05616450e+00,  4.55239773e-01, -2.11536333e-01,\n'
 '        -1.54122806e+00, -3.74272406e-01,  4.53061163e-02,\n'
 '         1.23900724e+00,  1.03263521e+00,  1.83691549e+00,\n'
 '         9.16119754e-01,  3.68540883e-01, -2.87932903e-01,\n'
 '        -1.15287042e+00,  4.88336086e-02, -6.18843198e-01,\n'
 '        -2.17328405e+00, -7.66448200e-01, -2.69584608e+00,\n'
 '        -2.25287914e+00, -4.98775184e-01, -2.85552561e-01,\n'
 '        -6.20694935e-01, -2.65948081e+00, -1.29830587e+00,\n'
 '        -2.09016657e+00, -9.25972700e-01, -3.98450971e+00,\n'
 '         1.49848610e-02, -1.45308495e+00,  8.32918763e-01,\n'
 '         1.02481902e+00,  9.53099668e-01, -1.47211456e+00,\n'
 '        -9.66015398e-01, -6.94264054e-01, -2.12151003e+00,\n'
 '         1.56537676e+00,  1.34413981e+00,  4.51459765e-01,\n'
 '         5.20628631e-01, -8.51758599e-01, -8.55568349e-02,\n'
 '         9.03242528e-01, -5.04641831e-01, -9.98433471e-01,\n'
 '         2.27876759e+00,  5.50373614e-01, -9.31282997e-01,\n'
 '        -1.46622091e-01,  3.44715059e-01, -2.59858608e+00,\n'
 '        -1.33591831e+00, -3.58394575e+00, -2.41875053e+00,\n'
 '        -2.07767296e+00, -8.30898046e-01,  4.42045987e-01,\n'
 '        -6.21666074e-01,  3.45641345e-01, -1.33825934e+00,\n'
 '         1.14765322e+00,  2.23222208e+00,  1.15127695e+00,\n'
 '         1.33415055e+00, -3.04905206e-01, -1.04310706e-01,\n'
 '        -2.53615141e+00,  1.30901921e+00, -9.50723410e-01,\n'
 '         4.04023111e-01, -1.25689423e+00,  9.10558581e-01,\n'
 '         1.03628469e+00,  1.46852478e-01, -2.07238603e+00,\n'
 '         2.20359534e-01,  5.08446693e-02,  3.28485727e-01,\n'
 '        -1.94265032e+00,  1.88780343e+00,  9.26784575e-02,\n'
 '         2.00572777e+00,  2.11770511e+00,  3.79618883e-01,\n'
 '         1.16175842e+00, -3.38779712e+00, -1.28451657e+00,\n'
 '         2.93552816e-01,  6.86744213e-01, -3.58296096e-01,\n'
 '        -2.39742827e+00,  2.08472419e+00,  6.11550957e-02,\n'
 '         6.47549450e-01, -2.12504077e+00,  5.67840934e-01,\n'
 '         8.33665729e-02, -1.91111708e+00, -9.03942645e-01,\n'
 '        -1.30832803e+00, -1.83565617e+00, -5.57213306e-01,\n'
 '        -8.08022261e-01,  3.12096119e+00, -1.36036706e+00,\n'
 '         3.57258320e+00,  1.42987371e+00,  1.91209883e-01,\n'
 '        -1.00076020e+00, -1.29615843e+00,  7.97973096e-01,\n'
 '        -9.06742692e-01,  4.23260212e-01, -2.03785688e-01,\n'
 '        -2.66724253e+00, -8.32254171e-01, -8.08171868e-01,\n'
 '        -1.51002979e+00, -1.53815746e+00, -3.37373805e+00,\n'
 '        -6.01808548e-01,  1.41358519e+00, -8.48818302e-01,\n'
 '         1.29264748e+00,  1.40032756e+00, -1.42904365e+00,\n'
 '        -2.04546905e+00,  7.90344596e-01,  8.97318542e-01,\n'
 '        -1.13611174e+00,  4.73869056e-01, -5.30939102e-01,\n'
 '         2.09775186e+00, -4.52386588e-01, -6.83144629e-01,\n'
 '        -1.89322785e-01, -7.45265186e-01,  9.65887368e-01,\n'
 '         8.53746593e-01, -7.47552276e-01, -8.75944436e-01,\n'
 '        -9.89014566e-01,  4.39523310e-01, -1.91547513e+00,\n'
 '         7.05690682e-01,  7.90034532e-01, -5.15195549e-01,\n'
 '        -1.34029031e-01,  3.00804615e-01, -8.90130281e-01,\n'
 '        -7.29684711e-01,  8.48403349e-02, -1.75822640e+00,\n'
 '        -1.69883907e+00, -2.46936202e+00, -9.35177863e-01,\n'
 '        -1.98431194e+00, -8.48022640e-01,  2.17264041e-01,\n'
 '        -1.59971797e+00,  3.68914604e-02,  1.48819518e+00,\n'
 '        -3.42026854e+00, -1.59180283e+00, -2.28326172e-01,\n'
 '         1.15145242e+00, -1.97390997e+00, -2.03146839e+00,\n'
 '         2.97147798e+00, -8.15609157e-01,  4.66803551e-01,\n'
 '         1.84596717e+00,  1.44566596e-01, -1.61492431e+00,\n'
 '        -4.71699268e-01,  2.09989214e+00, -1.46239615e+00,\n'
 '        -7.60324657e-01,  1.31900608e-01,  3.72786939e-01,\n'
 '        -2.04870033e+00,  1.60583806e+00, -2.11845040e+00,\n'
 '         1.11241436e+00, -3.90854657e-01, -4.42715794e-01,\n'
 '         1.42380726e+00, -2.51974464e-01, -3.34748238e-01,\n'
 '        -6.19186342e-01,  2.86463439e-01, -2.48281539e-01,\n'
 '        -3.37811255e+00, -2.58411574e+00,  1.86810505e+00,\n'
 '        -1.27046740e+00, -6.76123500e-01,  1.32131827e+00,\n'
 '         1.08856535e+00, -3.71090841e+00,  1.89473346e-01,\n'
 '        -3.57230902e+00, -6.22438729e-01, -2.96694994e+00,\n'
 '        -2.73503971e+00,  7.02621788e-02,  8.88913095e-01,\n'
 '        -2.76738405e-03, -3.66496515e+00, -3.37503016e-01,\n'
 '         1.58672464e+00,  6.11098647e-01, -3.76023865e+00,\n'
 '         1.34542513e+00, -3.96243721e-01, -1.25417978e-01,\n'
 '        -1.97745573e+00,  1.39965487e+00,  1.64428151e+00,\n'
 '         2.31934404e+00, -1.27933180e+00,  1.32674110e+00,\n'
 '        -1.79195869e+00,  1.56116390e+00,  1.91101205e+00,\n'
 '         3.49244922e-01, -1.40624857e+00,  3.45646054e-01,\n'
 '         2.11601704e-01, -2.54288888e+00,  1.79655075e+00,\n'
 '         1.26102459e+00,  9.04224515e-01, -6.23360336e-01,\n'
 '         9.35517549e-01,  6.75193071e-02, -5.53456545e-01,\n'
 '         8.68774295e-01, -8.06789994e-02,  4.15338755e-01,\n'
 '         2.25953722e+00, -9.87846792e-01,  6.35322273e-01,\n'
 '        -4.66094494e-01, -1.67249894e+00,  2.81361771e+00,\n'
 '        -1.70140648e+00, -1.99625289e+00, -6.47558093e-01,\n'
 '        -1.48071468e+00, -9.11002636e-01,  1.53164053e+00,\n'
 '        -1.08195031e+00, -1.09999204e+00,  2.09944084e-01,\n'
 '        -2.04174829e+00,  1.19624269e+00, -3.93392026e-01,\n'
 '         1.04354429e+00, -2.10319066e+00, -1.07709098e+00,\n'
 '        -1.17550695e+00,  4.36632693e-01, -7.91221142e-01,\n'
 '        -6.71162128e-01, -1.50943983e+00,  1.46814764e+00,\n'
 '        -6.79079354e-01,  8.94458175e-01, -1.10019112e+00,\n'
 '        -1.01395637e-01, -2.11655593e+00,  1.94179267e-01,\n'
 '        -3.04916412e-01,  1.11674190e+00,  5.21352887e-01,\n'
 '        -5.42721927e-01,  7.75441408e-01, -6.69901371e-01,\n'
 '         2.48353124e+00, -5.10111451e-04, -1.26737744e-01,\n'
 '        -1.46717012e+00, -6.50561213e-01, -1.20457435e+00,\n'
 '        -2.11336112e+00, -1.06344962e+00,  7.29107261e-01,\n'
 '        -2.54014373e-01,  2.23735499e+00, -1.10272694e+00,\n'
 '         1.10914111e+00,  4.66119915e-01,  4.54790056e-01,\n'
 '         1.29342035e-01,  1.04597080e+00, -1.16495812e+00,\n'
 '         1.01127937e-01,  1.54129469e+00,  1.89674640e+00,\n'
 '         6.07697368e-01,  1.53783143e+00, -3.24961156e-01,\n'
 '        -1.19966388e+00, -2.22386026e+00, -2.47506285e+00,\n'
 '        -6.03605092e-01,  3.18176985e-01, -3.03982317e-01,\n'
 '         1.31424999e+00,  1.35084057e+00, -5.00966370e-01,\n'
 '        -8.02936196e-01, -1.28764772e+00, -8.39806974e-01,\n'
 '         1.26991212e+00, -5.40517688e-01, -2.24504888e-01,\n'
 '         1.65296412e+00,  1.32051635e+00, -1.57485652e+00,\n'
 '         4.94525135e-01,  3.60088527e-01, -9.70277250e-01,\n'
 '        -4.80807841e-01, -3.51677209e-01, -2.21497357e-01,\n'
 '         3.05177760e+00, -9.58765268e-01, -2.55781203e-01,\n'
 '         1.03279209e+00,  1.76985991e+00,  3.12926471e-01,\n'
 '        -2.08953619e+00, -1.53977609e+00,  1.13782608e+00,\n'
 '        -2.06184648e-02, -1.95260036e+00, -6.34209693e-01,\n'
 '         5.49972892e-01,  1.35333908e+00,  2.59232092e+00,\n'
 '         1.99535692e+00,  2.61192489e+00, -1.45239496e+00,\n'
 '         5.38804233e-01, -2.62984276e+00,  2.26293278e+00,\n'
 '        -1.30856848e+00,  1.93355572e+00, -2.50578833e+00,\n'
 '         2.34270740e+00,  8.72212887e-01,  5.40971458e-01,\n'
 '        -7.54833102e-01, -3.21833706e+00,  3.25640845e+00,\n'
 '         3.64412963e-01, -3.13063323e-01,  2.48303962e+00,\n'
 '         1.53175283e+00, -9.51075614e-01,  1.27850819e+00,\n'
 '        -2.29316282e+00, -1.94996321e+00, -1.37142932e+00,\n'
 '         1.44537807e+00, -3.17605567e+00, -4.51167285e-01,\n'
 '        -1.43545759e+00, -1.33248341e+00,  2.64201236e+00,\n'
 '         2.07188666e-01, -1.49287534e+00, -2.04968309e+00,\n'
 '         5.70897937e-01, -1.81578958e+00,  1.99996984e+00,\n'
 '        -1.57257080e+00, -1.85529649e+00, -1.38087988e+00,\n'
 '         1.08109450e+00, -7.03683138e-01,  9.32317913e-01,\n'
 '        -1.15043902e+00,  2.18133998e+00,  1.01274157e+00,\n'
 '        -4.83398110e-01,  1.41899395e+00, -4.71216828e-01,\n'
 '         5.64125478e-01, -1.98102224e+00,  2.48366928e+00,\n'
 '        -4.27516848e-01, -1.60958767e+00,  2.68502378e+00,\n'
 '        -1.90189135e+00,  1.30366611e+00, -1.93241119e+00,\n'
 '        -7.98696756e-01, -1.49801910e-01, -1.45714790e-01,\n'
 '        -2.47582483e+00,  3.51128757e-01, -2.77011323e+00,\n'
 '        -9.68010902e-01,  2.97134471e+00, -4.03789401e-01,\n'
 '         4.29036230e-01,  1.59095871e+00,  7.75579095e-01,\n'
 '         5.65760791e-01,  4.89378572e-01, -6.47140622e-01,\n'
 '         1.38112545e+00, -8.06610882e-02, -1.33213115e+00,\n'
 '         1.15210879e+00, -2.13272882e+00,  1.13635302e-01,\n'
 '         2.88210654e+00, -2.09326073e-01, -7.01870978e-01,\n'
 '        -1.05034220e+00, -6.73275173e-01, -7.64482260e-01,\n'
 '        -1.44712389e+00, -1.53197718e+00, -2.60252142e+00,\n'
 '         1.70079279e+00, -6.22397184e-01,  7.90515304e-01,\n'
 '        -2.37631106e+00, -2.55221891e+00, -6.61411226e-01,\n'
 '         5.09320617e-01, -7.90227115e-01, -2.13564658e+00,\n'
 '         4.70715076e-01,  1.17762744e+00,  2.08630514e+00,\n'
 '         3.04306674e+00,  1.53734493e+00,  1.41844666e+00,\n'
 '         1.33878422e+00, -1.77900577e+00,  2.29185581e-01,\n'
 '        -3.30222279e-01, -2.10073382e-01,  2.94253993e+00,\n'
 '         2.35971141e+00,  6.07913137e-01, -2.54043162e-01,\n'
 '         6.96414113e-01,  2.24465162e-01,  1.33449709e+00,\n'
 '         1.90440583e+00, -2.30071330e+00,  8.61407876e-01,\n'
 '         1.63083553e-01,  9.39732909e-01,  1.46493912e-02,\n'
 '        -8.67089212e-01, -4.63020802e-01, -5.67274094e-01,\n'
 '         1.80877066e+00,  2.26724148e-01, -1.95909345e+00,\n'
 '        -1.00024259e+00, -1.34920597e+00,  6.05523706e-01,\n'
 '         1.11629218e-01, -3.49993777e+00, -1.09742653e+00,\n'
 '        -1.48432684e+00, -1.19313598e+00,  1.32687068e+00,\n'
 '         1.07523394e+00, -9.25773621e-01, -1.79874659e+00,\n'
 '        -1.22386730e+00, -3.36744714e+00,  4.10053015e-01,\n'
 '        -1.47404647e+00, -1.40532470e+00, -2.89026409e-01,\n'
 '        -1.52592230e+00, -5.89187264e-01,  2.90011585e-01,\n'
 '         1.94127858e-02, -2.49696031e-01, -1.34702838e+00,\n'
 '        -6.65166259e-01, -1.69422483e+00, -3.33141387e-01,\n'
 '         3.96549076e-01, -3.13890755e-01, -2.22745180e+00,\n'
 '         9.74445790e-02]])')
'test_inceptionnet | batch_shape is: [1]'
'test_inceptionnet | logits.shape is: ivy.Shape(1, 1000)'
'||'
'test_inceptionnet | indices_test | true_indices is: [258 270 279]'
'test_inceptionnet | indices_test | calc_indices is: [258 279 270]'
'test_inceptionnet | device is: cpu'
'test_inceptionnet | fw is: tensorflow'
'test_inceptionnet | load_weights is: False'
'InceptionV3 | build | layer 1/22 built'
'InceptionV3 | build | layer 2/22 built'
'layer 3/22 built'
'InceptionV3 | build | layer 4/22 built'
'InceptionV3 | build | layer 5/22 built'
'InceptionV3 | build | layer 6/22 built'
'InceptionV3 | build | layer 7/22 built'
'InceptionV3 | build | layer 8/22 built'
'InceptionV3 | build | layer 9/22 built'
'InceptionV3 | build | layer 10/22 built'
'InceptionV3 | build | layer 11/22 built'
'InceptionV3 | build | layer 12/22 built'
'InceptionV3 | build | layer 13/22 built'
'InceptionV3 | build | layer 14/22 built'
'InceptionV3 | build | layer 15/22 built'
'InceptionV3 | build | layer 17/22 built'
'InceptionV3 | build | layer 18/22 built'
'InceptionV3 | build | layer 19/22 built'
'InceptionV3 | build | layer 20/22 built'
'InceptionV3 | build | layer 21/22 built'
'InceptionV3 | build | layer 22/22 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/4 built'
'layer 2/4 built'
'layer 3/4 built'
'layer 4/4 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/6 built'
'layer 2/6 built'
'layer 3/6 built'
'layer 4/6 built'
'layer 5/6 built'
'layer 6/6 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'inceptionNet_v3 | building InceptionV3 model | done 1/3'
'InceptionV3 | forward | input data_format is:NCHW | done 1/27'
'InceptionV3 | forward | data_format is going to be used is:NCHW | done 1/27'
'InceptionV3 | forward | input shape is:ivy.Shape(1, 224, 224, 3) | done 1/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 224, 224, 3) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 111, 111, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 111, 111, 32) | done 2/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 111, 111, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 32) | done 3/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 109, 109, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 64) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 64) | done 4/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 54, 54, 64) | done 5/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 54, 54, 80) | done 3/3'
'InceptionV3 | forward | is:ivy.Shape(1, 54, 54, 80) | done 6/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 80) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 52, 52, 192) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 52, 52, 192) | done 7/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 192) | done 8/27'
'input shape is:ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 32) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 32)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 25, 25, 256) | done 9/27'
'input shape is:ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 10/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 11/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 384) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 96) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 96)'
'one 20/20, output shape is:ivy.Shape(1, 12, 12, 288)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 12/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 12, 12, 768) | done 13/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 14/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 15/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 16/27'
'v3 16/27, output shape is:ivy.Shape(1, 12, 12, 768)'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 5, 5, 192)'
'one 7/20, output shape is:ivy.Shape(1, 5, 5, 768)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 1280) | done 17/27'
'input shape is:ivy.Shape(1, 5, 5, 1280)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 18/27'
'input shape is:ivy.Shape(1, 5, 5, 2048)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 19/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 20/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 5, 5) | done 21/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 1, 1) | done 22/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 27/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 24/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 25/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048) | done 26/27'
'InceptionV3 | forward | fc | done 27/27'
('test_inceptionnet | logits is: ivy.array([[ 6.10440438e+05, -3.36376781e+05, '
 '-1.31258375e+05,\n'
 '         2.88485371e+04, -2.34216875e+04,  7.72341328e+04,\n'
 '        -6.39882500e+05,  7.56095625e+05,  2.07789859e+05,\n'
 '         6.85456125e+05,  4.26331688e+05, -1.42620906e+05,\n'
 '        -5.66889766e+04,  1.99546297e+05,  4.37915188e+05,\n'
 '         2.93039469e+05,  4.18046469e+05, -4.14106938e+05,\n'
 '         4.77027594e+05, -5.76750375e+05,  4.34222438e+05,\n'
 '         4.35219188e+05, -4.94111469e+05,  4.34880094e+05,\n'
 '        -1.19976586e+05,  4.95324750e+05,  1.97441484e+05,\n'
 '         4.96767406e+05, -2.44164125e+05, -8.27986172e+04,\n'
 '        -3.70721344e+05, -5.97974883e+04, -2.77129781e+05,\n'
 '         2.36427203e+05, -1.48067812e+05, -2.08842578e+05,\n'
 '         7.69008688e+05, -6.42380062e+05,  5.99530062e+05,\n'
 '         3.27609875e+05, -3.20002125e+05,  4.99790375e+05,\n'
 '        -1.72720719e+05, -3.95965094e+05, -8.00551688e+05,\n'
 '        -5.49483812e+05,  2.50834016e+05, -1.87685688e+05,\n'
 '        -5.96667375e+05,  1.32867312e+05, -1.62792906e+05,\n'
 '        -4.44590250e+05,  6.61747812e+04, -4.68064250e+05,\n'
 '         2.68538531e+05, -1.72434922e+05,  5.15936500e+05,\n'
 '        -6.93475234e+04, -4.00000438e+05,  1.76539578e+05,\n'
 '        -7.19306938e+05, -2.59958406e+05, -3.12498938e+05,\n'
 '        -1.27450188e+05,  1.21990300e+06, -6.18905703e+04,\n'
 '         1.85797031e+05,  6.44765188e+05,  2.91815500e+05,\n'
 '         1.35980578e+05,  3.62947719e+05, -2.33161281e+05,\n'
 '         1.39289922e+05,  5.81469250e+05, -1.19182875e+05,\n'
 '        -3.97250312e+05,  7.43848375e+05, -3.51445438e+05,\n'
 '        -4.33455875e+05, -3.54652625e+05,  2.69660031e+05,\n'
 '         9.88701250e+05,  1.25353898e+05, -3.56704844e+05,\n'
 '        -1.55073844e+05,  7.59726172e+04, -1.56736562e+05,\n'
 '         2.97253562e+05,  3.20430781e+05, -1.80183125e+05,\n'
 '         1.51757766e+05, -2.78775125e+05,  3.30384500e+05,\n'
 '        -4.96214250e+05, -1.73150641e+05,  1.84815359e+05,\n'
 '         1.85763812e+05, -1.37115738e+06, -6.46310781e+04,\n'
 '        -1.44468469e+05, -2.71146312e+05,  7.16583125e+05,\n'
 '        -6.58050500e+05,  9.52500391e+04, -2.87397531e+05,\n'
 '        -3.23945625e+04, -4.50972000e+05, -3.91876660e+03,\n'
 '        -1.23990016e+05, -2.21616188e+05,  5.44510250e+05,\n'
 '        -1.77905328e+05,  2.37194125e+05,  6.12382500e+04,\n'
 '        -2.63054562e+05, -3.19382312e+05,  1.50830117e+04,\n'
 '         2.17279234e+05,  4.42202312e+05, -7.14720375e+05,\n'
 '         2.48085828e+05,  1.34730688e+05,  4.01236250e+05,\n'
 '         4.06688312e+05, -2.54526656e+05,  4.30135625e+05,\n'
 '        -6.36497688e+05,  3.80229844e+05,  3.93682781e+05,\n'
 '        -5.02816750e+05, -3.85610062e+05, -3.88461094e+05,\n'
 '         6.01054188e+05, -2.51951766e+05,  2.46080109e+05,\n'
 '        -1.02807088e+06,  4.62984344e+05,  5.15122938e+05,\n'
 '        -2.52211766e+05, -3.80542875e+05, -3.63149344e+05,\n'
 '         9.16040625e+05, -3.27964250e+05, -9.02695625e+05,\n'
 '        -5.28655875e+05, -1.46471250e+05, -1.19769047e+05,\n'
 '        -7.81301938e+05, -2.50962656e+05,  1.18890891e+05,\n'
 '         2.95655656e+05, -7.45892688e+05,  8.16475312e+04,\n'
 '         4.17967594e+05,  9.04169438e+05,  5.07842969e+04,\n'
 '         3.46715344e+05,  1.27153711e+05, -2.14202766e+05,\n'
 '        -2.51052578e+05, -4.53665312e+05,  5.86880688e+05,\n'
 '         5.12281062e+05, -6.47996438e+05, -2.47571859e+05,\n'
 '        -5.61938625e+05, -9.50837375e+05, -1.47592393e+04,\n'
 '        -1.14938613e+04, -1.00762758e+05, -3.98106000e+05,\n'
 '        -9.54791562e+04,  2.00029062e+05,  4.14830062e+05,\n'
 '         6.79401375e+05,  6.99412422e+04,  3.15521938e+05,\n'
 '         9.13814500e+05,  8.17217250e+05,  3.22115371e+04,\n'
 '        -6.80676438e+05,  1.65215828e+05, -5.93244688e+05,\n'
 '         3.59134766e+04, -4.76693969e+05, -1.88735297e+05,\n'
 '         4.47728500e+05,  4.19918438e+04,  8.07003438e+05,\n'
 '         3.17530188e+05,  4.41991188e+05, -3.42528633e+04,\n'
 '         2.14034547e+05,  3.01609906e+05,  3.64929375e+04,\n'
 '         3.72677938e+05,  5.00798688e+05, -4.89211844e+05,\n'
 '        -1.05999100e+06, -9.57434375e+05, -2.55795215e+03,\n'
 '        -3.49508781e+05,  1.40343750e+05, -1.29532922e+05,\n'
 '        -1.18694742e+05, -3.95719906e+05, -1.61030750e+05,\n'
 '         6.83919438e+05,  4.49477188e+05, -4.66031625e+05,\n'
 '        -3.64389031e+05, -5.15286531e+05,  3.60862938e+05,\n'
 '         3.75232250e+05, -2.18823016e+05,  2.18697078e+05,\n'
 '         1.53451672e+05,  5.67240438e+05, -1.27479242e+05,\n'
 '        -7.91980438e+05, -2.68306328e+04,  9.77951312e+05,\n'
 '         6.86626172e+04, -4.64473156e+05,  3.83318938e+05,\n'
 '        -2.05336219e+05,  7.93558875e+05,  6.75683500e+05,\n'
 '        -1.88763656e+05, -1.28008844e+05,  6.79855188e+05,\n'
 '        -4.98855875e+05, -6.32964875e+05,  5.26609297e+04,\n'
 '        -2.62949156e+05,  9.81872812e+05,  4.47780094e+05,\n'
 '        -5.61694336e+03,  5.51386375e+05,  1.83987219e+05,\n'
 '         3.78994906e+05, -4.08206219e+05, -4.89676500e+05,\n'
 '        -8.86920000e+05, -1.31162906e+05,  5.33141062e+05,\n'
 '         6.69003594e+04,  5.17887688e+05,  3.57815719e+05,\n'
 '        -2.66438094e+05,  3.50387938e+05, -1.62333734e+05,\n'
 '        -3.07702406e+05, -6.20237438e+05,  3.08991125e+05,\n'
 '         2.85463613e+04,  3.24548469e+05,  4.96631656e+05,\n'
 '         2.03305531e+05,  3.38492875e+05,  4.27758438e+05,\n'
 '         4.94515406e+05, -2.71004125e+05,  1.09291180e+05,\n'
 '        -1.10554078e+05, -6.29857562e+05, -3.38326531e+05,\n'
 '        -2.24553828e+05,  3.38639594e+05, -6.37579938e+05,\n'
 '        -3.21098656e+05, -1.01367769e+06, -4.84914438e+05,\n'
 '         1.34265609e+05,  2.61219062e+05, -1.35088234e+05,\n'
 '        -3.19914395e+04,  3.28976938e+05,  7.13659438e+05,\n'
 '         1.04687994e+06,  3.53816062e+05,  5.25919688e+05,\n'
 '         1.51302484e+05, -1.62021812e+05,  3.92775688e+05,\n'
 '        -6.35348188e+05,  2.05447016e+05, -8.86593750e+04,\n'
 '        -2.30099906e+05,  2.54381836e+04, -3.52692812e+04,\n'
 '        -3.65458691e+03,  3.20214312e+05, -5.46088938e+05,\n'
 '         3.22560344e+05,  4.64014312e+05, -3.64594781e+05,\n'
 '         9.50401875e+05, -1.39126875e+04, -6.74372562e+05,\n'
 '        -7.10934062e+04, -2.35849625e+05, -2.54754500e+05,\n'
 '         8.47438625e+05,  5.56353625e+05, -2.08271188e+05,\n'
 '         7.39308125e+05,  2.90989906e+05,  7.19286500e+05,\n'
 '        -2.09139219e+05,  1.10080922e+05,  2.69087781e+05,\n'
 '        -3.01618562e+05, -2.59185375e+05, -4.67242250e+05,\n'
 '        -2.34784797e+05,  1.16001625e+05,  5.31247734e+04,\n'
 '         9.74113281e+04, -6.06661750e+05,  8.83122344e+04,\n'
 '         4.71491469e+05,  8.72834062e+05,  2.33414297e+05,\n'
 '         3.32158281e+05, -9.54728203e+04, -1.31031445e+05,\n'
 '         2.32686484e+05,  6.96799188e+05,  5.12985500e+05,\n'
 '        -1.00578294e+06, -4.06173406e+05, -1.62620195e+04,\n'
 '         5.49593250e+05,  7.29953906e+04,  2.24304891e+05,\n'
 '         2.37260375e+05, -4.43041969e+05, -7.23320562e+05,\n'
 '         4.66267438e+05,  1.93967656e+05,  1.12671078e+05,\n'
 '         5.80456125e+05, -2.38273266e+05,  4.51298062e+05,\n'
 '         2.75056055e+04, -4.39702875e+05,  1.86694812e+05,\n'
 '         2.55374672e+05, -6.31085078e+04, -1.36932859e+05,\n'
 '        -4.28205195e+04, -4.27816484e+04, -3.42214344e+05,\n'
 '        -6.04327000e+05,  3.04650449e+04,  6.88633594e+04,\n'
 '         5.40148875e+05,  4.49390875e+05, -2.32501719e+05,\n'
 '        -4.72186906e+05, -4.09818500e+05, -5.61585625e+05,\n'
 '        -5.09673486e+03, -1.82649859e+05, -2.92422875e+05,\n'
 '        -7.69544000e+05,  2.17816641e+05,  2.11493625e+05,\n'
 '         3.95993812e+05, -3.41440078e+04, -3.19953500e+05,\n'
 '         6.16196328e+04, -1.89529609e+05,  8.06077891e+04,\n'
 '        -6.92817734e+04,  2.18378031e+05, -1.48690025e+06,\n'
 '        -2.27078453e+05,  7.84925391e+04, -2.65248500e+05,\n'
 '        -9.43704141e+04, -8.88524023e+03, -5.62449180e+04,\n'
 '        -1.08660531e+05,  4.81070125e+05,  1.52013109e+05,\n'
 '        -2.45824391e+05, -3.68407617e+04, -2.65916469e+05,\n'
 '        -5.55229562e+05, -3.00055566e+04, -5.93043281e+04,\n'
 '         3.19528125e+05, -8.04330812e+05,  1.49472125e+05,\n'
 '        -9.93806094e+04, -5.74792000e+05,  4.87699156e+05,\n'
 '        -5.54615703e+04, -1.94525828e+05,  4.69712891e+04,\n'
 '         6.34287852e+04, -1.56998062e+06, -2.63998281e+05,\n'
 '        -3.84583031e+05, -3.69517219e+05,  9.71002109e+04,\n'
 '         3.59286875e+05,  2.05527688e+05, -1.22324912e+04,\n'
 '         7.50176719e+04, -2.69043457e+04,  6.41683812e+05,\n'
 '         6.14698125e+05,  1.23401289e+04, -4.98390250e+05,\n'
 '        -3.42803375e+05, -9.01661375e+05,  5.02629531e+05,\n'
 '        -3.60042469e+05, -4.16546812e+05,  3.95193156e+05,\n'
 '         5.20854500e+05,  1.22921039e+05,  6.78892266e+04,\n'
 '        -4.10881875e+05, -4.95986438e+05, -6.78232125e+05,\n'
 '         5.88421438e+05, -4.43212719e+05, -6.24497188e+05,\n'
 '        -5.38105375e+05, -3.51141469e+05,  2.99410906e+05,\n'
 '         9.66620469e+04, -5.26604000e+05,  2.65637750e+05,\n'
 '        -5.26935562e+05, -2.96235117e+04, -4.64827125e+05,\n'
 '        -1.06842238e+06,  4.76585430e+04,  7.70171062e+05,\n'
 '         3.69732750e+05, -4.98909062e+05,  1.03286312e+05,\n'
 '         3.06696875e+05, -6.47974625e+05, -5.19470094e+05,\n'
 '         7.83026062e+05,  8.17647188e+04,  5.39981562e+05,\n'
 '         4.84464750e+05, -3.19954500e+05, -2.53129438e+05,\n'
 '        -2.33477734e+05, -9.78082188e+05, -2.44189531e+05,\n'
 '         8.00774375e+05, -7.88089188e+05,  1.67982516e+05,\n'
 '         2.96573125e+05, -6.95831875e+05,  3.51021594e+05,\n'
 '         2.88232906e+05, -2.40635664e+04,  4.52253156e+05,\n'
 '        -8.38247188e+05,  2.43338812e+05,  4.05443969e+05,\n'
 '        -5.79529625e+05,  4.65640844e+05,  1.61246094e+05,\n'
 '         5.25141688e+05, -1.71447891e+05,  2.75644000e+05,\n'
 '         3.75792344e+04,  2.28184750e+05,  1.66466484e+05,\n'
 '         1.31920359e+05,  1.13208914e+05, -2.51228203e+05,\n'
 '        -5.24730547e+04,  3.58974844e+05, -7.56113250e+05,\n'
 '         5.63166250e+05, -1.17456162e+06, -7.62556812e+05,\n'
 '         6.94037938e+05, -1.51085859e+05, -3.55766344e+05,\n'
 '        -5.92694062e+05,  1.63371625e+05, -1.03286656e+06,\n'
 '         2.64405438e+05, -4.83714125e+05,  9.05029812e+05,\n'
 '        -1.53298125e+05, -8.34861000e+05, -2.49634812e+05,\n'
 '        -2.08531016e+05,  3.98577094e+05,  7.99951312e+05,\n'
 '        -1.79360176e+04,  1.97893719e+05, -2.18830188e+05,\n'
 '         2.74959219e+05, -3.82704719e+05, -2.46272062e+05,\n'
 '         3.55452156e+05,  2.36089641e+05, -5.60049688e+05,\n'
 '         1.32667156e+05, -6.54566562e+05, -2.33213078e+05,\n'
 '        -2.94908938e+05,  5.54629023e+04,  1.14945977e+05,\n'
 '        -2.36916250e+05, -6.95764688e+05, -8.35317812e+04,\n'
 '        -5.26818688e+05,  4.98727344e+04,  5.55615625e+03,\n'
 '         1.38306812e+05, -1.70952094e+05,  6.12544312e+05,\n'
 '        -7.04781125e+05,  8.04886750e+05,  4.66323750e+05,\n'
 '        -4.78889219e+04, -4.78297312e+05,  3.02421750e+05,\n'
 '        -4.65790375e+05,  6.57635188e+05,  5.46256188e+05,\n'
 '        -2.09957906e+05,  1.56752797e+05,  7.69339160e+03,\n'
 '         7.12843562e+05, -7.24081625e+05,  1.51646203e+05,\n'
 '         7.04049938e+05,  5.22282844e+05,  2.20103938e+05,\n'
 '         6.26405500e+05,  3.90884302e+03,  1.04949325e+06,\n'
 '        -3.32148812e+05, -4.47561812e+05, -1.53232438e+05,\n'
 '        -9.98446250e+04, -7.26454219e+04,  5.63902188e+05,\n'
 '        -3.55817969e+04,  9.15696812e+05, -8.35263047e+04,\n'
 '         3.58650000e+05,  3.05637090e+04,  3.56396688e+05,\n'
 '         9.35592812e+04,  1.92070891e+05, -3.24563781e+05,\n'
 '        -1.62537734e+05, -4.32425562e+05,  2.58646078e+05,\n'
 '         4.45556312e+05,  6.21864648e+04, -2.79615031e+05,\n'
 '         5.98228000e+05,  6.23502832e+03,  5.24359312e+05,\n'
 '        -3.93624969e+05,  2.94708531e+05,  4.62189719e+05,\n'
 '        -5.66615188e+05, -1.78005156e+04, -9.11932500e+05,\n'
 '        -3.74840406e+05, -5.68470586e+04,  8.53979766e+04,\n'
 '         7.62420547e+04,  2.69034750e+05, -1.15388875e+05,\n'
 '        -2.54246531e+05, -7.09231062e+05,  6.14883875e+05,\n'
 '        -4.43767062e+05, -3.38284336e+04, -3.59663906e+05,\n'
 '         2.05791203e+05, -6.88356500e+05, -3.69714500e+05,\n'
 '         7.93626500e+05, -4.47702688e+05,  8.00056797e+04,\n'
 '        -6.58473188e+05,  3.07778562e+05, -8.35875391e+04,\n'
 '        -2.16955957e+04, -3.08830957e+03, -6.48343062e+05,\n'
 '        -9.77991250e+05, -2.89796156e+05,  7.33747125e+05,\n'
 '        -7.56165125e+05,  3.77668656e+05, -1.38678391e+05,\n'
 '         1.52101309e+04, -3.78654406e+05, -3.80261062e+05,\n'
 '         2.35106969e+05, -7.89159219e+04,  3.93719219e+05,\n'
 '         1.18355862e+06, -4.90315750e+05,  3.89269812e+05,\n'
 '         6.43142688e+05,  5.46304297e+04, -9.69079188e+05,\n'
 '         1.75916328e+05, -6.54529219e+04, -6.46867461e+04,\n'
 '         6.17541812e+05, -6.54518250e+05, -4.78843562e+05,\n'
 '        -1.88060875e+05,  3.24570125e+05, -3.27924375e+05,\n'
 '        -4.30052312e+05, -4.17195406e+05,  3.85941688e+05,\n'
 '        -3.27900688e+05,  3.89212250e+05,  2.54552828e+05,\n'
 '        -3.38085281e+05,  5.18829594e+05, -2.66027469e+05,\n'
 '         7.62538500e+05, -2.63909844e+05,  7.29653438e+05,\n'
 '        -3.21639094e+05, -1.47088984e+05,  5.98984312e+05,\n'
 '        -6.66310125e+05,  1.71886594e+05, -3.50673219e+05,\n'
 '         5.99055391e+04, -3.21804375e+05, -2.20037646e+03,\n'
 '         2.05685844e+05,  2.73818219e+05,  1.06192550e+06,\n'
 '        -4.13892125e+05, -2.16441328e+04,  6.87416312e+05,\n'
 '         3.35056375e+05,  1.22800547e+05, -4.02968875e+05,\n'
 '         4.78036094e+05, -4.03426219e+05, -5.15960219e+05,\n'
 '        -3.72577094e+05, -5.51120039e+04,  2.45036453e+05,\n'
 '        -5.12655188e+05, -1.62628391e+05,  2.23774938e+05,\n'
 '         1.17974862e+06,  1.25576465e+03,  4.00388250e+05,\n'
 '         7.88824375e+05, -7.27373500e+05,  1.62312875e+05,\n'
 '        -1.84954969e+05,  8.13818516e+04,  1.48916859e+05,\n'
 '        -1.43856141e+05, -8.47249312e+05, -5.72331562e+05,\n'
 '        -5.46291312e+05,  4.14215156e+05,  2.17591281e+05,\n'
 '        -2.90196125e+05,  6.41713867e+04,  5.53306938e+05,\n'
 '        -1.50008578e+05, -2.18894375e+05, -5.42046500e+05,\n'
 '         3.39473531e+05,  1.00259211e+05,  3.77355250e+05,\n'
 '        -6.71012000e+05, -4.70514094e+05,  3.77750750e+05,\n'
 '        -6.31997688e+05,  1.45092859e+05, -2.13501312e+05,\n'
 '         2.02860969e+05, -3.77201281e+05,  7.36668750e+04,\n'
 '        -1.82657861e+03, -3.82037406e+05, -6.74700375e+05,\n'
 '         8.85894609e+04, -4.96480820e+04, -1.48341828e+05,\n'
 '        -4.69518219e+05, -8.74486719e+04, -3.78825812e+05,\n'
 '         1.12882275e+06, -2.84272688e+05, -3.03321875e+05,\n'
 '        -2.84340688e+05,  1.21924703e+05,  7.88397438e+05,\n'
 '         4.73035250e+05, -1.67085094e+05,  6.13798867e+04,\n'
 '        -8.12666625e+05, -1.08782633e+05,  3.12719875e+05,\n'
 '        -2.92096906e+05, -5.42884812e+05, -2.15698297e+05,\n'
 '         5.27875375e+05,  7.40474125e+05, -1.40904300e+06,\n'
 '        -3.20381562e+05,  5.01332281e+05, -4.17889594e+05,\n'
 '         4.15540438e+05, -8.79397062e+05, -7.21132000e+05,\n'
 '         2.33992406e+05,  1.01994031e+06,  4.38952906e+05,\n'
 '         2.48355828e+05, -2.15020672e+05,  1.01097312e+06,\n'
 '        -7.17091062e+05,  2.38344641e+05, -3.62509375e+05,\n'
 '        -7.60421812e+05,  6.76543062e+05, -1.41191391e+05,\n'
 '         7.88169219e+04,  3.00472031e+05,  1.12263297e+05,\n'
 '        -8.51338312e+05, -6.38310688e+05,  6.21521000e+05,\n'
 '        -1.28514453e+05, -2.30013703e+05,  7.80945000e+05,\n'
 '         4.58283643e+03,  3.85890625e+05,  1.26593312e+05,\n'
 '         4.71373469e+05,  1.10845838e+06,  4.68346812e+05,\n'
 '         4.34012562e+05,  1.05350039e+05, -4.89453094e+05,\n'
 '         3.13627594e+05, -6.17123188e+05, -2.78630938e+05,\n'
 '        -5.49533562e+05, -3.15321344e+05, -5.13377375e+05,\n'
 '         2.72810594e+05, -9.69139297e+04, -8.10556562e+05,\n'
 '        -3.68608938e+05, -1.02900758e+05, -3.52907219e+05,\n'
 '         1.93512422e+05,  1.59316188e+05, -1.56296438e+05,\n'
 '         3.90356875e+05,  2.07532797e+05, -2.46276516e+05,\n'
 '         2.66795062e+05,  4.12933375e+05,  4.76274656e+05,\n'
 '        -1.04239812e+05,  2.83948906e+05, -3.19214473e+04,\n'
 '         4.72292250e+05, -6.03495562e+05,  1.83843672e+05,\n'
 '         4.23941875e+05,  7.24412250e+05, -1.26401318e+04,\n'
 '        -7.65436812e+05, -4.97795156e+05,  2.49440812e+05,\n'
 '        -1.45828609e+05,  5.67610375e+05, -6.56902266e+04,\n'
 '        -3.33612656e+05,  4.00018469e+05, -2.95375125e+05,\n'
 '        -3.10521938e+05, -1.84460141e+05, -5.19195219e+05,\n'
 '        -2.65191094e+05,  6.71136875e+05, -1.02576812e+05,\n'
 '        -1.29970703e+04,  7.49339375e+05, -5.77309062e+05,\n'
 '        -3.37309656e+05, -5.98286289e+04, -3.10373344e+05,\n'
 '         7.76691250e+05,  5.62900562e+05,  7.82526953e+04,\n'
 '        -5.33830664e+04,  7.19288281e+04, -6.17519438e+05,\n'
 '        -1.43135453e+05,  1.39036638e+06, -4.74736219e+05,\n'
 '        -5.82238188e+05,  1.60679656e+05, -7.15735000e+04,\n'
 '        -2.54025094e+05, -1.51101375e+05,  3.88958812e+05,\n'
 '         3.15214570e+04, -3.06991031e+05, -3.34138844e+05,\n'
 '         4.74551328e+04,  4.53347969e+05, -5.90089375e+05,\n'
 '         3.47756188e+05,  4.38251125e+05,  1.87146312e+05,\n'
 '        -8.37511375e+05, -7.53373906e+04, -2.76216188e+05,\n'
 '        -4.98637875e+05,  5.00766172e+04, -5.63536750e+05,\n'
 '        -1.32124450e+06,  2.40525844e+05,  8.19643062e+05,\n'
 '        -2.64959906e+05, -1.58811438e+05,  8.97255438e+05,\n'
 '         2.50867469e+05, -7.51599000e+05, -2.57068184e+04,\n'
 '         2.43184203e+05, -2.36274562e+05, -1.85386922e+05,\n'
 '         6.39196758e+04,  3.01447281e+05, -7.63673188e+05,\n'
 '        -3.28881211e+04,  4.67654469e+05, -2.14751656e+05,\n'
 '         9.97400391e+04, -6.23560312e+05, -2.08820500e+05,\n'
 '        -4.63666344e+05,  1.04424664e+05, -3.26208531e+05,\n'
 '        -1.62847172e+05,  7.34299062e+05, -3.79950684e+02,\n'
 '         2.27992453e+05,  4.74963555e+04,  9.35570062e+05,\n'
 '         8.19790703e+04,  4.00518062e+05, -8.87192109e+04,\n'
 '        -2.45494750e+05, -2.43152094e+05,  4.47824453e+04,\n'
 '        -1.51818457e+04, -2.14930812e+05,  2.46832672e+05,\n'
 '         9.17462812e+04,  3.39037062e+05,  6.12524562e+05,\n'
 '        -3.30346375e+05,  4.84111688e+05, -4.55883203e+04,\n'
 '        -4.96873938e+05,  5.27876250e+05,  2.35792090e+04,\n'
 '        -5.08506938e+05,  7.05287891e+04, -3.42569125e+05,\n'
 '         1.83476125e+05, -3.86178250e+05,  2.16824234e+05,\n'
 '        -2.63066688e+05, -5.36588062e+05, -4.10729406e+05,\n'
 '        -2.81093594e+04, -2.02347516e+05, -2.53719125e+05,\n'
 '         1.21532758e+05, -1.06452461e+04, -1.24004969e+05,\n'
 '        -7.28059500e+05, -1.40660250e+05, -9.84799000e+05,\n'
 '        -5.95285125e+05,  2.00791797e+05,  5.77630688e+05,\n'
 '        -7.03937969e+04,  2.81639344e+05,  4.09514219e+05,\n'
 '        -6.00127375e+05,  1.81837750e+05,  5.58333555e+04,\n'
 '         2.36299375e+05,  4.05536469e+05, -2.68461969e+05,\n'
 '         8.90165469e+04, -1.46576125e+05, -1.21558062e+05,\n'
 '        -5.13510125e+05,  5.89667125e+05, -3.23975500e+05,\n'
 '         2.71575094e+05, -1.18599320e+05,  4.29900547e+04,\n'
 '        -2.73910969e+05, -7.08292750e+05, -1.90819125e+05,\n'
 '        -1.09804662e+06,  4.47041531e+05,  6.39447750e+05,\n'
 '        -8.15732750e+05, -1.97442641e+05,  1.81510812e+05,\n'
 '         3.17915125e+05,  1.21954125e+05,  5.42063000e+05,\n'
 '         4.04216875e+05,  7.16196500e+05, -7.34295438e+05,\n'
 '         8.87048812e+05,  4.21226812e+05,  2.63053312e+05,\n'
 '        -2.73764969e+05,  5.42872188e+05, -3.69384188e+05,\n'
 '        -1.17456609e+05,  9.25407188e+04,  4.66203469e+05,\n'
 '         5.62480062e+05, -3.58977469e+05, -1.71306030e+03,\n'
 '        -6.77662875e+05,  4.67486750e+05, -2.05817016e+05,\n'
 '        -5.19317031e+04,  4.81218344e+05, -3.02013156e+05,\n'
 '        -7.41041406e+04,  3.96469562e+05,  1.48175406e+05,\n'
 '         3.06486375e+05, -9.36738000e+05, -1.10584863e+04,\n'
 '        -3.72644438e+05,  6.44321375e+05, -3.54254250e+05,\n'
 '         1.63355594e+05, -2.27425047e+05, -1.52086547e+05,\n'
 '        -2.69692250e+05,  1.62667531e+05,  4.01093812e+05,\n'
 '         4.84754062e+05, -2.96373812e+05, -2.88551438e+05,\n'
 '        -4.39322531e+05,  1.55554938e+05, -2.96493875e+05,\n'
 '         1.77418562e+05,  2.87656000e+05,  4.81959375e+05,\n'
 '         1.28381227e+05, -3.95038844e+05,  2.88026719e+05,\n'
 '        -3.63455094e+05,  2.37638633e+04, -3.93948828e+03,\n'
 '         1.88460047e+05,  1.66677250e+05,  3.24287375e+05,\n'
 '        -1.59235430e+04]])')
'test_inceptionnet | batch_shape is: [1]'
'test_inceptionnet | logits.shape is: ivy.Shape(1, 1000)'
'||'
'test_inceptionnet | device is: cpu'
'test_inceptionnet | fw is: tensorflow'
'test_inceptionnet | load_weights is: True'
'InceptionV3 | build | layer 1/22 built'
'InceptionV3 | build | layer 2/22 built'
'layer 3/22 built'
'InceptionV3 | build | layer 4/22 built'
'InceptionV3 | build | layer 5/22 built'
'InceptionV3 | build | layer 6/22 built'
'InceptionV3 | build | layer 7/22 built'
'InceptionV3 | build | layer 8/22 built'
'InceptionV3 | build | layer 9/22 built'
'InceptionV3 | build | layer 10/22 built'
'InceptionV3 | build | layer 11/22 built'
'InceptionV3 | build | layer 12/22 built'
'InceptionV3 | build | layer 13/22 built'
'InceptionV3 | build | layer 14/22 built'
'InceptionV3 | build | layer 15/22 built'
'InceptionV3 | build | layer 17/22 built'
'InceptionV3 | build | layer 18/22 built'
'InceptionV3 | build | layer 19/22 built'
'InceptionV3 | build | layer 20/22 built'
'InceptionV3 | build | layer 21/22 built'
'InceptionV3 | build | layer 22/22 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/4 built'
'layer 2/4 built'
'layer 3/4 built'
'layer 4/4 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/6 built'
'layer 2/6 built'
'layer 3/6 built'
'layer 4/6 built'
'layer 5/6 built'
'layer 6/6 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'inceptionNet_v3 | building InceptionV3 model | done 1/3'
'inceptionNet_v3 | clearning pretrained weights | done 2/3'
'inceptionNet_v3 | loading pretrained weights | done 3/3'
'InceptionV3 | forward | input data_format is:NCHW | done 1/27'
'InceptionV3 | forward | data_format is going to be used is:NCHW | done 1/27'
'InceptionV3 | forward | input shape is:ivy.Shape(1, 224, 224, 3) | done 1/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 224, 224, 3) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 111, 111, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 111, 111, 32) | done 2/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 111, 111, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 32) | done 3/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 109, 109, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 64) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 64) | done 4/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 54, 54, 64) | done 5/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 54, 54, 80) | done 3/3'
'InceptionV3 | forward | is:ivy.Shape(1, 54, 54, 80) | done 6/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 80) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 52, 52, 192) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 52, 52, 192) | done 7/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 192) | done 8/27'
'input shape is:ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 32) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 32)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 25, 25, 256) | done 9/27'
'input shape is:ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 10/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 11/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 384) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 96) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 96)'
'one 20/20, output shape is:ivy.Shape(1, 12, 12, 288)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 12/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 12, 12, 768) | done 13/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 14/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 15/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 16/27'
'v3 16/27, output shape is:ivy.Shape(1, 12, 12, 768)'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 5, 5, 192)'
'one 7/20, output shape is:ivy.Shape(1, 5, 5, 768)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 1280) | done 17/27'
'input shape is:ivy.Shape(1, 5, 5, 1280)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 18/27'
'input shape is:ivy.Shape(1, 5, 5, 2048)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 19/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 20/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 5, 5) | done 21/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 1, 1) | done 22/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 27/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 24/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 25/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048) | done 26/27'
'InceptionV3 | forward | fc | done 27/27'
('test_inceptionnet | logits is: ivy.array([[-6.78426921e-01, -1.14735556e+00, '
 '-1.25749636e+00,\n'
 '         5.54262876e-01, -6.40845060e-01, -2.71447778e+00,\n'
 '         1.63960540e+00, -6.77632213e-01, -2.33475208e+00,\n'
 '        -2.93918323e+00, -1.41939735e+00, -1.56483561e-01,\n'
 '        -5.96757293e-01,  1.75309762e-01,  2.33596158e+00,\n'
 '        -1.52103022e-01, -2.95043635e+00, -6.94886446e-01,\n'
 '        -1.73706806e+00,  1.43555164e+00,  7.78645754e-01,\n'
 '        -2.90469885e+00,  2.23170221e-01, -1.21671176e+00,\n'
 '        -3.08054864e-01, -6.32631123e-01, -1.60625315e+00,\n'
 '         7.68370867e-01, -1.33876956e+00, -1.55874825e+00,\n'
 '         9.72593427e-01,  3.16287398e+00,  2.38279176e+00,\n'
 '        -3.17260218e+00,  1.10041571e+00, -9.31489110e-01,\n'
 '         1.70731258e+00, -8.48754704e-01, -6.22494742e-02,\n'
 '         7.29057908e-01,  9.77808178e-01,  7.40583897e-01,\n'
 '         2.12087584e+00,  1.07662582e+00, -6.42339468e-01,\n'
 '        -8.44944000e-01,  9.68572855e-01,  2.53510213e+00,\n'
 '        -4.78413701e-01,  4.58471596e-01,  2.02185214e-01,\n'
 '        -5.39951325e-01,  1.21223426e+00,  6.77559614e-01,\n'
 '         2.55432820e+00,  2.20981359e+00, -2.49638486e+00,\n'
 '        -4.38072234e-01, -3.43934119e-01,  1.24997497e+00,\n'
 '         2.08233619e+00,  2.43197584e+00,  7.82827914e-01,\n'
 '        -9.94994581e-01,  3.06746781e-01, -1.30330932e+00,\n'
 '         1.81706035e+00,  1.72210693e+00,  2.31694317e+00,\n'
 '        -1.63051009e-01,  1.04489708e+00,  3.01343352e-01,\n'
 '        -8.81801009e-01, -3.72486144e-01, -5.27979016e-01,\n'
 '         7.46930540e-02, -7.30987370e-01,  8.75280023e-01,\n'
 '         7.92648196e-01,  3.27164948e-01, -1.56875658e+00,\n'
 '        -2.61043459e-01, -9.45474029e-01, -1.98732048e-01,\n'
 '         2.35125589e+00, -1.54436779e+00, -2.66119671e+00,\n'
 '        -1.24399579e+00, -4.66838062e-01,  6.83874488e-01,\n'
 '        -3.96498829e-01,  1.36604637e-01, -1.27886617e+00,\n'
 '        -9.52854931e-01, -5.38245261e-01, -5.51330686e-01,\n'
 '         7.23000288e-01, -1.34260356e+00, -3.10039377e+00,\n'
 '        -4.24264371e-02,  3.78255129e-01, -7.83353746e-01,\n'
 '        -1.61698246e+00, -5.43685332e-02,  9.32602405e-01,\n'
 '        -3.51415849e+00, -2.10425883e-01, -1.25850186e-01,\n'
 '         1.40043899e-01,  3.29383880e-01,  1.25938821e+00,\n'
 '        -7.70487189e-01,  2.52081847e+00,  2.24279308e+00,\n'
 '         2.34530234e+00, -1.23541617e+00, -1.44512021e+00,\n'
 '        -3.01246643e-02, -2.04360914e+00, -1.94180459e-01,\n'
 '        -5.74624181e-01, -2.03445053e+00, -6.68347061e-01,\n'
 '        -1.21717608e+00, -2.53218150e+00, -7.30315447e-01,\n'
 '        -5.54479182e-01,  2.26648259e+00,  8.07327151e-01,\n'
 '         3.53441894e-01,  6.39666140e-01,  4.86991405e-01,\n'
 '         2.53654623e+00, -1.73123980e+00, -1.10970855e+00,\n'
 '        -1.57994175e+00, -5.01075685e-02, -8.49036500e-02,\n'
 '        -9.56064045e-01, -2.47373653e+00, -1.93812787e+00,\n'
 '         9.90873277e-02, -2.70990157e+00, -1.40152287e+00,\n'
 '         1.91166019e+00, -4.67444181e-01, -7.06003726e-01,\n'
 '        -1.87351656e+00, -4.04306166e-02, -5.84992588e-01,\n'
 '         1.82555258e+00, -4.25926358e-01,  2.65866518e+00,\n'
 '         9.74672079e-01,  7.70967424e-01, -3.63325405e+00,\n'
 '         2.97165632e-01,  3.14918446e+00, -1.48923564e+00,\n'
 '        -1.85470605e+00,  1.43847203e+00, -2.40198469e+00,\n'
 '        -2.91151929e+00, -2.90194362e-01, -1.50732291e+00,\n'
 '        -1.93786955e+00, -2.38446999e+00, -2.23514509e+00,\n'
 '        -1.71490669e+00,  8.86869848e-01,  2.31694817e+00,\n'
 '        -6.00320697e-01, -2.00775552e+00,  8.90293717e-01,\n'
 '         1.70186520e+00, -1.00564528e+00,  7.51214922e-01,\n'
 '        -3.89898345e-02,  9.17426944e-01, -1.59691918e+00,\n'
 '        -2.14557743e+00,  5.42006016e-01, -1.34283519e+00,\n'
 '        -1.16115785e+00, -3.00073504e-01,  2.22613001e+00,\n'
 '         3.81774545e+00, -2.36555368e-01, -3.19183755e+00,\n'
 '        -4.62171078e+00, -1.91030383e+00, -1.98497319e+00,\n'
 '        -7.92546570e-01, -1.38644099e+00, -2.86403608e+00,\n'
 '        -6.55979395e-01, -2.94443178e+00,  1.31207383e+00,\n'
 '        -6.36863828e-01, -6.33644342e-01,  2.54705668e-01,\n'
 '        -1.82086647e+00, -1.58795428e+00,  4.30648565e+00,\n'
 '        -2.70269752e+00, -1.05012500e+00, -3.18604207e+00,\n'
 '         2.69242495e-01, -2.28994775e+00, -3.42455101e+00,\n'
 '        -2.31759310e+00, -1.47535354e-02, -1.98931336e+00,\n'
 '         6.59641623e-01,  2.73777127e+00, -1.89535379e+00,\n'
 '         2.15604544e+00,  1.76583469e+00, -9.05727148e-02,\n'
 '        -1.24082112e+00, -9.32654813e-02, -3.53177637e-01,\n'
 '         3.23404312e+00,  2.22868729e+00,  4.51427078e+00,\n'
 '        -1.82630324e+00,  1.91413295e+00, -4.37792492e+00,\n'
 '         1.16412008e+00,  2.51799726e+00,  1.47410333e+00,\n'
 '         2.32576275e+00,  1.43761122e+00,  7.61759937e-01,\n'
 '        -8.91638473e-02,  5.52436948e-01, -5.54554760e-01,\n'
 '        -1.48918045e+00, -2.06932879e+00, -1.08773601e+00,\n'
 '        -6.48279190e-01,  1.53585568e-01,  2.61345446e-01,\n'
 '        -1.26588023e+00, -1.20865703e+00,  7.43606687e-03,\n'
 '         6.45262525e-02,  8.68810356e-01,  7.64911461e+00,\n'
 '         4.22080755e+00,  3.45396709e+00,  9.67482269e-01,\n'
 '        -2.56056285e+00, -6.29094839e-02, -1.62214410e+00,\n'
 '         1.26756632e+00,  4.47036147e-01,  7.02332783e+00,\n'
 '         1.91560364e+01,  6.99113274e+00,  3.41767120e+00,\n'
 '         5.43615246e+00, -1.46718252e+00, -5.07452130e-01,\n'
 '        -1.55370521e+00, -3.96745592e-01, -1.80427051e+00,\n'
 '         1.50087237e+00, -6.15348578e-01,  2.01535726e+00,\n'
 '         1.18736401e+01, -2.13685417e+00, -1.02386224e+00,\n'
 '        -1.72438323e-01, -9.47706044e-01, -2.80230093e+00,\n'
 '        -9.42332149e-01,  1.16286063e+00, -2.52897120e+00,\n'
 '         1.18361216e+01,  2.47875467e-01, -1.24076951e+00,\n'
 '         4.91441905e-01,  3.85563588e+00, -7.31423676e-01,\n'
 '        -1.80187330e-01, -2.09037733e+00,  1.69773602e+00,\n'
 '        -1.21227652e-01,  3.00721824e-01, -2.26696587e+00,\n'
 '         4.82252270e-01, -9.22478259e-01, -1.43175912e+00,\n'
 '        -2.28293824e+00, -3.05563712e+00,  5.08083916e+00,\n'
 '        -1.67525077e+00, -9.86177325e-01, -1.68407822e+00,\n'
 '         1.30568945e+00, -8.75197649e-01,  1.60102570e+00,\n'
 '         1.05937576e+00,  2.05284786e+00,  2.54323304e-01,\n'
 '         1.65808952e+00,  1.55572152e+00,  3.85382324e-01,\n'
 '        -3.35488498e-01, -3.48606348e-01, -1.63485892e-02,\n'
 '         4.49736178e-01,  1.13191891e+00,  1.12318361e+00,\n'
 '         1.01620042e+00, -5.01795769e-01,  1.00863075e+00,\n'
 '        -5.14294803e-02, -1.50997460e+00,  1.20049930e+00,\n'
 '         5.31661153e-01,  2.71445870e-01,  1.89462459e+00,\n'
 '        -1.45811307e+00, -6.17593169e-01,  1.83292615e+00,\n'
 '        -1.15433037e-01,  7.45705724e-01, -1.52830517e+00,\n'
 '        -8.28564763e-01,  2.76983738e+00,  2.51953387e+00,\n'
 '        -3.24316800e-01,  6.31094724e-02,  8.23394060e-02,\n'
 '        -2.65157890e+00,  3.28235745e-01,  2.12578964e+00,\n'
 '        -1.07491875e+00,  1.20831415e-01,  1.60641849e-01,\n'
 '        -5.89608729e-01, -8.58932376e-01, -2.28725702e-01,\n'
 '        -4.95298833e-01,  4.61041182e-01,  7.63762474e-01,\n'
 '        -1.04432845e+00, -2.68457842e+00, -1.57430947e+00,\n'
 '        -1.74094224e+00, -1.96544457e+00, -1.15199670e-01,\n'
 '        -1.72137749e+00,  4.67721641e-01,  2.43802357e+00,\n'
 '        -6.36223972e-01,  9.09706503e-02,  7.26337731e-01,\n'
 '        -1.53175843e+00,  9.22450542e-01, -1.58349848e+00,\n'
 '         5.30763984e-01, -2.25527120e+00, -2.65071917e+00,\n'
 '        -1.75235820e+00, -1.03029823e+00, -3.97505462e-01,\n'
 '        -1.79436958e+00,  1.28003433e-01, -3.25642467e-01,\n'
 '        -1.40138459e+00,  5.27599573e-01,  2.46252358e-01,\n'
 '        -1.34683192e+00, -1.56636250e+00,  3.00643235e-01,\n'
 '        -5.34703374e-01, -2.21058083e+00, -1.18797409e+00,\n'
 '        -1.40911472e+00, -9.17457879e-01, -1.53500736e+00,\n'
 '        -1.02468753e+00,  2.63601780e-01,  2.74620414e-01,\n'
 '         1.37350917e-01, -5.18812954e-01, -2.17704868e+00,\n'
 '        -2.32898146e-01, -1.64883709e+00,  1.49136448e+00,\n'
 '         6.16206706e-01, -1.52735436e+00, -1.60391510e+00,\n'
 '         2.28145182e-01, -7.82104790e-01,  9.75950718e-01,\n'
 '         1.04734814e+00, -1.01038051e+00,  3.54367644e-01,\n'
 '         7.14471877e-01,  1.04875696e+00,  3.45323992e+00,\n'
 '        -2.00068921e-01, -5.76153815e-01, -1.08718407e+00,\n'
 '        -1.00420809e+00, -1.30684125e+00, -1.40826929e+00,\n'
 '        -2.87250018e+00, -4.48820448e+00, -1.24862695e+00,\n'
 '        -8.64066303e-01, -3.08503032e-01, -1.16245961e+00,\n'
 '        -4.11869586e-01, -1.47768927e+00, -2.15314090e-01,\n'
 '        -7.73668349e-01, -1.42245734e+00,  6.52541995e-01,\n'
 '        -4.19722140e-01, -5.19207716e-02,  1.84153903e+00,\n'
 '        -1.68922216e-01,  4.88541454e-01, -1.75229621e+00,\n'
 '        -4.64153409e-01,  1.41048825e+00, -8.99865568e-01,\n'
 '        -5.44242621e-01,  9.05415267e-02, -2.07105613e+00,\n'
 '         1.09386683e+00, -1.10951632e-01,  6.66898310e-01,\n'
 '        -2.00724101e+00,  7.53660500e-02,  6.24062419e-01,\n'
 '        -3.26797843e-01, -4.63059843e-01, -1.98640442e+00,\n'
 '        -5.60742795e-01,  2.84149003e+00, -1.92487049e+00,\n'
 '        -2.02072549e+00,  1.43213701e+00, -8.62348497e-01,\n'
 '        -5.99546790e-01,  1.51073027e+00,  5.12572825e-02,\n'
 '        -2.03091264e+00, -3.18287849e-01, -2.30486810e-01,\n'
 '         4.74739552e-01,  1.51668036e+00,  1.61867654e+00,\n'
 '         1.66181457e+00, -4.47625160e-01, -1.20608783e+00,\n'
 '         3.00011015e+00, -2.70912021e-01, -2.66305864e-01,\n'
 '        -7.60219812e-01, -5.85779607e-01, -1.50110769e+00,\n'
 '        -4.81994569e-01,  1.02480030e+00,  5.71034908e-01,\n'
 '         5.05884469e-01, -3.79179573e+00, -3.07310224e-02,\n'
 '         1.34270740e+00, -4.91183937e-01,  4.00534916e+00,\n'
 '        -4.31419790e-01,  2.47042060e+00, -2.39806384e-01,\n'
 '         1.98243463e+00,  1.55477333e+00, -1.66302669e+00,\n'
 '         2.32577944e+00, -5.82224965e-01, -2.04014945e+00,\n'
 '        -4.19618726e-01,  1.19831121e+00,  4.47040230e-01,\n'
 '        -3.91274631e-01,  1.07238472e+00,  6.37595475e-01,\n'
 '        -9.18713629e-01, -2.15436673e+00, -1.92802310e+00,\n'
 '        -1.92504853e-01,  7.83797503e-01, -6.03382707e-01,\n'
 '         6.16653502e-01,  1.70769250e+00, -1.51656032e+00,\n'
 '         1.81085718e+00,  6.34923101e-01, -2.69817281e+00,\n'
 '        -2.53549171e+00,  1.80739045e-01,  1.41394723e+00,\n'
 '        -1.44910908e+00, -1.54553747e+00, -3.28177381e+00,\n'
 '        -5.98855078e-01, -1.39816689e+00,  5.38408399e-01,\n'
 '        -9.50215459e-01,  9.64311659e-01,  2.26873651e-01,\n'
 '        -1.45737970e+00,  1.60968697e+00, -1.47832239e+00,\n'
 '        -1.86096346e+00, -7.17832565e-01, -3.14624667e-01,\n'
 '         9.13927376e-01, -2.66133696e-01, -3.72736961e-01,\n'
 '         1.07774520e+00, -1.15723717e+00, -1.40058947e+00,\n'
 '        -2.46739864e+00, -1.28681016e+00,  4.73373532e-01,\n'
 '         1.25179923e+00, -4.23390448e-01, -1.59252286e-01,\n'
 '        -1.16399431e+00, -9.35347378e-01, -1.35714459e+00,\n'
 '         6.31335259e-01,  1.98088705e+00, -1.01340604e+00,\n'
 '        -1.60961127e+00,  2.69935131e-01,  7.41607070e-01,\n'
 '         8.68850529e-01, -1.51701057e+00, -1.00280285e+00,\n'
 '         2.79594994e+00,  6.81942642e-01, -1.74510121e+00,\n'
 '        -1.44454670e+00, -1.82704806e-01,  4.32790846e-01,\n'
 '         5.80669403e-01, -3.27610350e+00,  1.07042825e+00,\n'
 '        -7.20641375e-01, -1.27254271e+00,  1.19713163e+00,\n'
 '        -7.76159823e-01,  1.25249517e+00,  1.51688039e+00,\n'
 '        -1.55100238e+00,  5.46430826e+00,  6.19702339e-01,\n'
 '         5.90465069e-02, -1.86695719e+00,  1.74244583e+00,\n'
 '        -1.63183641e+00,  2.51891088e+00, -5.50460577e-01,\n'
 '         4.17082667e-01, -1.27154291e+00,  1.18120933e+00,\n'
 '         1.00111127e+00,  1.30465043e+00, -1.34185445e+00,\n'
 '        -6.73083186e-01, -1.03401458e+00,  1.25753248e+00,\n'
 '        -6.99309468e-01, -7.65784860e-01, -7.83933699e-02,\n'
 '        -2.67440617e-01,  4.91259754e-01,  4.50857758e-01,\n'
 '         7.90500939e-01, -1.62752628e+00,  2.07377866e-01,\n'
 '        -3.19479346e-01, -1.88831103e+00,  1.85828269e-01,\n'
 '        -9.56069946e-01,  1.58443975e+00,  5.87128937e-01,\n'
 '         1.22969294e+00, -1.70068777e+00,  2.94263244e+00,\n'
 '         4.30855095e-01, -9.13559139e-01, -3.89286578e-01,\n'
 '        -4.06114429e-01, -1.00140035e+00, -2.61060953e+00,\n'
 '         1.20300722e+00,  1.24157596e+00,  2.31019244e-01,\n'
 '         3.17439723e+00,  6.42396569e-01,  2.88858748e+00,\n'
 '         1.38622284e-01,  1.19523078e-01,  9.17842090e-01,\n'
 '        -1.79720521e-02,  1.18241036e+00,  6.76109254e-01,\n'
 '        -1.55401802e+00, -1.57887661e+00,  1.00812221e+00,\n'
 '         4.84203219e-01, -1.68815696e+00, -1.87553704e+00,\n'
 '         2.08596492e+00,  1.06141543e+00, -6.67317390e-01,\n'
 '         9.03301179e-01,  5.70389152e-01,  9.20869470e-01,\n'
 '         2.44494975e-01,  2.81416941e+00,  3.00738752e-01,\n'
 '        -9.10196960e-01, -1.98777759e+00, -1.96304619e-02,\n'
 '        -9.78072047e-01, -3.54117632e+00, -2.40944409e+00,\n'
 '         1.00587225e+00, -3.07825416e-01,  2.04667306e+00,\n'
 '         2.09367442e+00, -2.91509330e-02, -1.25926065e+00,\n'
 '        -4.19954181e-01,  3.34752798e-02,  8.88871253e-02,\n'
 '        -5.08767180e-02,  2.12339068e+00, -3.71152353e+00,\n'
 '        -1.79701400e+00,  1.70624328e+00,  2.55842239e-01,\n'
 '        -2.61907935e-01,  2.51689696e+00, -2.06337714e+00,\n'
 '        -6.55954838e-01,  7.40934014e-01,  1.13722515e+00,\n'
 '        -1.78433406e+00,  8.16110074e-01, -1.64864302e+00,\n'
 '        -1.28001130e+00,  3.71929377e-01,  4.78995025e-01,\n'
 '        -2.28953433e+00, -3.49386901e-01, -1.06595373e+00,\n'
 '        -1.22632682e+00, -8.28949690e-01, -3.99237633e-01,\n'
 '         7.48481214e-01, -1.15598035e+00, -1.05132437e+00,\n'
 '         5.42442441e-01, -7.23967552e-01,  4.40465540e-01,\n'
 '         5.52126646e-01,  1.64010525e+00,  1.03789473e+00,\n'
 '         3.98940921e-01,  8.60160470e-01, -6.01821005e-01,\n'
 '        -1.19814622e+00,  3.12925005e+00,  4.40102160e-01,\n'
 '         5.14025450e-01, -1.89182103e+00, -2.21966791e+00,\n'
 '         7.95790255e-01,  1.24290690e-01, -8.13123524e-01,\n'
 '        -6.32536054e-01, -1.20318413e+00, -8.17048013e-01,\n'
 '        -2.62621260e+00, -1.22094941e+00,  1.30895173e+00,\n'
 '         1.42055810e+00,  1.21321547e+00,  1.08327460e+00,\n'
 '         5.76128244e-01, -2.21316266e+00,  2.41240978e-01,\n'
 '        -3.29820490e+00,  2.46828809e-01, -1.38158250e+00,\n'
 '        -2.91933727e+00, -2.52822995e-01, -6.34063244e-01,\n'
 '         1.31910491e+00, -2.15890336e+00,  5.54300189e-01,\n'
 '         6.82185054e-01, -3.38937014e-01, -2.71401072e+00,\n'
 '         8.88588667e-01,  4.47183013e-01, -6.22603059e-01,\n'
 '        -6.38091862e-01,  4.43591774e-02,  3.53499949e-01,\n'
 '         1.79704559e+00, -8.20066214e-01,  2.43551075e-01,\n'
 '         4.45323795e-01,  1.74463356e+00,  1.69025108e-01,\n'
 '        -1.49353802e+00,  2.35032892e+00, -2.19629407e-02,\n'
 '        -3.36810768e-01, -1.43948227e-01,  3.20866728e+00,\n'
 '         9.90484953e-02,  5.73756695e-01, -1.62867844e-01,\n'
 '        -1.40861273e+00, -1.39579332e+00, -1.05084240e+00,\n'
 '         7.20171750e-01,  5.54575473e-02,  8.45028698e-01,\n'
 '         1.43457085e-01,  6.60909563e-02, -8.37767363e-01,\n'
 '        -1.48075330e+00, -7.07461953e-01,  5.51920843e+00,\n'
 '        -4.84142214e-01,  1.81855261e-01,  1.67131627e+00,\n'
 '        -2.70895028e+00,  9.48011696e-01,  1.26208627e+00,\n'
 '        -7.50155747e-01, -3.69804800e-01,  1.39168870e+00,\n'
 '         1.03915858e+00,  1.61091769e+00,  1.49046862e+00,\n'
 '        -6.14216745e-01, -1.79658914e+00, -2.16344738e+00,\n'
 '        -5.57210803e-01,  4.18397009e-01, -1.66607606e+00,\n'
 '        -5.33135116e-01, -6.21044636e-01, -3.78691107e-01,\n'
 '         8.85990918e-01,  1.10949349e+00, -6.22514129e-01,\n'
 '         3.84683967e-01, -1.34977460e+00, -2.60883069e+00,\n'
 '        -8.62402677e-01, -2.45186150e-01,  2.12396717e+00,\n'
 '        -1.34177491e-01, -1.45158219e+00, -8.95589590e-04,\n'
 '         1.35361063e+00, -5.05258679e-01,  1.19100738e+00,\n'
 '         9.17387009e-01, -2.86952078e-01, -5.89200735e-01,\n'
 '        -3.46660972e-01,  1.01221418e+00, -5.03917158e-01,\n'
 '        -9.66765761e-01, -9.17644084e-01,  8.45754266e-01,\n'
 '         9.20620143e-01,  4.27463740e-01, -4.31010306e-01,\n'
 '        -2.07031798e+00, -4.12238598e-01, -2.25288224e+00,\n'
 '        -6.08255327e-01, -6.30797744e-01,  1.85877013e+00,\n'
 '        -1.84319782e+00, -1.63221270e-01,  1.12731779e+00,\n'
 '        -2.32758808e+00, -2.85996050e-01, -6.87652409e-01,\n'
 '        -2.05128360e+00,  9.14878726e-01,  2.90472984e-01,\n'
 '         7.68509865e-01,  4.33380187e-01,  2.03095126e+00,\n'
 '         8.21949959e-01, -2.48484612e-01,  3.18761468e+00,\n'
 '         3.36453867e+00, -3.04913312e-01, -2.57678533e+00,\n'
 '         3.29135990e+00, -4.15392399e-01, -1.06223845e+00,\n'
 '        -1.03022051e+00,  4.74422306e-01,  1.22380996e+00,\n'
 '         1.05428076e+00,  3.42165321e-01, -1.28641892e+00,\n'
 '         3.34194779e+00, -1.68062425e+00, -8.10478181e-02,\n'
 '        -1.16302848e+00,  1.53245878e+00, -2.51895666e-01,\n'
 '         3.33133548e-01, -1.32466269e+00,  2.17353058e+00,\n'
 '         1.16733730e-01,  4.91014481e-01,  1.31828904e-01,\n'
 '         1.92027616e+00,  9.87765789e-01, -8.32955539e-02,\n'
 '         1.40335798e+00, -4.23623860e-01, -5.16016543e-01,\n'
 '        -2.04865646e+00, -6.71179056e-01, -9.80302692e-04,\n'
 '        -5.27349234e-01,  1.26278412e+00, -6.42365694e-01,\n'
 '         5.35882831e-01, -8.83276835e-02,  2.52990985e+00,\n'
 '        -2.66378164e-01, -2.68324876e+00,  1.44582129e+00,\n'
 '         2.59780824e-01, -3.53677988e-01,  1.49573937e-01,\n'
 '         1.70063460e+00,  1.29688609e+00,  7.16757417e-01,\n'
 '        -1.78906655e+00, -6.13537073e-01, -4.50735569e-01,\n'
 '         2.38121581e+00, -2.86631155e+00,  4.34230506e-01,\n'
 '         7.60173678e-01, -1.77555740e+00,  1.34144211e+00,\n'
 '         1.11939228e+00, -1.76398945e+00, -1.05590916e+00,\n'
 '         1.33583891e+00, -3.58357835e+00,  1.81077230e+00,\n'
 '         1.22945797e+00, -3.89091134e-01, -1.37937570e+00,\n'
 '         8.30333948e-01,  1.39010102e-01,  1.56579065e+00,\n'
 '        -1.35816836e+00, -1.26559436e-02,  1.65222287e-01,\n'
 '        -2.24104852e-01,  1.19790685e+00, -9.65825081e-01,\n'
 '        -1.99683476e+00, -2.72391748e+00,  1.88620472e+00,\n'
 '        -1.05919695e+00, -1.12029886e+00,  2.38031578e+00,\n'
 '        -1.58358872e+00,  1.00736475e+00,  5.22755623e-01,\n'
 '         2.00599122e+00, -2.14055180e+00, -1.00328624e+00,\n'
 '        -1.16903663e+00, -4.89605606e-01, -2.46666622e+00,\n'
 '        -2.93108433e-01,  1.50743210e+00, -4.46128368e-01,\n'
 '        -1.25526071e-01,  1.17417097e+00, -1.39372230e-01,\n'
 '        -5.89284182e-01,  1.60156679e+00, -2.94920444e-01,\n'
 '         2.20026851e+00,  1.19764066e+00, -2.19508827e-01,\n'
 '        -4.88920957e-01,  6.58783317e-03, -1.19651008e+00,\n'
 '         2.21596456e+00,  6.16188824e-01,  1.85443890e+00,\n'
 '        -1.26139790e-01,  1.44826794e+00, -4.40331876e-01,\n'
 '        -2.04969239e+00, -2.54032850e-01,  1.72900641e+00,\n'
 '         9.37412322e-01, -3.20842862e-01, -1.94370091e+00,\n'
 '        -1.38880599e+00, -1.88189459e+00, -1.25870991e+00,\n'
 '        -1.31742507e-01,  1.13093829e+00, -2.71898121e-01,\n'
 '         1.93015230e+00,  6.87366486e-01,  1.54223144e+00,\n'
 '         1.34586227e+00,  8.03338468e-01,  2.72485137e+00,\n'
 '         2.40791416e+00, -4.28793281e-02,  1.77862310e+00,\n'
 '         1.60232559e-01, -1.86191416e+00,  1.13705182e+00,\n'
 '         1.74362683e+00,  1.91955149e+00, -2.61456072e-02,\n'
 '         2.59795189e-01,  1.30212379e+00,  2.62611651e+00,\n'
 '         8.15712392e-01,  2.62023759e+00, -5.85529625e-01,\n'
 '        -1.47270370e+00,  1.13851726e+00, -5.25548458e-01,\n'
 '        -1.67850018e-01, -2.30101609e+00, -1.73372257e+00,\n'
 '         2.41650915e+00,  1.15619993e+00, -1.33506608e+00,\n'
 '        -1.91293979e+00,  4.47585613e-01,  4.58009291e+00,\n'
 '         6.53774500e-01, -1.58840465e+00,  6.00474358e-01,\n'
 '        -1.26776552e+00, -2.72297025e+00,  2.59497452e+00,\n'
 '        -5.36113203e-01,  1.06380582e+00, -4.28550899e-01,\n'
 '        -1.36526680e+00,  1.08578885e+00, -4.23980355e-01,\n'
 '         2.61884928e-03, -1.24571133e+00, -8.71853054e-01,\n'
 '        -2.01625800e+00,  1.26588297e+00,  4.85416889e-01,\n'
 '         1.19228446e+00, -1.60037912e-02, -4.82487157e-02,\n'
 '        -7.42532194e-01, -1.12225354e+00, -1.09410271e-01,\n'
 '        -2.25140899e-01, -2.90302813e-01, -4.08620209e-01,\n'
 '         9.33912158e-01]])')
'test_inceptionnet | batch_shape is: [1]'
'test_inceptionnet | logits.shape is: ivy.Shape(1, 1000)'
'||'
'test_inceptionnet | indices_test | true_indices is: [258 270 279]'
'test_inceptionnet | indices_test | calc_indices is: [258 270 279]'
'test_inceptionnet | device is: cpu'
'test_inceptionnet | fw is: torch'
'test_inceptionnet | load_weights is: False'
'InceptionV3 | build | layer 1/22 built'
'InceptionV3 | build | layer 2/22 built'
'layer 3/22 built'
'InceptionV3 | build | layer 4/22 built'
'InceptionV3 | build | layer 5/22 built'
'InceptionV3 | build | layer 6/22 built'
'InceptionV3 | build | layer 7/22 built'
'InceptionV3 | build | layer 8/22 built'
'InceptionV3 | build | layer 9/22 built'
'InceptionV3 | build | layer 10/22 built'
'InceptionV3 | build | layer 11/22 built'
'InceptionV3 | build | layer 12/22 built'
'InceptionV3 | build | layer 13/22 built'
'InceptionV3 | build | layer 14/22 built'
'InceptionV3 | build | layer 15/22 built'
'InceptionV3 | build | layer 17/22 built'
'InceptionV3 | build | layer 18/22 built'
'InceptionV3 | build | layer 19/22 built'
'InceptionV3 | build | layer 20/22 built'
'InceptionV3 | build | layer 21/22 built'
'InceptionV3 | build | layer 22/22 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/4 built'
'layer 2/4 built'
'layer 3/4 built'
'layer 4/4 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/6 built'
'layer 2/6 built'
'layer 3/6 built'
'layer 4/6 built'
'layer 5/6 built'
'layer 6/6 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'inceptionNet_v3 | building InceptionV3 model | done 1/3'
'InceptionV3 | forward | input data_format is:NHWC | done 1/27'
'InceptionV3 | forward | data_format is going to be used is:NHWC | done 1/27'
'InceptionV3 | forward | input shape is:ivy.Shape(1, 224, 224, 3) | done 1/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 224, 224, 3) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 111, 111, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 111, 111, 32) | done 2/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 111, 111, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 32) | done 3/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 109, 109, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 64) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 64) | done 4/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 54, 54, 64) | done 5/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 54, 54, 80) | done 3/3'
'InceptionV3 | forward | is:ivy.Shape(1, 54, 54, 80) | done 6/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 80) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 52, 52, 192) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 52, 52, 192) | done 7/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 192) | done 8/27'
'input shape is:ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 32) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 32)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 25, 25, 256) | done 9/27'
'input shape is:ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 10/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 11/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 384) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 96) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 96)'
'one 20/20, output shape is:ivy.Shape(1, 12, 12, 288)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 12/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 12, 12, 768) | done 13/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 14/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 15/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 16/27'
'v3 16/27, output shape is:ivy.Shape(1, 12, 12, 768)'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 5, 5, 192)'
'one 7/20, output shape is:ivy.Shape(1, 5, 5, 768)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 1280) | done 17/27'
'input shape is:ivy.Shape(1, 5, 5, 1280)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 18/27'
'input shape is:ivy.Shape(1, 5, 5, 2048)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 19/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 20/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 5, 5) | done 21/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 1, 1) | done 22/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 27/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 24/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 25/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048) | done 26/27'
'InceptionV3 | forward | fc | done 27/27'
('test_inceptionnet | logits is: ivy.array([[-4.39389375e+04,  '
 '9.84246172e+04,  4.84812938e+05,\n'
 '         5.55214500e+05,  1.47690625e+03,  3.63628438e+05,\n'
 '        -3.52229000e+05,  4.51128000e+05,  3.96311625e+05,\n'
 '        -5.30442375e+05, -1.55134781e+05, -9.22499750e+05,\n'
 '         2.36797406e+05, -6.36576000e+05, -4.26712094e+05,\n'
 '         3.52149938e+05,  6.60691625e+05, -5.92499375e+05,\n'
 '        -4.06186688e+05, -7.52228625e+05, -4.32094969e+05,\n'
 '         4.29697969e+05,  9.64489000e+05,  2.94729312e+05,\n'
 '         5.91607000e+05,  8.36683438e+05,  8.42142000e+05,\n'
 '         3.64074469e+05,  2.22880625e+04, -4.12326875e+05,\n'
 '        -7.41901250e+05, -3.21698812e+05,  1.50683912e+06,\n'
 '        -2.59942859e+05,  3.90094438e+05,  8.29959125e+05,\n'
 '        -8.61166062e+05, -5.19325844e+05, -3.72187688e+05,\n'
 '        -7.50752375e+05, -9.71536406e+04, -6.27462562e+05,\n'
 '         3.41038312e+05, -5.76538062e+05,  5.79890375e+05,\n'
 '         5.06716750e+05, -4.31019406e+05, -1.81874844e+05,\n'
 '         5.35776875e+05,  4.37008031e+05, -9.39448875e+05,\n'
 '         6.46886938e+05,  7.91357344e+04, -5.11322266e+04,\n'
 '        -4.99725062e+05,  1.43486500e+05,  1.29183500e+06,\n'
 '        -8.33114938e+05, -3.83144531e+05, -2.40584328e+05,\n'
 '         9.18481625e+05,  7.00408062e+05, -3.00525188e+05,\n'
 '        -1.09139969e+05, -4.57942188e+05,  6.02311375e+05,\n'
 '         1.54985938e+05, -1.21562047e+05,  3.85255312e+05,\n'
 '        -8.43889141e+04, -3.98706844e+05,  5.35798125e+05,\n'
 '         2.04135828e+05, -1.65905594e+05, -7.47630875e+05,\n'
 '         3.91047500e+05,  9.56754000e+05, -3.32588000e+05,\n'
 '        -3.74760812e+05,  3.22327250e+05, -3.32905594e+05,\n'
 '        -3.08818188e+05,  2.13047406e+05,  1.02472488e+06,\n'
 '         1.88998156e+05,  1.02565109e+05,  1.29529150e+06,\n'
 '        -7.69460875e+05,  4.93466656e+05, -5.70548750e+05,\n'
 '        -2.53229328e+05,  6.40160625e+05,  8.40046562e+04,\n'
 '         3.31516562e+05, -1.00137700e+06, -2.12746438e+05,\n'
 '        -8.73631250e+03, -1.25407025e+06, -4.67028094e+05,\n'
 '        -6.49983125e+04,  3.42304375e+05, -1.18233000e+05,\n'
 '        -3.67183219e+05, -5.12797375e+05,  9.13569750e+05,\n'
 '         1.03851981e+06,  6.87042000e+05,  3.42873438e+05,\n'
 '         3.09586938e+05,  8.31161875e+04,  1.11354508e+05,\n'
 '         6.62295500e+05,  9.06025312e+04, -5.28491688e+05,\n'
 '        -1.02029256e+06,  3.90108969e+05,  1.05451875e+04,\n'
 '        -7.04007875e+05,  2.80310188e+05, -4.87304875e+05,\n'
 '         4.73567844e+05, -9.82702500e+04, -2.46045781e+04,\n'
 '        -1.83313406e+05, -8.40873000e+05, -6.77644625e+05,\n'
 '         4.94950188e+05,  3.59907156e+05,  3.30147938e+05,\n'
 '         4.44316844e+05,  3.20469000e+05,  2.57171906e+05,\n'
 '         2.68060688e+05,  1.29274675e+06, -5.02520375e+05,\n'
 '        -3.10420250e+05, -4.34751469e+05, -3.81463844e+05,\n'
 '         3.98230781e+04,  8.13273375e+05, -2.52809219e+05,\n'
 '         2.71140375e+05,  3.45550000e+05,  1.95123750e+05,\n'
 '        -7.06317312e+05, -5.46303312e+05, -2.91734188e+05,\n'
 '        -9.00911875e+05,  4.17360406e+05,  3.56607781e+05,\n'
 '        -8.05669625e+05, -3.65309688e+05,  2.30087812e+05,\n'
 '        -1.38537338e+06,  4.07263188e+05,  6.16616875e+04,\n'
 '        -1.64001375e+05, -5.48729562e+05, -4.79404250e+05,\n'
 '        -3.55812500e+05, -4.63815188e+05,  9.13228438e+04,\n'
 '        -2.00647953e+05,  2.52474328e+05, -6.41514625e+05,\n'
 '        -4.71452875e+05, -3.94971250e+05, -8.01919812e+05,\n'
 '         6.48765375e+05,  2.13699953e+05,  3.29880875e+05,\n'
 '        -8.64736188e+05,  3.60308812e+05,  1.15922625e+06,\n'
 '        -4.93554062e+04,  5.49044125e+05,  1.33800109e+05,\n'
 '         6.51448000e+05,  2.14835281e+05,  1.88371875e+04,\n'
 '         1.23262325e+06,  2.67390500e+05, -7.88078125e+03,\n'
 '        -8.05606875e+05, -1.06656125e+06,  4.70303312e+05,\n'
 '        -1.41290562e+05, -5.76796188e+05, -5.73783750e+05,\n'
 '         8.25940500e+05,  6.93422656e+04,  3.23251469e+05,\n'
 '         4.76330000e+05, -5.16268938e+05,  8.62378250e+05,\n'
 '         8.86272375e+05,  1.61657812e+04,  6.85277375e+05,\n'
 '        -7.94928938e+05,  5.03969688e+04,  1.77835438e+05,\n'
 '         3.64126031e+05, -9.92944688e+04, -2.73835719e+05,\n'
 '         6.09533875e+05,  7.10170125e+05, -3.19219125e+05,\n'
 '         1.59639719e+05, -5.45952812e+05,  4.17456750e+05,\n'
 '        -4.66092812e+05,  4.65148344e+05, -5.05186312e+05,\n'
 '        -3.18022062e+05,  4.27434812e+05, -3.37945844e+05,\n'
 '        -1.03870938e+05,  4.28121844e+05, -7.65226094e+04,\n'
 '        -5.73673250e+05,  4.39670188e+05, -1.48299438e+05,\n'
 '         3.20936688e+05,  1.12862888e+06, -5.80467250e+05,\n'
 '         2.78321625e+05,  1.01873906e+04, -2.64604375e+05,\n'
 '         4.80461812e+05, -3.19750000e+05, -3.55569375e+05,\n'
 '        -1.02798609e+05, -2.62750906e+05, -1.19586125e+06,\n'
 '         3.85817719e+05, -5.53899625e+05,  7.90655312e+04,\n'
 '        -7.58680750e+05,  5.34622188e+05,  1.78901406e+05,\n'
 '        -1.34957500e+05, -6.39885062e+05,  3.34884094e+05,\n'
 '         6.99139500e+05,  5.92447188e+04, -5.11780969e+05,\n'
 '        -7.74856500e+05, -7.66472500e+04, -1.85141562e+05,\n'
 '         7.26485875e+05,  1.84032375e+05,  2.37847125e+05,\n'
 '        -7.06493500e+05, -1.92012172e+05,  8.23217750e+05,\n'
 '         3.00447500e+05,  2.83576562e+05,  1.02719362e+06,\n'
 '        -4.44721312e+05, -8.67115000e+05,  4.46685375e+05,\n'
 '         2.33269406e+05,  9.41472625e+05,  7.28148938e+05,\n'
 '         2.44077906e+05, -6.79703750e+05, -1.02503047e+04,\n'
 '         4.92678500e+05, -5.43241062e+05,  1.96822141e+05,\n'
 '        -5.08701469e+05, -2.57376875e+05, -3.86270031e+05,\n'
 '         5.61997625e+05, -7.03327000e+05, -4.96106031e+05,\n'
 '        -5.11510859e+04,  7.76679688e+02, -2.08293047e+05,\n'
 '        -6.26464750e+05, -1.71009531e+05, -4.45048938e+05,\n'
 '         1.84419297e+05,  8.84463125e+05,  3.50131188e+05,\n'
 '         5.53039875e+05, -1.03542625e+05, -6.30158281e+04,\n'
 '        -8.49663906e+04,  5.74527750e+05,  5.85352938e+05,\n'
 '        -5.62477312e+05,  1.31474703e+05,  3.00321375e+05,\n'
 '         5.39703250e+05, -4.04727031e+04,  1.02478109e+05,\n'
 '         1.62730125e+05,  5.11307125e+05, -9.22916125e+05,\n'
 '        -5.97444844e+04, -3.52207219e+05,  5.47294062e+05,\n'
 '        -5.51092125e+05,  4.62446125e+05,  1.10912031e+04,\n'
 '        -6.52622812e+04, -4.99050750e+05, -1.14560225e+06,\n'
 '         4.72979188e+05,  5.19224062e+05, -7.99252656e+04,\n'
 '        -2.77340688e+05, -4.19745312e+03, -5.70325000e+05,\n'
 '        -4.97035000e+04,  1.44735391e+05,  2.26488891e+05,\n'
 '        -8.29711688e+05, -2.70329375e+04,  2.80776031e+05,\n'
 '        -3.17557375e+05,  1.45127781e+05, -5.31286133e+04,\n'
 '         4.34867062e+05,  8.73727344e+04, -1.07950523e+05,\n'
 '         1.87128672e+05, -9.24443500e+05, -1.17228438e+04,\n'
 '         5.56309375e+03,  5.58313750e+04,  7.49946312e+05,\n'
 '         3.73366812e+05, -7.39224750e+05,  2.95089375e+05,\n'
 '         2.38753109e+05, -1.75585969e+05, -8.83666500e+05,\n'
 '         5.19983562e+05,  9.87023188e+05,  3.36251375e+05,\n'
 '         4.94528562e+05,  4.11821844e+05, -9.90500688e+05,\n'
 '        -5.38200750e+05, -3.90004531e+05, -9.63746562e+04,\n'
 '         4.06595688e+05,  2.95415781e+05, -2.34727844e+05,\n'
 '        -4.61763625e+05, -5.15441938e+05,  5.86213625e+05,\n'
 '        -1.20744750e+06, -1.09954469e+05,  6.92184250e+05,\n'
 '         4.67086562e+05, -1.95315578e+05,  4.08703750e+05,\n'
 '        -1.27509088e+06,  2.82552188e+05,  1.79647038e+06,\n'
 '         1.70195875e+05, -1.06437300e+06, -7.05301125e+05,\n'
 '        -1.55458725e+06, -1.07661388e+06, -3.56046938e+05,\n'
 '        -3.34539562e+05,  2.12494812e+05,  1.26602550e+06,\n'
 '        -3.05993375e+05, -8.04771875e+05, -2.17453344e+05,\n'
 '        -8.43737250e+05,  3.72253438e+04, -9.29526125e+05,\n'
 '         8.29267500e+04,  5.54950625e+05,  1.05068625e+06,\n'
 '        -1.59496781e+05,  2.20349656e+05, -3.20344812e+05,\n'
 '         6.25304375e+05, -3.85815750e+05, -7.83531938e+05,\n'
 '        -1.11253550e+06, -3.66858906e+04,  5.83104625e+05,\n'
 '        -2.44448344e+05, -2.73051625e+05, -5.64030375e+05,\n'
 '        -5.68531875e+04,  1.66637438e+05, -7.13096375e+05,\n'
 '        -9.29835000e+04, -1.21115012e+06, -4.94075812e+05,\n'
 '        -4.20178250e+05, -2.24862906e+05, -1.90264109e+05,\n'
 '         2.50207141e+05, -8.07869609e+04,  4.87832000e+05,\n'
 '        -5.74602875e+05,  5.66133750e+05, -3.88714938e+05,\n'
 '        -7.98381562e+05,  1.08997000e+05,  5.20114125e+05,\n'
 '         2.33397109e+05, -7.73822938e+05, -1.39031938e+05,\n'
 '        -9.66074062e+04, -3.49880469e+05, -1.59843516e+05,\n'
 '         5.54103750e+05,  4.32966250e+05,  8.93648750e+05,\n'
 '        -4.71364156e+05,  9.51175500e+05,  3.12371875e+03,\n'
 '         5.90630688e+05, -4.48425375e+05, -5.63771375e+05,\n'
 '         2.90711562e+05, -2.04526125e+05, -5.43782625e+05,\n'
 '        -1.60267219e+05, -7.24503125e+03,  3.92462031e+05,\n'
 '         1.09762400e+06,  9.35867938e+05, -5.59550000e+05,\n'
 '        -2.67420000e+05, -7.55556438e+05,  2.71071125e+05,\n'
 '         1.18806138e+06,  2.15504062e+04,  7.40030312e+05,\n'
 '        -2.72569938e+05, -3.52366375e+05, -5.78488250e+05,\n'
 '         3.59312688e+05, -1.73014375e+05, -5.46843812e+05,\n'
 '        -5.09458438e+05, -4.42889062e+05,  1.47603750e+04,\n'
 '         3.44892812e+05, -1.78740984e+05,  9.13860312e+04,\n'
 '        -8.92850078e+04,  8.96043438e+05, -2.88137531e+05,\n'
 '         1.24904531e+04, -6.18320500e+05, -5.88672625e+05,\n'
 '        -5.72856875e+05, -9.57251375e+05, -2.27538234e+05,\n'
 '         7.46839375e+04,  5.15195594e+05,  4.92710000e+04,\n'
 '         6.75562812e+05, -9.83742031e+04,  3.50947375e+05,\n'
 '         6.10042875e+05, -7.85361688e+05, -8.66714500e+05,\n'
 '         5.75657188e+05, -5.33507812e+05,  1.60203788e+06,\n'
 '         9.03747438e+05, -5.15321062e+05, -1.52710406e+05,\n'
 '        -7.54383500e+05,  8.67736375e+05,  9.58211500e+05,\n'
 '        -2.93658125e+04,  3.50841312e+05, -1.83012781e+05,\n'
 '         7.08974562e+05, -2.37764250e+05,  1.16751719e+04,\n'
 '         4.42404344e+05,  1.75691719e+04,  7.69039812e+05,\n'
 '        -4.37455156e+04, -2.76754062e+05, -7.09508625e+05,\n'
 '         5.75134875e+05,  7.22522875e+05, -2.09564781e+05,\n'
 '        -1.26953953e+05, -1.06293812e+06,  5.67800312e+05,\n'
 '         6.80336875e+05, -4.08217219e+05,  2.02454109e+05,\n'
 '         4.36788594e+05, -2.05929078e+05, -1.15693350e+06,\n'
 '        -3.90595719e+05, -8.28479812e+05,  5.71503500e+05,\n'
 '        -6.47157062e+05,  1.40127088e+06, -1.57991453e+05,\n'
 '         2.34699156e+05,  4.01541125e+05,  3.53137062e+05,\n'
 '         3.84770250e+05,  4.84190906e+05,  9.69207125e+05,\n'
 '        -5.39377266e+04, -9.56261000e+05, -1.30355969e+05,\n'
 '         3.19926875e+04, -1.38508375e+05,  8.84738125e+04,\n'
 '         2.56739484e+05, -1.98518125e+05, -5.44257875e+05,\n'
 '         1.01911312e+05,  2.11525766e+05,  3.10814812e+05,\n'
 '        -5.55269938e+05,  5.64525562e+05, -1.43045175e+06,\n'
 '        -6.38843375e+05,  2.63101344e+05,  8.77865875e+05,\n'
 '         4.17654719e+05,  3.97920625e+05,  4.18141000e+05,\n'
 '        -2.46109188e+05, -5.60092875e+05, -9.33537688e+05,\n'
 '         5.86401625e+05, -1.88048562e+05, -6.74563516e+04,\n'
 '        -7.57013250e+05,  2.47096875e+05,  5.45598312e+05,\n'
 '         9.85770125e+05,  1.13783275e+06, -2.69367125e+05,\n'
 '         7.33020938e+04, -4.02538438e+05, -8.25607344e+04,\n'
 '        -5.40355062e+05,  3.29985156e+05,  1.51804175e+06,\n'
 '        -8.25474375e+04,  1.73154781e+05,  6.62064938e+05,\n'
 '         4.69197875e+05, -7.44436875e+04, -5.68114500e+05,\n'
 '         7.22302000e+05, -6.76970156e+04, -3.12300625e+04,\n'
 '        -3.06582500e+04,  8.75556625e+05, -1.05936422e+05,\n'
 '        -2.80285156e+05,  7.07656000e+05, -8.61693938e+05,\n'
 '         4.61260562e+05,  6.29978125e+05, -4.85095875e+05,\n'
 '         1.87819188e+05,  2.04765188e+05,  1.93534938e+05,\n'
 '        -8.51115625e+03, -5.12208031e+05,  1.95831844e+05,\n'
 '         1.28250688e+05, -3.68703438e+05,  1.97993875e+05,\n'
 '         4.88873062e+05,  2.92474125e+05, -7.25923000e+05,\n'
 '         2.53057312e+05, -5.26680562e+05, -8.19260875e+05,\n'
 '         7.37939688e+04,  2.87730500e+05, -8.00156125e+05,\n'
 '        -1.07758262e+06,  1.11814738e+06,  5.98117875e+05,\n'
 '         4.18891625e+05,  6.08076250e+04, -2.34857078e+05,\n'
 '         3.27682969e+05,  8.82756562e+05,  4.41012156e+05,\n'
 '        -2.98878344e+05,  9.54522344e+04, -8.10637188e+04,\n'
 '        -1.43650406e+05, -9.30612750e+05,  8.32157000e+05,\n'
 '         7.33437500e+02,  5.77840312e+04,  2.79426594e+05,\n'
 '         3.50528562e+05,  1.26393125e+04, -4.22896688e+05,\n'
 '        -4.71659344e+05, -8.70451562e+04,  5.75632562e+05,\n'
 '         3.02463125e+05, -1.42176125e+05,  2.10394578e+05,\n'
 '        -2.31769875e+05, -1.23577344e+05,  7.94715625e+04,\n'
 '         5.45395375e+05, -3.27778781e+05, -9.19320750e+05,\n'
 '         1.53455281e+05,  5.23095906e+05,  1.87106031e+05,\n'
 '         4.63958875e+05,  2.24974969e+05,  4.16929062e+05,\n'
 '        -6.39868062e+05, -2.51805969e+05,  8.10361500e+05,\n'
 '         5.94061250e+05, -4.08782781e+05, -5.11627062e+05,\n'
 '         5.26594625e+05,  5.57361000e+05, -6.68919312e+05,\n'
 '        -4.93444688e+05, -5.65347438e+05, -6.74743062e+05,\n'
 '        -2.67129375e+05,  5.41606875e+05, -7.60124750e+05,\n'
 '        -6.57144000e+05,  1.74491312e+05, -2.90490094e+05,\n'
 '        -6.46401750e+05, -5.82831500e+05,  5.63834625e+05,\n'
 '         6.77343375e+05,  3.12103125e+05,  1.62027828e+05,\n'
 '         1.81639469e+05, -2.48434578e+05, -8.37635859e+04,\n'
 '        -5.33153125e+03,  3.58575562e+05, -3.20236375e+05,\n'
 '         5.55975188e+05, -6.87501688e+05, -7.46687500e+03,\n'
 '         8.52292938e+05, -3.80905000e+04, -1.34933906e+04,\n'
 '         8.21964188e+05, -4.89260469e+04, -4.12122625e+05,\n'
 '        -2.31583438e+05, -8.94299453e+04, -3.38182875e+05,\n'
 '         4.04901938e+05,  7.15588562e+05,  7.29522625e+05,\n'
 '         8.33617188e+04,  4.00720781e+05, -6.44654625e+05,\n'
 '        -1.24439281e+05,  2.94471250e+05, -5.43886406e+04,\n'
 '        -1.96428438e+05, -5.15546594e+05,  7.50044000e+05,\n'
 '        -2.31210125e+05,  8.08575938e+05,  8.92782000e+05,\n'
 '         7.70914688e+05,  3.30138938e+05, -4.57459531e+05,\n'
 '        -7.12354297e+04, -5.54969312e+05, -4.57298969e+05,\n'
 '        -6.36418938e+05, -9.94013250e+05, -2.58407500e+04,\n'
 '         1.69087625e+05, -3.62587719e+05,  1.61129953e+05,\n'
 '         4.85240719e+05,  7.70023438e+03, -2.98339562e+05,\n'
 '        -1.99089375e+05,  1.19730062e+05, -2.00248875e+05,\n'
 '        -4.09147688e+05,  4.24659375e+03, -2.11963062e+05,\n'
 '        -2.46654109e+05,  7.82944812e+05,  1.94737062e+05,\n'
 '         7.36558812e+05, -1.93164969e+05,  5.36191062e+05,\n'
 '         7.84667125e+05, -1.22730000e+05,  1.18044750e+05,\n'
 '         8.86350812e+05, -5.71960938e+05, -3.65715438e+05,\n'
 '        -6.45206875e+04, -2.96449219e+05, -8.01916250e+05,\n'
 '         3.23518406e+05,  5.48271500e+05, -6.49752500e+05,\n'
 '         2.91666469e+05, -4.81521406e+05, -9.49532031e+04,\n'
 '         8.04375000e+03, -1.12845450e+06, -1.27521712e+06,\n'
 '        -8.32355875e+05, -7.13873625e+05,  5.09550875e+05,\n'
 '        -5.99327500e+05,  7.91979625e+05,  5.96702562e+05,\n'
 '         4.97884125e+05,  6.69804312e+05, -1.00740150e+06,\n'
 '         2.17026562e+04,  1.48853016e+05,  1.36761828e+05,\n'
 '        -7.03925750e+05,  2.94525000e+05,  4.11433375e+05,\n'
 '        -1.77468969e+05,  7.73458188e+05,  2.22841094e+05,\n'
 '         3.25128938e+05, -1.60618188e+05, -6.28366875e+04,\n'
 '         8.18727250e+05,  3.22114812e+05, -1.15762850e+06,\n'
 '         5.63797000e+05,  9.95277125e+05, -9.23191641e+04,\n'
 '        -6.64520469e+04,  4.90042375e+05,  2.28522500e+05,\n'
 '         2.55924938e+05,  7.45478625e+05, -4.94453125e+05,\n'
 '         2.24820594e+05, -4.42361938e+05, -4.35644812e+05,\n'
 '        -8.94888125e+05, -3.58515375e+05, -1.49690938e+05,\n'
 '        -6.56541250e+04,  8.99873438e+03,  5.82297438e+05,\n'
 '         3.93410562e+05, -3.29486094e+05,  2.76383750e+04,\n'
 '        -6.53348750e+05,  3.09112188e+05,  4.85173594e+05,\n'
 '        -9.30179688e+02, -1.45635812e+05,  8.56551625e+05,\n'
 '         4.19784844e+05,  7.29388625e+05,  3.00796625e+05,\n'
 '         4.03472000e+05,  4.35911562e+04, -5.36025750e+05,\n'
 '        -5.29245430e+04,  3.37428312e+05,  8.11056375e+05,\n'
 '        -3.15109844e+05,  4.00253125e+05, -1.02264359e+05,\n'
 '         1.53137484e+05,  4.34889656e+05,  8.56958125e+04,\n'
 '        -4.05799812e+05,  2.62930938e+05,  3.50020281e+05,\n'
 '         3.72893281e+04,  7.50125938e+05,  3.82155000e+05,\n'
 '        -6.28484375e+05,  1.17058031e+05,  2.58132500e+04,\n'
 '         2.90294250e+05,  6.40755547e+04,  1.11037325e+06,\n'
 '        -5.52221125e+05, -1.10260219e+05, -2.53003719e+05,\n'
 '         2.27651500e+05,  3.44101156e+05, -1.19849344e+05,\n'
 '         8.57193438e+05, -3.28016562e+05, -1.36671000e+05,\n'
 '         7.07664812e+05,  1.92488125e+05, -2.76097219e+05,\n'
 '         3.41188062e+05, -7.52806625e+05, -6.91472812e+05,\n'
 '         1.45477012e+06, -9.85753875e+05,  2.18262031e+05,\n'
 '        -2.26611156e+05,  2.44918281e+05, -4.53014812e+05,\n'
 '        -3.93078500e+05, -4.36097156e+05, -4.39817062e+05,\n'
 '         1.01156150e+06,  3.19147250e+05, -3.69413562e+05,\n'
 '         8.10079312e+05, -3.33957688e+05,  7.70220375e+05,\n'
 '        -2.86982500e+05,  1.91053250e+05, -3.51852969e+05,\n'
 '         7.34446562e+05, -3.20897062e+05, -7.77886562e+05,\n'
 '        -1.05296412e+06, -5.36972188e+04,  4.19061484e+04,\n'
 '        -7.08646812e+05, -2.66422156e+05,  1.23096750e+05,\n'
 '         5.47582875e+05,  8.65623125e+04,  1.46131234e+05,\n'
 '         3.94337375e+05,  2.97234000e+05,  5.83226938e+05,\n'
 '         5.04086562e+05, -5.86024875e+05,  7.69052812e+05,\n'
 '         3.93818562e+05,  4.74457812e+05,  5.40188875e+05,\n'
 '         3.17837312e+05, -1.73493422e+05,  2.70390219e+05,\n'
 '        -2.58550938e+05, -1.17842412e+06, -1.04129400e+06,\n'
 '        -7.98116500e+05,  6.00412500e+04, -1.17377950e+06,\n'
 '         5.95445750e+05, -2.07873281e+05,  1.05194450e+06,\n'
 '         1.04719781e+05, -2.29841562e+04, -5.31323125e+05,\n'
 '        -1.22567266e+04,  1.74366438e+05, -7.36326938e+05,\n'
 '        -1.48067406e+05,  2.98408375e+05, -1.97549594e+05,\n'
 '         8.96677750e+05, -4.75663594e+05,  3.51592281e+05,\n'
 '         1.43840750e+05,  1.40932125e+05, -7.88783281e+04,\n'
 '        -9.91170469e+04, -5.79113000e+05, -3.73025469e+05,\n'
 '         2.00565906e+05,  2.93049531e+05, -4.86295875e+05,\n'
 '        -1.41588797e+05, -3.45125250e+05, -5.04755344e+05,\n'
 '        -1.62273984e+05, -1.89850000e+04, -7.38244250e+05,\n'
 '        -4.55996875e+03,  5.30273688e+05, -9.65211438e+05,\n'
 '         9.49337000e+05, -1.61715031e+05, -4.97158312e+05,\n'
 '        -4.70028719e+05, -1.57549594e+05, -4.20948375e+05,\n'
 '         3.36867719e+05, -4.93883188e+05, -2.10077375e+05,\n'
 '         1.33708500e+05,  1.62244562e+05,  3.75687562e+05,\n'
 '         2.02799062e+05, -6.57330125e+05, -1.73187922e+05,\n'
 '        -4.13377219e+05, -4.42785625e+05, -1.83832891e+05,\n'
 '        -7.56105125e+05, -2.81555719e+05, -1.16842325e+06,\n'
 '         4.68876062e+05, -4.59982531e+05,  1.74020312e+05,\n'
 '        -3.96888719e+05, -2.44425828e+05, -2.47605719e+05,\n'
 '         2.54623938e+05, -4.37465375e+05,  1.80336188e+05,\n'
 '         1.09449469e+05,  5.24851438e+05, -4.55963906e+05,\n'
 '        -1.09461562e+05,  2.95985219e+05,  3.48805625e+04,\n'
 '         5.91141125e+05, -6.95655500e+05,  4.37325688e+05,\n'
 '        -2.37630281e+05,  2.86249625e+05,  1.19162425e+06,\n'
 '         1.08209950e+06,  1.27175266e+05,  1.91824891e+05,\n'
 '         6.76888375e+05, -4.43373125e+05, -2.23207000e+05,\n'
 '         4.54350500e+05,  8.63824250e+05,  6.01848281e+04,\n'
 '        -6.12321500e+05,  1.02268100e+06, -1.39558547e+05,\n'
 '        -1.20536195e+05,  7.47653750e+04,  5.64610312e+05,\n'
 '         3.71013875e+05, -4.30473250e+05,  1.19419047e+05,\n'
 '        -1.16801825e+06,  1.03837575e+06, -2.96049875e+05,\n'
 '         7.29360375e+05, -3.26255344e+05, -9.28617625e+05,\n'
 '        -6.66648875e+05, -3.19268500e+05, -1.71987078e+05,\n'
 '        -1.60516719e+04, -6.68308250e+05, -5.02075562e+05,\n'
 '        -3.40241875e+05,  7.99910859e+04, -6.72142500e+05,\n'
 '         4.21698062e+05, -2.94590562e+05,  4.93827938e+05,\n'
 '         4.00593844e+05, -4.77671062e+05,  6.94809062e+05,\n'
 '        -2.49697688e+05, -2.80016531e+05,  1.28584484e+05,\n'
 '        -1.06362450e+06, -8.80145078e+04,  4.08284188e+05,\n'
 '        -2.17528125e+03,  6.58677812e+05,  5.83860188e+05,\n'
 '        -1.96364609e+04,  5.17960531e+05,  1.24405062e+06,\n'
 '         7.20797875e+05]])')
'test_inceptionnet | batch_shape is: [1]'
'test_inceptionnet | logits.shape is: ivy.Shape(1, 1000)'
'||'
'test_inceptionnet | device is: cpu'
'test_inceptionnet | fw is: torch'
'test_inceptionnet | load_weights is: True'
'InceptionV3 | build | layer 1/22 built'
'InceptionV3 | build | layer 2/22 built'
'layer 3/22 built'
'InceptionV3 | build | layer 4/22 built'
'InceptionV3 | build | layer 5/22 built'
'InceptionV3 | build | layer 6/22 built'
'InceptionV3 | build | layer 7/22 built'
'InceptionV3 | build | layer 8/22 built'
'InceptionV3 | build | layer 9/22 built'
'InceptionV3 | build | layer 10/22 built'
'InceptionV3 | build | layer 11/22 built'
'InceptionV3 | build | layer 12/22 built'
'InceptionV3 | build | layer 13/22 built'
'InceptionV3 | build | layer 14/22 built'
'InceptionV3 | build | layer 15/22 built'
'InceptionV3 | build | layer 17/22 built'
'InceptionV3 | build | layer 18/22 built'
'InceptionV3 | build | layer 19/22 built'
'InceptionV3 | build | layer 20/22 built'
'InceptionV3 | build | layer 21/22 built'
'InceptionV3 | build | layer 22/22 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/4 built'
'layer 2/4 built'
'layer 3/4 built'
'layer 4/4 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/6 built'
'layer 2/6 built'
'layer 3/6 built'
'layer 4/6 built'
'layer 5/6 built'
'layer 6/6 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'inceptionNet_v3 | building InceptionV3 model | done 1/3'
'inceptionNet_v3 | clearning pretrained weights | done 2/3'
'inceptionNet_v3 | loading pretrained weights | done 3/3'
'InceptionV3 | forward | input data_format is:NHWC | done 1/27'
'InceptionV3 | forward | data_format is going to be used is:NHWC | done 1/27'
'InceptionV3 | forward | input shape is:ivy.Shape(1, 224, 224, 3) | done 1/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 224, 224, 3) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 111, 111, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 111, 111, 32) | done 2/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 111, 111, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 32) | done 3/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 109, 109, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 64) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 64) | done 4/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 54, 54, 64) | done 5/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 54, 54, 80) | done 3/3'
'InceptionV3 | forward | is:ivy.Shape(1, 54, 54, 80) | done 6/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 80) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 52, 52, 192) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 52, 52, 192) | done 7/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 192) | done 8/27'
'input shape is:ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 32) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 32)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 25, 25, 256) | done 9/27'
'input shape is:ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 10/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 11/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 384) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 96) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 96)'
'one 20/20, output shape is:ivy.Shape(1, 12, 12, 288)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 12/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 12, 12, 768) | done 13/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 14/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 15/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 16/27'
'v3 16/27, output shape is:ivy.Shape(1, 12, 12, 768)'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 5, 5, 192)'
'one 7/20, output shape is:ivy.Shape(1, 5, 5, 768)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 1280) | done 17/27'
'input shape is:ivy.Shape(1, 5, 5, 1280)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 18/27'
'input shape is:ivy.Shape(1, 5, 5, 2048)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 19/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 20/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 5, 5) | done 21/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 1, 1) | done 22/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 27/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 24/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 25/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048) | done 26/27'
'InceptionV3 | forward | fc | done 27/27'
('test_inceptionnet | logits is: ivy.array([[ 3.00613284e-01, '
 '-6.50986373e-01,  6.48958981e-01,\n'
 '         1.12702441e+00,  3.50028992e-01, -2.85892010e-01,\n'
 '         2.27756643e+00,  6.03426218e-01, -2.28897524e+00,\n'
 '        -3.49199295e+00, -1.30616975e+00, -1.61929548e+00,\n'
 '         7.01833367e-02, -7.05360115e-01,  2.04963231e+00,\n'
 '        -1.04350917e-01, -1.63124418e+00, -5.69623947e-01,\n'
 '        -5.73944449e-01,  7.78214276e-01,  8.18355441e-01,\n'
 '         1.52596772e-01,  8.60010624e-01,  4.66566592e-01,\n'
 '         1.59818757e+00, -2.41246319e+00, -1.08913815e+00,\n'
 '        -6.85554445e-02,  6.77211225e-01, -2.52752423e+00,\n'
 '        -2.25843877e-01,  1.95683718e+00,  2.75728512e+00,\n'
 '        -2.51313019e+00,  1.57705438e+00, -2.69634938e+00,\n'
 '        -1.68597102e-02,  9.11844075e-02, -1.62329519e+00,\n'
 '         8.74501586e-01,  6.19724840e-02,  1.55757129e-01,\n'
 '        -1.29087353e+00,  3.08308005e-02, -2.86214560e-01,\n'
 '        -2.10939741e+00, -1.01070094e+00,  1.52581811e+00,\n'
 '        -5.69352508e-01, -8.46552253e-01, -1.69263875e+00,\n'
 '        -5.78167617e-01,  2.91100740e-02, -8.22643876e-01,\n'
 '         1.78223574e+00,  1.42592895e+00, -1.50801897e+00,\n'
 '        -9.71229196e-01, -2.72904444e+00,  2.71540552e-01,\n'
 '        -9.91096199e-02,  2.48033714e+00, -1.53317475e+00,\n'
 '        -3.07427436e-01,  8.94834101e-02, -4.80707675e-01,\n'
 '         4.27115530e-01,  1.70054424e+00,  6.38983965e-01,\n'
 '         1.59980857e+00, -9.98778939e-01, -4.27963406e-01,\n'
 '        -1.09854114e+00, -1.30185926e+00, -5.27393699e-01,\n'
 '        -1.44157851e+00,  7.17523694e-02,  1.48328876e+00,\n'
 '         1.19442844e+00,  3.25549543e-01, -4.44173694e-01,\n'
 '         6.36953950e-01, -1.26318204e+00,  3.08744311e-02,\n'
 '         3.10360837e+00, -1.16073638e-02, -1.55804646e+00,\n'
 '         1.09254599e-01,  2.66448426e+00,  1.60058665e+00,\n'
 '         8.01732063e-01,  5.04724681e-01, -1.03339565e+00,\n'
 '        -2.96902239e-01,  6.75481081e-01, -5.69400966e-01,\n'
 '         1.03022850e+00, -1.82099044e+00, -2.36756253e+00,\n'
 '         1.56315672e+00, -6.95479631e-01,  5.97599328e-01,\n'
 '        -6.48204267e-01, -8.37408066e-01,  2.30076170e+00,\n'
 '        -3.20219612e+00, -2.16698217e+00,  3.29053402e-02,\n'
 '        -7.92631209e-01, -2.02330828e+00, -6.52172804e-01,\n'
 '        -5.84763050e-01, -6.97484732e-01,  2.69458580e+00,\n'
 '         1.91328180e+00, -2.85218072e+00, -1.12290740e+00,\n'
 '         8.43422055e-01, -6.55026794e-01, -1.28022373e+00,\n'
 '        -1.17253447e+00, -3.30549002e+00,  5.21074891e-01,\n'
 '        -7.48176336e-01, -1.64143014e+00,  1.19737566e-01,\n'
 '         5.36874890e-01,  2.07211304e+00,  4.46312204e-02,\n'
 '        -9.54196215e-01, -1.36828876e+00,  1.92376375e-02,\n'
 '         1.83183026e+00, -2.32504344e+00,  1.60469580e+00,\n'
 '        -1.43734291e-01, -7.44003802e-03, -1.14178062e+00,\n'
 '        -5.28704584e-01, -3.78108716e+00, -2.72030616e+00,\n'
 '        -1.89693821e+00, -3.51258445e+00, -3.33051920e+00,\n'
 '         1.37246633e+00, -1.65908396e-01, -3.21581185e-01,\n'
 '        -1.10648704e+00,  7.70592615e-02,  4.53276873e-01,\n'
 '        -1.68150544e-01, -4.36169714e-01,  1.29633760e+00,\n'
 '        -5.99003673e-01, -1.48829445e-02, -2.80789709e+00,\n'
 '        -2.68613911e+00,  3.21830273e+00, -1.10969448e+00,\n'
 '        -1.08069944e+00,  3.58842075e-01, -2.42928505e+00,\n'
 '        -2.53598452e+00, -1.02656758e+00, -7.08241582e-01,\n'
 '        -1.34461200e+00, -1.89507449e+00, -1.48559201e+00,\n'
 '        -1.80084384e+00,  5.39229214e-01,  1.01735711e+00,\n'
 '        -5.73269486e-01, -1.02539301e+00,  1.94450319e-01,\n'
 '         2.36657143e+00, -1.81690121e+00, -1.91747022e+00,\n'
 '        -4.71683890e-01,  1.42900646e-01, -3.24895292e-01,\n'
 '        -1.69162202e+00, -3.50161076e-01, -1.95660680e-01,\n'
 '        -4.68460858e-01, -1.64301264e+00,  9.23304081e-01,\n'
 '         1.74089825e+00, -2.08136988e+00, -2.62259221e+00,\n'
 '        -4.11942148e+00, -1.63229370e+00, -2.13004351e+00,\n'
 '        -6.09308302e-01, -1.42927408e+00, -2.24309754e+00,\n'
 '         2.57100880e-01, -1.48228419e+00, -1.30078584e-01,\n'
 '        -1.28687537e+00, -7.46823847e-02, -4.10964727e-01,\n'
 '        -1.89476228e+00, -1.66348922e+00,  3.67687035e+00,\n'
 '        -2.47854495e+00, -3.00860310e+00, -2.96947300e-01,\n'
 '         7.76135623e-01, -3.43758178e+00, -2.44271421e+00,\n'
 '        -1.96062469e+00, -1.10324597e+00, -1.09987330e+00,\n'
 '        -3.29883188e-01,  1.29136384e+00, -1.62675798e+00,\n'
 '         2.07602978e-01, -2.56746530e+00, -1.15314996e+00,\n'
 '        -4.71089411e+00, -2.13565016e+00, -1.15384996e+00,\n'
 '         4.14364576e+00,  1.14863098e+00,  3.66193962e+00,\n'
 '        -1.01170921e+00, -2.75379360e-01, -3.75662065e+00,\n'
 '        -3.83886635e-01,  1.15996075e+00,  1.58524621e+00,\n'
 '         1.76561952e+00,  1.39800906e+00,  9.66481209e-01,\n'
 '         9.07381296e-01,  8.29002559e-01,  7.38916993e-01,\n'
 '        -2.15116382e-01, -2.60770202e-01, -1.12781251e+00,\n'
 '         7.52056837e-02,  5.19766450e-01,  1.13533557e+00,\n'
 '        -1.16221046e+00, -1.68180549e+00, -1.33426750e+00,\n'
 '        -2.38495588e+00,  9.23048913e-01,  8.38533306e+00,\n'
 '         6.19466019e+00,  4.39500809e+00,  2.38365292e-01,\n'
 '        -2.55074835e+00, -1.07333803e+00, -5.50219894e-01,\n'
 '         1.61419547e+00,  9.92250204e-01,  7.43330479e+00,\n'
 '         2.04277782e+01,  6.38671780e+00,  4.77719450e+00,\n'
 '         5.60190964e+00, -1.17623889e+00, -3.65611643e-01,\n'
 '        -1.56081951e+00, -1.27253580e+00, -2.04467988e+00,\n'
 '         1.25409648e-01,  9.15927947e-01,  2.19612575e+00,\n'
 '         1.25545359e+01, -2.92883229e+00, -5.22130072e-01,\n'
 '         1.93592727e-01, -5.69442630e-01, -2.17765141e+00,\n'
 '        -1.48407489e-01,  1.18431047e-01, -2.11527228e+00,\n'
 '         1.08014393e+01, -8.80826861e-02, -1.15517891e+00,\n'
 '        -5.44105589e-01,  3.04173040e+00, -1.51607835e+00,\n'
 '        -2.06499505e+00, -2.71204400e+00,  1.05746221e+00,\n'
 '        -4.94513810e-01, -9.01429295e-01, -8.67293119e-01,\n'
 '         9.12870526e-01,  6.32310629e-01, -7.83396483e-01,\n'
 '        -1.12831104e+00, -1.73007488e+00,  4.36111403e+00,\n'
 '        -8.84793162e-01, -1.70443070e+00, -1.12638223e+00,\n'
 '        -2.50568479e-01,  3.37516159e-01,  5.08957148e-01,\n'
 '         3.63463461e-02,  8.87417793e-01,  9.98835564e-01,\n'
 '         1.92518556e+00,  1.21902514e+00,  1.70583439e+00,\n'
 '         8.48137855e-01,  3.62870932e-01, -2.43237421e-01,\n'
 '        -2.18521357e-01,  5.28492928e-02,  1.00280392e+00,\n'
 '         1.23949003e+00,  4.62936819e-01,  7.69561231e-01,\n'
 '        -3.96999806e-01, -1.11673689e+00,  9.29525971e-01,\n'
 '        -8.92262697e-01,  2.51283050e-02,  6.99049830e-01,\n'
 '        -2.42129612e+00, -2.32025814e+00,  2.48374596e-01,\n'
 '        -2.15005755e-01,  1.44998622e+00, -2.09891820e+00,\n'
 '        -7.41747975e-01,  2.24505258e+00,  2.22243738e+00,\n'
 '        -1.15863943e+00,  4.15866554e-01, -3.30996895e+00,\n'
 '        -3.42610884e+00, -1.68706989e+00,  3.63584447e+00,\n'
 '        -2.54266191e+00,  1.24083781e+00, -9.26133037e-01,\n'
 '        -2.10097337e+00,  7.08016813e-01,  6.94798052e-01,\n'
 '        -2.64877677e-01,  2.78615665e+00,  1.72727239e+00,\n'
 '         7.27282465e-01, -1.68526530e+00, -1.89502728e+00,\n'
 '        -2.14086175e-02, -2.53272581e+00, -1.08293068e+00,\n'
 '        -1.80438542e+00,  1.61976862e+00,  3.36435854e-01,\n'
 '        -2.11695790e+00,  1.39926851e-01,  5.25560796e-01,\n'
 '        -4.24121571e+00,  7.64646411e-01, -1.68006349e+00,\n'
 '         1.94765174e+00, -2.73922753e+00, -2.22405863e+00,\n'
 '        -3.66106176e+00, -2.18931580e+00, -1.31581426e+00,\n'
 '        -2.62618685e+00,  1.32110030e-01, -1.57987440e+00,\n'
 '         4.53819335e-01, -1.44891799e-01, -1.60793436e+00,\n'
 '        -5.99885106e-01, -2.98592854e+00,  5.26805878e-01,\n'
 '         3.31369758e-01, -2.60646629e+00, -1.06754732e+00,\n'
 '        -3.66609359e+00, -4.32607174e-01, -1.39825523e+00,\n'
 '        -1.54341495e+00,  1.96737409e+00, -1.70364582e+00,\n'
 '        -2.87014484e-01,  7.17517912e-01, -2.08996630e+00,\n'
 '        -1.54979491e+00,  2.27195024e-03, -1.76163101e+00,\n'
 '         1.05227709e+00, -1.07272053e+00, -6.72768593e-01,\n'
 '         3.67359519e-02, -1.45137775e+00,  1.86410224e+00,\n'
 '        -9.10297334e-02, -6.20621026e-01, -3.23427290e-01,\n'
 '         1.67524815e+00,  1.65419057e-01,  1.98654032e+00,\n'
 '         1.42288661e+00,  5.19177079e-01, -9.93145466e-01,\n'
 '        -7.87799060e-01,  1.05708763e-02,  2.67178327e-01,\n'
 '        -1.80523586e+00, -8.21773767e-01,  2.55379498e-01,\n'
 '        -8.37004363e-01, -1.17924690e+00, -3.45105797e-01,\n'
 '         1.27876139e+00, -1.53988791e+00,  8.78799498e-01,\n'
 '        -2.48795971e-01, -1.53548265e+00, -5.33770680e-01,\n'
 '        -4.64529097e-01,  1.01639891e+00,  2.45802593e+00,\n'
 '        -5.76105893e-01,  6.19094372e-02,  2.27005899e-01,\n'
 '        -1.08050370e+00,  3.36076289e-01,  9.60870385e-01,\n'
 '        -3.65559965e-01,  7.53793597e-01,  5.83060563e-01,\n'
 '         1.29889533e-01, -1.23194814e+00,  1.01482332e+00,\n'
 '         5.48804522e-01,  2.51258105e-01,  2.11949778e+00,\n'
 '         5.90230823e-01,  1.02240610e+00, -1.37295198e+00,\n'
 '         7.08467603e-01,  6.09202147e-01, -6.52164996e-01,\n'
 '        -8.11939478e-01,  2.15299225e+00, -1.93749845e-01,\n'
 '         1.71176565e+00, -4.86837566e-01,  1.55284786e+00,\n'
 '        -1.76515853e+00,  4.52890634e-01, -3.27239484e-01,\n'
 '         1.43037343e+00, -8.03206444e-01, -8.51076365e-01,\n'
 '         1.65613997e+00, -2.98076391e-01, -1.66316569e+00,\n'
 '         2.21463156e+00,  1.86962187e-01,  1.19700539e+00,\n'
 '        -1.00246537e+00, -2.05448914e+00, -9.54172254e-01,\n'
 '        -1.64972830e+00, -4.50334460e-01,  1.15610671e+00,\n'
 '         3.57823610e-01, -1.39381337e+00,  2.79407024e+00,\n'
 '        -1.54384708e+00, -1.40706301e+00,  1.78938794e+00,\n'
 '        -6.81757629e-02,  1.30690229e+00, -1.11537158e-01,\n'
 '         2.12926483e+00,  5.39452672e-01, -3.63850474e+00,\n'
 '         2.25278854e+00, -4.16553169e-01, -3.11686230e+00,\n'
 '        -7.49963224e-01, -3.09697121e-01, -4.32431251e-02,\n'
 '        -4.73178387e-01,  4.92118239e-01,  3.45513582e-01,\n'
 '        -2.21234822e+00, -2.31697869e+00, -6.95989609e-01,\n'
 '        -9.71160948e-01,  2.23399281e-01, -3.39109868e-01,\n'
 '         9.03841674e-01,  2.20634833e-01, -1.98389101e+00,\n'
 '         1.95321977e+00, -2.09668994e-01, -1.77252483e+00,\n'
 '        -1.99794292e+00,  9.60627317e-01,  2.41252136e+00,\n'
 '        -3.98784250e-01, -1.03647530e-01, -9.40399647e-01,\n'
 '        -3.33130211e-01, -4.70688224e-01,  1.31292069e+00,\n'
 '        -1.74489093e+00,  2.43852198e-01,  1.15397310e+00,\n'
 '        -1.79659045e+00,  5.20327210e-01, -1.92590964e+00,\n'
 '        -2.15249181e+00, -2.09752417e+00, -1.20884025e+00,\n'
 '        -1.38658732e-01, -7.70891428e-01, -2.34080941e-01,\n'
 '        -3.83161634e-01, -2.55152178e+00, -2.91521454e+00,\n'
 '        -4.14669216e-01,  4.91483837e-01, -1.53946966e-01,\n'
 '        -3.98339033e-01, -1.75102353e+00, -7.99232304e-01,\n'
 '        -9.93758977e-01, -4.74179030e-01, -1.50461221e+00,\n'
 '         4.37915850e+00,  1.32769644e+00,  2.02969104e-01,\n'
 '        -1.16545105e+00,  3.56462121e-01, -1.38220698e-01,\n'
 '         2.39373541e+00,  1.43020868e+00, -1.34297132e-01,\n'
 '         3.06708336e+00, -1.87045082e-01, -1.52698791e+00,\n'
 '        -8.06409717e-02,  1.39061999e+00, -1.48223788e-01,\n'
 '         1.00603074e-01, -3.83393669e+00,  1.72126770e+00,\n'
 '        -1.96864292e-01, -1.26273215e-01,  2.17876816e+00,\n'
 '         6.13461137e-01, -2.65515447e-01,  1.43504059e+00,\n'
 '        -1.96882307e+00,  4.67500591e+00, -8.63058120e-02,\n'
 '        -1.60532093e+00, -8.15795302e-01,  1.64273724e-01,\n'
 '         5.66248119e-01,  3.27921987e+00,  2.59916872e-01,\n'
 '         1.84721863e+00,  5.35156250e-01,  9.29850102e-01,\n'
 '         2.03448486e+00,  7.12902904e-01,  2.05682904e-01,\n'
 '         7.82842040e-01,  1.91446006e-01,  2.32041502e+00,\n'
 '        -2.22251296e+00,  1.39357698e+00,  2.40517229e-01,\n'
 '        -5.21602631e-01, -4.72168624e-03,  1.82422137e+00,\n'
 '         1.11986685e+00, -8.48031700e-01,  1.46278381e+00,\n'
 '        -1.49224150e+00, -2.65227318e-01, -6.00915700e-02,\n'
 '        -1.34734118e+00,  8.84573519e-01,  7.58930445e-01,\n'
 '         6.83645308e-01, -1.56098103e+00,  1.03738594e+00,\n'
 '         4.86394823e-01, -1.38513851e+00,  1.11295432e-01,\n'
 '        -1.49173367e+00, -4.77577031e-01, -2.91871786e+00,\n'
 '         1.07715845e+00,  1.01167166e+00,  3.30047190e-01,\n'
 '         4.35345745e+00, -3.79341930e-01,  8.69132161e-01,\n'
 '        -4.55519617e-01, -3.74039561e-01, -5.40716946e-01,\n'
 '         1.04758883e+00,  6.36458755e-01,  2.75996423e+00,\n'
 '        -6.24545693e-01, -1.13301539e+00,  1.18804800e+00,\n'
 '         5.69991350e-01, -8.34882796e-01, -9.49974001e-01,\n'
 '         3.89964008e+00,  1.07710660e+00, -1.22343171e+00,\n'
 '         2.00989991e-01, -1.93184093e-01,  4.09331143e-01,\n'
 '         2.99928397e-01,  2.37007570e+00,  2.89539051e+00,\n'
 '        -1.39750433e+00, -1.47813201e+00, -5.93569994e-01,\n'
 '         1.42645276e+00, -2.96797156e+00, -2.14430284e+00,\n'
 '         7.28302002e-01, -1.97274089e-02, -2.35928988e+00,\n'
 '        -6.95885181e-01,  5.92987239e-02, -1.18532382e-01,\n'
 '         2.71851361e-01,  2.06387925e+00, -2.43231356e-02,\n'
 '         2.33295941e+00,  9.88018513e-01, -7.40013868e-02,\n'
 '         4.11159217e-01, -6.92644477e-01, -3.14115405e-01,\n'
 '        -1.08126319e+00,  1.84733605e+00, -4.14255321e-01,\n'
 '         5.40581644e-01, -3.06532717e+00,  1.15501475e+00,\n'
 '        -1.32535708e+00, -6.98244989e-01, -1.56666124e+00,\n'
 '        -1.56479323e+00,  1.23233229e-01,  3.06278199e-01,\n'
 '        -1.15483141e+00, -1.24949813e+00, -7.81165138e-02,\n'
 '         1.64163077e+00, -3.35100085e-01, -1.76374674e+00,\n'
 '         1.27036440e+00,  1.59106493e+00, -1.32512689e+00,\n'
 '         9.93420839e-01, -1.29421663e+00,  3.42049152e-01,\n'
 '         1.10623228e+00,  1.45010400e+00,  6.47617459e-01,\n'
 '         1.99965894e+00,  2.53077596e-01,  7.63028562e-01,\n'
 '        -3.90516901e+00,  2.63782597e+00,  4.47862506e-01,\n'
 '         3.96242440e-02, -2.02856731e+00, -1.78830230e+00,\n'
 '        -4.29477990e-01, -1.33014333e+00,  9.29534435e-01,\n'
 '        -2.62145102e-02,  6.42149210e-01,  1.21789560e-01,\n'
 '        -3.96483421e+00,  9.74549055e-02,  2.73715925e+00,\n'
 '         1.10514092e+00,  5.57101250e-01,  1.27778125e+00,\n'
 '         2.91135341e-01, -2.14718580e+00,  8.33845735e-01,\n'
 '        -2.80285239e+00,  1.08160925e+00, -1.57608604e+00,\n'
 '        -4.06072950e+00,  2.37073541e+00,  1.96053982e-02,\n'
 '        -7.54729629e-01, -1.26642501e+00,  1.70101368e+00,\n'
 '         1.11639154e+00, -9.32680845e-01, -4.78505611e+00,\n'
 '         4.29290205e-01,  1.22739184e+00, -8.84456873e-01,\n'
 '        -1.15400128e-01, -3.41598511e-01,  1.86419070e+00,\n'
 '         6.69349909e-01, -8.94693077e-01, -6.18361235e-01,\n'
 '         1.88904035e+00,  2.58774543e+00, -4.65726614e-01,\n'
 '         1.19684100e+00,  5.57455122e-01, -9.66495395e-01,\n'
 '        -2.89988935e-01,  9.79515076e-01,  3.35111713e+00,\n'
 '        -1.32322037e+00, -1.31979680e+00, -4.85823691e-01,\n'
 '        -8.31769943e-01, -9.68368173e-01, -6.47794306e-02,\n'
 '         1.56812739e+00,  5.17095864e-01,  1.01015639e+00,\n'
 '        -3.81699681e-01, -1.44337642e+00,  7.02118397e-01,\n'
 '        -6.01577818e-01, -2.04349327e+00,  6.55911446e+00,\n'
 '         7.08140016e-01, -4.57273543e-01,  1.25463545e+00,\n'
 '        -3.58702469e+00,  1.59092203e-01, -2.08831832e-01,\n'
 '        -2.06453848e+00, -3.55331969e+00,  4.41307485e-01,\n'
 '        -8.05183172e-01,  5.41467428e-01,  1.85060942e+00,\n'
 '        -2.46818733e+00, -2.26768994e+00, -1.09080243e+00,\n'
 '         8.13363552e-01,  2.16717482e+00,  3.60227346e-01,\n'
 '        -9.19572830e-01,  1.69422030e-01,  1.32567251e+00,\n'
 '         1.63443136e+00,  2.32371902e+00,  1.01709759e+00,\n'
 '        -6.08435392e-01,  1.44343030e+00,  6.46288812e-01,\n'
 '         1.00901341e+00,  7.45780051e-01,  1.56599140e+00,\n'
 '        -1.68918574e+00, -1.79010868e-01,  9.83414769e-01,\n'
 '         1.58504438e+00, -3.11834574e-01, -1.42156780e+00,\n'
 '         3.04704905e-02,  1.79399535e-01, -1.33337236e+00,\n'
 '        -6.92683458e-02,  5.37812769e-01,  3.19192123e+00,\n'
 '         1.94805872e+00, -2.65781641e-01,  7.06657887e-01,\n'
 '         1.79501128e+00,  6.22956037e-01, -2.06912607e-02,\n'
 '        -9.65714514e-01, -7.64106274e-01, -2.29168510e+00,\n'
 '        -1.11457026e+00,  3.48768854e+00,  8.67712438e-01,\n'
 '        -2.38935351e+00,  6.73527718e-01,  3.50343257e-01,\n'
 '        -5.31211078e-01, -3.15576792e-04, -2.02523279e+00,\n'
 '        -1.68323481e+00,  2.58333850e+00,  3.73924673e-01,\n'
 '         2.42313695e+00, -1.59842229e+00,  1.91967201e+00,\n'
 '         1.33835733e+00, -1.50665987e+00,  4.79953349e-01,\n'
 '         2.28252745e+00, -5.42523742e-01, -2.92758197e-01,\n'
 '         1.25459099e+00,  3.28366399e-01, -1.35495543e+00,\n'
 '        -2.78210640e-03,  1.09317052e+00,  8.77916277e-01,\n'
 '        -7.73694515e-02, -1.54327917e+00,  6.45165145e-02,\n'
 '         6.74745738e-02, -2.35188818e+00,  8.66613865e-01,\n'
 '        -1.07480562e+00,  3.94161367e+00,  7.51778036e-02,\n'
 '        -2.00443125e+00,  2.59495080e-01,  2.72051501e+00,\n'
 '         1.09398615e+00, -1.11802161e+00, -3.95517081e-01,\n'
 '         1.48454165e+00,  1.22484076e+00, -3.28688174e-01,\n'
 '         1.92988813e+00,  8.32318366e-01,  6.44520402e-01,\n'
 '        -1.42203629e+00, -9.71507847e-01,  1.63640976e-01,\n'
 '        -1.19676256e+00,  1.69564426e+00, -5.44778764e-01,\n'
 '         2.19075394e+00,  4.56427902e-01,  4.73695040e-01,\n'
 '        -8.95701498e-02, -2.72687936e+00,  9.75568056e-01,\n'
 '         1.50185740e+00, -1.21948469e+00,  7.90108919e-01,\n'
 '         1.23225820e+00, -2.13904619e-01,  1.66692615e+00,\n'
 '        -3.16508007e+00,  8.53935003e-01, -9.11603689e-01,\n'
 '         2.53024668e-01, -1.89160764e+00, -5.61338007e-01,\n'
 '         3.18362927e+00, -1.05723488e+00,  2.55122662e-01,\n'
 '        -1.17475355e+00, -3.94022077e-01, -9.11075115e-01,\n'
 '        -1.35642803e+00, -1.19352567e+00,  4.92479038e+00,\n'
 '         8.32087874e-01, -1.11839366e+00, -1.02255678e+00,\n'
 '         1.54324174e+00, -5.12815490e-02, -8.37103128e-02,\n'
 '         7.61797547e-01,  2.18503237e+00,  1.57795894e+00,\n'
 '        -9.79724348e-01,  1.29189909e+00, -1.78393173e+00,\n'
 '         1.43763900e+00, -1.19609952e-01,  8.24937463e-01,\n'
 '        -1.01672137e+00, -6.03871345e-01,  3.04304624e+00,\n'
 '        -1.51197064e+00,  1.73151910e+00,  1.90519190e+00,\n'
 '         1.71086395e+00, -2.36860824e+00,  1.34201515e+00,\n'
 '        -9.50543761e-01, -2.81862676e-01, -1.21681452e+00,\n'
 '        -1.41126382e+00,  7.72973716e-01, -1.14014709e+00,\n'
 '        -1.33593094e+00,  1.31379783e+00, -5.92063904e-01,\n'
 '         8.36941600e-01,  5.91861665e-01,  1.17513311e+00,\n'
 '         1.95745277e+00, -1.52184367e-01, -1.35929704e+00,\n'
 '        -5.08392975e-03,  7.77957559e-01,  8.35363418e-02,\n'
 '         1.43638515e+00,  5.17679900e-02,  1.97428405e+00,\n'
 '        -1.05707288e+00,  1.98049140e+00, -1.45924699e+00,\n'
 '        -9.81941879e-01,  8.72205496e-01,  2.12014198e+00,\n'
 '         9.93689477e-01, -1.60961127e+00, -1.30725372e+00,\n'
 '        -1.05967629e+00,  2.70845056e-01, -5.63775361e-01,\n'
 '        -2.23259449e+00,  5.36262274e-01, -8.07242751e-01,\n'
 '         1.00653040e+00, -1.56806958e+00,  5.48824072e-01,\n'
 '         1.04021955e+00,  2.17157066e-01,  7.61630297e-01,\n'
 '         2.99016213e+00, -5.63921779e-02, -4.38654005e-01,\n'
 '         1.00318909e+00, -2.00059324e-01,  1.13555980e+00,\n'
 '         2.28199705e-01,  1.80957329e+00,  1.08121550e+00,\n'
 '         1.54039908e+00,  1.86679184e+00,  2.33990765e+00,\n'
 '         1.58426821e+00,  2.90128827e-01, -8.82314205e-01,\n'
 '        -1.64679110e-01,  1.61853635e+00, -8.76783133e-02,\n'
 '        -1.51934028e-01, -8.61491382e-01,  2.35916063e-01,\n'
 '         1.36590958e+00,  2.35504556e+00, -6.56976461e-01,\n'
 '        -2.12895417e+00, -1.22435379e+00,  8.07295442e-01,\n'
 '         2.69673169e-01, -2.29371381e+00, -5.93682051e-01,\n'
 '        -3.12363982e+00, -2.92947268e+00,  1.66267824e+00,\n'
 '        -6.45229638e-01, -4.95112538e-01, -2.39652586e+00,\n'
 '        -1.44281864e-01,  1.15210331e+00, -7.80990779e-01,\n'
 '        -1.01227236e+00, -3.70049715e-01, -1.67484045e+00,\n'
 '         4.79345471e-01,  4.09723139e+00,  1.83940685e+00,\n'
 '         1.28282893e+00, -1.27974761e+00, -7.52909839e-01,\n'
 '        -1.45446444e+00, -1.66024387e+00,  3.82071465e-01,\n'
 '        -1.68435562e+00, -1.30648255e+00,  6.18362427e-03,\n'
 '         1.39090311e+00]])')
'test_inceptionnet | batch_shape is: [1]'
'test_inceptionnet | logits.shape is: ivy.Shape(1, 1000)'
'||'
'test_inceptionnet | indices_test | true_indices is: [258 270 279]'
'test_inceptionnet | indices_test | calc_indices is: [258 270 279]'
'test_inceptionnet | device is: cpu'
'test_inceptionnet | fw is: torch'
'test_inceptionnet | load_weights is: False'
'InceptionV3 | build | layer 1/22 built'
'InceptionV3 | build | layer 2/22 built'
'layer 3/22 built'
'InceptionV3 | build | layer 4/22 built'
'InceptionV3 | build | layer 5/22 built'
'InceptionV3 | build | layer 6/22 built'
'InceptionV3 | build | layer 7/22 built'
'InceptionV3 | build | layer 8/22 built'
'InceptionV3 | build | layer 9/22 built'
'InceptionV3 | build | layer 10/22 built'
'InceptionV3 | build | layer 11/22 built'
'InceptionV3 | build | layer 12/22 built'
'InceptionV3 | build | layer 13/22 built'
'InceptionV3 | build | layer 14/22 built'
'InceptionV3 | build | layer 15/22 built'
'InceptionV3 | build | layer 17/22 built'
'InceptionV3 | build | layer 18/22 built'
'InceptionV3 | build | layer 19/22 built'
'InceptionV3 | build | layer 20/22 built'
'InceptionV3 | build | layer 21/22 built'
'InceptionV3 | build | layer 22/22 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/4 built'
'layer 2/4 built'
'layer 3/4 built'
'layer 4/4 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/6 built'
'layer 2/6 built'
'layer 3/6 built'
'layer 4/6 built'
'layer 5/6 built'
'layer 6/6 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'inceptionNet_v3 | building InceptionV3 model | done 1/3'
'InceptionV3 | forward | input data_format is:NCHW | done 1/27'
'InceptionV3 | forward | data_format is going to be used is:NCHW | done 1/27'
'InceptionV3 | forward | input shape is:ivy.Shape(1, 224, 224, 3) | done 1/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 224, 224, 3) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 111, 111, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 111, 111, 32) | done 2/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 111, 111, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 32) | done 3/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 109, 109, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 64) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 64) | done 4/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 54, 54, 64) | done 5/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 54, 54, 80) | done 3/3'
'InceptionV3 | forward | is:ivy.Shape(1, 54, 54, 80) | done 6/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 80) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 52, 52, 192) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 52, 52, 192) | done 7/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 192) | done 8/27'
'input shape is:ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 32) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 32)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 25, 25, 256) | done 9/27'
'input shape is:ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 10/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 11/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 384) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 96) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 96)'
'one 20/20, output shape is:ivy.Shape(1, 12, 12, 288)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 12/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 12, 12, 768) | done 13/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 14/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 15/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 16/27'
'v3 16/27, output shape is:ivy.Shape(1, 12, 12, 768)'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 5, 5, 192)'
'one 7/20, output shape is:ivy.Shape(1, 5, 5, 768)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 1280) | done 17/27'
'input shape is:ivy.Shape(1, 5, 5, 1280)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 18/27'
'input shape is:ivy.Shape(1, 5, 5, 2048)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 19/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 20/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 5, 5) | done 21/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 1, 1) | done 22/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 27/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 24/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 25/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048) | done 26/27'
'InceptionV3 | forward | fc | done 27/27'
('test_inceptionnet | logits is: ivy.array([[ 3.45443469e+05,  '
 '3.99757688e+05,  1.24189750e+05,\n'
 '         1.41960859e+05,  2.19247891e+05,  1.48231859e+05,\n'
 '        -5.68108000e+05,  1.01333719e+06,  1.44181412e+06,\n'
 '         2.44038594e+05,  2.07739375e+04,  8.54791500e+05,\n'
 '        -1.52825094e+05,  2.40163688e+05,  1.38616938e+05,\n'
 '        -1.10222375e+05,  3.28205375e+05, -4.22925375e+05,\n'
 '        -5.40426938e+05, -1.57460312e+05, -7.10461625e+05,\n'
 '         2.66850562e+05, -2.71193656e+05, -6.22515000e+04,\n'
 '        -3.05257250e+05, -3.74782375e+05, -1.78559812e+05,\n'
 '        -2.84062969e+05, -2.00664422e+05, -9.33864688e+04,\n'
 '         5.05895500e+05, -2.05209656e+05,  8.51121562e+04,\n'
 '         4.13349969e+05,  3.14795125e+05,  4.94594688e+05,\n'
 '         4.58780875e+05, -2.86381312e+05, -4.07581000e+05,\n'
 '        -7.64537000e+05,  2.22943891e+05,  1.69111266e+05,\n'
 '         3.51447438e+05, -4.14700750e+05, -7.31060000e+05,\n'
 '        -3.30447625e+05,  8.55324000e+05,  2.35527578e+04,\n'
 '         3.16624938e+05, -7.37063281e+04,  2.22120906e+05,\n'
 '        -2.15864344e+05,  3.28644219e+05, -3.31107812e+05,\n'
 '         7.46815125e+05,  1.31843562e+05, -1.70593891e+05,\n'
 '        -3.31947938e+05, -1.38996844e+05, -9.65076000e+05,\n'
 '         2.54722359e+05, -5.64059875e+05,  4.65042000e+05,\n'
 '        -1.67674125e+05,  3.55321281e+05, -2.52041594e+05,\n'
 '        -1.77571672e+05,  3.01105156e+05,  6.94015500e+05,\n'
 '         1.53443062e+05,  4.27408469e+05, -6.52044375e+05,\n'
 '        -1.54148984e+05,  2.53509656e+05, -1.72130219e+05,\n'
 '        -2.49507281e+05,  9.86670062e+05, -3.62364812e+05,\n'
 '         6.27603062e+05,  5.35453000e+05, -8.49323375e+05,\n'
 '         7.33373125e+05, -2.99887344e+05, -7.53071250e+04,\n'
 '         9.07856062e+05, -2.73322125e+05, -2.33465062e+05,\n'
 '        -7.99679250e+05,  8.69889531e+04,  7.14002125e+05,\n'
 '         4.07043750e+03, -2.17109453e+05,  6.43109250e+05,\n'
 '        -4.45123969e+05,  7.95769000e+05,  2.06038625e+05,\n'
 '         3.65839000e+05,  8.74489938e+05, -5.21524938e+05,\n'
 '         8.60711172e+04,  2.71272156e+05,  5.67954250e+05,\n'
 '        -7.29463125e+04, -2.06659172e+05, -2.78417094e+05,\n'
 '        -9.44265000e+04, -5.60455188e+05, -1.92733406e+05,\n'
 '         2.65734469e+05,  6.69607312e+05,  8.47980750e+05,\n'
 '         6.20674438e+05, -9.71181172e+04,  7.13892125e+05,\n'
 '        -2.34026609e+05,  9.54604062e+04,  2.53963375e+05,\n'
 '         7.95383125e+05,  6.07948312e+05,  2.15510578e+05,\n'
 '         6.14845375e+05,  3.18740250e+05,  9.04819875e+05,\n'
 '         4.38717594e+05,  1.60466250e+04, -5.07160438e+05,\n'
 '        -1.39579750e+05,  1.24099984e+05,  2.36542938e+05,\n'
 '        -1.11036891e+05,  3.56667031e+04,  6.68076188e+05,\n'
 '        -2.75039844e+05,  5.32238750e+04, -1.08000050e+06,\n'
 '        -7.15695375e+05,  1.78630250e+05,  2.62905312e+05,\n'
 '        -1.07393594e+05, -2.34051109e+05, -2.21458234e+05,\n'
 '         5.83534750e+05, -1.80416234e+05, -1.10989800e+06,\n'
 '        -2.95115094e+05, -3.39966500e+05,  3.32535219e+05,\n'
 '        -9.12268125e+04, -5.39145375e+05, -2.84586312e+05,\n'
 '         4.11001758e+04, -8.32435000e+04,  1.94790969e+05,\n'
 '         1.23543400e+06, -8.10396625e+05,  4.97925219e+05,\n'
 '        -2.51661156e+05, -2.91968281e+04, -5.62011000e+05,\n'
 '         9.61958188e+05,  2.96836406e+05,  3.69127719e+05,\n'
 '         3.57259250e+05,  7.60588062e+05, -6.68733359e+04,\n'
 '        -2.83810500e+05, -1.06535862e+06, -5.84857125e+05,\n'
 '        -8.49778562e+05,  7.23044750e+05,  2.65786375e+05,\n'
 '         2.40148969e+05,  6.81966438e+05,  1.00536931e+06,\n'
 '         3.73517094e+05,  4.95822312e+05,  4.03636188e+05,\n'
 '         3.73641062e+05, -4.21345188e+05, -7.70535781e+04,\n'
 '         1.63101469e+05, -3.52226875e+05,  1.15008962e+06,\n'
 '        -6.98996562e+04, -1.20881094e+05,  5.06321406e+05,\n'
 '        -2.33400938e+04, -3.56213969e+05,  3.69362688e+05,\n'
 '         7.32543750e+05, -2.70900375e+05, -6.72828312e+05,\n'
 '        -4.34129312e+05, -4.67747469e+05,  1.45647578e+05,\n'
 '         3.82952438e+05, -1.65901562e+03,  7.31596125e+05,\n'
 '        -6.84623438e+05,  9.88548000e+05,  2.27723328e+05,\n'
 '         8.11430250e+05,  3.56278688e+05,  4.35605031e+05,\n'
 '        -1.00205806e+06,  1.27762031e+05,  7.99453750e+04,\n'
 '         3.15969812e+05, -8.33756125e+05,  4.29915562e+05,\n'
 '         4.82695562e+05, -2.71714406e+05, -7.38977031e+04,\n'
 '        -5.08784000e+05,  2.31260312e+05,  2.27082188e+05,\n'
 '         4.15548188e+05, -3.19370750e+05, -1.25970469e+04,\n'
 '        -3.99644938e+05,  8.11856500e+05,  2.02285141e+05,\n'
 '        -9.58628125e+03, -6.57101438e+05,  8.61860938e+05,\n'
 '         1.05028344e+05, -5.77537438e+05, -1.17988562e+05,\n'
 '        -9.23658250e+05,  1.36806594e+05,  2.32747906e+05,\n'
 '         1.24328406e+05, -6.36676875e+05,  6.76415125e+05,\n'
 '        -2.64280125e+05,  4.34143562e+05, -7.90605062e+05,\n'
 '        -1.01262912e+06,  9.42673750e+05,  9.63101125e+05,\n'
 '        -2.42944062e+05,  5.31036188e+05,  2.09848312e+05,\n'
 '        -5.34136000e+05, -3.55804062e+05, -3.79589406e+05,\n'
 '        -1.58835234e+05, -3.30908312e+05, -9.27980938e+04,\n'
 '        -2.21523406e+05, -5.81442938e+05, -5.01877875e+05,\n'
 '         4.46258844e+05, -2.42467688e+05, -5.24516688e+05,\n'
 '         3.90581172e+04,  6.46909438e+05, -1.69176969e+05,\n'
 '        -2.29232125e+05, -8.27120375e+05, -3.93204688e+05,\n'
 '        -3.23633312e+05, -4.17469875e+05,  2.35158750e+04,\n'
 '         7.74750875e+05,  6.92546375e+05, -2.00852375e+05,\n'
 '         3.16848125e+04, -1.33758016e+05,  1.12186859e+05,\n'
 '        -7.71378625e+05,  4.01402688e+05,  6.47644141e+04,\n'
 '         2.21668406e+05, -4.09772875e+05,  4.01807531e+05,\n'
 '        -9.01864062e+05, -6.78480688e+05, -5.01428125e+05,\n'
 '        -1.62772219e+05, -1.78429344e+05,  5.34704938e+05,\n'
 '        -4.09249844e+05,  8.51892188e+03,  6.08170312e+04,\n'
 '         4.15613406e+05,  6.09175500e+05, -2.50200531e+05,\n'
 '         1.29670750e+05, -1.70036016e+05,  2.29197828e+05,\n'
 '         1.50897719e+05,  3.24804938e+05, -1.61855938e+05,\n'
 '         3.94545062e+05,  1.61704859e+05,  7.81455250e+05,\n'
 '        -7.23305312e+05, -4.91548000e+05,  4.38978719e+05,\n'
 '         2.41663359e+05,  7.60869375e+05,  4.36727031e+05,\n'
 '         6.04223438e+04,  8.67258750e+04, -2.59828094e+05,\n'
 '        -4.29097500e+05, -3.23175469e+05,  3.78205656e+05,\n'
 '         3.09715375e+05, -6.78768375e+05, -5.70021500e+05,\n'
 '         2.16265000e+04, -9.85331250e+04,  6.01847000e+05,\n'
 '         4.67558688e+05, -4.42737688e+05,  1.04040148e+05,\n'
 '        -1.08714273e+05,  4.10157562e+05, -5.80613375e+05,\n'
 '         1.15075000e+05,  4.18679875e+05,  1.74193609e+05,\n'
 '        -1.49264625e+05, -5.98714688e+05, -3.72943250e+05,\n'
 '         8.07557375e+05,  3.08851344e+05,  8.95345562e+05,\n'
 '         6.50991375e+05, -7.25896812e+05, -2.44743625e+05,\n'
 '         1.45625312e+05, -5.04664625e+05,  7.97288812e+05,\n'
 '         2.41933938e+05,  3.92380438e+05, -4.88427688e+05,\n'
 '         8.06453312e+05, -2.09281406e+04, -3.88486344e+05,\n'
 '         1.39978219e+05,  2.70539625e+05, -2.50639062e+03,\n'
 '        -7.48081375e+05,  8.20735000e+04, -9.99478625e+05,\n'
 '         9.73860312e+04, -3.03564969e+05,  4.47225000e+04,\n'
 '         3.64836656e+05,  2.09012750e+05,  9.84317344e+04,\n'
 '        -4.90051688e+05,  1.39093633e+04,  9.54791562e+04,\n'
 '         1.87016000e+05, -2.51663188e+05,  4.97830812e+05,\n'
 '        -1.06979800e+06, -2.18400750e+05, -8.74968250e+05,\n'
 '         1.66954812e+05, -6.56578375e+05,  4.63722656e+03,\n'
 '        -6.10605750e+05, -9.47052266e+04, -1.24414156e+05,\n'
 '         7.29812875e+05,  6.20998375e+05, -9.00252750e+05,\n'
 '         3.80252344e+05,  2.29964953e+05, -9.06053125e+04,\n'
 '        -3.86795625e+05,  4.44429125e+05, -1.01784344e+05,\n'
 '         4.19481969e+05,  1.40241312e+05, -1.04951875e+05,\n'
 '        -6.61982750e+05, -3.91608312e+05, -7.88976562e+04,\n'
 '        -4.80785812e+05, -3.77217312e+05,  3.71005000e+05,\n'
 '        -4.83987750e+05, -1.02651828e+05,  4.63720039e+04,\n'
 '         5.22454375e+04, -6.59277812e+05,  7.24859062e+04,\n'
 '         1.32624062e+05, -6.48259188e+05,  5.40504531e+04,\n'
 '         2.17862094e+05,  6.77453594e+04,  1.72072375e+05,\n'
 '         6.27649625e+05,  6.28683125e+04, -5.44079938e+05,\n'
 '         8.42203062e+05, -9.67966719e+04,  4.26710500e+05,\n'
 '        -4.59853312e+05,  7.70458438e+04,  7.94565250e+05,\n'
 '        -5.48365688e+05,  5.84336250e+05,  7.93581094e+04,\n'
 '         2.57477891e+04, -4.90727562e+05,  2.79389219e+04,\n'
 '        -5.85399438e+05, -1.77511328e+05, -1.67777422e+05,\n'
 '         5.77594062e+04, -1.62454719e+05,  9.45674219e+04,\n'
 '        -6.92236625e+05, -6.16038188e+05, -1.55070875e+05,\n'
 '        -1.36430297e+05,  5.58648562e+05,  3.09586000e+05,\n'
 '         4.79288844e+05, -7.50143750e+04, -8.73021797e+04,\n'
 '         1.78468750e+05,  3.90865562e+05,  8.46493375e+05,\n'
 '        -9.14090188e+05, -5.36089125e+05, -2.28603203e+05,\n'
 '         9.86653594e+04, -7.32240375e+05,  1.05993891e+05,\n'
 '        -5.53381125e+05, -9.14933875e+05,  1.14708275e+06,\n'
 '         5.45125938e+05,  4.70971656e+05,  1.20750094e+05,\n'
 '         1.99304438e+05, -3.42431812e+05, -2.93880438e+05,\n'
 '        -3.49214062e+05, -6.53207062e+05,  2.27087875e+05,\n'
 '         5.52015750e+05, -5.07075438e+05, -2.67687812e+04,\n'
 '        -2.63350188e+05,  3.72891750e+05, -4.41880969e+05,\n'
 '         4.58174938e+05, -1.18301625e+06,  2.34271234e+05,\n'
 '         1.41123000e+05, -2.79015656e+05,  1.56530898e+04,\n'
 '        -6.01114500e+05, -3.15939969e+05, -1.74129062e+05,\n'
 '        -1.72335766e+05,  2.79627625e+05,  2.06619359e+05,\n'
 '         1.14258609e+05,  5.06694500e+05,  6.83371688e+05,\n'
 '        -3.66007188e+05,  1.11677406e+05,  1.78273969e+05,\n'
 '         4.73681211e+04, -3.66170547e+04, -1.98531422e+05,\n'
 '         1.04198047e+05, -4.35097695e+04, -1.11469512e+06,\n'
 '        -1.83876162e+06, -8.72767500e+05, -5.16721953e+04,\n'
 '         1.38571203e+05,  2.40414453e+05,  1.46489125e+05,\n'
 '         2.62169375e+05, -4.88895906e+05, -2.41029500e+05,\n'
 '        -3.93417281e+05,  4.97609688e+04, -3.20719125e+05,\n'
 '        -2.82260938e+05,  5.35838281e+04,  9.12891719e+04,\n'
 '        -2.14153562e+05, -3.53259938e+05,  6.60493125e+05,\n'
 '        -1.59725562e+05, -3.72795125e+05, -3.61745688e+05,\n'
 '        -6.38672938e+05, -1.57585312e+05, -7.56621875e+05,\n'
 '        -3.73192750e+05, -1.94661297e+05, -4.74687500e+03,\n'
 '         6.81696875e+05,  3.66002531e+05, -8.45325938e+04,\n'
 '         2.73148781e+05, -6.73676250e+04, -9.20106188e+05,\n'
 '         5.44840312e+05, -2.31287625e+05,  4.95758094e+05,\n'
 '         4.94570312e+05,  1.10877275e+06,  9.47960156e+04,\n'
 '        -7.70807625e+05, -8.62414938e+05,  2.26726875e+05,\n'
 '         4.92705781e+05, -1.14553094e+05, -1.98135312e+05,\n'
 '        -6.49737734e+04, -1.46291000e+05,  2.90481688e+05,\n'
 '        -9.82473375e+05,  1.23685242e+05, -2.02903906e+05,\n'
 '        -2.19951133e+04, -1.54837000e+05, -1.85155406e+05,\n'
 '         1.38816750e+05,  8.24266172e+04, -5.37326328e+04,\n'
 '         8.12523594e+04,  3.37105094e+05,  4.31479656e+05,\n'
 '        -3.93107688e+05, -2.15039344e+05,  1.94795812e+05,\n'
 '         4.68272062e+05,  1.59872219e+05, -7.12749375e+04,\n'
 '         2.23922656e+05, -5.02881562e+05,  4.93673906e+04,\n'
 '        -7.80359766e+04,  7.18179000e+05,  3.60375562e+05,\n'
 '         7.85956484e+04,  3.64474375e+04,  3.62694719e+05,\n'
 '        -4.30866500e+05, -6.56865750e+05,  3.65308000e+05,\n'
 '         1.81526266e+05, -4.33654688e+05, -1.11531516e+05,\n'
 '        -8.37005250e+05,  5.69317062e+05,  4.46314961e+04,\n'
 '        -1.87352031e+05, -9.28682188e+04, -8.52778000e+05,\n'
 '        -9.51318125e+05,  3.10600938e+05,  2.01296359e+05,\n'
 '         1.57312750e+05, -1.99772844e+05,  3.48653500e+05,\n'
 '         1.26076469e+05,  5.47172500e+04, -1.15704662e+06,\n'
 '        -9.56184500e+05, -5.70660250e+05,  7.78574000e+05,\n'
 '         2.47253797e+05,  4.22662500e+04, -4.26044438e+05,\n'
 '         8.46654188e+05,  5.94281625e+05,  8.45031562e+04,\n'
 '         1.70921469e+05,  2.57570078e+05, -1.96499531e+05,\n'
 '         5.82754062e+05, -3.25458031e+05,  8.45934531e+04,\n'
 '        -4.33008984e+04,  4.86065781e+04,  1.94317438e+05,\n'
 '         4.29968125e+04, -2.66339125e+05, -1.76337062e+05,\n'
 '         7.94081938e+05,  3.88905125e+05, -2.95133438e+05,\n'
 '        -6.32363906e+04,  1.00243444e+06, -6.18880625e+05,\n'
 '         1.45488500e+05,  1.80478391e+05,  1.08513138e+06,\n'
 '        -6.76364375e+05, -1.14156900e+06,  5.73813750e+05,\n'
 '         7.16922000e+05, -1.28607950e+06,  1.60872438e+05,\n'
 '         4.54823656e+05, -1.71543016e+05, -5.66886938e+05,\n'
 '        -1.93193438e+04,  6.46144125e+05,  6.91139250e+05,\n'
 '        -3.42670656e+05,  1.31675781e+05, -2.64438031e+05,\n'
 '        -4.51071594e+05,  1.58904766e+04, -3.26254062e+05,\n'
 '         8.68169375e+04, -1.99389562e+05,  3.38716938e+05,\n'
 '        -2.12836719e+05,  5.05089750e+05, -4.00911469e+05,\n'
 '         5.93205625e+05,  7.68999125e+05, -6.33274531e+04,\n'
 '         2.05041578e+05,  2.23669375e+04,  9.13163281e+04,\n'
 '        -6.24421500e+05, -9.77758250e+05,  3.72216812e+05,\n'
 '        -3.50802500e+05,  1.86742656e+05,  4.71405125e+05,\n'
 '        -9.63124375e+04, -7.27322062e+05,  3.38476656e+05,\n'
 '        -5.10750469e+05, -1.83340438e+05,  5.15011812e+05,\n'
 '        -7.04699000e+05, -4.53756062e+05, -8.01501250e+04,\n'
 '         2.23332750e+05, -3.24351375e+05,  8.85851562e+04,\n'
 '         3.68519375e+05,  1.23148812e+06, -2.10432781e+05,\n'
 '        -4.53428688e+05, -6.05151562e+04, -1.18342938e+05,\n'
 '         5.33083688e+05,  5.50171000e+05,  6.22572344e+04,\n'
 '         2.37791594e+05,  4.98047000e+05,  4.25100938e+05,\n'
 '        -3.35617312e+05, -3.21195000e+04, -5.88182625e+05,\n'
 '        -1.95818000e+05, -3.83968594e+05, -4.51712406e+05,\n'
 '        -6.00542188e+05, -6.47765938e+04,  2.74418500e+05,\n'
 '         7.34361625e+05,  1.28619500e+05, -7.06732375e+05,\n'
 '        -4.44063125e+05, -4.66201625e+05,  2.05301312e+05,\n'
 '        -3.73971062e+05, -9.06122344e+04, -7.29241375e+05,\n'
 '         3.15384031e+05,  1.05107350e+06, -2.83740938e+05,\n'
 '        -5.44216625e+05, -3.12880344e+05, -7.44430500e+05,\n'
 '        -4.07481250e+03, -2.97546250e+04, -4.33031500e+05,\n'
 '         3.26956953e+04,  2.97866406e+05,  1.30029281e+05,\n'
 '        -1.94250156e+05,  5.50119438e+05, -4.52234844e+05,\n'
 '         9.75181250e+04, -8.31577688e+05, -3.04911062e+05,\n'
 '         8.35568750e+03,  4.89251906e+05, -7.75178000e+05,\n'
 '        -2.70178562e+05, -1.29533164e+05, -3.51118031e+05,\n'
 '         1.38517047e+05, -3.65351688e+05, -9.86812938e+05,\n'
 '        -3.06808219e+05,  2.61137125e+05, -2.04436094e+05,\n'
 '        -4.30988625e+05,  7.83280062e+05, -6.95424188e+05,\n'
 '         1.15642438e+06, -5.70993625e+05, -6.85021125e+05,\n'
 '         7.23097344e+04,  1.44850938e+05,  3.73020250e+05,\n'
 '        -6.30502812e+05, -2.53790688e+05, -1.65239922e+05,\n'
 '         4.81443719e+05, -9.42926250e+04, -5.92109500e+05,\n'
 '        -6.62589125e+05, -4.57278625e+05, -6.51584688e+04,\n'
 '         3.11184750e+05, -2.85955375e+05,  7.59633875e+05,\n'
 '         6.24097375e+05,  3.61626750e+05, -4.47440000e+05,\n'
 '        -4.35538281e+05,  2.56501891e+05, -9.22267625e+05,\n'
 '         2.41182938e+05, -8.85926250e+04, -3.96169812e+05,\n'
 '         4.38498250e+05,  6.47074688e+04, -6.74075625e+04,\n'
 '        -4.68437938e+05,  3.68522688e+05,  2.20683000e+05,\n'
 '         3.16119500e+05, -3.72277500e+05,  3.34427750e+05,\n'
 '         2.03599188e+05,  6.70584688e+04, -3.43068188e+05,\n'
 '         6.20102250e+05,  5.09348562e+05, -9.51796406e+04,\n'
 '        -8.59822250e+05,  4.16176062e+05, -1.06169875e+05,\n'
 '         1.22230375e+06,  4.61100000e+04,  1.96854531e+05,\n'
 '        -5.27423812e+05, -7.58150000e+04, -1.21964262e+06,\n'
 '        -4.90662594e+05,  5.64115188e+05, -1.39782000e+05,\n'
 '         1.51232891e+04,  4.82852906e+05,  6.94072188e+05,\n'
 '        -1.86381281e+05,  1.62443531e+05,  4.48930719e+05,\n'
 '         5.72433250e+05,  1.00176162e+06,  5.70042125e+05,\n'
 '        -4.48148156e+05, -1.94922500e+05,  1.39051438e+05,\n'
 '        -5.33095500e+05,  5.97501062e+05,  2.78292750e+05,\n'
 '         5.82137266e+04,  7.08141250e+05, -1.41429500e+06,\n'
 '         6.44992375e+05,  4.10708594e+03,  3.57598469e+05,\n'
 '        -9.40278750e+05, -6.69100188e+05, -3.28185812e+05,\n'
 '        -4.81159188e+05, -4.04459750e+05,  6.63346312e+05,\n'
 '         4.70833688e+05, -7.99803812e+05,  4.08606125e+05,\n'
 '         3.74979281e+05,  2.19127234e+05, -6.25379688e+03,\n'
 '        -5.69879125e+05, -6.41990500e+05, -6.72235781e+04,\n'
 '        -3.85884031e+05,  5.42896500e+05, -9.54931375e+05,\n'
 '        -4.53256125e+05, -7.51641312e+05,  4.86823375e+05,\n'
 '         2.73076484e+04, -4.94441797e+04, -7.14954375e+05,\n'
 '         1.35805172e+05,  2.83410125e+05, -1.82375469e+04,\n'
 '        -2.27068547e+05, -3.33678000e+05,  4.27674906e+05,\n'
 '         2.59543875e+05, -2.16475625e+05, -1.08952812e+04,\n'
 '        -4.56553188e+05, -4.57122969e+04,  8.54068672e+04,\n'
 '         7.86688359e+04, -4.53855219e+05, -1.33278844e+05,\n'
 '        -4.68067250e+05,  4.71217438e+05,  5.59053750e+05,\n'
 '         5.89128750e+05, -7.87196062e+05, -3.43063125e+05,\n'
 '        -3.45553344e+05, -3.16422125e+05,  3.11234500e+05,\n'
 '        -2.01150375e+05,  5.91171500e+05, -5.14048281e+05,\n'
 '        -2.23757109e+05,  9.97402969e+04,  6.04095125e+05,\n'
 '        -9.91913438e+04,  6.57309750e+05, -7.67243750e+04,\n'
 '        -8.51832812e+03,  3.98218750e+03,  4.90747000e+05,\n'
 '         5.68597312e+05,  4.46510406e+05,  3.15198938e+05,\n'
 '         9.92559062e+05,  4.94849312e+05, -2.86458469e+05,\n'
 '        -3.57801688e+05, -9.83243906e+04, -5.63107562e+05,\n'
 '        -9.63103594e+04,  5.41010625e+04,  1.02789756e+06,\n'
 '        -2.02192609e+05, -6.89054375e+04, -6.74173125e+05,\n'
 '        -1.64502906e+05, -8.06794812e+05, -7.18721875e+05,\n'
 '         5.89534188e+05,  9.68546000e+05,  1.91636844e+05,\n'
 '        -2.07752297e+05, -1.80100281e+05, -2.66868250e+05,\n'
 '        -1.33318100e+06, -1.68202906e+05,  5.91622750e+05,\n'
 '        -6.27662875e+05,  1.27989438e+05, -3.39223500e+05,\n'
 '         4.56813625e+05, -8.17938281e+03,  1.76097288e+06,\n'
 '         4.43617812e+04,  8.02311938e+05, -1.23765862e+06,\n'
 '        -9.82990312e+05, -5.61169188e+05,  1.01122688e+05,\n'
 '         3.14878312e+05, -6.38415812e+05,  1.17357988e+06,\n'
 '        -1.05091234e+05, -2.74466312e+05, -6.92131438e+05,\n'
 '        -7.26368359e+04,  2.19425000e+03, -1.92996438e+05,\n'
 '         7.37478438e+04, -1.50185906e+05, -4.03763500e+05,\n'
 '         3.79552406e+05,  5.85705750e+05,  4.59996656e+05,\n'
 '        -1.78485234e+05,  1.56026594e+05,  3.38132000e+05,\n'
 '        -3.11588281e+04,  1.28480688e+05, -8.43948188e+05,\n'
 '         2.30203203e+05,  5.50598188e+05,  5.86065375e+05,\n'
 '         8.38103875e+05, -2.77891406e+05, -6.43943438e+05,\n'
 '        -1.40971575e+06, -6.15329875e+05, -3.72902562e+05,\n'
 '         1.65869719e+05,  3.65078250e+05, -1.94851062e+05,\n'
 '         1.27681662e+06,  3.77131000e+05, -3.30342938e+05,\n'
 '         8.21856125e+05,  1.34298088e+06, -4.53774062e+04,\n'
 '         1.02721150e+06,  1.05426328e+05,  9.93892969e+03,\n'
 '        -5.09190688e+05,  1.06088906e+05,  8.28385375e+05,\n'
 '        -2.84736844e+05,  1.71373438e+04,  4.59374938e+05,\n'
 '        -3.71051219e+05,  7.54531000e+05, -5.41409438e+05,\n'
 '        -6.37298250e+05,  3.96911562e+05, -1.60645109e+05,\n'
 '         1.34463062e+05,  4.12964375e+05,  2.36704969e+05,\n'
 '        -9.12642812e+04, -2.44152750e+05, -2.48787188e+04,\n'
 '         4.87046156e+05,  6.50197125e+05, -1.79014000e+05,\n'
 '         6.86992375e+05, -5.36613125e+05,  9.88731250e+04,\n'
 '         5.66589562e+05, -1.05590300e+06, -5.26656125e+05,\n'
 '        -8.45879688e+04,  7.93699750e+05,  5.71754688e+05,\n'
 '        -3.54247250e+05,  1.64177375e+05,  4.62587062e+05,\n'
 '        -6.58675625e+05, -2.82438438e+05,  2.37890500e+05,\n'
 '         6.64737312e+05, -5.99567750e+05, -4.63086281e+05,\n'
 '        -3.49828062e+05,  9.76861797e+04,  2.60913703e+05,\n'
 '         3.37525625e+04, -1.77815781e+05, -4.76254062e+04,\n'
 '        -7.51126875e+05,  6.20159000e+05, -1.02682344e+06,\n'
 '         2.78412562e+05, -1.34335156e+05,  4.81831250e+04,\n'
 '        -1.35915188e+05,  7.96021812e+05, -9.40400750e+05,\n'
 '        -3.16513188e+05,  8.08453000e+05,  1.22157625e+06,\n'
 '         2.34361047e+05,  9.57234062e+05, -7.35919625e+05,\n'
 '         2.37596938e+05, -2.77461281e+05, -1.05566075e+06,\n'
 '         2.56672172e+05, -1.45675000e+05, -8.96034625e+05,\n'
 '        -3.12060156e+05]])')
'test_inceptionnet | batch_shape is: [1]'
'test_inceptionnet | logits.shape is: ivy.Shape(1, 1000)'
'||'
'test_inceptionnet | device is: cpu'
'test_inceptionnet | fw is: torch'
'test_inceptionnet | load_weights is: True'
'InceptionV3 | build | layer 1/22 built'
'InceptionV3 | build | layer 2/22 built'
'layer 3/22 built'
'InceptionV3 | build | layer 4/22 built'
'InceptionV3 | build | layer 5/22 built'
'InceptionV3 | build | layer 6/22 built'
'InceptionV3 | build | layer 7/22 built'
'InceptionV3 | build | layer 8/22 built'
'InceptionV3 | build | layer 9/22 built'
'InceptionV3 | build | layer 10/22 built'
'InceptionV3 | build | layer 11/22 built'
'InceptionV3 | build | layer 12/22 built'
'InceptionV3 | build | layer 13/22 built'
'InceptionV3 | build | layer 14/22 built'
'InceptionV3 | build | layer 15/22 built'
'InceptionV3 | build | layer 17/22 built'
'InceptionV3 | build | layer 18/22 built'
'InceptionV3 | build | layer 19/22 built'
'InceptionV3 | build | layer 20/22 built'
'InceptionV3 | build | layer 21/22 built'
'InceptionV3 | build | layer 22/22 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/4 built'
'layer 2/4 built'
'layer 3/4 built'
'layer 4/4 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/6 built'
'layer 2/6 built'
'layer 3/6 built'
'layer 4/6 built'
'layer 5/6 built'
'layer 6/6 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'inceptionNet_v3 | building InceptionV3 model | done 1/3'
'inceptionNet_v3 | clearning pretrained weights | done 2/3'
'inceptionNet_v3 | loading pretrained weights | done 3/3'
'InceptionV3 | forward | input data_format is:NCHW | done 1/27'
'InceptionV3 | forward | data_format is going to be used is:NCHW | done 1/27'
'InceptionV3 | forward | input shape is:ivy.Shape(1, 224, 224, 3) | done 1/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 224, 224, 3) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 111, 111, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 111, 111, 32) | done 2/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 111, 111, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 32) | done 3/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 109, 109, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 64) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 64) | done 4/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 54, 54, 64) | done 5/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 54, 54, 80) | done 3/3'
'InceptionV3 | forward | is:ivy.Shape(1, 54, 54, 80) | done 6/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 80) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 52, 52, 192) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 52, 52, 192) | done 7/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 192) | done 8/27'
'input shape is:ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 32) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 32)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 25, 25, 256) | done 9/27'
'input shape is:ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 10/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 11/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 384) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 96) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 96)'
'one 20/20, output shape is:ivy.Shape(1, 12, 12, 288)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 12/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 12, 12, 768) | done 13/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 14/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 15/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 16/27'
'v3 16/27, output shape is:ivy.Shape(1, 12, 12, 768)'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 5, 5, 192)'
'one 7/20, output shape is:ivy.Shape(1, 5, 5, 768)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 1280) | done 17/27'
'input shape is:ivy.Shape(1, 5, 5, 1280)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 18/27'
'input shape is:ivy.Shape(1, 5, 5, 2048)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 19/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 20/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 5, 5) | done 21/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 1, 1) | done 22/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 27/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 24/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 25/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048) | done 26/27'
'InceptionV3 | forward | fc | done 27/27'
('test_inceptionnet | logits is: ivy.array([[-1.58772454e-01,  5.11849403e-01, '
 '-2.49343395e+00,\n'
 '         1.20800483e+00, -2.51726508e+00, -3.95536184e-01,\n'
 '         1.11775124e+00,  3.03535909e-01,  1.41615629e-01,\n'
 '        -2.30278540e+00, -7.35835195e-01, -2.21440721e+00,\n'
 '        -1.59435773e+00, -8.61628890e-01, -3.82131413e-02,\n'
 '         4.95962277e-02, -2.72936440e+00, -2.90169859e+00,\n'
 '        -6.02651954e-01, -8.58045876e-01,  5.74585676e-01,\n'
 '        -2.05627251e+00, -7.05650210e-01, -1.25310218e+00,\n'
 '         1.20635545e+00, -6.23209953e-01, -1.16961360e+00,\n'
 '        -1.91657341e+00, -3.26856232e+00, -4.74389255e-01,\n'
 '         1.00358033e+00,  7.62982726e-01,  2.16387510e+00,\n'
 '        -2.68488348e-01,  1.01298189e+00, -8.60483885e-01,\n'
 '         8.85415018e-01, -1.04433966e+00, -1.14682627e+00,\n'
 '         4.08571273e-01, -5.96475422e-01,  1.68596160e+00,\n'
 '         2.17291683e-01,  2.58962011e+00, -3.38799030e-01,\n'
 '         6.39541388e-01, -1.41883111e+00,  1.73788571e+00,\n'
 '         1.31557882e-02,  1.48973906e+00, -3.25382680e-01,\n'
 '         8.03411484e-01, -3.63607824e-01, -1.51629829e+00,\n'
 '        -1.50646627e-01,  7.16099143e-03, -2.52321839e+00,\n'
 '        -1.88584387e+00,  5.84538281e-01, -4.48018879e-01,\n'
 '        -7.45777011e-01,  5.35193458e-02,  2.10149556e-01,\n'
 '        -1.60182428e+00, -1.74950206e+00, -3.86365920e-01,\n'
 '         2.74327231e+00,  2.93996167e+00,  2.69325542e+00,\n'
 '         7.37008870e-01, -5.26488244e-01, -1.00801885e+00,\n'
 '        -1.79746187e+00, -1.98086953e+00, -7.74699450e-01,\n'
 '        -6.19999170e-01, -1.03806853e+00,  9.92814750e-02,\n'
 '        -1.08421361e+00,  4.32655692e-01, -1.12665944e-01,\n'
 '         9.94659424e-01, -1.10524690e+00,  1.26260114e+00,\n'
 '         1.91224503e+00, -2.83100319e+00, -1.46871734e+00,\n'
 '        -2.83283830e-01,  3.06159169e-01, -4.27653849e-01,\n'
 '         2.45374113e-01,  1.17658329e+00, -2.01679134e+00,\n'
 '        -1.88979101e+00, -2.29894829e+00, -2.98223496e+00,\n'
 '         4.55138951e-01, -2.04316354e+00, -2.16503811e+00,\n'
 '         1.79397321e+00,  1.54126871e+00,  1.29179549e+00,\n'
 '        -1.25883150e+00, -1.44837666e+00,  2.06980491e+00,\n'
 '        -2.25244474e+00,  1.08307219e+00,  1.86148322e+00,\n'
 '         2.19239330e+00,  1.74932814e+00, -1.27465355e+00,\n'
 '        -2.34940004e+00,  1.62687159e+00,  1.31988180e+00,\n'
 '         3.48410487e-01, -8.33120108e-01, -2.03065842e-01,\n'
 '         3.76193881e-01, -3.01110125e+00,  7.16806293e-01,\n'
 '        -4.03513581e-01, -2.28538919e+00,  2.75849998e-02,\n'
 '         6.22529149e-01, -2.80958915e+00, -2.30186880e-01,\n'
 '        -1.45883882e+00,  2.00728536e+00,  1.20688224e+00,\n'
 '        -9.86483097e-01, -8.16258967e-01, -5.81811428e-01,\n'
 '         1.79285765e+00, -2.05198526e+00,  8.63569796e-01,\n'
 '        -9.63422507e-02, -5.54071546e-01, -6.28253043e-01,\n'
 '        -1.83130205e-01, -1.49001455e+00, -8.09174538e-01,\n'
 '         1.31701386e+00, -1.77675676e+00,  1.55310130e+00,\n'
 '         2.15800953e+00, -3.22213918e-01,  2.30967879e-01,\n'
 '        -2.44294214e+00, -1.08440101e+00, -1.04081512e+00,\n'
 '        -1.49932134e+00,  7.37817168e-01,  2.65614295e+00,\n'
 '         2.25744844e-02,  4.85375077e-01, -2.45842671e+00,\n'
 '        -6.02552414e-01,  5.31001043e+00,  1.04446089e+00,\n'
 '        -5.55980206e-01,  2.57711458e+00, -1.57877970e+00,\n'
 '        -3.49433112e+00,  1.14780211e+00,  4.07956928e-01,\n'
 '        -1.02314317e+00, -4.61499989e-02,  1.01046312e+00,\n'
 '        -2.44607878e+00,  3.74891281e+00,  4.65554380e+00,\n'
 '         1.00248814e+00,  1.07837582e+00,  2.72273946e+00,\n'
 '         6.36569440e-01,  5.27095199e-01,  1.14126277e+00,\n'
 '         1.86542034e+00, -7.68610656e-01,  1.82410073e+00,\n'
 '         1.39212513e+00,  7.30027199e-01,  1.30138469e+00,\n'
 '         1.98235914e-01, -2.91518390e-01,  6.13580227e-01,\n'
 '         3.55204415e+00, -1.35165584e+00, -3.01696062e-01,\n'
 '        -2.63002110e+00,  4.64609891e-01, -2.63133645e+00,\n'
 '        -3.45612109e-01, -1.80587244e+00, -1.66420806e+00,\n'
 '        -3.26249033e-01, -5.02924490e+00,  2.31944370e+00,\n'
 '        -3.79569769e-01,  3.79768133e-01, -1.42106235e-01,\n'
 '        -3.79785109e+00,  5.67883924e-02,  5.12399816e+00,\n'
 '        -2.77058172e+00, -3.16390371e+00, -7.99394906e-01,\n'
 '        -1.52617776e+00, -2.38972425e+00, -2.37674570e+00,\n'
 '         6.10373557e-01, -8.05014729e-01, -9.77515355e-02,\n'
 '         3.16408545e-01,  2.04984450e+00, -9.30175662e-01,\n'
 '         2.98408604e+00, -1.36370927e-01,  7.26935565e-02,\n'
 '        -3.88617182e+00,  1.45176381e-01,  1.01029420e+00,\n'
 '         4.66541624e+00,  2.63283062e+00,  6.47201061e+00,\n'
 '        -3.42969119e-01,  2.01825786e+00, -1.88465822e+00,\n'
 '         3.27856541e+00,  1.02925205e+00,  6.27518058e-01,\n'
 '         1.75084865e+00,  2.24803591e+00,  1.43504739e+00,\n'
 '         7.17386082e-02,  5.64039528e-01,  7.28275239e-01,\n'
 '         1.75854445e-01,  5.37093043e-01, -3.00400495e-01,\n'
 '         1.07073975e+00,  8.17228079e-01,  1.55907559e+00,\n'
 '         9.09633040e-01, -1.03183365e+00, -2.38523394e-01,\n'
 '         1.18897116e+00,  6.55548871e-01,  6.97652769e+00,\n'
 '         5.06353760e+00,  3.17212844e+00,  9.50213015e-01,\n'
 '        -1.82162559e+00,  3.49643827e-02, -6.01505935e-01,\n'
 '         1.44468450e+00,  1.16632056e+00,  8.09837723e+00,\n'
 '         2.04638157e+01,  5.84709120e+00,  4.24600410e+00,\n'
 '         5.71156073e+00, -1.09797251e+00, -1.42961693e+00,\n'
 '        -6.65499806e-01, -1.05367994e+00, -3.18983138e-01,\n'
 '         2.76062226e+00, -1.19175553e+00,  1.28569579e+00,\n'
 '         1.11631908e+01, -2.22408009e+00, -9.14638996e-01,\n'
 '         6.57204211e-01, -2.67524242e-01, -2.59166479e+00,\n'
 '        -3.04691047e-01,  2.49265879e-02, -2.18433809e+00,\n'
 '         1.13734093e+01,  5.41476548e-01, -1.59131348e+00,\n'
 '        -1.62012887e+00,  2.28597426e+00, -3.30797338e+00,\n'
 '        -9.74992961e-02, -2.81734252e+00,  2.30825722e-01,\n'
 '         5.63065946e-01,  1.05549014e+00, -2.88388276e+00,\n'
 '         5.36555767e-01,  2.66724825e-01, -1.62218606e+00,\n'
 '        -2.26431990e+00, -2.91864562e+00,  2.85239816e+00,\n'
 '        -1.65825224e+00, -1.70297039e+00, -1.34853387e+00,\n'
 '        -1.15556085e+00, -8.50335836e-01, -9.46860761e-03,\n'
 '         1.83519095e-01, -1.49928659e-01, -3.75943929e-01,\n'
 '        -6.49110794e-01,  1.54886651e+00,  1.46206021e-01,\n'
 '         1.16427398e+00, -7.27996528e-01,  3.46032649e-01,\n'
 '        -3.69784176e-01, -1.20744276e+00, -6.80162787e-01,\n'
 '         9.38225806e-01, -1.60364544e+00,  2.42394996e+00,\n'
 '        -4.58356291e-01, -2.38536143e+00,  1.24035716e+00,\n'
 '        -1.20045924e+00,  7.03466952e-01,  1.26500642e+00,\n'
 '        -3.37115049e+00, -3.56666446e-02,  1.94034994e+00,\n'
 '         2.50927448e+00,  2.89159918e+00, -4.15709391e-02,\n'
 '        -1.44978130e+00,  3.16988802e+00,  1.67653334e+00,\n'
 '        -1.26627135e+00,  7.64270783e-01, -2.11602688e+00,\n'
 '        -2.14747906e+00, -2.19351220e+00,  2.41452384e+00,\n'
 '        -1.98803341e+00, -4.03771162e-01, -1.29361177e+00,\n'
 '        -1.56841087e+00, -1.06387436e+00, -2.56401277e+00,\n'
 '        -1.52783370e+00, -1.55893862e+00, -1.53582454e-01,\n'
 '         1.03067040e+00, -2.54287696e+00, -1.87162638e+00,\n'
 '        -1.12295330e-01, -1.62986445e+00,  4.12899792e-01,\n'
 '        -9.95458365e-01,  1.46863031e+00,  1.92501262e-01,\n'
 '        -8.43950152e-01,  4.70027030e-01, -2.33118549e-01,\n'
 '        -4.56120586e+00, -1.33743346e-01, -2.37797093e+00,\n'
 '         7.05484092e-01, -3.27944064e+00, -4.33725071e+00,\n'
 '        -4.31179094e+00, -2.59967065e+00, -2.38506174e+00,\n'
 '        -2.67954993e+00, -1.58626306e+00, -1.52096021e+00,\n'
 '        -1.16733038e+00, -4.81910348e-01, -2.72379375e+00,\n'
 '        -3.21077967e+00, -2.96846867e+00, -1.30543995e+00,\n'
 '        -2.45945668e+00, -2.07729387e+00, -1.57942510e+00,\n'
 '        -3.36963844e+00, -2.28123713e+00, -2.82430196e+00,\n'
 '        -2.09049606e+00,  4.80777562e-01, -1.36406446e+00,\n'
 '        -5.53892255e-01, -1.47319818e+00, -1.25656760e+00,\n'
 '        -8.61566246e-01, -2.74755049e+00,  3.68112206e-01,\n'
 '         2.36045146e+00,  5.62602282e-03, -2.33310372e-01,\n'
 '         2.02396417e+00, -8.46862078e-01, -1.20413864e+00,\n'
 '         2.10641289e+00, -2.97730640e-02, -3.47636432e-01,\n'
 '         1.93709731e+00,  6.04780138e-01,  2.62454915e+00,\n'
 '        -5.98808289e-01,  1.27899885e+00, -2.15738273e+00,\n'
 '        -2.34363556e-01, -1.35818496e-02,  2.91650593e-02,\n'
 '        -3.03895068e+00, -2.22264862e+00, -1.34542525e-01,\n'
 '        -1.66900843e-01, -5.48117757e-01, -1.43387461e+00,\n'
 '        -3.28225166e-01, -1.95043182e+00, -1.23423696e+00,\n'
 '        -1.20452166e+00, -6.23550266e-02,  5.41359186e-04,\n'
 '         1.27905440e+00,  1.33131480e+00,  1.71803975e+00,\n'
 '         8.30149233e-01, -8.37494373e-01,  1.76215887e-01,\n'
 '         7.62256011e-02, -4.93316263e-01, -1.71469414e+00,\n'
 '         7.65657306e-01, -1.35600793e+00, -4.04798090e-01,\n'
 '         9.85617220e-01, -4.24861759e-01,  7.57226497e-02,\n'
 '        -1.64825857e+00,  1.52918553e+00,  2.00840950e+00,\n'
 '        -2.50643134e-01,  3.57823610e-01, -4.10579443e+00,\n'
 '        -5.96545994e-01, -3.00373733e-01, -4.38636541e-02,\n'
 '        -8.75808358e-01,  2.30209053e-01,  1.28928393e-01,\n'
 '        -9.20197070e-02,  3.97265494e-01,  5.20565391e-01,\n'
 '         8.44070196e-01,  9.86540616e-02,  1.44836664e+00,\n'
 '        -2.90920019e-01, -1.35749185e+00,  7.80967414e-01,\n'
 '         1.98464557e-01, -8.93830657e-02, -2.16721940e+00,\n'
 '         1.00226104e+00, -8.76059592e-01,  1.39222443e+00,\n'
 '        -1.23700404e+00, -1.53773951e+00, -1.94314361e+00,\n'
 '         6.65330887e-01,  1.52205002e+00,  2.31819987e+00,\n'
 '         3.84233892e-01,  1.00062832e-01,  1.30980992e+00,\n'
 '        -1.58155465e+00, -1.79685128e+00,  1.89031649e+00,\n'
 '        -2.54358625e+00,  1.17609942e+00,  9.87834036e-01,\n'
 '         2.05883175e-01,  1.56809974e+00, -1.04187155e+00,\n'
 '         1.83336139e+00,  1.60777187e+00, -2.06921029e+00,\n'
 '         5.95170706e-02,  7.37488747e-01,  1.43363261e+00,\n'
 '         1.15949500e+00, -8.40806365e-02,  8.78279388e-01,\n'
 '        -3.88850629e-01, -5.29894471e-01,  4.68890280e-01,\n'
 '         2.42438126e+00, -7.10352719e-01, -2.21424317e+00,\n'
 '         1.80327463e+00, -1.73176658e+00, -3.48172098e-01,\n'
 '         1.31233227e+00, -1.17838216e+00,  5.80652833e-01,\n'
 '        -2.07017279e+00,  2.60848904e+00, -1.56745285e-01,\n'
 '        -2.36310029e+00, -1.32106519e+00,  1.31220627e+00,\n'
 '         1.53710926e+00,  3.18190843e-01, -1.07951486e+00,\n'
 '         4.39502448e-01,  1.01985335e+00, -1.26896238e+00,\n'
 '        -2.58258367e+00, -1.58461106e+00, -3.04212713e+00,\n'
 '        -4.10042620e+00, -2.95737791e+00,  2.25643206e+00,\n'
 '        -7.40080893e-01, -2.86411476e+00, -1.24156892e-01,\n'
 '        -2.92911291e-01, -2.51649678e-01, -6.98384225e-01,\n'
 '         6.45098537e-02, -3.05435657e+00,  6.86460614e-01,\n'
 '         6.11505270e-01,  1.81564236e+00, -1.69394970e+00,\n'
 '         7.76782855e-02, -2.00859129e-01, -2.89991307e+00,\n'
 '         3.03177667e+00,  3.78985792e-01,  2.50198782e-01,\n'
 '        -7.39817202e-01,  5.96162081e-01,  6.35806024e-01,\n'
 '         1.50453722e+00,  1.21244562e+00,  5.91767430e-02,\n'
 '         2.67081785e+00, -3.01538885e-01, -7.22067833e-01,\n'
 '         3.38956892e-01,  6.69500768e-01,  7.10073412e-01,\n'
 '         8.11833441e-02, -6.66372180e-01,  3.27542946e-02,\n'
 '        -2.03260016e+00,  8.45816195e-01,  5.11510432e-01,\n'
 '        -1.05227768e+00,  7.87720680e-01, -1.56903297e-01,\n'
 '        -1.36449948e-01,  2.42352533e+00,  2.45748234e+00,\n'
 '         6.92527592e-01, -1.69763267e+00,  1.56060860e-01,\n'
 '        -5.47255158e-01,  1.14430082e+00, -4.55025196e+00,\n'
 '         4.39782083e-01, -4.88317281e-01, -4.11526412e-02,\n'
 '         1.65889847e+00,  1.54390901e-01, -2.21100777e-01,\n'
 '         5.34926295e-01,  1.37202108e+00,  1.15269840e+00,\n'
 '         5.80849767e-01,  1.85868442e+00,  4.84658450e-01,\n'
 '        -5.45923889e-01,  7.51287758e-01, -4.03131604e-01,\n'
 '         3.60676199e-02, -2.36027074e+00, -7.05611348e-01,\n'
 '        -6.39612317e-01,  4.02825087e-01, -2.11085200e-01,\n'
 '        -1.35662627e+00,  4.58765602e+00, -4.99223471e-02,\n'
 '         1.72970366e+00, -1.57674980e+00,  2.66022235e-01,\n'
 '        -6.20370805e-02, -6.67090356e-01,  7.67136216e-01,\n'
 '        -2.65275478e+00, -1.21052945e+00,  6.21441603e-02,\n'
 '         8.86252224e-01,  1.20678067e+00, -1.36977375e+00,\n'
 '         5.00139427e+00,  8.12301874e-01,  9.64583337e-01,\n'
 '         2.00404823e-01, -2.22629338e-01, -3.42935055e-01,\n'
 '        -9.44454908e-01, -1.76119357e-02,  2.48880327e-01,\n'
 '        -6.43714547e-01, -1.14648378e+00, -1.71102583e-02,\n'
 '        -1.63712740e+00, -2.04675579e+00, -3.10257697e+00,\n'
 '         2.64650869e+00, -1.21507049e-02, -4.04768169e-01,\n'
 '         3.30869842e+00, -1.26047879e-02,  2.62806845e+00,\n'
 '        -3.15507680e-01,  4.19986629e+00,  1.22247601e+00,\n'
 '        -2.80449003e-01, -1.39474082e+00, -2.48447508e-01,\n'
 '        -1.78571022e+00, -1.02039134e+00, -2.58195448e+00,\n'
 '         2.79065818e-01,  3.71433973e-01, -1.27645802e+00,\n'
 '        -3.51683140e-01, -8.94302726e-01, -1.43219423e+00,\n'
 '        -1.60999036e+00,  2.34619111e-01,  2.95114219e-02,\n'
 '         1.55046237e+00,  2.96597362e-01,  3.62238228e-01,\n'
 '         1.63285375e-01,  3.03920603e+00, -1.29291797e+00,\n'
 '         1.64273477e+00,  2.44370127e+00, -1.57777178e+00,\n'
 '         3.05140987e-02, -3.30211926e+00,  9.66756940e-01,\n'
 '        -1.79920268e+00,  7.35618293e-01,  1.80511236e-01,\n'
 '        -1.78078341e+00, -1.11422405e-01,  2.29103470e+00,\n'
 '        -1.62375486e+00, -1.06225908e+00, -7.50308156e-01,\n'
 '         1.20923436e+00,  2.99474061e-01, -1.86510444e+00,\n'
 '         2.56073809e+00,  5.08351445e-01, -2.02509928e+00,\n'
 '         1.89009237e+00,  7.51160026e-01,  5.89457393e-01,\n'
 '         7.99907565e-01,  6.31132603e-01,  3.25344115e-01,\n'
 '         4.06775832e-01, -1.40124810e+00,  7.88872778e-01,\n'
 '        -4.29749584e+00,  2.57589269e+00, -3.87314975e-01,\n'
 '         6.90903425e-01,  1.34312168e-01, -3.89353961e-01,\n'
 '         7.50140369e-01, -4.23602611e-02, -1.22203231e-02,\n'
 '         8.28013718e-02, -1.49429131e+00, -5.94777316e-02,\n'
 '        -3.38020992e+00, -9.61219490e-01, -6.54622436e-01,\n'
 '        -4.26605344e-03,  1.11653566e-01,  2.02213120e+00,\n'
 '        -1.78703994e-01, -1.73047388e+00, -1.61759234e+00,\n'
 '        -1.90623736e+00, -5.94197810e-01, -4.17811155e+00,\n'
 '        -2.77340794e+00,  2.12287402e+00,  2.75915408e+00,\n'
 '         1.12303483e+00, -7.22307742e-01, -2.56142467e-01,\n'
 '         2.58984303e+00,  1.41892821e-01, -1.70435369e+00,\n'
 '         1.12041020e+00,  1.70826185e+00, -2.63043427e+00,\n'
 '        -6.77940369e-01,  1.45689726e+00,  1.97317541e+00,\n'
 '         1.74389911e+00, -1.69994104e+00,  1.93874752e+00,\n'
 '        -7.03318596e-01,  1.57176733e+00, -4.11118090e-01,\n'
 '        -1.98379087e+00,  6.26262486e-01, -2.74813771e-01,\n'
 '         6.69000745e-01, -1.19391131e+00,  5.29911399e-01,\n'
 '         1.36367381e+00,  2.53676367e+00, -7.91506290e-01,\n'
 '        -1.50316787e+00,  3.45160693e-01, -8.49791288e-01,\n'
 '         1.75218797e+00, -1.38601005e+00,  6.65287435e-01,\n'
 '         5.47049880e-01, -1.03238308e+00, -5.11485189e-02,\n'
 '        -6.84479594e-01, -3.81753385e-01,  4.28619814e+00,\n'
 '        -1.49461520e+00, -1.14233339e+00, -3.93173099e-01,\n'
 '        -3.09172893e+00,  7.86946714e-01, -1.85222530e+00,\n'
 '        -6.89087272e-01, -5.98016202e-01,  8.99672449e-01,\n'
 '        -1.33908820e+00,  4.73465919e-01,  2.27032840e-01,\n'
 '         3.84742677e-01, -1.02685869e+00, -6.01250768e-01,\n'
 '        -1.63102412e+00,  1.46513581e+00,  2.98334151e-01,\n'
 '         8.94162416e-01, -2.67280340e+00,  3.69050837e+00,\n'
 '        -1.92851126e-01,  1.15940356e+00, -8.59413266e-01,\n'
 '        -4.02335674e-02, -8.24738741e-01,  7.72469163e-01,\n'
 '        -1.65854263e+00,  5.80947578e-01,  1.89375520e+00,\n'
 '        -6.02684140e-01, -6.67373180e-01, -1.87565458e+00,\n'
 '         2.32369542e+00,  1.30463302e+00,  2.17269510e-01,\n'
 '         7.89266407e-01, -7.88169682e-01, -1.28981817e+00,\n'
 '         9.53287542e-01,  9.12874639e-01,  1.67710638e+00,\n'
 '         1.89155865e+00, -1.44469833e+00, -1.48067385e-01,\n'
 '        -8.51462245e-01,  2.68399507e-01, -3.05810422e-02,\n'
 '        -2.10126781e+00, -1.35783935e+00, -1.39696073e+00,\n'
 '        -1.25339895e-01,  1.05716956e+00,  1.09568715e+00,\n'
 '        -1.42656505e+00, -8.99018764e-01, -1.53418219e+00,\n'
 '         3.53879109e-03, -1.38882548e-01, -2.10877013e+00,\n'
 '        -1.01155579e+00,  1.17912912e+00,  8.47634137e-01,\n'
 '         1.97516298e+00,  1.05902612e+00, -1.48641765e-01,\n'
 '         2.04218864e-01, -4.21911150e-01,  1.71729612e+00,\n'
 '         1.99958682e-01,  3.43957871e-01, -1.96880174e+00,\n'
 '         2.13048220e+00,  1.47728562e-01, -1.13791954e+00,\n'
 '         7.55688250e-02,  1.41547322e-02, -9.20490444e-01,\n'
 '         1.15767503e+00,  5.99079669e-01,  1.80969059e+00,\n'
 '         1.45300364e+00, -1.31188631e-01, -3.65947410e-02,\n'
 '         1.86470366e+00,  1.42457032e+00,  9.96139049e-01,\n'
 '        -3.03669572e-01, -7.53907859e-01, -3.26054633e-01,\n'
 '        -1.93321741e+00, -3.02847773e-01,  7.31256545e-01,\n'
 '         6.72615707e-01,  1.16995490e+00,  5.44483781e-01,\n'
 '         2.19808555e+00,  2.66462231e+00, -1.03697348e+00,\n'
 '        -1.87863922e+00, -1.13508296e+00,  1.58929515e+00,\n'
 '         1.13974154e-01,  8.88491631e-01, -4.12825942e-01,\n'
 '         1.26811218e+00,  1.86628032e+00,  1.97297943e+00,\n'
 '         1.60748637e+00, -1.78750992e+00,  4.24033403e+00,\n'
 '         2.80378431e-01,  4.81741548e-01,  1.17369091e+00,\n'
 '         1.52501428e+00, -2.36829519e-02,  7.45798588e-01,\n'
 '        -3.38165498e+00,  1.46136135e-01, -4.90553975e-01,\n'
 '         3.60004991e-01, -2.22358537e+00, -4.64124382e-01,\n'
 '        -8.14521372e-01,  9.67731774e-02,  6.45489812e-01,\n'
 '         3.04853976e-01, -2.20302916e+00, -1.62350547e+00,\n'
 '        -1.45352876e+00, -7.92021811e-01,  3.11686683e+00,\n'
 '        -5.30332923e-01, -1.55066311e+00, -7.64954150e-01,\n'
 '         2.66146922e+00,  8.51017713e-01,  6.09169841e-01,\n'
 '        -9.43243086e-01,  1.78537047e+00,  5.39240003e-01,\n'
 '        -3.63812804e-01,  1.51321995e+00, -1.43707871e-01,\n'
 '         1.00343037e+00, -2.67607093e-01,  1.61900604e+00,\n'
 '         3.40343803e-01, -3.01677632e+00,  1.38239813e+00,\n'
 '         8.06495786e-01, -2.57601619e-01, -5.86067960e-02,\n'
 '         1.01028347e+00, -6.87939167e-01,  2.71047503e-01,\n'
 '        -1.73995745e+00, -9.82284605e-01, -1.94119811e-02,\n'
 '        -1.79275060e+00, -6.38138175e-01, -5.01788259e-01,\n'
 '        -1.98019481e+00, -3.77103686e-03,  4.58387017e-01,\n'
 '        -5.79734325e-01,  1.80736208e+00,  5.28062403e-01,\n'
 '         2.42459106e+00, -8.72829914e-01, -6.09105885e-01,\n'
 '        -6.50189877e-01, -8.25363278e-01, -1.82372093e+00,\n'
 '         1.70291162e+00, -2.62966692e-01,  4.77099955e-01,\n'
 '        -8.76688063e-01, -7.34270871e-01, -3.48993838e-01,\n'
 '        -3.29540133e-01, -4.75810289e-01, -1.73973179e+00,\n'
 '         2.60170102e-02, -2.68659174e-01, -2.91955471e+00,\n'
 '        -2.58456796e-01, -3.58752489e+00, -2.51440048e+00,\n'
 '         1.33739769e-01,  4.43111301e-01, -1.85932487e-01,\n'
 '        -1.46024346e+00,  7.82099962e-01,  1.18196619e+00,\n'
 '         2.33074975e+00,  5.03183901e-01,  2.34423205e-01,\n'
 '         2.18682742e+00, -6.83879018e-01,  1.11822176e+00,\n'
 '        -2.61405796e-01,  1.24402964e+00,  3.56245935e-01,\n'
 '         1.63261437e+00,  1.11996639e+00, -4.80810404e-02,\n'
 '        -6.23389781e-01,  1.44625342e+00,  2.31048918e+00,\n'
 '         1.46547437e+00, -7.30000734e-02, -9.54775751e-01,\n'
 '         3.16837370e-01,  3.21125567e-01, -1.71433425e+00,\n'
 '        -1.81847978e+00, -2.04076743e+00, -3.47382235e+00,\n'
 '         5.03772080e-01,  9.94379818e-01, -1.37725115e+00,\n'
 '        -5.99000335e-01, -2.58135843e+00,  7.96751857e-01,\n'
 '         2.32717442e+00,  1.44523883e+00,  6.99654818e-01,\n'
 '        -4.89519656e-01,  2.89486647e-01,  4.03096485e+00,\n'
 '         1.43262124e+00, -1.89904368e+00, -4.91871059e-01,\n'
 '        -4.08332288e-01,  1.23784351e+00,  6.37659311e-01,\n'
 '        -9.96121466e-01, -3.44092905e-01, -1.03085563e-02,\n'
 '         1.02455400e-01,  1.93065321e+00, -2.07160652e-01,\n'
 '        -6.51989460e-01, -7.75872230e-01, -4.89484131e-01,\n'
 '        -1.25633788e+00, -2.20822811e+00,  1.48953223e+00,\n'
 '        -6.89637959e-02, -9.16978717e-02, -1.93548262e-01,\n'
 '        -1.37180758e+00]])')
'test_inceptionnet | batch_shape is: [1]'
'test_inceptionnet | logits.shape is: ivy.Shape(1, 1000)'
'||'
'test_inceptionnet | indices_test | true_indices is: [258 270 279]'
'test_inceptionnet | indices_test | calc_indices is: [258 279 270]'
