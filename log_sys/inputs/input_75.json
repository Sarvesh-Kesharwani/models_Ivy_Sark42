'BasicConv2d | Test | input shape is: ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 128) | done 3/3'
'BasicConv2d | Test | Test Successfull!'
'||'
'InceptionAux | random_test_tensor shape is: ivy.Shape(1, 17, 17, 768)'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'InceptionAux | input shape is:ivy.Shape(1, 17, 17, 768)'
'InceptionAux | done 1/8, output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 128) | done 3/3'
'InceptionAux | done 2/8'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 1, 1, 768) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 1, 1, 768) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 1, 1, 768) | done 3/3'
'InceptionAux | done 3/8'
'InceptionAux | input shape to adaptive_avg_pool2d is:ivy.Shape(1, 1, 1, 768)'
('InceptionAux | permuted input shape to adaptive_avg_pool2d is:ivy.Shape(1, '
 '768, 1, 1)')
('InceptionAux | output shape from adaptive_avg_pool2d is:ivy.Shape(1, 768, 1, '
 '1)')
('InceptionAux | permuted output shape from adaptive_avg_pool2d '
 'is:ivy.Shape(1, 1, 1, 768)')
'InceptionAux | done 4/8'
'InceptionAux | done 5/8'
'InceptionAux | done 8/8'
'InceptionAux | Test Successfull!'
'random_test_tensor shape is: ivy.Shape(1, 35, 35, 192)'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'input shape is:ivy.Shape(1, 35, 35, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 35, 35, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 35, 35, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 35, 35, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 35, 35, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 35, 35, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 35, 35, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 35, 35, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 35, 35, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 35, 35, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 35, 35, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 35, 35, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 35, 35, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 35, 35, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 35, 35, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 35, 35, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 35, 35, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 35, 35, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 35, 35, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 35, 35, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 35, 35, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 35, 35, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 35, 35, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 35, 35, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 35, 35, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 35, 35, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 35, 35, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 35, 35, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 35, 35, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 35, 35, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 35, 35, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 35, 35, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 35, 35, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 35, 35, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 35, 35, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 35, 35, 32) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 35, 35, 32)'
'InceptionA | outputs 20/20'
'Test Successfull!'
'random_test_tensor shape is: ivy.Shape(1, 35, 35, 288)'
'layer 1/4 built'
'layer 2/4 built'
'layer 3/4 built'
'layer 4/4 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'input shape is:ivy.Shape(1, 35, 35, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 35, 35, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 17, 17, 384) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 17, 17, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 35, 35, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 35, 35, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 35, 35, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 35, 35, 64) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 35, 35, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 35, 35, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 35, 35, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 35, 35, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 35, 35, 96) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 35, 35, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 35, 35, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 17, 17, 96) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 17, 17, 96)'
'one 20/20, output shape is:ivy.Shape(1, 17, 17, 288)'
'one 20/20'
'Test Successfull!'
'random_test_tensor shape is: ivy.Shape(1, 17, 17, 768)'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'input shape is:ivy.Shape(1, 17, 17, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 17, 17, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 17, 17, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 17, 17, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 17, 17, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 17, 17, 128) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 17, 17, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 17, 17, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 17, 17, 128) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 17, 17, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 17, 17, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 17, 17, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 17, 17, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 17, 17, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 17, 17, 128) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 17, 17, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 17, 17, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 17, 17, 128) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 17, 17, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 17, 17, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 17, 17, 128) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 17, 17, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 17, 17, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 17, 17, 128) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 17, 17, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 17, 17, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 17, 17, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 17, 17, 192)'
'one 10/20, output shape is:ivy.Shape(1, 17, 17, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 17, 17, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 17, 17, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 17, 17, 192)'
'one 20/20'
'Test Successfull!'
'random_test_tensor shape is: ivy.Shape(1, 17, 17, 768)'
'layer 1/6 built'
'layer 2/6 built'
'layer 3/6 built'
'layer 4/6 built'
'layer 5/6 built'
'layer 6/6 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'input shape is:ivy.Shape(1, 17, 17, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 17, 17, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 17, 17, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 17, 17, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 17, 17, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 8, 8, 320) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 8, 8, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 17, 17, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 17, 17, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 17, 17, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 17, 17, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 17, 17, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 17, 17, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 17, 17, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 17, 17, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 17, 17, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 17, 17, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 8, 8, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 8, 8, 192)'
'one 7/20, output shape is:ivy.Shape(1, 8, 8, 768)'
'one 20/20'
'Test Successfull!'
'random_test_tensor shape is: ivy.Shape(1, 8, 8, 1280)'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'input shape is:ivy.Shape(1, 8, 8, 1280)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 8, 8, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 8, 8, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 8, 8, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 8, 8, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 8, 8, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 8, 8, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 8, 8, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 8, 8, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 8, 8, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 8, 8, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 8, 8, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 8, 8, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 8, 8, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 8, 8, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 8, 8, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 8, 8, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 8, 8, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 8, 8, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 8, 8, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 8, 8, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 8, 8, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 8, 8, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 8, 8, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 8, 8, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 8, 8, 192)'
'20/20'
'Test Successfull!'
'test_inceptionnet | device is: cpu'
'test_inceptionnet | fw is: jax'
'test_inceptionnet | load_weights is: False'
'layer 1/22 built'
'layer 2/22 built'
'layer 3/22 built'
'layer 4/22 built'
'layer 5/22 built'
'layer 6/22 built'
'layer 7/22 built'
'layer 8/22 built'
'layer 9/22 built'
'layer 10/22 built'
'layer 11/22 built'
'layer 12/22 built'
'layer 13/22 built'
'layer 14/22 built'
'layer 15/22 built'
'layer 17/22 built'
'layer 18/22 built'
'layer 19/22 built'
'layer 20/22 built'
'layer 21/22 built'
'layer 22/22 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/4 built'
'layer 2/4 built'
'layer 3/4 built'
'layer 4/4 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/6 built'
'layer 2/6 built'
'layer 3/6 built'
'layer 4/6 built'
'layer 5/6 built'
'layer 6/6 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'inceptionNet_v3 | building InceptionV3 model | done 1/3'
'input shape is:(1, 224, 224, 3)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 224, 224, 3) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 111, 111, 32) | done 3/3'
'v3 1/23, output shape is:ivy.Shape(1, 111, 111, 32)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 111, 111, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 32) | done 3/3'
'v3 2/23, output shape is:ivy.Shape(1, 109, 109, 32)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 109, 109, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 64) | done 3/3'
'v3 3/23, output shape is:ivy.Shape(1, 109, 109, 64)'
'v3 4/23, output shape is:ivy.Shape(1, 54, 54, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 54, 54, 80) | done 3/3'
'v3 5/23, output shape is:ivy.Shape(1, 54, 54, 80)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 80) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 52, 52, 192) | done 3/3'
'v3 6/23, output shape is:ivy.Shape(1, 52, 52, 192)'
'v3 7/23, output shape is:ivy.Shape(1, 25, 25, 192)'
'input shape is:ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 32) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 32)'
'InceptionA | outputs 20/20'
'v3 8/23, output is:ivy.Shape(1, 25, 25, 256)'
'input shape is:ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'v3 9/23, output shape is:ivy.Shape(1, 25, 25, 288)'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'v3 10/23, output shape is:ivy.Shape(1, 25, 25, 288)'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 384) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 96) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 96)'
'one 20/20, output shape is:ivy.Shape(1, 12, 12, 288)'
'one 20/20'
'v3 11/23, output shape is:ivy.Shape(1, 12, 12, 768)'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'v3 12/23, output shape is:ivy.Shape(1, 12, 12, 768)'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'v3 13/23, output shape is:ivy.Shape(1, 12, 12, 768)'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'v3 14/23, output shape is:ivy.Shape(1, 12, 12, 768)'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'v3 15/23, output shape is:ivy.Shape(1, 12, 12, 768)'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 5, 5, 192)'
'one 7/20, output shape is:ivy.Shape(1, 5, 5, 768)'
'one 20/20'
'v3 17/23, output shape is:ivy.Shape(1, 5, 5, 1280)'
'input shape is:ivy.Shape(1, 5, 5, 1280)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'v3 18/23, output shape is:ivy.Shape(1, 5, 5, 2048)'
'input shape is:ivy.Shape(1, 5, 5, 2048)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'v3 19/23, output shape is:ivy.Shape(1, 5, 5, 2048)'
'Inception3 | input shape to adaptive_avg_pool2d is:ivy.Shape(1, 5, 5, 2048)'
('Inception3 | permuted input shape to adaptive_avg_pool2d is:ivy.Shape(1, '
 '2048, 5, 5)')
'Inception3 | output shape from adaptive_avg_pool2d is:ivy.Shape(1, 2048, 1, 1)'
('Inception3 | permuted output shape from adaptive_avg_pool2d is:ivy.Shape(1, '
 '1, 1, 2048)')
'v3 20/23, avgpool output shape is:ivy.Shape(1, 1, 1, 2048)'
'v3 21/23, dropout output shape is:ivy.Shape(1, 1, 1, 2048)'
'v3 22/23, flatten output shape is:ivy.Shape(1, 2048)'
'fc done 23/23'
('test_inceptionnet | logits is: ivy.array([[ 2.06222832e+04,  6.81986875e+05, '
 '-9.35411953e+04,\n'
 '         1.13002775e+06,  4.41957891e+04,  1.72935781e+05,\n'
 '         4.55985625e+05,  5.00874656e+05,  8.63039062e+04,\n'
 '        -4.94523188e+05, -2.77499344e+05, -2.27012422e+05,\n'
 '         3.44358906e+04,  1.02228953e+05,  1.53056138e+06,\n'
 '         1.00752633e+05,  2.89721594e+05, -2.34625664e+04,\n'
 '        -1.34670859e+05,  7.43155438e+05,  3.56686562e+05,\n'
 '        -1.25094023e+05,  5.91286875e+04, -1.01410750e+06,\n'
 '        -5.17025547e+04,  2.47217672e+05,  1.24151525e+06,\n'
 '         3.59496406e+04,  4.67814812e+05, -1.37185484e+05,\n'
 '        -2.72323828e+04,  1.62360525e+06, -9.46009562e+05,\n'
 '        -4.13907312e+05,  3.82178062e+05,  2.74563719e+05,\n'
 '         9.98241938e+05,  1.11836388e+06, -5.73087688e+05,\n'
 '         5.47939375e+04,  1.61165172e+05,  6.08519750e+05,\n'
 '         1.00594586e+05,  5.29919492e+04,  4.27199812e+05,\n'
 '         1.08712462e+06, -3.43125469e+05, -1.49561406e+05,\n'
 '         6.43742438e+05, -1.64660141e+05, -3.86418531e+05,\n'
 '        -6.24666375e+05,  9.19446812e+05, -5.04119500e+05,\n'
 '        -6.17068125e+05, -3.26553369e+03, -8.92261719e+04,\n'
 '         1.60416969e+05, -4.84231375e+05, -8.64260781e+04,\n'
 '        -9.21107188e+05, -4.00680125e+05, -7.97193516e+04,\n'
 '        -3.72819062e+05,  7.19926797e+04, -3.47113188e+05,\n'
 '        -3.69601531e+05,  1.22843112e+06, -2.02051516e+05,\n'
 '         4.52726812e+05,  4.28911750e+05,  7.01254531e+04,\n'
 '         7.58364625e+05, -1.30433750e+05,  8.94833750e+05,\n'
 '        -9.74581000e+05, -4.62462938e+05,  3.21815938e+04,\n'
 '         3.39583500e+05,  2.26808453e+05, -5.74251000e+05,\n'
 '         1.85418750e+05,  2.48281859e+05, -8.07736125e+05,\n'
 '        -7.28045250e+05,  6.62719062e+04,  4.91348094e+05,\n'
 '        -3.07809031e+05, -7.84144812e+05,  6.08497438e+05,\n'
 '        -3.23022781e+05,  2.07696719e+05,  9.29184625e+05,\n'
 '        -2.14565203e+05,  6.30131375e+05, -8.50129312e+05,\n'
 '         1.25311141e+05,  5.56676438e+05, -6.65245188e+05,\n'
 '        -9.26531625e+05,  6.18878688e+05,  7.80358625e+05,\n'
 '        -7.15955625e+05,  3.66587250e+05, -4.80238828e+04,\n'
 '        -1.96387688e+05, -1.42104012e+06,  1.05188575e+06,\n'
 '         9.55034688e+04, -5.02359469e+05, -1.40862050e+06,\n'
 '        -1.13832125e+06, -5.66544875e+05,  5.35544375e+05,\n'
 '        -4.68726969e+05,  1.06975638e+06,  7.97833688e+05,\n'
 '        -9.42622109e+04, -2.87261641e+04, -6.11578938e+05,\n'
 '         5.77881000e+05, -1.44026500e+05, -2.25271344e+05,\n'
 '         4.31960562e+05,  3.15712062e+05,  7.14072562e+05,\n'
 '        -5.79800688e+05,  4.98706375e+05, -8.01225703e+04,\n'
 '         2.61536738e+04, -5.42127062e+05,  5.94078750e+05,\n'
 '        -3.75786375e+05,  3.41206438e+05,  2.42657328e+05,\n'
 '         1.96249312e+05, -5.70549188e+05,  1.09497825e+06,\n'
 '         9.17505562e+05,  1.12925102e+05, -2.67913355e+03,\n'
 '        -7.70892062e+05,  1.38485859e+05,  2.32260234e+05,\n'
 '         9.27787062e+05, -7.68859375e+05, -3.07418156e+05,\n'
 '        -3.41842531e+05,  5.68357875e+05,  8.60253688e+05,\n'
 '         1.72590359e+05,  1.44128475e+06, -4.98465781e+05,\n'
 '         3.29448000e+05,  2.10953625e+05,  1.35149525e+06,\n'
 '        -7.72124188e+05, -3.21237000e+05,  3.76392750e+05,\n'
 '         6.64566125e+05,  6.13585375e+05,  2.16390547e+05,\n'
 '        -1.05114941e+04,  3.25186688e+05, -1.06539612e+06,\n'
 '         6.05045062e+05,  5.24624141e+04,  1.91595234e+05,\n'
 '         5.38833625e+05,  6.21864375e+05, -8.37191062e+05,\n'
 '        -5.15274469e+05, -3.18410219e+05, -1.00871266e+05,\n'
 '        -2.87419875e+05,  9.73294750e+05, -2.82928188e+05,\n'
 '        -3.16489875e+05, -6.25135500e+05,  4.52170375e+05,\n'
 '         3.43370758e+02, -5.34240000e+05, -5.91996062e+05,\n'
 '         5.44019500e+05,  1.77255859e+05,  5.52638812e+05,\n'
 '        -2.02287641e+05,  2.30768422e+05, -3.73784094e+05,\n'
 '         2.83810625e+04,  2.19049797e+05,  1.27089656e+05,\n'
 '         1.47660762e+06,  2.18555703e+05,  4.80932344e+05,\n'
 '         1.92836270e+04, -1.29193391e+05,  2.57563297e+05,\n'
 '         5.13688719e+05, -1.09987462e+06,  1.34944100e+06,\n'
 '         3.60293652e+03,  6.54301688e+05, -1.48686962e+06,\n'
 '        -3.76714156e+05, -8.04371500e+05, -1.58662062e+05,\n'
 '        -2.09112172e+05,  3.58140938e+05, -1.54792962e+06,\n'
 '         1.06652547e+05, -9.63249500e+05, -3.63469688e+04,\n'
 '         8.94090250e+05,  5.92150938e+05,  4.15443688e+05,\n'
 '         9.14836484e+04,  2.73538094e+05,  9.28777000e+05,\n'
 '         2.94318156e+05,  3.72624688e+04,  1.45720112e+06,\n'
 '        -1.03351644e+06, -8.81464562e+05,  6.64183250e+05,\n'
 '         1.54537953e+05, -2.70516469e+05,  8.45338312e+05,\n'
 '         7.61003875e+05,  1.13609219e+05, -4.30946062e+05,\n'
 '         1.64142797e+05, -3.16990594e+05, -3.90838875e+05,\n'
 '         3.18474812e+05,  6.85237938e+05, -2.78783562e+05,\n'
 '         3.73911094e+05, -4.11732719e+05, -2.65495938e+05,\n'
 '        -1.04131100e+06,  1.37836269e+04,  8.67920438e+05,\n'
 '        -1.05946047e+05, -4.72891844e+05,  1.61572297e+05,\n'
 '         1.05784725e+06, -5.38670812e+05,  3.85389562e+05,\n'
 '        -3.17756906e+05,  2.21310547e+05,  3.47400977e+04,\n'
 '        -1.68780562e+05,  2.06187047e+05, -4.72842750e+05,\n'
 '        -6.68158125e+05, -1.16103625e+05, -4.39573031e+05,\n'
 '         1.07732375e+05, -6.46797022e+03, -6.23114500e+05,\n'
 '        -7.61962375e+05, -1.00436703e+05,  1.11988500e+06,\n'
 '         1.07620675e+06,  9.99484375e+05,  9.32982578e+04,\n'
 '         4.72004594e+05,  8.17264625e+05, -2.38416094e+05,\n'
 '         3.17913188e+05, -1.12106242e+05,  1.56258588e+06,\n'
 '         4.50721000e+05,  1.10515638e+06, -1.47388031e+05,\n'
 '        -3.84487938e+05,  3.20703000e+05,  4.73413281e+05,\n'
 '        -2.82320062e+05, -6.36719062e+05, -4.13448312e+05,\n'
 '        -1.98226453e+05, -4.13842688e+05, -6.77065859e+04,\n'
 '        -8.34906812e+05,  1.16503906e+05, -4.06548594e+05,\n'
 '         1.39569795e+04,  1.41748141e+05,  5.96872250e+05,\n'
 '         7.49259250e+05, -7.22957938e+05, -2.10682078e+05,\n'
 '        -1.41057038e+06, -8.18037500e+04, -6.57650625e+05,\n'
 '         1.42621797e+05, -3.34719312e+05, -7.33970125e+05,\n'
 '         2.36814625e+05, -3.48134492e+04, -3.84574906e+05,\n'
 '         2.75262688e+05,  2.07827484e+05, -1.70924078e+05,\n'
 '         4.38128281e+05, -1.20387550e+06,  5.74770375e+05,\n'
 '         2.94382031e+05,  2.18251016e+04,  1.04522350e+06,\n'
 '        -1.10215484e+05, -2.87331469e+05, -6.20065625e+05,\n'
 '        -4.10203719e+05, -8.29701375e+05,  1.23925538e+06,\n'
 '         7.66200875e+05,  2.65196344e+05,  4.17133688e+05,\n'
 '         1.95645641e+05, -8.46290562e+05,  7.89219609e+04,\n'
 '        -8.13050250e+05,  4.43741656e+05,  7.97988562e+05,\n'
 '         1.91646891e+05, -5.96983875e+05, -6.23049938e+05,\n'
 '         7.94079500e+05,  1.25641800e+06, -4.83548688e+05,\n'
 '         7.52038688e+05,  8.92061188e+05,  1.58078712e+06,\n'
 '         1.34612000e+05,  5.94540188e+05, -1.25870738e+06,\n'
 '        -9.42534375e+04,  1.33294281e+05, -7.85832688e+05,\n'
 '        -1.80397578e+05,  4.71043750e+05,  1.13531675e+06,\n'
 '        -8.99100750e+05,  2.95746094e+05,  1.95247703e+05,\n'
 '        -1.36269350e+06, -1.76510020e+04,  2.90943066e+04,\n'
 '         3.21495812e+05, -6.83025062e+05, -8.56053938e+05,\n'
 '         1.37361531e+05, -6.21762875e+05,  4.43842781e+05,\n'
 '         9.42090781e+04,  3.31066906e+05, -1.71886172e+05,\n'
 '         3.88900625e+05,  3.01429281e+05,  6.58992250e+05,\n'
 '        -8.94983125e+05,  2.80343594e+05,  6.50712266e+04,\n'
 '         6.19086188e+05,  5.04504156e+05, -3.33754156e+05,\n'
 '        -5.75720188e+05,  5.62761750e+05, -5.82184375e+05,\n'
 '         2.79074781e+05,  3.30331211e+04,  9.11855500e+05,\n'
 '        -1.04512512e+06, -3.92957375e+05,  1.53076094e+05,\n'
 '        -4.35686406e+05, -8.71271062e+05,  2.75281500e+05,\n'
 '        -1.11700138e+06,  1.21735688e+06,  3.24450156e+05,\n'
 '        -1.39893500e+06, -2.30202234e+05, -2.38753312e+05,\n'
 '        -9.15634312e+05, -2.89422562e+05,  6.68693812e+05,\n'
 '         4.68647969e+05, -5.43806812e+05, -7.37663594e+04,\n'
 '        -9.63911625e+05, -2.72410312e+05, -7.49256938e+05,\n'
 '        -6.16746625e+05,  5.21661469e+05, -9.34373000e+05,\n'
 '         1.31741862e+06, -1.15000375e+06,  5.00190719e+05,\n'
 '        -7.71905625e+05, -7.24856172e+04,  4.85767156e+05,\n'
 '         8.10503562e+05, -3.11407812e+05,  5.58184188e+05,\n'
 '         3.08208781e+05, -1.04537225e+06,  6.72935438e+05,\n'
 '         2.67307031e+05, -2.54462156e+05,  4.08955719e+05,\n'
 '        -5.04815656e+05,  1.45398031e+05,  2.34797031e+05,\n'
 '        -4.84943281e+04,  3.11063188e+05,  8.80731312e+05,\n'
 '         9.91845859e+04,  9.51364297e+04, -8.44687891e+04,\n'
 '         8.58682188e+05,  2.67431875e+05,  2.61721438e+05,\n'
 '        -3.67908188e+05,  2.81496812e+05, -4.73512000e+05,\n'
 '         1.06233662e+06,  4.19312109e+04, -5.29336188e+05,\n'
 '        -1.10190000e+05,  1.01367631e+06,  1.86554180e+04,\n'
 '         1.83356438e+05,  6.68277312e+05,  2.03306547e+05,\n'
 '        -3.15967656e+05,  3.78188188e+05, -7.70730438e+05,\n'
 '         3.34606938e+05,  5.86269812e+05, -8.04250375e+05,\n'
 '         2.80475757e+03, -2.69270031e+05, -1.67953212e+06,\n'
 '         1.06540953e+05, -3.85643750e+04, -5.35329414e+04,\n'
 '        -6.55706938e+05,  1.78058850e+06, -7.09425750e+05,\n'
 '         1.69768109e+05,  4.44375781e+05,  2.14143078e+05,\n'
 '         4.80722375e+05,  6.53806312e+05, -2.06312094e+05,\n'
 '         2.56924109e+05, -4.43697656e+05,  5.50028562e+05,\n'
 '         6.25693812e+05, -4.60803219e+05, -3.68904750e+05,\n'
 '         2.19102922e+05, -1.33625700e+06,  1.03518600e+06,\n'
 '         5.92601125e+05,  1.53854350e+06,  1.99533184e+04,\n'
 '         3.80560562e+05, -9.21383000e+05, -1.08646188e+06,\n'
 '         1.38632859e+05, -7.11306625e+05, -9.96614188e+05,\n'
 '         5.45998375e+05,  3.74569625e+05,  5.49540625e+05,\n'
 '         2.33803125e+03, -8.81064812e+05,  1.56235062e+05,\n'
 '         3.93855781e+05,  6.05898750e+05, -1.23897578e+05,\n'
 '         1.53717234e+05,  1.10758688e+06,  2.83544125e+05,\n'
 '         2.88167031e+05, -5.65304562e+05,  5.98294766e+04,\n'
 '        -1.28728450e+06,  2.00028418e+04, -1.09969575e+06,\n'
 '         6.34751523e+04,  6.76422312e+05, -3.03215215e+04,\n'
 '         8.48749000e+05,  8.73759250e+05,  3.76045972e+03,\n'
 '         5.85714844e+04,  4.09790688e+05, -1.38083594e+05,\n'
 '        -2.83679094e+05, -7.43375703e+04, -1.79606391e+05,\n'
 '         1.77124375e+05, -4.64683875e+05,  3.49654969e+05,\n'
 '        -8.37352109e+04, -7.37523250e+05,  1.10558250e+06,\n'
 '        -5.37064375e+05,  5.44222062e+05, -3.92863000e+05,\n'
 '         1.39439650e+06,  3.24960656e+05, -1.40651922e+05,\n'
 '         9.32099312e+05, -2.73046375e+05, -8.29582375e+05,\n'
 '        -2.97986188e+05, -1.21830406e+05, -1.04586444e+06,\n'
 '        -5.56340156e+04, -2.24060109e+05, -8.61043750e+05,\n'
 '        -1.79699281e+05, -1.08137112e+06, -3.32458125e+05,\n'
 '        -5.40632930e+04,  1.14840062e+06, -1.09701788e+06,\n'
 '        -1.48766219e+05,  1.84334906e+05, -2.84442531e+05,\n'
 '        -5.15976484e+04, -8.15744453e+04, -6.33192688e+05,\n'
 '         6.26064312e+05, -1.59703469e+05,  4.31603469e+05,\n'
 '        -3.93355062e+05,  8.80718672e+04, -6.04456750e+05,\n'
 '        -6.21551125e+05,  5.94672312e+05, -4.32052500e+05,\n'
 '         1.01710438e+05, -1.81302188e+05, -8.85525188e+05,\n'
 '         2.51879156e+05, -1.29058850e+06,  7.79570859e+04,\n'
 '         3.35099562e+05,  9.72206938e+05,  9.39076375e+05,\n'
 '        -3.98398000e+05, -1.87881906e+05, -9.63480500e+05,\n'
 '         7.45200062e+05, -1.94615203e+05, -1.13352375e+06,\n'
 '        -7.99016328e+04,  3.29947125e+05, -1.20040352e+05,\n'
 '         6.19715688e+05, -2.46437402e+04, -3.38231469e+05,\n'
 '         3.51861531e+05, -2.63674656e+05,  1.31334150e+06,\n'
 '        -2.13370703e+05, -6.68311250e+05, -1.55327484e+05,\n'
 '         5.33312438e+05, -1.16932350e+06,  1.72441297e+05,\n'
 '        -3.55268969e+05, -7.52847688e+05,  7.04368062e+05,\n'
 '         1.45393781e+05,  2.02520273e+04,  3.82639906e+05,\n'
 '         1.02393625e+06, -2.26533688e+05, -9.35892000e+05,\n'
 '        -1.45032453e+05,  7.67855875e+05,  2.90533625e+05,\n'
 '        -7.95337266e+04,  6.11981438e+05, -6.02991562e+04,\n'
 '        -2.71254938e+05, -1.71333812e+05,  7.09018875e+05,\n'
 '         5.34351125e+05, -3.68642969e+05, -4.88679094e+05,\n'
 '        -2.66034906e+05, -5.93130812e+05,  1.56183328e+05,\n'
 '         3.79515078e+04,  2.45226234e+05,  8.42436125e+05,\n'
 '        -4.10062500e+05,  1.27938266e+05, -3.66486281e+05,\n'
 '         6.11754375e+05,  8.31160250e+05,  3.35684688e+05,\n'
 '         4.22362062e+05, -1.22115875e+06,  6.74654938e+05,\n'
 '         2.29280031e+05,  5.18332062e+05,  1.01202578e+04,\n'
 '        -6.61865375e+05,  9.67179750e+05,  1.04329494e+06,\n'
 '        -1.65555820e+04,  4.76901562e+05, -7.13855625e+05,\n'
 '         3.64385500e+05,  1.67304297e+05, -1.44720812e+06,\n'
 '        -6.33587812e+05, -2.36595656e+05,  1.11650675e+06,\n'
 '         7.56423359e+04, -1.14671242e+05,  9.84887250e+05,\n'
 '        -9.02817438e+05,  8.38457000e+05,  2.02938656e+05,\n'
 '        -3.52390438e+05,  2.42262469e+05,  2.67825188e+05,\n'
 '         6.74762875e+05,  1.65495703e+05,  1.02194969e+06,\n'
 '        -6.36082938e+05, -1.27800438e+06,  4.49431000e+05,\n'
 '         4.89420938e+05, -3.08799719e+05, -5.66546062e+05,\n'
 '         5.50098312e+05,  6.29198250e+05, -3.24817438e+05,\n'
 '        -7.41890688e+05, -8.97295156e+04,  6.69492875e+05,\n'
 '         4.37931750e+05, -1.64852406e+05,  1.46415638e+06,\n'
 '        -3.87660375e+05, -9.95047500e+04, -5.77204562e+05,\n'
 '        -4.44404188e+05,  5.98969102e+04,  3.59545000e+04,\n'
 '         8.42433500e+05, -3.70866344e+05,  7.86549250e+05,\n'
 '         8.21334844e+04,  5.22229688e+05, -3.71503156e+05,\n'
 '        -1.17058825e+06,  3.10386125e+05, -2.64080594e+05,\n'
 '         8.34345938e+05,  3.49403125e+05, -6.66329562e+05,\n'
 '         8.92050188e+05, -4.16018250e+05, -1.09088962e+06,\n'
 '         8.54064250e+05, -7.86113312e+05, -6.58662812e+05,\n'
 '         7.26181875e+05, -2.65826750e+05, -6.05281625e+05,\n'
 '        -5.52228625e+05, -4.33996219e+05,  4.80722094e+05,\n'
 '         4.61691625e+05,  1.31602703e+05,  6.42515500e+05,\n'
 '         8.90161188e+05,  7.19855812e+05, -2.70004875e+05,\n'
 '         3.44156406e+05, -7.32609312e+05,  4.24008844e+05,\n'
 '         2.11710957e+04,  5.76621367e+04, -5.88481250e+05,\n'
 '         3.36106875e+05, -5.55608875e+05,  2.85279000e+05,\n'
 '        -5.55214625e+05,  7.78452812e+05,  7.28147109e+04,\n'
 '        -2.73889125e+05,  1.27343453e+05, -3.92128828e+04,\n'
 '         4.35002625e+05, -8.96599312e+05,  5.48197500e+05,\n'
 '        -5.71206641e+03, -5.51545742e+04, -3.97763938e+05,\n'
 '        -1.35124288e+06,  7.15029000e+05,  3.06673496e+04,\n'
 '         1.97649588e+06,  1.72897609e+05, -6.02699062e+05,\n'
 '        -6.82808000e+05, -9.54513125e+05, -5.54404062e+05,\n'
 '         3.72323000e+05, -5.08806469e+05, -2.99589438e+05,\n'
 '         1.94978031e+05, -7.36088906e+04,  2.85096844e+05,\n'
 '        -5.53620750e+05,  2.35813438e+05,  1.29961391e+05,\n'
 '        -5.11261062e+05,  3.98853086e+04,  3.68778094e+05,\n'
 '         7.22885938e+05, -1.57043738e+06, -5.99106938e+05,\n'
 '         6.87268125e+05,  8.43754219e+04, -9.45070375e+05,\n'
 '        -2.59391250e+04,  2.65756688e+05, -1.24858850e+06,\n'
 '        -1.01004350e+06, -1.20380205e+04, -2.11155891e+05,\n'
 '         1.81556344e+05,  2.55267391e+05, -2.16694031e+05,\n'
 '        -1.77442094e+05,  1.97522156e+05,  4.46526250e+05,\n'
 '        -8.11338938e+05, -5.54660875e+05, -1.09558825e+06,\n'
 '         2.27992406e+05,  2.35471172e+05, -4.93254938e+05,\n'
 '         4.42761406e+05,  2.88925188e+05,  1.76019969e+05,\n'
 '         3.73684625e+05, -8.37652312e+05,  5.87030176e+03,\n'
 '        -1.11089031e+05,  6.30483938e+05, -7.01816172e+04,\n'
 '         8.20978062e+05, -6.93523125e+05, -1.31528425e+06,\n'
 '        -7.22063375e+05, -5.04452875e+05,  1.38192312e+05,\n'
 '         7.46180000e+05,  5.48836250e+04, -3.43956469e+05,\n'
 '        -1.01352406e+06,  4.22134312e+05, -5.45344062e+05,\n'
 '         1.19138273e+05, -9.94502422e+04, -2.94789250e+05,\n'
 '        -1.68187250e+05, -5.53560812e+05,  6.01866188e+05,\n'
 '         5.64018875e+05,  9.37468875e+05,  1.43433406e+05,\n'
 '        -1.16607362e+06,  3.39438672e+04, -6.54234062e+05,\n'
 '        -1.06379953e+05, -2.12255453e+05,  2.01239797e+05,\n'
 '        -2.85020500e+05, -1.70034062e+05, -8.49038188e+05,\n'
 '        -8.47716438e+05,  1.96894500e+05,  8.93051625e+05,\n'
 '        -6.28346312e+05,  1.70141344e+05, -2.70819500e+05,\n'
 '         1.61803828e+05,  1.06577912e+06, -2.91520438e+05,\n'
 '        -9.81591188e+05,  1.28916664e+05,  8.17112109e+04,\n'
 '         4.76819438e+05,  4.76291031e+05,  7.28459938e+05,\n'
 '         7.42659812e+05, -7.65506500e+05, -7.37135688e+05,\n'
 '        -2.82648406e+05, -5.23549406e+05,  1.20380344e+05,\n'
 '        -1.76221734e+05,  7.85844250e+05, -6.45188688e+05,\n'
 '        -2.77981699e+04,  8.80800188e+05,  5.84389812e+05,\n'
 '         2.16654719e+05, -2.07091438e+05,  4.25177969e+04,\n'
 '         1.13166688e+06,  3.13744219e+05, -4.66986445e+04,\n'
 '        -4.08192148e+04,  6.34134938e+05, -6.74692875e+05,\n'
 '        -9.70389312e+05,  1.32317275e+06,  4.45396375e+05,\n'
 '         7.09599125e+05, -4.39647969e+05,  5.52498125e+05,\n'
 '        -1.84267141e+05, -1.53263188e+05, -2.78470594e+05,\n'
 '        -6.95379562e+05, -5.72599438e+05, -9.26913203e+04,\n'
 '        -3.55894969e+05, -1.07289288e+06, -5.90807250e+05,\n'
 '         2.76822844e+05,  1.75953047e+05, -7.80895562e+05,\n'
 '         9.34311875e+05,  3.11236387e+04, -2.29768703e+05,\n'
 '         4.82514875e+05,  4.58910906e+05,  4.44232281e+05,\n'
 '         3.93236875e+05,  3.48173125e+05,  1.06931675e+06,\n'
 '         5.86585625e+05,  7.64282422e+04,  1.42098312e+05,\n'
 '        -5.97033688e+05,  1.34007047e+05,  4.25767188e+05,\n'
 '        -6.33276055e+04,  1.00721569e+06, -3.89898125e+04,\n'
 '        -9.21741500e+05,  4.15281938e+05, -2.26939234e+05,\n'
 '        -2.86123398e+04, -1.00577044e+06, -6.41427125e+05,\n'
 '         8.95757141e+02,  4.38601562e+05, -1.88678734e+05,\n'
 '         2.97754125e+05, -7.12010812e+05,  4.29704938e+05,\n'
 '        -4.16151406e+05, -2.89370344e+05, -1.07955266e+05,\n'
 '         4.49253438e+05,  1.71543406e+05,  6.76322812e+05,\n'
 '         7.85700875e+05, -1.89582531e+05, -4.01546719e+05,\n'
 '         5.25561062e+05, -2.63902031e+05,  3.82305750e+05,\n'
 '        -1.58584938e+05,  1.50585254e+03,  6.25424188e+05,\n'
 '         6.19530875e+05,  1.08265425e+06,  2.96421469e+05,\n'
 '         1.02347256e+06,  5.14059031e+05, -3.66726906e+05,\n'
 '         4.77928625e+05, -7.02329375e+05,  1.85133484e+05,\n'
 '        -4.30657094e+05,  6.79523188e+05, -1.52048656e+05,\n'
 '         1.63974863e+04, -5.69022375e+05,  7.24701250e+04,\n'
 '         3.41315625e+05, -3.61111625e+05,  1.71341906e+05,\n'
 '         1.23937662e+06,  5.85897188e+05, -4.01404688e+05,\n'
 '        -6.69612188e+05,  4.35590391e+04,  3.32828469e+05,\n'
 '        -2.45211453e+05, -6.28803516e+04, -9.51969312e+05,\n'
 '         1.05743875e+06,  6.46001250e+05, -3.26805469e+04,\n'
 '         8.45539062e+04, -6.20813047e+04, -1.44228625e+05,\n'
 '        -5.13912125e+05, -6.80763312e+05,  2.17194562e+05,\n'
 '        -4.11038156e+05, -3.32322688e+05, -2.17834500e+05,\n'
 '        -4.38041688e+05, -4.41909082e+03,  6.99786375e+05,\n'
 '         1.02161781e+06, -2.54520188e+05,  5.91203062e+05,\n'
 '        -4.53773516e+04,  4.13746250e+04,  2.76637156e+05,\n'
 '         1.00529438e+06, -6.01511375e+05,  5.25243562e+05,\n'
 '        -5.69963688e+05,  7.08371938e+05, -6.46945125e+05,\n'
 '        -1.08917688e+06,  1.31656141e+05,  1.04575469e+06,\n'
 '         3.09623625e+05, -6.89178203e+04,  2.22725297e+05,\n'
 '        -1.25798289e+05, -7.38067938e+05, -2.99582375e+05,\n'
 '        -1.32354984e+05, -6.06224125e+05, -6.14262938e+05,\n'
 '        -1.51717281e+05, -1.01152969e+06,  2.28892047e+05,\n'
 '        -1.44866012e+06,  9.12203875e+05, -8.65391812e+05,\n'
 '         3.61292906e+05, -2.11292344e+05, -5.85065188e+05,\n'
 '         5.38521875e+05, -2.48137141e+05, -1.54372838e+06,\n'
 '        -4.06151133e+04,  1.02446000e+06, -5.95150375e+05,\n'
 '         1.38970800e+06, -1.00573462e+06, -9.99887000e+05,\n'
 '        -1.50082016e+05,  1.06784988e+06, -2.14400203e+05,\n'
 '         1.82733641e+05, -5.36000250e+05,  7.43816938e+05,\n'
 '        -3.82220531e+05, -6.47749750e+05, -1.24936094e+05,\n'
 '         9.11872812e+05, -2.56084219e+05,  4.58997938e+05,\n'
 '        -1.81266828e+05,  1.56022638e+06,  1.02052388e+06,\n'
 '        -6.09249219e+03,  9.43289062e+05,  1.79929922e+05,\n'
 '        -6.95925688e+05]])')
'test_inceptionnet | batch_shape is: [1]'
'||'
'test_inceptionnet | device is: cpu'
'test_inceptionnet | fw is: jax'
'test_inceptionnet | load_weights is: True'
'layer 1/22 built'
'layer 2/22 built'
'layer 3/22 built'
'layer 4/22 built'
'layer 5/22 built'
'layer 6/22 built'
'layer 7/22 built'
'layer 8/22 built'
'layer 9/22 built'
'layer 10/22 built'
'layer 11/22 built'
'layer 12/22 built'
'layer 13/22 built'
'layer 14/22 built'
'layer 15/22 built'
'layer 17/22 built'
'layer 18/22 built'
'layer 19/22 built'
'layer 20/22 built'
'layer 21/22 built'
'layer 22/22 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/4 built'
'layer 2/4 built'
'layer 3/4 built'
'layer 4/4 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/6 built'
'layer 2/6 built'
'layer 3/6 built'
'layer 4/6 built'
'layer 5/6 built'
'layer 6/6 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'inceptionNet_v3 | building InceptionV3 model | done 1/3'
'inceptionNet_v3 | clearning pretrained weights | done 2/3'
'inceptionNet_v3 | loading pretrained weights | done 3/3'
'input shape is:(1, 224, 224, 3)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 224, 224, 3) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 111, 111, 32) | done 3/3'
'v3 1/23, output shape is:ivy.Shape(1, 111, 111, 32)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 111, 111, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 32) | done 3/3'
'v3 2/23, output shape is:ivy.Shape(1, 109, 109, 32)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 109, 109, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 64) | done 3/3'
'v3 3/23, output shape is:ivy.Shape(1, 109, 109, 64)'
'v3 4/23, output shape is:ivy.Shape(1, 54, 54, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 54, 54, 80) | done 3/3'
'v3 5/23, output shape is:ivy.Shape(1, 54, 54, 80)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 80) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 52, 52, 192) | done 3/3'
'v3 6/23, output shape is:ivy.Shape(1, 52, 52, 192)'
'v3 7/23, output shape is:ivy.Shape(1, 25, 25, 192)'
'input shape is:ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 32) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 32)'
'InceptionA | outputs 20/20'
'v3 8/23, output is:ivy.Shape(1, 25, 25, 256)'
'input shape is:ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'v3 9/23, output shape is:ivy.Shape(1, 25, 25, 288)'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'v3 10/23, output shape is:ivy.Shape(1, 25, 25, 288)'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 384) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 96) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 96)'
'one 20/20, output shape is:ivy.Shape(1, 12, 12, 288)'
'one 20/20'
'v3 11/23, output shape is:ivy.Shape(1, 12, 12, 768)'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'v3 12/23, output shape is:ivy.Shape(1, 12, 12, 768)'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'v3 13/23, output shape is:ivy.Shape(1, 12, 12, 768)'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'v3 14/23, output shape is:ivy.Shape(1, 12, 12, 768)'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'v3 15/23, output shape is:ivy.Shape(1, 12, 12, 768)'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 5, 5, 192)'
'one 7/20, output shape is:ivy.Shape(1, 5, 5, 768)'
'one 20/20'
'v3 17/23, output shape is:ivy.Shape(1, 5, 5, 1280)'
'input shape is:ivy.Shape(1, 5, 5, 1280)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'v3 18/23, output shape is:ivy.Shape(1, 5, 5, 2048)'
'input shape is:ivy.Shape(1, 5, 5, 2048)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'v3 19/23, output shape is:ivy.Shape(1, 5, 5, 2048)'
'Inception3 | input shape to adaptive_avg_pool2d is:ivy.Shape(1, 5, 5, 2048)'
('Inception3 | permuted input shape to adaptive_avg_pool2d is:ivy.Shape(1, '
 '2048, 5, 5)')
'Inception3 | output shape from adaptive_avg_pool2d is:ivy.Shape(1, 2048, 1, 1)'
('Inception3 | permuted output shape from adaptive_avg_pool2d is:ivy.Shape(1, '
 '1, 1, 2048)')
'v3 20/23, avgpool output shape is:ivy.Shape(1, 1, 1, 2048)'
'v3 21/23, dropout output shape is:ivy.Shape(1, 1, 1, 2048)'
'v3 22/23, flatten output shape is:ivy.Shape(1, 2048)'
'fc done 23/23'
('test_inceptionnet | logits is: ivy.array([[-6.34916067e-01, -5.97195625e-01, '
 '-8.71945202e-01,\n'
 '         1.83199680e+00,  2.77833045e-01, -1.47463036e+00,\n'
 '        -7.85805404e-01, -3.87829065e-01,  7.52843857e-01,\n'
 '         3.65877294e+00, -4.82103825e-01, -8.96078497e-02,\n'
 '         1.11856175e+00, -9.64942098e-01, -1.47361410e+00,\n'
 '         2.23247457e+00,  4.33629215e-01, -2.76230216e+00,\n'
 '        -2.54228497e+00, -2.61641622e+00, -1.85132790e+00,\n'
 '         1.05759358e+00,  1.16643619e+00,  8.24897051e-01,\n'
 '         1.97151160e+00,  2.93683797e-01, -9.80210304e-03,\n'
 '        -9.57115412e-01, -2.38260937e+00,  9.37759459e-01,\n'
 '         4.04562771e-01, -8.05220678e-02, -7.90115833e-01,\n'
 '        -7.75041282e-01, -1.88473249e+00, -3.46444964e-01,\n'
 '         6.43066347e-01, -2.57593155e+00,  2.34072995e+00,\n'
 '         1.02414012e+00, -1.78057656e-01,  2.97783762e-01,\n'
 '         4.49694604e-01,  3.05987299e-01,  1.08440983e+00,\n'
 '         1.98280275e-01,  8.19389820e-01, -6.42958880e-02,\n'
 '        -2.95863926e-01,  1.13417613e+00,  4.76524591e-01,\n'
 '         5.40755987e-02,  1.10675454e+00,  1.24081922e+00,\n'
 '        -2.74206519e-01, -9.71266627e-02, -8.14943016e-01,\n'
 '         1.33093977e+00,  1.38340548e-01, -9.80151653e-01,\n'
 '         2.13347554e-01,  3.29381585e-01, -3.55219543e-01,\n'
 '        -6.77423179e-03, -5.83064616e-01, -3.55433524e-02,\n'
 '         4.67050165e-01, -6.56285882e-01,  1.59114909e+00,\n'
 '         1.19800389e+00,  6.47041500e-01, -1.42472839e+00,\n'
 '        -9.19947863e-01, -2.04786539e+00, -1.71586955e+00,\n'
 '        -8.23191643e-01, -6.47493959e-01, -1.27867556e+00,\n'
 '        -9.25468087e-01, -7.68031657e-01, -1.12991405e+00,\n'
 '        -2.95575380e+00,  4.22789782e-01,  2.20940518e+00,\n'
 '         3.11993360e-02, -1.33831489e+00, -1.66835278e-01,\n'
 '        -4.61199164e-01,  1.34200037e-01, -1.77603543e+00,\n'
 '         8.45704973e-02,  4.78482068e-01, -1.27877033e+00,\n'
 '         4.76217508e-01, -9.47835386e-01,  2.08767438e+00,\n'
 '         2.12586284e-01, -2.14525127e+00, -7.77109146e-01,\n'
 '        -7.83889890e-01,  2.24500060e+00, -7.67577171e-01,\n'
 '        -2.46941662e+00, -2.24175721e-01, -2.20833778e+00,\n'
 '        -2.22513056e+00, -1.08264661e+00, -5.07611454e-01,\n'
 '        -2.43980098e+00,  4.98012900e-02, -1.14303768e+00,\n'
 '        -6.79956198e-01,  1.01471662e+00, -1.03015685e+00,\n'
 '         5.33424020e-01, -9.69452977e-01, -8.04113090e-01,\n'
 '         1.30461740e+00, -1.40627062e+00, -1.37770808e+00,\n'
 '        -8.07335794e-01, -1.66021943e+00, -1.00809246e-01,\n'
 '        -1.91011179e+00,  3.29957992e-01, -4.31532681e-01,\n'
 '         1.00720549e+00, -6.70395136e-01,  6.27563536e-01,\n'
 '        -1.09307909e+00,  2.34685779e+00, -9.15749431e-01,\n'
 '         1.31600690e+00,  3.56449652e+00, -7.93369114e-01,\n'
 '         1.18456459e+00, -7.10877120e-01, -2.69223142e+00,\n'
 '         1.46274138e+00,  1.29817820e+00, -3.61577106e+00,\n'
 '        -3.03378433e-01, -8.62287402e-01, -2.36844945e+00,\n'
 '        -9.88378465e-01,  2.75030732e-02, -2.95623755e+00,\n'
 '        -2.74330199e-01, -4.11035828e-02,  2.53232717e-01,\n'
 '         1.27227378e+00,  1.58399606e+00, -1.40077382e-01,\n'
 '        -3.28644848e+00, -1.45599198e+00, -2.69202876e+00,\n'
 '         2.35166494e-03, -2.42979980e+00, -2.55866861e+00,\n'
 '        -5.05179346e-01,  9.67935503e-01, -2.40130156e-01,\n'
 '        -1.30467033e+00, -4.24150854e-01, -9.25292730e-01,\n'
 '        -8.22141945e-01, -2.94830346e+00, -1.78973103e+00,\n'
 '         3.58085215e-01,  5.41324914e-01,  1.55654264e+00,\n'
 '         7.13862240e-01,  8.73124301e-01,  1.12239361e-01,\n'
 '        -1.65390563e+00, -7.81591952e-01, -1.24798751e+00,\n'
 '        -8.31175148e-01, -1.86835957e+00,  4.30143475e-01,\n'
 '         1.73565841e+00, -1.03322911e+00, -5.62150478e-01,\n'
 '         4.77985322e-01, -1.10232331e-01,  1.51014137e+00,\n'
 '         1.14159799e+00, -4.06170726e-01,  1.40835297e+00,\n'
 '         6.54870272e-01, -7.15251863e-02,  1.58266675e+00,\n'
 '        -9.42517817e-01,  1.83161139e+00, -4.54157800e-01,\n'
 '        -6.54816866e-01,  1.14891076e+00,  3.91355133e+00,\n'
 '        -9.89278853e-02,  1.41171098e+00,  3.55960786e-01,\n'
 '        -2.44928151e-01,  4.84442830e-01, -3.05058956e+00,\n'
 '        -4.93565470e-01,  3.14838004e+00,  2.80107069e+00,\n'
 '        -3.63400161e-01,  1.69486463e+00,  5.81953585e-01,\n'
 '        -6.95206702e-01,  1.19154882e+00, -2.13536787e+00,\n'
 '        -6.86631024e-01, -3.39249372e-01, -2.07977629e+00,\n'
 '        -2.00747514e+00, -2.37729263e+00, -6.23013854e-01,\n'
 '         1.43520367e+00, -3.27358171e-02,  4.81069237e-01,\n'
 '         1.09934294e+00, -9.99934554e-01,  6.35801554e-01,\n'
 '        -3.33575583e+00, -4.23152745e-02, -1.52261126e+00,\n'
 '        -2.27437675e-01, -8.68075311e-01, -3.07011175e+00,\n'
 '        -3.36482197e-01,  9.97350454e-01,  1.63617981e+00,\n'
 '        -8.47824514e-01,  1.83984757e-01,  4.70344961e-01,\n'
 '         1.06007767e+00, -6.68423057e-01,  5.47932923e-01,\n'
 '        -6.40380442e-01, -6.32682919e-01,  7.12341487e-01,\n'
 '         1.05138290e+00,  6.09598756e-02,  7.06742823e-01,\n'
 '         6.46957755e-01, -3.96585643e-01,  6.22351587e-01,\n'
 '        -1.43550360e+00, -1.36479259e+00, -4.10264552e-01,\n'
 '         1.16764343e+00,  4.18958068e-01, -1.81970513e+00,\n'
 '         1.05984241e-01,  2.42075872e+00, -5.52527428e-01,\n'
 '        -2.58326554e+00, -4.89191592e-01,  8.97904992e-01,\n'
 '        -1.37006390e+00,  1.05805314e+00, -1.32726610e+00,\n'
 '         1.71864891e+00,  2.19752908e+00,  4.90070611e-01,\n'
 '         1.80789128e-01, -1.12557936e+00, -2.96233344e+00,\n'
 '        -3.85567641e+00, -2.39551902e+00, -3.58682215e-01,\n'
 '        -7.43503392e-01, -2.26212203e-01, -9.02310371e-01,\n'
 '        -3.80789012e-01, -1.48078859e+00, -3.72409642e-01,\n'
 '        -3.33862209e+00, -9.51050103e-01,  1.56497650e+01,\n'
 '         1.49889889e+01,  1.19459164e+00,  1.18486857e+00,\n'
 '         1.10718851e+01, -1.35133302e+00,  2.50667500e+00,\n'
 '         1.35648102e-01, -9.24212456e-01, -2.02208757e-04,\n'
 '         3.91069800e-01,  2.65031147e+00, -2.29691476e-01,\n'
 '        -1.49892956e-01, -3.71820211e-01, -2.02533889e+00,\n'
 '         1.02177048e+00,  2.79353714e+00,  1.10079825e+00,\n'
 '        -3.15048039e-01, -8.65647435e-01,  6.96531236e-01,\n'
 '         1.68548906e+00, -2.51780319e+00,  5.68987250e-01,\n'
 '         8.10476720e-01, -8.24344635e-01, -1.56220108e-01,\n'
 '        -1.80805218e+00,  4.91207838e-01, -7.72530138e-01,\n'
 '        -1.89835042e-01,  4.48402643e-01, -1.78899825e+00,\n'
 '        -2.98939586e-01,  1.14338422e+00, -3.41195047e-01,\n'
 '        -1.70124626e+00, -1.69147587e+00, -1.37424514e-01,\n'
 '         1.50463671e-01,  1.06862402e+00, -1.35380590e+00,\n'
 '         1.29973984e+00,  1.05373752e+00, -1.61698484e+00,\n'
 '        -1.48373747e+00, -1.20795712e-01,  2.61184454e+00,\n'
 '         4.65882778e-01, -4.22202289e-01, -1.09865940e+00,\n'
 '        -1.07282567e+00, -1.16684854e+00,  7.01702118e-01,\n'
 '        -5.42434931e-01, -1.05255199e+00,  5.28969050e-01,\n'
 '         2.49790952e-01,  2.21396709e+00,  1.23847687e+00,\n'
 '         1.15407836e+00, -3.61200750e-01, -3.68508726e-01,\n'
 '         1.62497187e+00,  8.10956806e-02,  5.83602846e-01,\n'
 '        -3.60914290e-01,  2.74149835e-01, -1.49081171e+00,\n'
 '         1.24106991e+00,  8.20711196e-01,  4.88445535e-02,\n'
 '         2.06964940e-01, -1.06423092e+00, -1.77905870e+00,\n'
 '         6.44914150e-01, -5.07991075e-01, -2.28738025e-01,\n'
 '         5.47622383e-01, -1.90433907e+00, -1.96298921e+00,\n'
 '        -6.24240756e-01,  9.26178694e-01, -1.29360747e+00,\n'
 '        -1.32314825e+00, -1.54603410e+00, -1.56720042e+00,\n'
 '         7.80011773e-01, -1.07733369e+00, -1.74133062e+00,\n'
 '         1.17689848e+00,  7.76836157e-01,  1.62598044e-01,\n'
 '        -1.04913163e+00, -1.73497930e-01,  2.13629913e+00,\n'
 '        -7.98154175e-01,  4.57773566e-01,  1.48988223e+00,\n'
 '        -4.54633594e-01,  1.39373696e+00, -2.63577747e+00,\n'
 '        -6.05840385e-02, -5.59111655e-01,  5.94710052e-01,\n'
 '         1.03680325e+00, -1.08669400e+00,  1.26815391e+00,\n'
 '        -6.28712058e-01, -1.40903860e-01, -2.92848587e-01,\n'
 '        -1.62558055e+00,  1.49253595e+00,  3.09083909e-01,\n'
 '         4.59042609e-01,  9.98022914e-01,  5.65858960e-01,\n'
 '        -8.89074206e-01, -7.99027011e-02, -3.96346211e-01,\n'
 '         2.08630815e-01, -1.49340963e+00, -3.32818687e-01,\n'
 '        -6.86479330e-01, -2.01553559e+00,  2.29173019e-01,\n'
 '         1.13607573e+00, -1.11924994e+00, -2.98745155e-01,\n'
 '        -1.12047875e+00, -1.56014574e+00, -1.82699275e+00,\n'
 '         4.61090922e-01, -1.33882165e+00,  1.12536766e-01,\n'
 '        -4.58088368e-02, -2.43734264e+00, -1.55254531e+00,\n'
 '        -2.53026634e-02,  1.47122681e+00, -5.07661104e-01,\n'
 '         6.31281018e-01,  2.38046432e+00, -6.62392497e-01,\n'
 '        -2.82875895e-02, -5.03280878e-01,  1.78368378e+00,\n'
 '         1.31932759e+00, -8.93050313e-01,  1.35018337e+00,\n'
 '        -5.99352121e-02, -9.66531157e-01, -2.77350903e+00,\n'
 '        -7.54140556e-01, -7.65993834e-01,  2.49923420e+00,\n'
 '        -2.43932709e-01,  2.42190218e+00,  5.88677824e-02,\n'
 '         3.06778461e-01, -4.77252662e-01,  3.19171250e-01,\n'
 '        -1.78422272e+00, -1.85059452e+00, -1.04562497e+00,\n'
 '         1.57519865e+00, -7.30100274e-01,  7.33217239e-01,\n'
 '         1.99666649e-01,  9.92104948e-01,  3.63351727e+00,\n'
 '         2.51196957e+00,  2.86030269e+00, -1.67196989e+00,\n'
 '        -2.76441479e+00,  8.91192675e-01, -1.92543709e+00,\n'
 '        -1.43528056e+00,  8.80891264e-01, -2.46179724e+00,\n'
 '        -1.98668063e+00,  3.56696397e-01,  2.41758561e+00,\n'
 '         7.08192587e-03, -9.97861743e-01,  1.18348265e+00,\n'
 '         1.49944758e+00, -1.58569205e+00, -8.61855626e-01,\n'
 '         9.93449390e-02, -4.20929074e-01, -1.25566769e+00,\n'
 '         1.86473459e-01,  2.35620046e+00,  5.15333712e-01,\n'
 '         7.88123727e-01,  2.83437872e+00,  5.15952468e-01,\n'
 '        -1.59490097e+00,  2.86247581e-01,  4.40930039e-01,\n'
 '        -9.62192595e-01,  5.47561407e-01, -1.18423247e+00,\n'
 '        -8.49176109e-01, -3.09682775e+00, -2.32687330e+00,\n'
 '         1.35629439e+00, -3.19272608e-01, -3.19709849e+00,\n'
 '         1.89882064e+00, -8.00682008e-02, -1.50154203e-01,\n'
 '        -9.93481696e-01, -1.09734148e-01, -4.07098055e-01,\n'
 '        -1.45639300e+00, -3.05083811e-01, -2.39513248e-01,\n'
 '        -1.10193527e+00, -1.58166885e+00, -1.97342038e-01,\n'
 '         1.77701891e+00,  4.92916584e-01,  2.37110734e+00,\n'
 '        -6.56006217e-01,  3.16895032e+00, -7.88881421e-01,\n'
 '         5.72383463e-01, -1.39138484e+00,  2.90978253e-01,\n'
 '        -3.29620302e-01, -2.26774991e-01,  1.24517059e+00,\n'
 '         6.85377717e-01, -1.20507217e+00,  7.66527772e-01,\n'
 '         1.76948905e+00,  1.59441876e+00,  7.33901918e-01,\n'
 '         5.13662696e-01, -7.58109808e-01,  1.44848013e+00,\n'
 '        -1.49346471e+00, -1.85966313e+00, -1.82081056e+00,\n'
 '         7.94929385e-01, -1.51690137e+00, -1.74627650e+00,\n'
 '        -5.68442226e-01,  1.31045866e+00, -1.13837576e+00,\n'
 '         3.69979429e+00,  1.96208859e+00,  2.25729990e+00,\n'
 '        -1.89755881e+00, -1.30160481e-01, -2.26595104e-01,\n'
 '        -1.20253277e+00,  1.62798941e+00, -1.06795162e-01,\n'
 '         2.05933738e+00,  2.47310102e-01, -3.03410619e-01,\n'
 '        -6.46757483e-01, -8.32225382e-01, -6.25642955e-01,\n'
 '        -1.86626482e+00,  2.78566718e+00,  5.89950800e-01,\n'
 '         1.63060486e+00, -7.66808867e-01,  1.10431182e+00,\n'
 '        -1.93218425e-01, -2.30494690e+00,  7.09284395e-02,\n'
 '         4.55655187e-01, -9.71426219e-02,  1.42480993e+00,\n'
 '        -1.27266669e+00,  1.58517122e+00,  1.17375958e+00,\n'
 '         9.13014710e-01, -1.23643470e+00, -1.18051004e+00,\n'
 '         7.07379460e-01,  7.66708970e-01, -1.23276591e+00,\n'
 '         1.87439406e+00,  1.27591419e+00, -8.21599960e-01,\n'
 '        -7.67073512e-01,  3.74865860e-01, -2.74427205e-01,\n'
 '         1.70299184e+00, -6.62761271e-01, -1.07009804e+00,\n'
 '        -4.80392754e-01,  1.12759805e+00, -7.36488223e-01,\n'
 '        -3.96948218e-01, -1.05699086e+00, -1.96787739e+00,\n'
 '        -1.18673694e+00, -7.69948483e-01,  8.61200690e-01,\n'
 '         2.92171955e-01,  1.14732838e+00, -2.05205107e+00,\n'
 '        -1.74759102e+00,  3.97074223e-01,  1.09284055e+00,\n'
 '         6.54810250e-01,  2.71139681e-01,  2.85478950e-01,\n'
 '        -1.99920431e-01, -3.02891064e+00, -2.69394469e+00,\n'
 '        -2.02166796e+00,  4.93529916e-01,  8.18263590e-01,\n'
 '         9.19713378e-01,  1.12651050e+00,  1.21395981e+00,\n'
 '        -4.55922753e-01, -2.48081088e-01, -2.77259064e+00,\n'
 '        -7.57989109e-01, -1.59370565e+00,  5.93655706e-02,\n'
 '        -2.26557449e-01,  6.49076879e-01, -8.07353914e-01,\n'
 '         1.92471042e-01, -8.92807424e-01, -3.16655016e+00,\n'
 '        -3.76380265e-01, -1.46987581e+00,  1.22392809e+00,\n'
 '         4.57829833e-01,  3.64039183e+00, -2.59424210e-01,\n'
 '         4.58940864e-02,  1.63525552e-01, -2.35267353e+00,\n'
 '        -1.17394257e+00,  1.11871970e+00, -9.11427617e-01,\n'
 '         1.12899542e+00,  7.79995322e-02, -3.63181204e-01,\n'
 '         4.26650572e+00,  2.04900241e+00,  1.08468771e+00,\n'
 '        -2.89624381e+00,  4.02269483e-01,  4.32856679e-02,\n'
 '         1.49695337e-01, -8.95756245e-01, -6.10425949e-01,\n'
 '         1.40131497e+00,  2.62134290e+00, -3.03681016e+00,\n'
 '        -1.20205855e+00, -1.52154517e+00,  5.94488561e-01,\n'
 '        -2.50264740e+00,  5.72559893e-01,  2.54286957e+00,\n'
 '        -1.11531460e+00,  7.70103857e-02,  6.60452068e-01,\n'
 '         6.91992938e-01, -4.79519367e-01,  8.12454343e-01,\n'
 '         1.69687164e+00,  2.16221595e+00,  7.84898281e-01,\n'
 '        -9.60670412e-03,  2.12538052e+00,  2.35742003e-01,\n'
 '         7.38674462e-01,  5.96060008e-02,  6.07064724e-01,\n'
 '        -7.29358345e-02,  4.19434220e-01,  1.55991852e+00,\n'
 '        -9.35560048e-01,  7.48594344e-01,  1.01683760e+00,\n'
 '        -2.38302779e+00,  2.09823561e+00, -7.91682363e-01,\n'
 '        -1.14891544e-01,  5.73069334e-01, -8.89920235e-01,\n'
 '         3.87174785e-01,  1.29358605e-01,  3.54526401e-01,\n'
 '        -8.63829851e-02,  1.24207711e+00, -3.80581021e-01,\n'
 '        -9.07181054e-02,  2.09278986e-01,  1.75375664e+00,\n'
 '         1.35793185e+00, -1.06541669e+00,  1.15702176e+00,\n'
 '         3.11128527e-01,  1.85347354e+00, -1.08922303e+00,\n'
 '         4.48799074e-01,  2.15992236e+00, -5.68130970e-01,\n'
 '        -7.00068474e-01,  1.20708978e+00, -2.47475624e+00,\n'
 '        -2.01145530e-01,  2.67997622e+00, -9.44924951e-02,\n'
 '        -2.52141893e-01,  9.54502761e-01, -1.61834741e+00,\n'
 '        -1.86562896e+00, -1.57565558e+00, -1.19844854e+00,\n'
 '         1.31953085e+00, -1.19112492e+00, -8.48482728e-01,\n'
 '        -1.78064179e+00, -3.46347904e+00, -7.45875120e-01,\n'
 '         6.25837922e-01,  1.48212349e+00,  7.11944699e-01,\n'
 '        -1.43654752e+00, -3.71565998e-01, -2.30141789e-01,\n'
 '         2.01048446e+00, -2.81681418e+00,  1.79641151e+00,\n'
 '        -3.81878287e-01,  8.71046424e-01, -1.50796199e+00,\n'
 '         1.42374027e+00,  7.40951002e-01,  1.35753548e+00,\n'
 '         8.64593089e-02, -6.65381029e-02, -9.91710544e-01,\n'
 '         6.96386456e-01, -1.15811324e+00,  2.08196092e+00,\n'
 '        -3.42217636e+00,  4.11800742e-02,  2.58100629e-01,\n'
 '         3.78101826e-01, -3.69802535e-01, -5.78091383e-01,\n'
 '         1.62710398e-01,  1.70545554e+00, -1.67290604e+00,\n'
 '         3.39052856e-01, -2.32188964e+00, -6.53525949e-01,\n'
 '         9.40440416e-01, -8.12310278e-02, -2.08761931e+00,\n'
 '         2.75535560e+00,  1.84982848e+00,  2.47373462e+00,\n'
 '         2.44755602e+00, -1.41356111e-01, -6.33118987e-01,\n'
 '        -1.71550125e-01, -6.36503875e-01, -2.71436930e-01,\n'
 '         9.66257215e-01,  8.99311900e-03,  1.53446066e+00,\n'
 '        -1.89153075e+00, -9.66312349e-01,  6.85231090e-01,\n'
 '         1.51561022e+00, -4.05655086e-01, -5.00580430e-01,\n'
 '         5.79438269e-01, -5.37458301e-01,  4.90257740e-01,\n'
 '        -2.97392559e+00, -2.18687868e+00, -1.86000097e+00,\n'
 '         4.03781414e-01,  1.57294607e+00, -5.72328687e-01,\n'
 '         1.85989392e+00, -2.05634046e+00, -9.49419737e-01,\n'
 '        -1.00555286e-01, -2.10766506e+00,  7.14788079e-01,\n'
 '         2.86679316e+00, -2.98321724e-01,  6.94688916e-01,\n'
 '        -2.62043297e-01, -2.07211089e+00, -1.16422009e+00,\n'
 '         1.01524305e+00, -6.48078442e-01, -3.46849942e+00,\n'
 '        -1.15742207e+00, -1.44652235e+00, -1.27319312e+00,\n'
 '        -3.50260997e+00, -3.85248363e-02, -4.05971944e-01,\n'
 '         2.03136325e+00, -1.48351395e+00,  4.01598811e-02,\n'
 '         5.58815241e-01,  4.43088084e-01,  2.60923171e+00,\n'
 '        -1.41796815e+00,  3.42338920e+00,  2.96844411e+00,\n'
 '        -1.52114928e+00,  1.68638086e+00,  5.37384033e-01,\n'
 '        -6.31590962e-01,  7.30445623e-01,  1.78392029e+00,\n'
 '         7.44974375e-01, -6.71170950e-02, -1.08045387e+00,\n'
 '         2.00180721e+00, -1.26562059e-01,  1.99209690e+00,\n'
 '         1.50071669e+00, -4.10089493e-02,  9.42645907e-01,\n'
 '         1.00858831e+00,  1.26823854e+00, -1.67349410e+00,\n'
 '        -5.68670929e-01, -8.32969546e-01,  1.25033271e+00,\n'
 '         1.27466869e+00, -9.63025272e-01, -2.29847407e+00,\n'
 '         2.54132837e-01,  1.36170983e+00, -6.54671252e-01,\n'
 '         6.90709650e-01, -6.73922479e-01,  2.44886994e+00,\n'
 '         1.54153895e+00,  7.99372435e-01,  3.44731629e-01,\n'
 '         2.27402282e+00, -2.18634152e+00, -1.92596614e+00,\n'
 '        -8.94488320e-02, -1.07892013e+00, -7.36600220e-01,\n'
 '        -2.21677780e+00,  4.18679774e-01, -9.43595886e-01,\n'
 '        -1.09486580e-02,  2.27783024e-01, -1.68297958e+00,\n'
 '         3.17341328e-01,  2.02631688e+00, -2.84020042e+00,\n'
 '         6.89822316e-01,  2.18235552e-01, -1.28849888e+00,\n'
 '         6.97086096e-01, -2.19340277e+00,  1.81625485e+00,\n'
 '         1.44452259e-01,  6.12745822e-01, -6.05021000e-01,\n'
 '        -2.30574870e+00,  5.32970071e-01,  1.47309899e+00,\n'
 '        -1.50695518e-01, -5.55683635e-02, -7.58014739e-01,\n'
 '        -2.35805297e+00,  6.79324686e-01, -1.43373334e+00,\n'
 '         1.32187998e+00,  3.99052858e-01,  2.06285095e+00,\n'
 '        -1.05005896e+00, -1.88898921e+00,  4.21175599e-01,\n'
 '        -8.16471577e-01, -1.48474681e+00,  1.02701426e+00,\n'
 '         2.71001637e-01, -1.67342162e+00, -1.63807464e+00,\n'
 '         2.56256962e+00, -2.47812957e-01, -7.76172876e-01,\n'
 '        -9.84954894e-01,  1.66945541e+00,  6.62659645e-01,\n'
 '        -7.57001519e-01, -1.83311307e+00, -1.90923953e+00,\n'
 '         1.02651358e+00, -1.85444570e+00,  1.98453856e+00,\n'
 '         1.18618810e+00,  3.93548369e-01, -1.64966679e+00,\n'
 '         1.39385819e+00,  5.05839467e-01,  5.45510173e-01,\n'
 '         2.58567667e+00,  8.84861708e-01, -3.23185861e-01,\n'
 '         1.77797377e-02,  2.37249660e+00, -9.83815551e-01,\n'
 '         1.70892847e+00, -8.21215153e-01,  2.58317423e+00,\n'
 '        -4.63118970e-01,  3.75781864e-01,  1.92905223e+00,\n'
 '        -1.24009371e+00, -1.57919288e+00, -1.29374242e+00,\n'
 '         2.58446026e+00, -6.23968124e-01,  3.85222435e-01,\n'
 '        -2.02345222e-01,  4.52068150e-01,  6.03249967e-01,\n'
 '         1.32316911e+00,  2.28919908e-02,  1.69051099e+00,\n'
 '         1.42715871e+00,  6.00420535e-02, -1.23157889e-01,\n'
 '         8.10745895e-01, -7.47963011e-01, -1.20992744e+00,\n'
 '        -2.41560489e-03, -9.44050431e-01,  9.18414295e-01,\n'
 '         4.94935065e-01,  9.04858589e-01,  4.90592159e-02,\n'
 '         1.48379326e+00,  2.87423420e+00, -2.05145747e-01,\n'
 '         8.86005402e-01,  7.28913367e-01, -9.24082816e-01,\n'
 '        -1.20718658e+00, -1.94010043e+00,  1.33587217e+00,\n'
 '        -1.58458620e-01, -1.68226767e+00, -8.49615395e-01,\n'
 '         7.39003301e-01,  5.06117940e-01, -5.11993527e-01,\n'
 '         5.55744290e-01, -5.46728671e-02,  1.27538753e+00,\n'
 '         1.06701100e+00,  7.16173410e-01, -2.71692067e-01,\n'
 '         4.96034324e-02,  1.45450282e+00,  7.55038857e-02,\n'
 '         4.21261162e-01,  7.20127821e-01, -2.67130852e-01,\n'
 '         1.16889024e+00,  2.55704117e+00,  2.08736777e-01,\n'
 '         3.82427549e+00, -3.58150482e+00,  2.37448841e-01,\n'
 '        -2.00934768e+00, -2.78408599e+00,  1.10951757e+00,\n'
 '        -1.14332557e+00, -6.94019794e-02,  5.56433856e-01,\n'
 '        -4.51918781e-01, -1.40212381e+00,  1.51113033e-01,\n'
 '         4.11571026e-01,  1.06580555e-04,  2.43718341e-01,\n'
 '         8.07102382e-01,  2.08144277e-01,  2.94968456e-01,\n'
 '         3.77588898e-01, -3.76498043e-01, -1.25812781e+00,\n'
 '         1.01031756e+00, -7.75994062e-01, -1.36243558e+00,\n'
 '         7.69443273e-01, -1.03505862e+00,  3.47303182e-01,\n'
 '        -6.95268631e-01, -6.44535780e-01, -4.32768241e-02,\n'
 '        -1.59243977e+00]])')
'test_inceptionnet | batch_shape is: [1]'
'||'
