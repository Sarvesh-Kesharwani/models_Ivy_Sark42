'BasicConv2d | Test | input shape is: ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 128) | done 3/3'
'BasicConv2d | Test | Test Successfull!'
'||'
'InceptionAux | random_test_tensor shape is: ivy.Shape(1, 17, 17, 768)'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'InceptionAux | input shape is:ivy.Shape(1, 17, 17, 768)'
'InceptionAux | done 1/8, output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 128) | done 3/3'
'InceptionAux | done 2/8'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 1, 1, 768) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 1, 1, 768) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 1, 1, 768) | done 3/3'
'InceptionAux | done 3/8'
'InceptionAux | input shape to adaptive_avg_pool2d is:ivy.Shape(1, 1, 1, 768)'
('InceptionAux | permuted input shape to adaptive_avg_pool2d is:ivy.Shape(1, '
 '768, 1, 1)')
('InceptionAux | output shape from adaptive_avg_pool2d is:ivy.Shape(1, 768, 1, '
 '1)')
('InceptionAux | permuted output shape from adaptive_avg_pool2d '
 'is:ivy.Shape(1, 1, 1, 768)')
'InceptionAux | done 4/8'
'InceptionAux | done 5/8'
'InceptionAux | done 8/8'
'InceptionAux | Test Successfull!'
'random_test_tensor shape is: ivy.Shape(1, 35, 35, 192)'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'input shape is:ivy.Shape(1, 35, 35, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 35, 35, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 35, 35, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 35, 35, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 35, 35, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 35, 35, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 35, 35, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 35, 35, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 35, 35, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 35, 35, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 35, 35, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 35, 35, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 35, 35, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 35, 35, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 35, 35, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 35, 35, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 35, 35, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 35, 35, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 35, 35, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 35, 35, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 35, 35, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 35, 35, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 35, 35, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 35, 35, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 35, 35, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 35, 35, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 35, 35, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 35, 35, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 35, 35, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 35, 35, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 35, 35, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 35, 35, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 35, 35, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 35, 35, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 35, 35, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 35, 35, 32) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 35, 35, 32)'
'InceptionA | outputs 20/20'
'Test Successfull!'
'random_test_tensor shape is: ivy.Shape(1, 35, 35, 288)'
'layer 1/4 built'
'layer 2/4 built'
'layer 3/4 built'
'layer 4/4 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'input shape is:ivy.Shape(1, 35, 35, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 35, 35, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 17, 17, 384) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 17, 17, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 35, 35, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 35, 35, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 35, 35, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 35, 35, 64) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 35, 35, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 35, 35, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 35, 35, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 35, 35, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 35, 35, 96) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 35, 35, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 35, 35, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 17, 17, 96) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 17, 17, 96)'
'one 20/20, output shape is:ivy.Shape(1, 17, 17, 288)'
'one 20/20'
'Test Successfull!'
'random_test_tensor shape is: ivy.Shape(1, 17, 17, 768)'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'input shape is:ivy.Shape(1, 17, 17, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 17, 17, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 17, 17, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 17, 17, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 17, 17, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 17, 17, 128) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 17, 17, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 17, 17, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 17, 17, 128) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 17, 17, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 17, 17, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 17, 17, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 17, 17, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 17, 17, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 17, 17, 128) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 17, 17, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 17, 17, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 17, 17, 128) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 17, 17, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 17, 17, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 17, 17, 128) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 17, 17, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 17, 17, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 17, 17, 128) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 17, 17, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 17, 17, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 17, 17, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 17, 17, 192)'
'one 10/20, output shape is:ivy.Shape(1, 17, 17, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 17, 17, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 17, 17, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 17, 17, 192)'
'one 20/20'
'Test Successfull!'
'random_test_tensor shape is: ivy.Shape(1, 17, 17, 768)'
'layer 1/6 built'
'layer 2/6 built'
'layer 3/6 built'
'layer 4/6 built'
'layer 5/6 built'
'layer 6/6 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'input shape is:ivy.Shape(1, 17, 17, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 17, 17, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 17, 17, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 17, 17, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 17, 17, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 8, 8, 320) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 8, 8, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 17, 17, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 17, 17, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 17, 17, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 17, 17, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 17, 17, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 17, 17, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 17, 17, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 17, 17, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 17, 17, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 17, 17, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 8, 8, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 8, 8, 192)'
'one 7/20, output shape is:ivy.Shape(1, 8, 8, 768)'
'one 20/20'
'Test Successfull!'
'random_test_tensor shape is: ivy.Shape(1, 8, 8, 1280)'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'input shape is:ivy.Shape(1, 8, 8, 1280)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 8, 8, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 8, 8, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 8, 8, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 8, 8, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 8, 8, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 8, 8, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 8, 8, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 8, 8, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 8, 8, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 8, 8, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 8, 8, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 8, 8, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 8, 8, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 8, 8, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 8, 8, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 8, 8, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 8, 8, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 8, 8, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 8, 8, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 8, 8, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 8, 8, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 8, 8, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 8, 8, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 8, 8, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 8, 8, 192)'
'20/20'
'Test Successfull!'
'test_inceptionnet | device is: cpu'
'test_inceptionnet | fw is: numpy'
'test_inceptionnet | load_weights is: False'
'layer 1/22 built'
'layer 2/22 built'
'layer 3/22 built'
'layer 4/22 built'
'layer 5/22 built'
'layer 6/22 built'
'layer 7/22 built'
'layer 8/22 built'
'layer 9/22 built'
'layer 10/22 built'
'layer 11/22 built'
'layer 12/22 built'
'layer 13/22 built'
'layer 14/22 built'
'layer 15/22 built'
'layer 17/22 built'
'layer 18/22 built'
'layer 19/22 built'
'layer 20/22 built'
'layer 21/22 built'
'layer 22/22 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/4 built'
'layer 2/4 built'
'layer 3/4 built'
'layer 4/4 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/6 built'
'layer 2/6 built'
'layer 3/6 built'
'layer 4/6 built'
'layer 5/6 built'
'layer 6/6 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'inceptionNet_v3 | building InceptionV3 model | done 1/3'
'input shape is:(1, 224, 224, 3)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 224, 224, 3) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 111, 111, 32) | done 3/3'
'v3 1/23, output shape is:ivy.Shape(1, 111, 111, 32)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 111, 111, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 32) | done 3/3'
'v3 2/23, output shape is:ivy.Shape(1, 109, 109, 32)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 109, 109, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 64) | done 3/3'
'v3 3/23, output shape is:ivy.Shape(1, 109, 109, 64)'
'v3 4/23, output shape is:ivy.Shape(1, 54, 54, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 54, 54, 80) | done 3/3'
'v3 5/23, output shape is:ivy.Shape(1, 54, 54, 80)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 80) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 52, 52, 192) | done 3/3'
'v3 6/23, output shape is:ivy.Shape(1, 52, 52, 192)'
'v3 7/23, output shape is:ivy.Shape(1, 25, 25, 192)'
'input shape is:ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 32) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 32)'
'InceptionA | outputs 20/20'
'v3 8/23, output is:ivy.Shape(1, 25, 25, 256)'
'input shape is:ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'v3 9/23, output shape is:ivy.Shape(1, 25, 25, 288)'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'v3 10/23, output shape is:ivy.Shape(1, 25, 25, 288)'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 384) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 96) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 96)'
'one 20/20, output shape is:ivy.Shape(1, 12, 12, 288)'
'one 20/20'
'v3 11/23, output shape is:ivy.Shape(1, 12, 12, 768)'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'v3 12/23, output shape is:ivy.Shape(1, 12, 12, 768)'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'v3 13/23, output shape is:ivy.Shape(1, 12, 12, 768)'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'v3 14/23, output shape is:ivy.Shape(1, 12, 12, 768)'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'v3 15/23, output shape is:ivy.Shape(1, 12, 12, 768)'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 5, 5, 192)'
'one 7/20, output shape is:ivy.Shape(1, 5, 5, 768)'
'one 20/20'
'v3 17/23, output shape is:ivy.Shape(1, 5, 5, 1280)'
'input shape is:ivy.Shape(1, 5, 5, 1280)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'v3 18/23, output shape is:ivy.Shape(1, 5, 5, 2048)'
'input shape is:ivy.Shape(1, 5, 5, 2048)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'v3 19/23, output shape is:ivy.Shape(1, 5, 5, 2048)'
'Inception3 | input shape to adaptive_avg_pool2d is:ivy.Shape(1, 5, 5, 2048)'
('Inception3 | permuted input shape to adaptive_avg_pool2d is:ivy.Shape(1, '
 '2048, 5, 5)')
'Inception3 | output shape from adaptive_avg_pool2d is:ivy.Shape(1, 2048, 1, 1)'
('Inception3 | permuted output shape from adaptive_avg_pool2d is:ivy.Shape(1, '
 '1, 1, 2048)')
'v3 20/23, avgpool output shape is:ivy.Shape(1, 1, 1, 2048)'
'v3 21/23, dropout output shape is:ivy.Shape(1, 1, 1, 2048)'
'v3 22/23, flatten output shape is:ivy.Shape(1, 2048)'
'fc done 23/23'
('test_inceptionnet | logits is: ivy.array([[-5.21551250e+04,  '
 '8.27866062e+05,  1.47698047e+05,\n'
 '         4.11390844e+05, -6.46130078e+04,  4.36572812e+05,\n'
 '        -2.17123344e+05, -2.13525547e+05, -7.60316719e+04,\n'
 '         4.78448312e+05, -1.08138922e+05,  3.91223125e+04,\n'
 '        -7.51968125e+04,  2.09589922e+05,  1.08639750e+05,\n'
 '        -2.77795406e+05,  6.75900062e+05, -2.24050469e+05,\n'
 '         2.92640000e+05, -8.67778125e+03, -2.53742141e+05,\n'
 '        -2.74220156e+05, -6.11735500e+05, -1.86740969e+05,\n'
 '         2.53397625e+05,  2.04105281e+05, -3.79670438e+05,\n'
 '        -3.45233000e+05,  1.39843688e+05, -5.70842500e+04,\n'
 '        -2.71328219e+05, -8.08263125e+05, -2.65695312e+05,\n'
 '         6.65893516e+04,  1.90262594e+05,  3.49883344e+05,\n'
 '         5.58594125e+05, -5.10940031e+05, -2.07003156e+05,\n'
 '        -5.46663750e+05, -1.59051562e+05, -5.72287188e+04,\n'
 '         5.55545750e+05, -1.74785656e+05,  1.63389625e+05,\n'
 '         3.47425625e+05,  2.44685266e+05,  8.18665250e+05,\n'
 '         5.73197188e+05, -5.82134250e+05,  2.50962562e+05,\n'
 '         3.87398125e+05, -3.03839125e+05,  6.36630375e+05,\n'
 '        -6.46923000e+05,  5.27045125e+05,  3.49665281e+05,\n'
 '        -1.62535281e+05,  3.41543438e+05,  3.40188062e+05,\n'
 '         5.66057000e+05,  4.53633938e+05,  6.47082188e+04,\n'
 '         1.30846562e+04, -5.21588938e+05, -2.54031172e+05,\n'
 '        -2.49969312e+05, -5.44695125e+05,  1.20478594e+05,\n'
 '         2.23957125e+05, -2.75706688e+05,  1.13183156e+05,\n'
 '         4.25174438e+05,  1.62610047e+05, -5.38173188e+05,\n'
 '         1.73590438e+05,  3.54057688e+05,  3.68013875e+05,\n'
 '        -8.42278250e+05,  2.94232750e+05, -4.90334141e+04,\n'
 '        -1.01168669e+06,  5.51475500e+05, -6.64446312e+05,\n'
 '         6.60531312e+05,  6.43577305e+04, -3.93023312e+05,\n'
 '        -2.35953391e+05,  5.71043750e+05, -1.31193938e+05,\n'
 '         1.96416406e+04, -3.50729375e+04, -5.16653875e+05,\n'
 '         8.50870312e+05, -6.25190938e+04,  5.06142000e+05,\n'
 '         2.97758938e+05,  3.39646875e+05, -3.21937438e+05,\n'
 '         9.58525391e+03, -1.65818484e+05, -1.72499828e+05,\n'
 '        -2.62328750e+05,  8.02994688e+04, -1.40327750e+05,\n'
 '        -3.30880219e+05, -6.26853281e+04,  7.37691875e+04,\n'
 '         2.40445359e+05,  2.56735844e+05,  1.93712438e+05,\n'
 '        -8.94827000e+05,  3.42250438e+05, -4.18706625e+05,\n'
 '         1.28732922e+05,  3.19369125e+05,  1.19409914e+05,\n'
 '         1.00026625e+05, -8.00744625e+05, -2.68380031e+05,\n'
 '        -5.24025938e+04, -3.81268906e+05, -3.97755969e+05,\n'
 '         5.35521875e+04,  4.04583562e+05, -6.56990000e+05,\n'
 '        -4.75571031e+05,  3.94538031e+05,  1.41507812e+04,\n'
 '         8.08330312e+04,  5.73241562e+05, -5.28154000e+05,\n'
 '         4.90967531e+05,  2.73127656e+05,  6.39833750e+05,\n'
 '        -5.61701188e+05,  3.54995188e+05, -5.19396969e+05,\n'
 '         3.77825219e+05,  4.08659094e+05, -7.93660188e+05,\n'
 '         4.11380375e+05,  1.69281953e+04, -5.33326875e+05,\n'
 '        -2.87849656e+05, -3.38731125e+05, -3.43557688e+05,\n'
 '        -2.26877672e+05,  1.69475000e+04, -7.28168500e+05,\n'
 '         8.55094625e+05, -9.39193594e+04,  9.56344062e+04,\n'
 '        -3.95684062e+04, -6.82734375e+03,  1.46146688e+05,\n'
 '         3.83093938e+05, -6.66387625e+05,  5.46560625e+05,\n'
 '        -3.97129938e+05,  1.68921625e+05, -1.08536725e+06,\n'
 '         5.70231500e+05,  9.76580000e+04, -5.28570750e+05,\n'
 '        -3.63217375e+05,  6.17201375e+05, -5.10795250e+05,\n'
 '        -3.02985719e+05,  6.92902375e+05, -1.14952391e+05,\n'
 '        -1.89882406e+05,  7.05413750e+04, -3.65800000e+03,\n'
 '         1.03481400e+06, -3.39520938e+05,  2.21249875e+05,\n'
 '        -6.90540625e+03, -8.46808375e+05,  1.55951297e+05,\n'
 '         1.15139570e+05,  3.65868500e+05,  2.71257125e+05,\n'
 '        -6.10164000e+05,  1.89182391e+05, -1.47557969e+05,\n'
 '         1.23674500e+06,  2.01190375e+05,  1.33583328e+05,\n'
 '        -2.39153203e+04, -2.40263656e+05, -2.77951562e+05,\n'
 '        -1.67569766e+04, -8.48114625e+05,  2.71028250e+05,\n'
 '         6.10882891e+04, -2.46687438e+05,  7.29637500e+03,\n'
 '        -7.85351562e+05, -3.39726812e+05, -3.19206875e+05,\n'
 '         4.50844688e+05, -4.52294562e+05,  6.63400000e+04,\n'
 '        -4.80097188e+04, -3.66768875e+05, -2.06060047e+05,\n'
 '        -7.93345312e+04, -5.50496500e+05, -2.17597656e+05,\n'
 '        -2.51421922e+05, -1.61766016e+04, -3.94224688e+05,\n'
 '         9.98031562e+04,  3.42145250e+05,  1.21190734e+05,\n'
 '         2.33743391e+05,  2.59580203e+05, -1.88525188e+05,\n'
 '        -2.43293562e+05, -2.95127750e+05, -4.92975688e+05,\n'
 '        -4.13307875e+05, -3.76199531e+05,  3.31930656e+05,\n'
 '         1.04193031e+05, -3.21197562e+05, -5.62271406e+04,\n'
 '        -4.56632688e+05,  7.54263000e+05, -4.45500156e+04,\n'
 '        -3.79147188e+05, -1.31159516e+05, -4.31631625e+05,\n'
 '        -1.99350406e+05, -1.58521406e+05,  3.74211531e+05,\n'
 '         3.17708719e+05,  4.66358031e+05,  4.85830344e+05,\n'
 '         9.57545469e+04, -6.07717750e+05,  1.77318062e+05,\n'
 '        -1.54570312e+03,  1.63912812e+05, -1.64122484e+05,\n'
 '         8.66659375e+04,  4.13562094e+05, -4.21292000e+05,\n'
 '        -3.51014344e+05,  5.44726750e+05, -2.31621812e+05,\n'
 '        -4.67522344e+05, -2.43241344e+05,  1.32391562e+05,\n'
 '        -2.57667500e+04, -4.26211188e+05, -1.05851250e+05,\n'
 '         7.79064844e+03,  1.43254609e+05, -1.04218744e+06,\n'
 '         7.45851750e+05, -1.90765875e+05,  9.47748906e+04,\n'
 '         4.92213906e+05,  6.39346812e+05,  1.89990938e+05,\n'
 '        -1.66548375e+05,  1.56797016e+05,  1.04786086e+05,\n'
 '         3.01350906e+05,  4.47658594e+05,  8.02345875e+05,\n'
 '        -3.67420219e+05,  3.61627250e+05, -2.31867469e+05,\n'
 '        -1.10857680e+05,  1.11024141e+05, -1.17316891e+05,\n'
 '         2.86521750e+05,  5.42733562e+05, -2.22212281e+05,\n'
 '         1.37129547e+05, -2.47464000e+05,  3.43411781e+05,\n'
 '         8.63523359e+04,  1.10278812e+05, -2.31637828e+05,\n'
 '         4.08369562e+05, -7.42711875e+04,  1.83501469e+05,\n'
 '        -3.69912656e+05,  6.00320508e+04, -3.44919688e+05,\n'
 '        -5.52462000e+05,  4.04661469e+05,  6.20799438e+05,\n'
 '        -8.80538875e+05, -6.50481250e+05, -2.46977875e+05,\n'
 '         9.33154750e+05, -7.51818750e+03, -2.54746750e+05,\n'
 '         8.03396875e+04,  1.84539047e+05,  4.39794344e+05,\n'
 '         4.38743125e+04,  3.94013625e+05,  1.86679828e+05,\n'
 '         3.02423812e+05,  1.67136016e+04,  5.50406250e+02,\n'
 '         4.99976250e+04, -5.89835312e+05,  1.73354188e+05,\n'
 '         4.00207938e+05, -1.29650500e+05,  9.28081406e+04,\n'
 '        -4.54046250e+04, -1.52930844e+05, -9.18468750e+04,\n'
 '         2.19978125e+03, -4.02573625e+05,  2.66705375e+05,\n'
 '         5.96981953e+04,  7.32678875e+05, -3.15417312e+05,\n'
 '         2.47919422e+05,  3.71191906e+05,  2.00104469e+05,\n'
 '        -1.68294734e+05, -2.07918562e+05,  8.25633875e+05,\n'
 '         5.23693375e+05,  1.63717438e+05,  2.06430328e+05,\n'
 '         7.16157734e+04,  1.16208062e+05, -5.10687500e+04,\n'
 '        -4.22446953e+04, -5.77194000e+05,  3.24556000e+05,\n'
 '        -2.28599047e+05, -2.36245562e+05,  4.77045000e+04,\n'
 '         4.20486500e+05,  6.15478438e+04, -8.76238906e+04,\n'
 '        -5.35567875e+05,  6.30074438e+05,  2.31093078e+05,\n'
 '        -1.45572188e+04,  1.84914375e+04,  6.50311875e+05,\n'
 '         4.78107094e+05, -9.58200547e+04, -2.95861625e+05,\n'
 '        -1.90908875e+05, -1.09426938e+06,  5.23052625e+05,\n'
 '        -6.18447312e+05, -2.04816391e+05,  3.53934625e+05,\n'
 '        -1.83886875e+05,  7.88795312e+04, -2.73819031e+05,\n'
 '        -3.07867625e+05, -1.02336484e+05,  5.37862938e+05,\n'
 '         1.16735453e+05, -3.88199125e+05, -3.22215562e+05,\n'
 '         1.45877828e+05, -3.18452094e+05, -5.35872562e+05,\n'
 '        -3.25177250e+05, -2.78974750e+05,  3.54650750e+05,\n'
 '        -4.27851125e+05,  2.54325797e+05,  3.51488750e+05,\n'
 '        -2.87755312e+04, -1.27072609e+05,  1.86811719e+05,\n'
 '         2.81856344e+05, -1.96392906e+05,  2.20232016e+05,\n'
 '        -4.71702500e+04, -6.34707000e+05,  5.18653828e+04,\n'
 '         8.30185000e+05, -9.75983438e+04,  7.12991484e+04,\n'
 '        -2.03415703e+05, -7.41320469e+04,  6.17130438e+05,\n'
 '        -2.33693484e+05,  8.42447969e+04,  7.59355000e+04,\n'
 '        -4.99278938e+05,  7.38299062e+04,  2.31807250e+05,\n'
 '         1.08780289e+05, -1.05359012e+06, -4.10560312e+05,\n'
 '         4.42010219e+05, -3.08415781e+05,  5.54813125e+04,\n'
 '        -4.61421125e+05,  1.97741281e+05,  6.28209625e+05,\n'
 '        -2.24240625e+04,  4.17288438e+05,  3.97157312e+05,\n'
 '        -6.24042375e+05, -1.90154516e+05,  3.62219469e+05,\n'
 '        -4.60759844e+04,  4.98222109e+04,  3.95401875e+05,\n'
 '         5.74171500e+05, -3.70637500e+05,  9.98847969e+04,\n'
 '        -9.18902812e+04,  1.00025938e+04,  3.63796438e+05,\n'
 '        -1.69099609e+04, -2.09504469e+05, -8.03404688e+04,\n'
 '         1.89556812e+05, -2.01431188e+05,  6.48017422e+04,\n'
 '        -2.01945906e+05,  2.69670562e+05,  3.08483562e+05,\n'
 '        -2.25475281e+05,  2.30086234e+05, -6.08617500e+05,\n'
 '         1.31184562e+05,  8.75277000e+05, -5.45789625e+05,\n'
 '         6.85207375e+05, -3.08878125e+03,  6.20706250e+03,\n'
 '        -4.18541438e+05,  9.30478594e+04, -1.40973047e+05,\n'
 '        -1.65035094e+05,  5.64107062e+05, -9.21289531e+04,\n'
 '         4.53022656e+05, -1.32493328e+05, -4.65854812e+05,\n'
 '         4.63570438e+05,  5.94207312e+05,  3.90275438e+05,\n'
 '         1.23182344e+04, -2.49578562e+05, -3.01434688e+05,\n'
 '         7.18202344e+04,  4.22757906e+05,  7.21626375e+05,\n'
 '        -2.13208000e+05,  3.64134453e+04, -1.96715516e+05,\n'
 '         1.70884094e+05, -1.67002719e+05,  2.22258844e+05,\n'
 '         1.10380828e+05,  6.25494125e+05,  4.41811719e+04,\n'
 '        -1.61659219e+04,  8.86328250e+05, -1.74869062e+04,\n'
 '        -9.99090625e+03,  3.43927094e+05,  1.47456719e+05,\n'
 '        -1.59046672e+05, -7.05820312e+04,  1.80477469e+05,\n'
 '        -2.88662148e+04, -7.10133438e+04, -1.56326625e+05,\n'
 '        -4.26338844e+05,  5.38452148e+04,  2.38755750e+05,\n'
 '        -3.88123438e+04,  2.72204438e+05, -1.80500906e+05,\n'
 '        -1.31120188e+05,  3.49306812e+05,  6.77060500e+05,\n'
 '         3.08126344e+05,  5.51118500e+05, -1.85870906e+05,\n'
 '         2.92835406e+05, -3.60674906e+05, -3.38810875e+05,\n'
 '         1.27924844e+04, -3.15217000e+05, -6.53142688e+05,\n'
 '        -6.37019844e+04, -1.67184344e+05, -1.04319000e+05,\n'
 '         3.64608875e+05, -4.88938656e+05, -6.23164375e+05,\n'
 '         2.62044031e+05, -2.09726125e+05, -4.00890625e+04,\n'
 '        -4.61841375e+05,  4.12987227e+04,  5.97980000e+04,\n'
 '        -4.66784297e+04,  2.04167797e+05, -8.82956875e+04,\n'
 '         2.57127469e+05, -2.62048469e+05, -3.14193375e+05,\n'
 '         3.76789625e+05,  9.82110312e+04,  1.84217125e+05,\n'
 '        -6.20511625e+05, -1.06799250e+06, -1.16644938e+05,\n'
 '         1.17189578e+05,  1.06745000e+06,  4.83056250e+05,\n'
 '         1.21095281e+05, -5.42470562e+05,  5.70263633e+04,\n'
 '         5.73338125e+05,  2.59691016e+05,  5.65634375e+05,\n'
 '        -1.80991250e+05, -2.41827656e+05, -1.96310703e+04,\n'
 '         3.27836688e+05,  1.16501164e+05, -1.75783500e+05,\n'
 '         3.41038000e+05,  1.85790656e+05,  3.79115031e+05,\n'
 '        -8.83079375e+04,  1.17161188e+05, -4.28746438e+05,\n'
 '        -3.52276844e+05, -1.19816648e+05, -2.63393594e+05,\n'
 '         3.63651531e+05, -3.67430469e+03, -3.64763000e+05,\n'
 '         1.99002438e+05,  2.30081531e+05,  1.48701328e+05,\n'
 '        -5.67290078e+04, -4.34997500e+05, -1.21177531e+05,\n'
 '         1.22429734e+05, -6.29364812e+05, -8.78363125e+04,\n'
 '        -7.74005625e+04, -2.02480938e+04,  2.33273891e+05,\n'
 '        -3.59234000e+05, -2.26561000e+05, -1.68692688e+05,\n'
 '        -3.34122594e+05, -6.50578438e+04, -1.25090531e+05,\n'
 '         8.16885234e+04, -2.04152062e+05,  6.69201688e+05,\n'
 '        -3.24920625e+05, -3.44710031e+05,  3.19625781e+05,\n'
 '         3.72905000e+04,  2.39998000e+05, -6.69155156e+04,\n'
 '        -2.86807938e+05, -1.49785219e+05, -3.83242500e+05,\n'
 '        -1.69915328e+05,  8.35574844e+04, -1.24265977e+05,\n'
 '         1.21390412e+06,  2.24109500e+05, -4.06822938e+05,\n'
 '        -3.04431000e+05,  7.70840781e+04,  2.29365000e+05,\n'
 '         5.88889812e+05, -8.01044844e+04, -1.42171133e+04,\n'
 '        -2.35110719e+05, -6.70885781e+04, -1.82334000e+05,\n'
 '        -4.45261125e+05, -6.48578125e+04,  1.98905500e+05,\n'
 '         4.01431594e+05,  1.85987953e+05,  2.36837750e+05,\n'
 '         1.85578953e+05, -3.09121188e+05,  1.91727594e+05,\n'
 '         1.62263719e+05,  1.55184875e+05,  3.55809500e+05,\n'
 '         4.28427719e+05,  2.69564375e+05, -7.53037656e+04,\n'
 '        -4.44128125e+04, -2.88394562e+05, -1.16519562e+05,\n'
 '         1.78971062e+05,  2.51762500e+03,  4.74871719e+04,\n'
 '         2.03625547e+05,  2.90498281e+05, -1.81225281e+05,\n'
 '        -2.57727406e+05,  4.66782062e+05,  3.85459375e+04,\n'
 '        -2.93251500e+05,  1.11323078e+05,  1.48966500e+05,\n'
 '        -3.13992125e+05,  3.26328531e+05,  5.96813375e+05,\n'
 '         6.97182969e+04,  7.55398312e+05,  9.38690000e+05,\n'
 '         6.16884812e+05,  2.47772406e+05,  2.08049781e+05,\n'
 '         3.01668406e+05,  7.88719000e+05,  5.57495500e+05,\n'
 '         6.96476625e+05,  2.85867969e+05, -1.15432711e+05,\n'
 '         1.49752234e+05,  2.71590281e+05, -1.48962812e+05,\n'
 '         3.95678594e+04, -2.68044219e+04,  1.76333719e+05,\n'
 '        -2.46288812e+05,  1.06268547e+05,  3.84967656e+04,\n'
 '         5.75819438e+05,  1.12140125e+05, -2.48866859e+05,\n'
 '        -3.74913125e+05, -1.22281600e+06,  3.00241641e+04,\n'
 '         5.63321125e+05,  5.09707094e+05,  7.67779875e+05,\n'
 '        -2.49082656e+04, -3.22088188e+05, -1.75991125e+05,\n'
 '        -1.74249312e+05, -4.21669438e+05,  1.68616531e+05,\n'
 '        -7.32962422e+04,  2.95285312e+04, -3.62875000e+05,\n'
 '         5.36209312e+05, -1.22709800e+06,  5.10886188e+05,\n'
 '        -6.53632969e+04,  1.99723656e+05, -1.64276078e+05,\n'
 '        -6.74137125e+05, -1.90993969e+05, -4.68216156e+05,\n'
 '         6.17556375e+05, -6.85585312e+04, -5.69051750e+05,\n'
 '         4.68355156e+05,  1.40614469e+05,  1.61004250e+05,\n'
 '        -6.92418875e+05, -2.32423672e+04, -2.78236844e+05,\n'
 '        -6.63923875e+05, -2.32947859e+05,  2.22376031e+05,\n'
 '        -1.74900812e+05, -1.13963094e+05, -1.78513484e+05,\n'
 '        -2.04712500e+03, -8.66375938e+04, -2.19069500e+05,\n'
 '         9.57173438e+04, -4.23069469e+05,  1.14387734e+05,\n'
 '        -6.61645625e+04,  1.79674344e+05,  3.42653969e+05,\n'
 '        -2.40338453e+05,  2.20739469e+05, -1.60819406e+05,\n'
 '         1.48463344e+05, -2.49199000e+05, -1.36442672e+05,\n'
 '        -6.91515625e+04,  2.16543812e+05, -2.93416719e+05,\n'
 '         2.72132188e+05,  7.01407500e+05,  2.95358781e+05,\n'
 '         1.20028594e+05, -1.44726375e+05,  2.68379812e+05,\n'
 '        -2.17567219e+05,  5.80101750e+05,  6.63745562e+05,\n'
 '        -1.03253925e+06, -7.52237625e+05, -2.44199875e+05,\n'
 '        -3.43324500e+05,  4.17038250e+05, -4.04057266e+04,\n'
 '         2.89487125e+05, -5.13081344e+05, -3.00219094e+05,\n'
 '        -5.91793562e+05, -2.53633125e+05,  2.76474000e+05,\n'
 '        -4.88902625e+05, -8.24523875e+05,  7.07048500e+05,\n'
 '         7.08377812e+04, -6.76461250e+05, -1.87975859e+05,\n'
 '         4.82922375e+05,  2.93576812e+05,  3.79273781e+05,\n'
 '        -5.30659500e+05,  1.27637023e+05, -2.18476594e+05,\n'
 '         1.50556906e+05,  4.85565469e+05, -1.86957906e+05,\n'
 '         2.50011375e+05, -9.59710000e+04,  1.74056938e+05,\n'
 '        -3.05765250e+05,  3.07650188e+05,  4.78422875e+05,\n'
 '         2.62076344e+05, -2.64305281e+05,  1.42915422e+05,\n'
 '         1.85592734e+05,  8.74202812e+04, -1.35531656e+05,\n'
 '        -7.48931688e+05,  3.67934875e+05,  1.94824812e+05,\n'
 '         6.08703812e+05,  1.55437500e+05,  4.16825750e+05,\n'
 '         3.61674500e+05, -4.23968938e+05,  1.30595984e+05,\n'
 '        -3.10385898e+04,  6.73565781e+04,  1.05617367e+05,\n'
 '         5.90939250e+05,  6.23801000e+05, -6.10441875e+04,\n'
 '         1.13517328e+05, -3.54616156e+05, -9.49879531e+04,\n'
 '        -1.62540844e+05,  1.64350391e+05,  4.82793062e+05,\n'
 '         3.09976781e+05, -1.48703219e+05,  1.29098641e+05,\n'
 '        -3.85694281e+05, -5.99203875e+05, -2.51364062e+04,\n'
 '         4.48752625e+05, -1.02305227e+05, -4.63482812e+03,\n'
 '        -7.58842625e+05, -3.03565625e+05, -5.63093086e+04,\n'
 '        -1.86297828e+05, -4.63890188e+05, -2.81620875e+05,\n'
 '         9.95565375e+05,  1.42970344e+05,  2.24930734e+05,\n'
 '        -4.04544375e+05, -6.52289000e+05,  3.83283219e+05,\n'
 '         2.24987609e+05, -7.53808625e+05,  4.16101750e+05,\n'
 '        -1.02904773e+05,  3.34159875e+05, -9.64951562e+03,\n'
 '         3.60037750e+05,  1.76654672e+05,  3.83047875e+05,\n'
 '        -1.10045141e+05, -7.40785125e+05,  1.00843438e+05,\n'
 '         6.90978125e+04,  1.07235406e+05, -2.70415750e+05,\n'
 '        -4.21597250e+05,  8.97842812e+04,  5.59491625e+05,\n'
 '        -4.34690875e+05, -3.10625875e+05,  4.94821562e+05,\n'
 '         2.46002828e+05, -3.50392188e+03, -1.01180788e+06,\n'
 '        -5.33058250e+05,  3.95966688e+05, -8.30664219e+04,\n'
 '        -7.85950625e+05,  5.42664625e+05, -2.19168422e+05,\n'
 '         2.04880281e+05, -1.27535031e+05, -3.81216844e+05,\n'
 '         5.85208062e+05,  7.59869938e+05,  4.38105781e+05,\n'
 '        -8.12947031e+04, -1.43595891e+05, -2.51802312e+05,\n'
 '        -1.76272125e+05, -2.17964266e+05,  5.25060062e+05,\n'
 '        -4.02444781e+05, -1.72949906e+05, -2.74690062e+05,\n'
 '         1.46336156e+05,  9.73367375e+05, -1.79497844e+05,\n'
 '         8.52789375e+04,  6.11971500e+05, -1.77615844e+05,\n'
 '        -4.27460938e+04,  3.98053250e+05, -3.88766469e+05,\n'
 '         4.17181406e+05, -6.59641688e+05,  1.17022312e+05,\n'
 '        -5.13558594e+04,  3.02441750e+05, -7.32105312e+05,\n'
 '        -4.89383844e+05,  5.89548281e+04, -5.41538000e+05,\n'
 '        -2.01440109e+05,  5.07022109e+04,  2.95483812e+05,\n'
 '        -1.57979781e+05, -2.98409438e+05,  7.51944875e+05,\n'
 '         9.28648812e+05,  9.13494375e+04, -6.48206719e+04,\n'
 '         3.70740312e+04,  6.29231500e+05, -3.26705406e+05,\n'
 '         2.12806250e+03, -1.51301969e+05, -1.26709719e+05,\n'
 '         1.12360688e+05, -1.84266969e+05, -3.36699750e+05,\n'
 '         1.08485969e+05,  5.64827500e+05, -2.07368156e+05,\n'
 '         1.70938656e+05,  3.23273438e+03, -3.23696781e+05,\n'
 '         8.71928875e+05,  4.87476250e+04, -4.54453188e+05,\n'
 '         5.95003875e+05, -6.29481500e+05, -4.93694062e+05,\n'
 '        -5.78388562e+05,  1.23758750e+04,  8.43121750e+05,\n'
 '         1.62898031e+05, -9.40205156e+04,  2.50862500e+03,\n'
 '        -3.88874312e+05,  9.31553594e+04,  8.69106406e+04,\n'
 '        -2.29563125e+04, -2.91263031e+05,  3.17271156e+05,\n'
 '         2.57998438e+05, -6.74781875e+05, -5.29631375e+05,\n'
 '        -2.70460344e+05,  4.12965625e+03, -1.81156031e+05,\n'
 '         1.21743175e+06, -2.08144469e+05,  1.12365844e+05,\n'
 '         2.90344000e+05,  1.75316781e+05, -8.72350625e+04,\n'
 '        -7.35476375e+05, -3.09781875e+04,  1.62414469e+05,\n'
 '        -3.31996250e+04, -1.55702547e+05,  4.67159875e+05,\n'
 '         1.01384688e+05,  4.46283312e+05, -4.57948125e+05,\n'
 '         1.59525781e+05,  7.89595750e+05,  2.18578625e+05,\n'
 '        -1.51846562e+05,  2.17251391e+05, -2.82445906e+05,\n'
 '        -2.33345156e+04, -2.32785250e+05, -4.64035500e+05,\n'
 '        -2.55281938e+05,  9.60308750e+04,  2.42771109e+05,\n'
 '        -1.44999484e+05, -1.83190469e+04, -4.11029094e+05,\n'
 '         2.87499719e+05, -1.51253156e+05, -6.35157375e+05,\n'
 '         6.86024500e+05, -2.69109125e+05,  3.72206438e+05,\n'
 '         4.23870312e+04, -3.30612062e+05, -1.38920516e+05,\n'
 '         3.51902219e+05,  3.48493469e+05,  2.31783516e+05,\n'
 '         1.14741438e+05,  7.05883625e+05, -2.92393062e+05,\n'
 '         7.70700781e+04, -1.11189641e+05, -5.27194625e+05,\n'
 '        -5.26941188e+05, -3.56331250e+03,  1.26755438e+05,\n'
 '         5.77720750e+05, -1.67112172e+05, -2.23151484e+05,\n'
 '         6.28321000e+05,  5.90644531e+03,  3.07841562e+04,\n'
 '         8.23781094e+04, -2.98279250e+05, -6.59751250e+04,\n'
 '         2.25080406e+05, -3.63875906e+05, -5.91238000e+05,\n'
 '        -1.41316344e+05, -3.54819625e+05, -1.98462156e+05,\n'
 '        -8.62916188e+05, -4.80543219e+05,  5.89696875e+05,\n'
 '        -7.14305625e+04,  6.49235875e+05, -8.33647500e+05,\n'
 '         4.73967000e+05, -1.08845906e+05, -6.32533375e+05,\n'
 '         4.02807344e+05, -2.93699375e+05, -2.81348969e+05,\n'
 '        -4.50915625e+04,  8.66908281e+04,  2.84913500e+05,\n'
 '         7.58979609e+04,  5.27133375e+05,  6.44871000e+05,\n'
 '        -5.62429312e+05,  1.29908375e+05,  4.40846000e+05,\n'
 '        -1.46127406e+05]])')
'test_inceptionnet | batch_shape is: [1]'
'||'
'test_inceptionnet | device is: cpu'
'test_inceptionnet | fw is: numpy'
'test_inceptionnet | load_weights is: True'
'layer 1/22 built'
'layer 2/22 built'
'layer 3/22 built'
'layer 4/22 built'
'layer 5/22 built'
'layer 6/22 built'
'layer 7/22 built'
'layer 8/22 built'
'layer 9/22 built'
'layer 10/22 built'
'layer 11/22 built'
'layer 12/22 built'
'layer 13/22 built'
'layer 14/22 built'
'layer 15/22 built'
'layer 17/22 built'
'layer 18/22 built'
'layer 19/22 built'
'layer 20/22 built'
'layer 21/22 built'
'layer 22/22 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/4 built'
'layer 2/4 built'
'layer 3/4 built'
'layer 4/4 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/6 built'
'layer 2/6 built'
'layer 3/6 built'
'layer 4/6 built'
'layer 5/6 built'
'layer 6/6 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'inceptionNet_v3 | building InceptionV3 model | done 1/3'
'inceptionNet_v3 | clearning pretrained weights | done 2/3'
'inceptionNet_v3 | loading pretrained weights | done 3/3'
'input shape is:(1, 224, 224, 3)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 224, 224, 3) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 111, 111, 32) | done 3/3'
'v3 1/23, output shape is:ivy.Shape(1, 111, 111, 32)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 111, 111, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 32) | done 3/3'
'v3 2/23, output shape is:ivy.Shape(1, 109, 109, 32)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 109, 109, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 64) | done 3/3'
'v3 3/23, output shape is:ivy.Shape(1, 109, 109, 64)'
'v3 4/23, output shape is:ivy.Shape(1, 54, 54, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 54, 54, 80) | done 3/3'
'v3 5/23, output shape is:ivy.Shape(1, 54, 54, 80)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 80) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 52, 52, 192) | done 3/3'
'v3 6/23, output shape is:ivy.Shape(1, 52, 52, 192)'
'v3 7/23, output shape is:ivy.Shape(1, 25, 25, 192)'
'input shape is:ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 32) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 32)'
'InceptionA | outputs 20/20'
'v3 8/23, output is:ivy.Shape(1, 25, 25, 256)'
'input shape is:ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'v3 9/23, output shape is:ivy.Shape(1, 25, 25, 288)'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'v3 10/23, output shape is:ivy.Shape(1, 25, 25, 288)'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 384) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 96) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 96)'
'one 20/20, output shape is:ivy.Shape(1, 12, 12, 288)'
'one 20/20'
'v3 11/23, output shape is:ivy.Shape(1, 12, 12, 768)'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'v3 12/23, output shape is:ivy.Shape(1, 12, 12, 768)'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'v3 13/23, output shape is:ivy.Shape(1, 12, 12, 768)'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'v3 14/23, output shape is:ivy.Shape(1, 12, 12, 768)'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'v3 15/23, output shape is:ivy.Shape(1, 12, 12, 768)'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 5, 5, 192)'
'one 7/20, output shape is:ivy.Shape(1, 5, 5, 768)'
'one 20/20'
'v3 17/23, output shape is:ivy.Shape(1, 5, 5, 1280)'
'input shape is:ivy.Shape(1, 5, 5, 1280)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'v3 18/23, output shape is:ivy.Shape(1, 5, 5, 2048)'
'input shape is:ivy.Shape(1, 5, 5, 2048)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'v3 19/23, output shape is:ivy.Shape(1, 5, 5, 2048)'
'Inception3 | input shape to adaptive_avg_pool2d is:ivy.Shape(1, 5, 5, 2048)'
('Inception3 | permuted input shape to adaptive_avg_pool2d is:ivy.Shape(1, '
 '2048, 5, 5)')
'Inception3 | output shape from adaptive_avg_pool2d is:ivy.Shape(1, 2048, 1, 1)'
('Inception3 | permuted output shape from adaptive_avg_pool2d is:ivy.Shape(1, '
 '1, 1, 2048)')
'v3 20/23, avgpool output shape is:ivy.Shape(1, 1, 1, 2048)'
'v3 21/23, dropout output shape is:ivy.Shape(1, 1, 1, 2048)'
'v3 22/23, flatten output shape is:ivy.Shape(1, 2048)'
'fc done 23/23'
('test_inceptionnet | logits is: ivy.array([[ 8.93488884e-01, -5.63839912e-01, '
 '-9.66196179e-01,\n'
 '         7.99162984e-01,  6.46775007e-01,  3.31060290e-01,\n'
 '         5.98640859e-01, -2.53074914e-01,  8.82571459e-01,\n'
 '         1.35469961e+00, -5.94716728e-01, -5.54303765e-01,\n'
 '         1.30281198e+00, -2.13170028e+00, -2.34624004e+00,\n'
 '         2.33306623e+00, -6.47765040e-01, -3.21371651e+00,\n'
 '        -2.17760467e+00, -2.49673796e+00, -3.54441261e+00,\n'
 '         1.61023009e+00,  5.47798812e-01,  6.68412089e-01,\n'
 '         2.89836216e+00, -7.72217065e-02, -8.13951492e-02,\n'
 '        -3.32390875e-01, -1.22078657e+00,  1.08068585e+00,\n'
 '         1.56920814e+00, -6.25808537e-03, -9.23383474e-01,\n'
 '         4.32464123e-01, -9.03738856e-01, -5.59380770e-01,\n'
 '         5.45712650e-01, -1.71404052e+00, -8.86429548e-01,\n'
 '        -5.21198928e-01, -3.08562732e+00, -9.46640372e-01,\n'
 '        -1.16006899e+00, -6.17792726e-01, -4.27253097e-01,\n'
 '         6.77046418e-01, -4.93449479e-01, -1.93810487e+00,\n'
 '         1.95349038e-01, -8.47165734e-02, -9.43989098e-01,\n'
 '         9.45815086e-01, -1.00579393e+00,  7.30670690e-01,\n'
 '        -1.53767908e+00, -8.99821877e-01, -6.00100219e-01,\n'
 '         1.36437058e+00, -5.07703662e-01, -2.13799238e+00,\n'
 '        -5.47064424e-01, -4.90845978e-01, -4.43069637e-01,\n'
 '        -2.93782622e-01, -2.31974029e+00,  1.28946948e+00,\n'
 '        -1.65425599e+00, -2.07777524e+00, -3.98489237e-02,\n'
 '        -1.10227370e+00, -1.15452938e-01, -2.38095212e+00,\n'
 '        -3.86887789e-01, -2.38539725e-01, -4.31036860e-01,\n'
 '        -1.84885156e+00,  1.22620225e-01, -1.57060707e+00,\n'
 '        -1.70390069e+00, -4.83755827e-01, -1.77234220e+00,\n'
 '        -2.52732515e+00, -1.88778889e+00,  2.21163917e+00,\n'
 '        -6.27697408e-01, -3.57885766e+00, -1.50801575e+00,\n'
 '         3.66069913e-01,  6.79008365e-01,  1.20347858e-01,\n'
 '         1.54787385e+00,  9.74880397e-01, -1.07195485e+00,\n'
 '         1.24002862e+00, -6.07387662e-01,  8.95795465e-01,\n'
 '        -7.21351206e-02, -1.46864021e+00,  4.20806527e-01,\n'
 '         8.96139741e-01,  7.27520645e-01, -2.07318354e+00,\n'
 '        -1.10016251e+00,  8.77847910e-01, -3.50028396e+00,\n'
 '        -1.21618033e+00, -1.07409269e-01, -1.44863248e-01,\n'
 '        -1.71599019e+00,  1.69955835e-01,  9.58746672e-01,\n'
 '        -8.83764863e-01,  1.06368768e+00, -1.14838779e+00,\n'
 '         8.90702605e-01, -2.32290673e+00, -2.05762172e+00,\n'
 '         4.49322462e-01, -1.27385724e+00, -1.00871289e+00,\n'
 '         3.94544244e-01, -1.04752326e+00, -1.28864062e+00,\n'
 '        -4.30011332e-01, -1.14117360e+00, -3.07713687e-01,\n'
 '         7.37732768e-01, -1.19843960e+00,  2.12973213e+00,\n'
 '         1.32826909e-01,  3.76919240e-01, -1.66968930e+00,\n'
 '         1.76935887e+00,  2.84548163e+00,  1.41480529e+00,\n'
 '         9.34432983e-01, -2.64559031e-01, -3.26542401e+00,\n'
 '         8.37446988e-01,  8.19228470e-01, -3.90509844e+00,\n'
 '        -8.72793913e-01, -4.99919623e-01, -1.45208764e+00,\n'
 '         1.10921240e+00,  1.14711297e+00, -2.71433377e+00,\n'
 '         1.95520306e+00,  1.61220837e+00,  2.01714349e+00,\n'
 '         3.31582260e+00,  1.07785761e+00,  2.19271272e-01,\n'
 '        -2.93296909e+00, -1.41762972e+00, -9.14555967e-01,\n'
 '        -5.91314435e-01, -3.85764927e-01, -1.67794704e+00,\n'
 '         1.00072968e+00,  4.37605798e-01, -3.32168281e-01,\n'
 '        -1.53153729e+00,  1.03293467e+00,  1.07808620e-01,\n'
 '        -4.61106420e-01, -2.01811290e+00, -8.84940505e-01,\n'
 '         2.25570989e+00,  7.95493066e-01,  1.41419315e+00,\n'
 '         6.84066653e-01,  3.44486535e-03,  4.37765956e-01,\n'
 '         4.03205454e-01, -3.08488965e-01, -1.74997449e+00,\n'
 '        -2.47175097e+00, -1.81347275e+00, -4.25051004e-01,\n'
 '         1.27806401e+00, -4.39707249e-01,  1.57804203e+00,\n'
 '         1.85859799e+00,  1.20694601e+00,  6.43048167e-01,\n'
 '         5.26150048e-01, -1.03904211e+00,  1.07750058e+00,\n'
 '         1.05832934e+00,  4.32089001e-01,  2.96664381e+00,\n'
 '        -3.02926254e+00,  2.31582236e+00, -1.32239187e+00,\n'
 '         1.27465010e+00,  1.27438056e+00,  2.52632880e+00,\n'
 '        -4.85719055e-01,  1.97751892e+00,  1.26165748e+00,\n'
 '        -5.36342621e-01,  7.32497156e-01, -1.27448058e+00,\n'
 '         1.63344681e+00,  1.32784772e+00,  2.66006303e+00,\n'
 '         3.99893999e-01, -3.81988108e-01,  8.47654104e-01,\n'
 '        -2.30340362e+00,  1.33875823e+00, -1.04541965e-01,\n'
 '         5.90019703e-01,  1.12076008e+00,  4.72665846e-01,\n'
 '         1.30241305e-01, -2.00877404e+00, -9.72963095e-01,\n'
 '         6.78741217e-01, -8.81368294e-02,  6.56846643e-01,\n'
 '         1.66710460e+00, -1.87616813e+00, -1.66974556e+00,\n'
 '        -2.49870157e+00,  3.59454960e-01,  1.19644857e+00,\n'
 '         1.12579489e+00, -9.73552644e-01, -2.29336190e+00,\n'
 '        -9.51742411e-01,  1.86838603e+00,  6.02181196e-01,\n'
 '        -2.98688680e-01,  1.51725304e+00,  5.94963431e-01,\n'
 '         1.46009707e+00, -2.82136893e+00, -1.00875497e+00,\n'
 '        -1.70736957e+00, -1.71507633e+00,  1.91929579e+00,\n'
 '         2.84919977e+00,  3.90620083e-01,  8.43760073e-02,\n'
 '         1.25546467e+00,  5.49503803e-01,  5.51405966e-01,\n'
 '        -2.93630242e+00, -2.23435950e+00,  8.69799137e-01,\n'
 '        -1.18735552e+00,  1.03847122e+00, -1.67482495e+00,\n'
 '        -1.19653487e+00,  2.23750305e+00, -9.17940676e-01,\n'
 '        -2.74542260e+00, -9.14569318e-01,  3.61479431e-01,\n'
 '        -3.00679207e+00, -6.75780714e-01, -1.32260811e+00,\n'
 '         1.74835300e+00,  7.90099025e-01,  9.39733148e-01,\n'
 '         1.20707071e+00,  1.56654775e-01, -3.83704615e+00,\n'
 '        -3.71216750e+00, -3.07396054e+00, -1.40471458e+00,\n'
 '        -1.90182865e-01, -8.19287002e-01, -6.17124796e-01,\n'
 '        -4.42610770e-01, -2.96142673e+00, -2.03162956e+00,\n'
 '        -4.05120754e+00, -4.64533925e-01,  1.69725780e+01,\n'
 '         1.85388870e+01,  5.67945898e-01,  2.21752763e-01,\n'
 '         1.39407768e+01, -1.74981642e+00,  2.93143868e+00,\n'
 '         1.91780424e+00,  1.42537057e+00, -4.92516160e-02,\n'
 '         1.32279134e+00,  4.40681887e+00,  1.74492598e-03,\n'
 '         7.54905224e-01, -1.33045506e+00, -3.26428443e-01,\n'
 '         5.93380690e-01,  2.33607960e+00,  3.76435542e+00,\n'
 '         1.06674004e+00,  1.12038958e+00,  4.97747243e-01,\n'
 '         2.60302091e+00,  8.54073524e-01, -1.54276282e-01,\n'
 '         5.29610336e-01, -1.53735161e-01,  6.05481863e-03,\n'
 '        -6.53134167e-01, -2.93441296e-01, -2.29363143e-01,\n'
 '        -5.04722536e-01,  1.35542571e-01, -2.24978638e+00,\n'
 '         4.87417638e-01,  1.28344762e+00,  7.38081813e-01,\n'
 '        -2.42662549e+00, -1.31464553e+00, -7.44638681e-01,\n'
 '         3.08988363e-01, -5.73104918e-01,  7.27600932e-01,\n'
 '         6.72575831e-01,  1.56192273e-01, -1.31776619e+00,\n'
 '        -3.89639199e-01, -1.93836600e-01,  9.67696846e-01,\n'
 '         1.60918653e+00,  2.95612603e-01, -1.61917269e+00,\n'
 '        -2.58046603e+00, -8.05504084e-01,  3.56356096e+00,\n'
 '         2.88891316e-01, -1.90875125e+00, -5.92095256e-01,\n'
 '         3.56621563e-01,  1.24203825e+00, -8.63894582e-01,\n'
 '        -2.61119574e-01, -2.05464315e+00,  4.37159121e-01,\n'
 '         3.79093528e+00,  1.25348246e+00, -1.19107211e+00,\n'
 '         2.71916509e-01,  5.93556464e-01, -6.10030294e-01,\n'
 '         2.10253358e-01, -1.32264280e+00,  2.84984827e-01,\n'
 '         6.05462909e-01, -5.51680386e-01, -4.14380980e+00,\n'
 '         7.90794849e-01, -6.51757121e-02,  5.55984914e-01,\n'
 '        -1.93360043e+00, -1.25513697e+00, -1.98284543e+00,\n'
 '         7.45801985e-01,  1.90672547e-01,  9.78386819e-01,\n'
 '        -3.13659000e+00, -1.04994810e+00, -2.42490768e+00,\n'
 '        -1.40974075e-02, -1.65141928e+00, -2.02790165e+00,\n'
 '        -1.20364785e+00, -9.09174621e-01, -2.08524013e+00,\n'
 '        -1.79787231e+00,  2.70670950e-01,  2.78670877e-01,\n'
 '        -3.33171368e+00, -1.79100573e+00, -1.17817175e+00,\n'
 '        -2.07753968e+00, -7.93299615e-01, -1.56268001e-01,\n'
 '        -2.57824361e-02, -3.72951448e-01,  4.72100020e-01,\n'
 '         9.02662873e-01, -9.83370602e-01,  1.46963811e+00,\n'
 '         8.58539939e-02,  1.24777746e+00,  1.07796133e+00,\n'
 '        -9.54533637e-01,  9.59807992e-01, -4.09915745e-02,\n'
 '        -5.61866343e-01,  1.00336599e+00,  5.52283883e-01,\n'
 '        -1.16151988e+00,  4.89264786e-01,  1.94876105e-01,\n'
 '         1.05938816e+00, -1.03345239e+00,  5.90431213e-01,\n'
 '         1.14300013e+00, -1.34132838e+00, -1.41741753e+00,\n'
 '         9.63752925e-01, -9.67425287e-01, -7.38795280e-01,\n'
 '         4.28190827e-03, -3.42380500e+00, -3.33635181e-01,\n'
 '        -3.27286065e-01, -2.12216950e+00,  4.21785653e-01,\n'
 '         9.79485333e-01, -4.75113928e-01,  6.63679957e-01,\n'
 '         2.68392420e+00,  1.96307170e+00,  7.31236696e-01,\n'
 '        -9.13532853e-01, -1.55218601e-01, -1.07776964e+00,\n'
 '        -1.12327337e+00, -1.49945366e+00,  2.18299031e-02,\n'
 '        -1.24811661e+00,  2.03703076e-01, -2.32515883e+00,\n'
 '        -3.64292353e-01, -1.43637276e+00, -1.52129173e+00,\n'
 '        -9.34809864e-01, -5.93170881e-01,  7.73160875e-01,\n'
 '         6.38582408e-01,  2.21850723e-01, -5.53306341e-02,\n'
 '         5.45856476e-01, -1.43758619e+00,  2.44793624e-01,\n'
 '         3.34957838e-01, -1.38155866e+00,  3.25808465e-01,\n'
 '         6.90926850e-01, -1.76587176e+00,  2.60276103e+00,\n'
 '        -1.90701020e+00, -1.54366940e-01, -2.91586191e-01,\n'
 '         3.85853791e+00,  2.07845688e+00,  2.30175662e+00,\n'
 '        -8.89367342e-01,  3.02863538e-01, -1.49293196e+00,\n'
 '        -1.85201907e+00,  1.96297789e+00, -4.02011156e+00,\n'
 '         1.40778339e+00,  2.72475332e-01, -3.92928720e-01,\n'
 '        -1.37342823e+00, -1.71318793e+00, -1.83578658e+00,\n'
 '         1.06603730e+00, -1.09126359e-01, -5.14557600e-01,\n'
 '         9.95669067e-01,  1.94886517e+00, -8.02774370e-01,\n'
 '        -5.83176315e-01,  5.54682970e-01,  1.30896747e-01,\n'
 '        -9.45858538e-01,  4.60832453e+00,  4.72795308e-01,\n'
 '        -4.43670940e+00, -1.06204934e-02, -1.26548123e+00,\n'
 '         3.59116085e-02,  1.34504533e+00, -1.87268829e+00,\n'
 '        -1.09222341e+00, -1.97297573e+00,  1.19596571e-02,\n'
 '         1.11965144e+00, -3.95007491e-01, -9.47711885e-01,\n'
 '         8.32307219e-01,  8.93036425e-02, -2.84840733e-01,\n'
 '        -1.57306051e+00,  9.13736939e-01, -6.93428218e-01,\n'
 '        -2.14865613e+00, -1.82313704e+00, -4.87576157e-01,\n'
 '        -2.60496640e+00,  1.12984610e+00, -3.76738250e-01,\n'
 '         2.24168837e-01, -1.73295450e+00,  3.82242709e-01,\n'
 '         3.00797522e-01,  1.94598150e+00, -8.18757653e-01,\n'
 '         2.84485161e-01, -3.35494280e+00, -1.59547770e+00,\n'
 '        -8.25526118e-01,  9.86798704e-01,  5.59474051e-01,\n'
 '        -2.16669941e+00, -5.12157917e-01,  4.61878449e-01,\n'
 '         1.26463485e+00,  9.01585341e-01,  7.30023861e-01,\n'
 '         5.41206062e-01, -7.24200606e-01, -3.49007845e-02,\n'
 '        -6.03409827e-01,  4.43917334e-01, -1.13658452e+00,\n'
 '         1.11090255e+00, -1.19613099e+00, -1.94566333e+00,\n'
 '        -7.75528610e-01,  1.71040010e+00, -8.30194771e-01,\n'
 '         1.50790513e+00,  1.52396059e+00,  1.20745480e+00,\n'
 '        -2.14465451e+00,  1.52558804e+00,  1.86958337e+00,\n'
 '         1.35730362e+00,  1.03222263e+00, -3.11521947e-01,\n'
 '         1.30820799e+00, -4.61085737e-01, -2.20657677e-01,\n'
 '         2.45577526e+00, -1.96321237e+00,  6.02571368e-01,\n'
 '         4.47985530e-03, -5.27782083e-01, -3.64607573e-01,\n'
 '         2.77666902e+00,  1.49108678e-01,  2.66095638e+00,\n'
 '        -5.35323024e-01, -9.44403946e-01,  1.00246179e+00,\n'
 '        -6.37563288e-01,  3.70491445e-01, -3.28689814e-01,\n'
 '         1.44724810e+00,  2.23560548e+00,  1.72238946e-01,\n'
 '         3.92315924e-01, -2.09688282e+00, -5.57711363e-01,\n'
 '         7.83981443e-01, -6.10320508e-01, -3.42018724e-01,\n'
 '        -1.25479078e+00, -1.64176738e+00, -1.71367264e+00,\n'
 '        -1.42835200e+00,  1.34785485e+00, -1.06588924e+00,\n'
 '         2.38585830e+00, -1.14735186e+00, -5.80262393e-04,\n'
 '         9.62806717e-02,  6.28988326e-01,  4.41901833e-01,\n'
 '         9.72516775e-01,  9.92300689e-01, -3.36652100e-01,\n'
 '        -1.52104068e+00, -1.50604188e-01,  9.81088996e-01,\n'
 '        -2.02819824e+00,  1.43295181e+00, -3.04117322e-01,\n'
 '        -2.63160110e+00,  3.93795788e-01,  7.55323649e-01,\n'
 '         4.82543290e-01,  4.03281033e-01, -1.53477740e+00,\n'
 '        -9.60502148e-01,  4.83654946e-01, -1.28265858e+00,\n'
 '        -3.07254195e+00, -1.32526576e+00, -1.76965147e-01,\n'
 '         5.29221952e-01,  2.41334870e-01,  7.85440683e-01,\n'
 '         1.49531394e-01,  2.33979374e-01, -6.40064597e-01,\n'
 '        -1.14307833e+00, -1.31450164e+00,  1.36548591e+00,\n'
 '         2.13399196e+00,  8.85525197e-02,  6.46654665e-01,\n'
 '        -1.54203892e+00, -2.48494887e+00, -2.09677792e+00,\n'
 '         6.82484090e-01, -1.12520850e+00,  1.88682342e+00,\n'
 '         4.36934322e-01,  1.57953239e+00, -2.75756121e-02,\n'
 '         5.63224912e-01,  4.10882425e+00, -2.42901325e+00,\n'
 '        -1.14892828e+00,  4.96204138e-01,  4.14598346e-01,\n'
 '         1.75297737e+00, -5.63133597e-01, -7.74535060e-01,\n'
 '         1.86735189e+00, -3.78409922e-02,  2.17466760e+00,\n'
 '        -2.21650696e+00,  7.98391104e-02, -4.93545085e-02,\n'
 '         1.08375526e+00, -1.88290381e+00,  8.69735360e-01,\n'
 '         1.33620054e-01,  1.98270547e+00, -1.27496934e+00,\n'
 '        -1.35329127e+00, -1.63923299e+00, -1.23936713e+00,\n'
 '        -1.95567250e-01, -2.72794127e-01, -7.37087369e-01,\n'
 '         7.85730124e-01, -1.09754705e+00, -3.78484055e-02,\n'
 '        -8.11091065e-01, -1.81916308e+00, -1.04161695e-01,\n'
 '         9.74406123e-01,  8.10259640e-01,  3.85763407e-01,\n'
 '         1.13509846e+00,  2.36703420e+00,  8.63382101e-01,\n'
 '         6.18920803e-01,  1.53893137e+00,  6.72757849e-02,\n'
 '        -1.05471122e+00, -1.32603764e+00,  1.16626978e+00,\n'
 '        -1.34885108e+00,  3.82460236e-01,  3.06048512e-01,\n'
 '        -3.04894328e-01,  3.51008987e+00,  2.92123824e-01,\n'
 '         6.21779919e-01,  1.49479938e+00, -2.92886662e+00,\n'
 '        -1.56559050e+00, -8.91822696e-01, -1.94160080e+00,\n'
 '         1.36712360e+00, -1.13710225e+00, -6.52496874e-01,\n'
 '         6.39683902e-02, -1.06619239e+00, -5.18805265e-01,\n'
 '         2.12372232e+00,  1.58455223e-02,  2.13579237e-01,\n'
 '         1.52449489e+00, -9.60379779e-01,  2.24483862e-01,\n'
 '         1.50818014e+00,  4.16031599e+00,  5.56378663e-02,\n'
 '         1.17734539e+00,  1.81983662e+00, -2.33065820e+00,\n'
 '         6.30861878e-01, -2.22588152e-01,  2.83407301e-01,\n'
 '        -2.06452393e+00, -1.92440021e+00, -1.85582733e+00,\n'
 '        -1.29691589e+00, -1.59701228e+00, -1.64101541e-01,\n'
 '         1.27158594e+00,  3.84757072e-02,  1.12293750e-01,\n'
 '        -3.86750340e+00, -2.01756477e+00, -3.27800661e-01,\n'
 '        -5.09795547e-01, -1.12373018e+00,  9.84719515e-01,\n'
 '        -1.90849185e+00,  1.16751432e+00, -8.04793835e-01,\n'
 '         2.54924369e+00,  1.04630068e-01,  1.90251362e+00,\n'
 '         7.69281268e-01,  3.33005834e+00,  5.29138893e-02,\n'
 '        -1.03716588e+00,  2.09283614e+00,  2.32453418e+00,\n'
 '        -2.04173922e-02, -3.41196358e-02,  4.45560515e-02,\n'
 '        -5.00816941e-01,  5.42763054e-01,  8.71643245e-01,\n'
 '        -5.27857244e-02,  4.17845398e-01,  1.81858313e+00,\n'
 '        -2.73823917e-01, -5.56267649e-02, -7.50997841e-01,\n'
 '         1.26192820e+00,  2.84607220e+00, -2.58442998e+00,\n'
 '        -6.96841925e-02, -1.77113652e+00, -3.51678467e+00,\n'
 '         4.69429016e-01, -1.07804990e+00, -3.41743469e-01,\n'
 '         2.56393218e+00,  1.27390242e+00,  2.62273121e+00,\n'
 '         3.33059072e+00, -2.63927102e-01, -2.29127526e+00,\n'
 '        -1.00402689e+00,  1.49089336e-01, -4.44719285e-01,\n'
 '         7.99166560e-01,  8.83380055e-01,  2.94656038e+00,\n'
 '        -2.60359621e+00, -1.94155014e+00, -9.52101231e-01,\n'
 '        -1.21458352e+00, -4.14558232e-01,  5.12046814e-01,\n'
 '         8.17695081e-01,  9.95560944e-01,  2.22418261e+00,\n'
 '        -2.65597343e+00, -1.87265468e+00, -2.52027082e+00,\n'
 '         2.01299667e+00,  1.77884460e+00, -1.58455819e-01,\n'
 '         1.07495070e+00,  1.24512994e+00,  1.22282374e+00,\n'
 '         2.60451645e-01, -2.04554677e+00,  1.55946124e+00,\n'
 '         2.82442570e-02,  5.27309716e-01,  1.14143515e+00,\n'
 '         2.13341892e-01, -3.29882383e+00,  1.85604081e-01,\n'
 '         6.35974169e-01, -1.07948661e+00, -2.64598703e+00,\n'
 '         6.29213929e-01, -2.24752992e-01, -1.32867849e+00,\n'
 '        -5.23385823e-01, -5.42504549e-01,  1.48785353e+00,\n'
 '         1.94395554e+00, -4.92226005e-01, -4.66166735e-01,\n'
 '         1.71373665e+00,  9.34575379e-01,  2.98339796e+00,\n'
 '        -1.93926191e+00,  1.41602647e+00,  4.73072052e+00,\n'
 '         1.58939228e-01,  3.07579756e-01,  5.08377194e-01,\n'
 '        -1.10418069e+00,  2.41508865e+00,  9.37582016e-01,\n'
 '        -1.09029561e-01,  2.37617969e+00, -5.35031319e-01,\n'
 '         1.17515922e+00,  1.48338902e+00, -2.84976333e-01,\n'
 '        -1.09495842e+00, -3.96729559e-01,  3.13567948e+00,\n'
 '         1.60399389e+00,  2.79641062e-01, -1.15159869e+00,\n'
 '        -1.29272222e+00, -9.97509182e-01,  2.24042201e+00,\n'
 '        -1.87006140e+00, -7.01944232e-01, -2.12366199e+00,\n'
 '         6.52560592e-01,  2.25934553e+00,  2.09728885e+00,\n'
 '         8.27889442e-01, -3.25077683e-01,  3.79699469e-01,\n'
 '        -4.67362367e-02,  5.41822791e-01,  5.46737850e-01,\n'
 '         3.72129726e+00, -2.25995803e+00, -2.28540635e+00,\n'
 '        -2.58619726e-01, -7.85240352e-01, -6.31248534e-01,\n'
 '        -8.08651596e-02,  1.12277603e+00, -1.64547771e-01,\n'
 '         2.96569884e-01,  7.84349322e-01, -3.45290244e-01,\n'
 '         2.94184709e+00,  1.37302458e-01, -2.29838490e+00,\n'
 '        -9.87476528e-01,  2.72990966e+00, -6.96474612e-01,\n'
 '        -3.27298045e-02, -1.15710712e+00,  1.99978006e+00,\n'
 '        -8.00276697e-01,  2.82685548e-01,  3.23766679e-01,\n'
 '         3.79448652e-01,  1.36283815e+00,  2.28934288e+00,\n'
 '         9.38665628e-01, -2.68918514e+00, -2.09364629e+00,\n'
 '        -2.41121268e+00,  6.96624160e-01, -2.62775630e-01,\n'
 '         4.02135253e-01, -1.90437317e-01,  1.19093728e+00,\n'
 '        -8.72456253e-01, -2.21209741e+00,  1.11734712e+00,\n'
 '        -4.19921726e-01,  4.19331268e-02,  4.82194364e-01,\n'
 '        -1.23855424e+00,  1.76566386e+00, -1.46878195e+00,\n'
 '         2.75154442e-01, -1.50419325e-01, -2.39569330e+00,\n'
 '         1.86953962e-01,  2.16574764e+00,  5.52131832e-01,\n'
 '         2.29093611e-01, -9.45438862e-01, -3.95364141e+00,\n'
 '         7.51851261e-01, -2.56679606e+00,  1.49260378e+00,\n'
 '         1.91289127e+00, -1.09289217e+00, -2.60811997e+00,\n'
 '         4.79759157e-01,  3.84097904e-01,  2.12712765e-01,\n'
 '         2.84265041e+00,  4.50515747e+00,  1.14619613e+00,\n'
 '        -4.58170742e-01,  1.09623444e+00, -1.79757118e-01,\n'
 '         2.33665395e+00, -5.96358180e-01, -1.09217632e+00,\n'
 '        -7.94520021e-01,  2.26960707e+00,  1.68700945e+00,\n'
 '         2.86501125e-02,  9.27211165e-01,  1.06441402e+00,\n'
 '         3.50704694e+00, -1.31574035e+00, -1.62527174e-01,\n'
 '         1.67562008e+00,  2.06220245e+00, -1.99034631e+00,\n'
 '         3.08046758e-01, -8.36365074e-02,  1.15166462e+00,\n'
 '        -1.58818793e+00, -2.46104050e+00, -2.01054192e+00,\n'
 '         3.28606605e-01,  1.13845050e+00, -9.27565813e-01,\n'
 '         5.79566479e-01, -6.35938883e-01, -2.48847461e+00,\n'
 '        -4.35217351e-01, -9.68796015e-02, -7.80132413e-01,\n'
 '         2.80752706e+00,  1.69566810e+00, -1.22820139e+00,\n'
 '         1.10548496e+00,  3.91168594e-01, -1.68114996e+00,\n'
 '        -3.06415141e-01, -2.31867299e-01,  2.67630637e-01,\n'
 '        -7.88391471e-01, -1.11963654e+00, -2.92147756e-01,\n'
 '        -5.89320660e-01, -1.36224544e+00,  6.01230145e-01,\n'
 '        -3.78518492e-01, -1.15599430e+00, -1.01490271e+00,\n'
 '         1.69159457e-01, -3.85702133e-01,  8.92179429e-01,\n'
 '        -2.81751084e+00,  5.94526470e-01, -6.97706580e-01,\n'
 '         1.72367978e+00, -1.12386453e+00, -1.78359354e+00,\n'
 '         8.51325333e-01,  3.60387564e-01, -1.45453453e+00,\n'
 '         1.83336151e+00, -7.36989975e-01,  8.05206657e-01,\n'
 '         2.25708199e+00, -2.25115633e+00,  4.26877677e-01,\n'
 '         1.11713255e+00,  1.02884436e+00,  2.17225432e-01,\n'
 '         7.84915090e-01,  8.42772365e-01,  1.77012801e+00,\n'
 '        -9.94854510e-01, -4.77371514e-01,  6.93179727e-01,\n'
 '         1.11597967e+00,  3.39173913e-01,  9.18466389e-01,\n'
 '        -1.10513496e+00, -6.38158441e-01, -1.52536660e-01,\n'
 '         1.74648344e-01, -9.79113877e-01, -1.55600488e-01,\n'
 '        -1.07261360e-01, -3.85810107e-01, -1.17258573e+00,\n'
 '        -2.70985985e+00, -1.77354431e+00, -1.44597858e-01,\n'
 '        -1.35140324e+00]])')
'test_inceptionnet | batch_shape is: [1]'
'||'
'test_inceptionnet | device is: cpu'
'test_inceptionnet | fw is: jax'
'test_inceptionnet | load_weights is: False'
'layer 1/22 built'
'layer 2/22 built'
'layer 3/22 built'
'layer 4/22 built'
'layer 5/22 built'
'layer 6/22 built'
'layer 7/22 built'
'layer 8/22 built'
'layer 9/22 built'
'layer 10/22 built'
'layer 11/22 built'
'layer 12/22 built'
'layer 13/22 built'
'layer 14/22 built'
'layer 15/22 built'
'layer 17/22 built'
'layer 18/22 built'
'layer 19/22 built'
'layer 20/22 built'
'layer 21/22 built'
'layer 22/22 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/4 built'
'layer 2/4 built'
'layer 3/4 built'
'layer 4/4 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/6 built'
'layer 2/6 built'
'layer 3/6 built'
'layer 4/6 built'
'layer 5/6 built'
'layer 6/6 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'inceptionNet_v3 | building InceptionV3 model | done 1/3'
'input shape is:(1, 224, 224, 3)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 224, 224, 3) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 111, 111, 32) | done 3/3'
'v3 1/23, output shape is:ivy.Shape(1, 111, 111, 32)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 111, 111, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 32) | done 3/3'
'v3 2/23, output shape is:ivy.Shape(1, 109, 109, 32)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 109, 109, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 64) | done 3/3'
'v3 3/23, output shape is:ivy.Shape(1, 109, 109, 64)'
'v3 4/23, output shape is:ivy.Shape(1, 54, 54, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 54, 54, 80) | done 3/3'
'v3 5/23, output shape is:ivy.Shape(1, 54, 54, 80)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 80) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 52, 52, 192) | done 3/3'
'v3 6/23, output shape is:ivy.Shape(1, 52, 52, 192)'
'v3 7/23, output shape is:ivy.Shape(1, 25, 25, 192)'
'input shape is:ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 32) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 32)'
'InceptionA | outputs 20/20'
'v3 8/23, output is:ivy.Shape(1, 25, 25, 256)'
'input shape is:ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'v3 9/23, output shape is:ivy.Shape(1, 25, 25, 288)'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'v3 10/23, output shape is:ivy.Shape(1, 25, 25, 288)'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 384) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 96) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 96)'
'one 20/20, output shape is:ivy.Shape(1, 12, 12, 288)'
'one 20/20'
'v3 11/23, output shape is:ivy.Shape(1, 12, 12, 768)'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'v3 12/23, output shape is:ivy.Shape(1, 12, 12, 768)'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'v3 13/23, output shape is:ivy.Shape(1, 12, 12, 768)'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'v3 14/23, output shape is:ivy.Shape(1, 12, 12, 768)'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'v3 15/23, output shape is:ivy.Shape(1, 12, 12, 768)'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 5, 5, 192)'
'one 7/20, output shape is:ivy.Shape(1, 5, 5, 768)'
'one 20/20'
'v3 17/23, output shape is:ivy.Shape(1, 5, 5, 1280)'
'input shape is:ivy.Shape(1, 5, 5, 1280)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'v3 18/23, output shape is:ivy.Shape(1, 5, 5, 2048)'
'input shape is:ivy.Shape(1, 5, 5, 2048)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'v3 19/23, output shape is:ivy.Shape(1, 5, 5, 2048)'
'Inception3 | input shape to adaptive_avg_pool2d is:ivy.Shape(1, 5, 5, 2048)'
('Inception3 | permuted input shape to adaptive_avg_pool2d is:ivy.Shape(1, '
 '2048, 5, 5)')
'Inception3 | output shape from adaptive_avg_pool2d is:ivy.Shape(1, 2048, 1, 1)'
('Inception3 | permuted output shape from adaptive_avg_pool2d is:ivy.Shape(1, '
 '1, 1, 2048)')
'v3 20/23, avgpool output shape is:ivy.Shape(1, 1, 1, 2048)'
'v3 21/23, dropout output shape is:ivy.Shape(1, 1, 1, 2048)'
'v3 22/23, flatten output shape is:ivy.Shape(1, 2048)'
'fc done 23/23'
('test_inceptionnet | logits is: ivy.array([[ 2.06222832e+04,  6.81986875e+05, '
 '-9.35411953e+04,\n'
 '         1.13002775e+06,  4.41957891e+04,  1.72935781e+05,\n'
 '         4.55985625e+05,  5.00874656e+05,  8.63039062e+04,\n'
 '        -4.94523188e+05, -2.77499344e+05, -2.27012422e+05,\n'
 '         3.44358906e+04,  1.02228953e+05,  1.53056138e+06,\n'
 '         1.00752633e+05,  2.89721594e+05, -2.34625664e+04,\n'
 '        -1.34670859e+05,  7.43155438e+05,  3.56686562e+05,\n'
 '        -1.25094023e+05,  5.91286875e+04, -1.01410750e+06,\n'
 '        -5.17025547e+04,  2.47217672e+05,  1.24151525e+06,\n'
 '         3.59496406e+04,  4.67814812e+05, -1.37185484e+05,\n'
 '        -2.72323828e+04,  1.62360525e+06, -9.46009562e+05,\n'
 '        -4.13907312e+05,  3.82178062e+05,  2.74563719e+05,\n'
 '         9.98241938e+05,  1.11836388e+06, -5.73087688e+05,\n'
 '         5.47939375e+04,  1.61165172e+05,  6.08519750e+05,\n'
 '         1.00594586e+05,  5.29919492e+04,  4.27199812e+05,\n'
 '         1.08712462e+06, -3.43125469e+05, -1.49561406e+05,\n'
 '         6.43742438e+05, -1.64660141e+05, -3.86418531e+05,\n'
 '        -6.24666375e+05,  9.19446812e+05, -5.04119500e+05,\n'
 '        -6.17068125e+05, -3.26553369e+03, -8.92261719e+04,\n'
 '         1.60416969e+05, -4.84231375e+05, -8.64260781e+04,\n'
 '        -9.21107188e+05, -4.00680125e+05, -7.97193516e+04,\n'
 '        -3.72819062e+05,  7.19926797e+04, -3.47113188e+05,\n'
 '        -3.69601531e+05,  1.22843112e+06, -2.02051516e+05,\n'
 '         4.52726812e+05,  4.28911750e+05,  7.01254531e+04,\n'
 '         7.58364625e+05, -1.30433750e+05,  8.94833750e+05,\n'
 '        -9.74581000e+05, -4.62462938e+05,  3.21815938e+04,\n'
 '         3.39583500e+05,  2.26808453e+05, -5.74251000e+05,\n'
 '         1.85418750e+05,  2.48281859e+05, -8.07736125e+05,\n'
 '        -7.28045250e+05,  6.62719062e+04,  4.91348094e+05,\n'
 '        -3.07809031e+05, -7.84144812e+05,  6.08497438e+05,\n'
 '        -3.23022781e+05,  2.07696719e+05,  9.29184625e+05,\n'
 '        -2.14565203e+05,  6.30131375e+05, -8.50129312e+05,\n'
 '         1.25311141e+05,  5.56676438e+05, -6.65245188e+05,\n'
 '        -9.26531625e+05,  6.18878688e+05,  7.80358625e+05,\n'
 '        -7.15955625e+05,  3.66587250e+05, -4.80238828e+04,\n'
 '        -1.96387688e+05, -1.42104012e+06,  1.05188575e+06,\n'
 '         9.55034688e+04, -5.02359469e+05, -1.40862050e+06,\n'
 '        -1.13832125e+06, -5.66544875e+05,  5.35544375e+05,\n'
 '        -4.68726969e+05,  1.06975638e+06,  7.97833688e+05,\n'
 '        -9.42622109e+04, -2.87261641e+04, -6.11578938e+05,\n'
 '         5.77881000e+05, -1.44026500e+05, -2.25271344e+05,\n'
 '         4.31960562e+05,  3.15712062e+05,  7.14072562e+05,\n'
 '        -5.79800688e+05,  4.98706375e+05, -8.01225703e+04,\n'
 '         2.61536738e+04, -5.42127062e+05,  5.94078750e+05,\n'
 '        -3.75786375e+05,  3.41206438e+05,  2.42657328e+05,\n'
 '         1.96249312e+05, -5.70549188e+05,  1.09497825e+06,\n'
 '         9.17505562e+05,  1.12925102e+05, -2.67913355e+03,\n'
 '        -7.70892062e+05,  1.38485859e+05,  2.32260234e+05,\n'
 '         9.27787062e+05, -7.68859375e+05, -3.07418156e+05,\n'
 '        -3.41842531e+05,  5.68357875e+05,  8.60253688e+05,\n'
 '         1.72590359e+05,  1.44128475e+06, -4.98465781e+05,\n'
 '         3.29448000e+05,  2.10953625e+05,  1.35149525e+06,\n'
 '        -7.72124188e+05, -3.21237000e+05,  3.76392750e+05,\n'
 '         6.64566125e+05,  6.13585375e+05,  2.16390547e+05,\n'
 '        -1.05114941e+04,  3.25186688e+05, -1.06539612e+06,\n'
 '         6.05045062e+05,  5.24624141e+04,  1.91595234e+05,\n'
 '         5.38833625e+05,  6.21864375e+05, -8.37191062e+05,\n'
 '        -5.15274469e+05, -3.18410219e+05, -1.00871266e+05,\n'
 '        -2.87419875e+05,  9.73294750e+05, -2.82928188e+05,\n'
 '        -3.16489875e+05, -6.25135500e+05,  4.52170375e+05,\n'
 '         3.43370758e+02, -5.34240000e+05, -5.91996062e+05,\n'
 '         5.44019500e+05,  1.77255859e+05,  5.52638812e+05,\n'
 '        -2.02287641e+05,  2.30768422e+05, -3.73784094e+05,\n'
 '         2.83810625e+04,  2.19049797e+05,  1.27089656e+05,\n'
 '         1.47660762e+06,  2.18555703e+05,  4.80932344e+05,\n'
 '         1.92836270e+04, -1.29193391e+05,  2.57563297e+05,\n'
 '         5.13688719e+05, -1.09987462e+06,  1.34944100e+06,\n'
 '         3.60293652e+03,  6.54301688e+05, -1.48686962e+06,\n'
 '        -3.76714156e+05, -8.04371500e+05, -1.58662062e+05,\n'
 '        -2.09112172e+05,  3.58140938e+05, -1.54792962e+06,\n'
 '         1.06652547e+05, -9.63249500e+05, -3.63469688e+04,\n'
 '         8.94090250e+05,  5.92150938e+05,  4.15443688e+05,\n'
 '         9.14836484e+04,  2.73538094e+05,  9.28777000e+05,\n'
 '         2.94318156e+05,  3.72624688e+04,  1.45720112e+06,\n'
 '        -1.03351644e+06, -8.81464562e+05,  6.64183250e+05,\n'
 '         1.54537953e+05, -2.70516469e+05,  8.45338312e+05,\n'
 '         7.61003875e+05,  1.13609219e+05, -4.30946062e+05,\n'
 '         1.64142797e+05, -3.16990594e+05, -3.90838875e+05,\n'
 '         3.18474812e+05,  6.85237938e+05, -2.78783562e+05,\n'
 '         3.73911094e+05, -4.11732719e+05, -2.65495938e+05,\n'
 '        -1.04131100e+06,  1.37836269e+04,  8.67920438e+05,\n'
 '        -1.05946047e+05, -4.72891844e+05,  1.61572297e+05,\n'
 '         1.05784725e+06, -5.38670812e+05,  3.85389562e+05,\n'
 '        -3.17756906e+05,  2.21310547e+05,  3.47400977e+04,\n'
 '        -1.68780562e+05,  2.06187047e+05, -4.72842750e+05,\n'
 '        -6.68158125e+05, -1.16103625e+05, -4.39573031e+05,\n'
 '         1.07732375e+05, -6.46797022e+03, -6.23114500e+05,\n'
 '        -7.61962375e+05, -1.00436703e+05,  1.11988500e+06,\n'
 '         1.07620675e+06,  9.99484375e+05,  9.32982578e+04,\n'
 '         4.72004594e+05,  8.17264625e+05, -2.38416094e+05,\n'
 '         3.17913188e+05, -1.12106242e+05,  1.56258588e+06,\n'
 '         4.50721000e+05,  1.10515638e+06, -1.47388031e+05,\n'
 '        -3.84487938e+05,  3.20703000e+05,  4.73413281e+05,\n'
 '        -2.82320062e+05, -6.36719062e+05, -4.13448312e+05,\n'
 '        -1.98226453e+05, -4.13842688e+05, -6.77065859e+04,\n'
 '        -8.34906812e+05,  1.16503906e+05, -4.06548594e+05,\n'
 '         1.39569795e+04,  1.41748141e+05,  5.96872250e+05,\n'
 '         7.49259250e+05, -7.22957938e+05, -2.10682078e+05,\n'
 '        -1.41057038e+06, -8.18037500e+04, -6.57650625e+05,\n'
 '         1.42621797e+05, -3.34719312e+05, -7.33970125e+05,\n'
 '         2.36814625e+05, -3.48134492e+04, -3.84574906e+05,\n'
 '         2.75262688e+05,  2.07827484e+05, -1.70924078e+05,\n'
 '         4.38128281e+05, -1.20387550e+06,  5.74770375e+05,\n'
 '         2.94382031e+05,  2.18251016e+04,  1.04522350e+06,\n'
 '        -1.10215484e+05, -2.87331469e+05, -6.20065625e+05,\n'
 '        -4.10203719e+05, -8.29701375e+05,  1.23925538e+06,\n'
 '         7.66200875e+05,  2.65196344e+05,  4.17133688e+05,\n'
 '         1.95645641e+05, -8.46290562e+05,  7.89219609e+04,\n'
 '        -8.13050250e+05,  4.43741656e+05,  7.97988562e+05,\n'
 '         1.91646891e+05, -5.96983875e+05, -6.23049938e+05,\n'
 '         7.94079500e+05,  1.25641800e+06, -4.83548688e+05,\n'
 '         7.52038688e+05,  8.92061188e+05,  1.58078712e+06,\n'
 '         1.34612000e+05,  5.94540188e+05, -1.25870738e+06,\n'
 '        -9.42534375e+04,  1.33294281e+05, -7.85832688e+05,\n'
 '        -1.80397578e+05,  4.71043750e+05,  1.13531675e+06,\n'
 '        -8.99100750e+05,  2.95746094e+05,  1.95247703e+05,\n'
 '        -1.36269350e+06, -1.76510020e+04,  2.90943066e+04,\n'
 '         3.21495812e+05, -6.83025062e+05, -8.56053938e+05,\n'
 '         1.37361531e+05, -6.21762875e+05,  4.43842781e+05,\n'
 '         9.42090781e+04,  3.31066906e+05, -1.71886172e+05,\n'
 '         3.88900625e+05,  3.01429281e+05,  6.58992250e+05,\n'
 '        -8.94983125e+05,  2.80343594e+05,  6.50712266e+04,\n'
 '         6.19086188e+05,  5.04504156e+05, -3.33754156e+05,\n'
 '        -5.75720188e+05,  5.62761750e+05, -5.82184375e+05,\n'
 '         2.79074781e+05,  3.30331211e+04,  9.11855500e+05,\n'
 '        -1.04512512e+06, -3.92957375e+05,  1.53076094e+05,\n'
 '        -4.35686406e+05, -8.71271062e+05,  2.75281500e+05,\n'
 '        -1.11700138e+06,  1.21735688e+06,  3.24450156e+05,\n'
 '        -1.39893500e+06, -2.30202234e+05, -2.38753312e+05,\n'
 '        -9.15634312e+05, -2.89422562e+05,  6.68693812e+05,\n'
 '         4.68647969e+05, -5.43806812e+05, -7.37663594e+04,\n'
 '        -9.63911625e+05, -2.72410312e+05, -7.49256938e+05,\n'
 '        -6.16746625e+05,  5.21661469e+05, -9.34373000e+05,\n'
 '         1.31741862e+06, -1.15000375e+06,  5.00190719e+05,\n'
 '        -7.71905625e+05, -7.24856172e+04,  4.85767156e+05,\n'
 '         8.10503562e+05, -3.11407812e+05,  5.58184188e+05,\n'
 '         3.08208781e+05, -1.04537225e+06,  6.72935438e+05,\n'
 '         2.67307031e+05, -2.54462156e+05,  4.08955719e+05,\n'
 '        -5.04815656e+05,  1.45398031e+05,  2.34797031e+05,\n'
 '        -4.84943281e+04,  3.11063188e+05,  8.80731312e+05,\n'
 '         9.91845859e+04,  9.51364297e+04, -8.44687891e+04,\n'
 '         8.58682188e+05,  2.67431875e+05,  2.61721438e+05,\n'
 '        -3.67908188e+05,  2.81496812e+05, -4.73512000e+05,\n'
 '         1.06233662e+06,  4.19312109e+04, -5.29336188e+05,\n'
 '        -1.10190000e+05,  1.01367631e+06,  1.86554180e+04,\n'
 '         1.83356438e+05,  6.68277312e+05,  2.03306547e+05,\n'
 '        -3.15967656e+05,  3.78188188e+05, -7.70730438e+05,\n'
 '         3.34606938e+05,  5.86269812e+05, -8.04250375e+05,\n'
 '         2.80475757e+03, -2.69270031e+05, -1.67953212e+06,\n'
 '         1.06540953e+05, -3.85643750e+04, -5.35329414e+04,\n'
 '        -6.55706938e+05,  1.78058850e+06, -7.09425750e+05,\n'
 '         1.69768109e+05,  4.44375781e+05,  2.14143078e+05,\n'
 '         4.80722375e+05,  6.53806312e+05, -2.06312094e+05,\n'
 '         2.56924109e+05, -4.43697656e+05,  5.50028562e+05,\n'
 '         6.25693812e+05, -4.60803219e+05, -3.68904750e+05,\n'
 '         2.19102922e+05, -1.33625700e+06,  1.03518600e+06,\n'
 '         5.92601125e+05,  1.53854350e+06,  1.99533184e+04,\n'
 '         3.80560562e+05, -9.21383000e+05, -1.08646188e+06,\n'
 '         1.38632859e+05, -7.11306625e+05, -9.96614188e+05,\n'
 '         5.45998375e+05,  3.74569625e+05,  5.49540625e+05,\n'
 '         2.33803125e+03, -8.81064812e+05,  1.56235062e+05,\n'
 '         3.93855781e+05,  6.05898750e+05, -1.23897578e+05,\n'
 '         1.53717234e+05,  1.10758688e+06,  2.83544125e+05,\n'
 '         2.88167031e+05, -5.65304562e+05,  5.98294766e+04,\n'
 '        -1.28728450e+06,  2.00028418e+04, -1.09969575e+06,\n'
 '         6.34751523e+04,  6.76422312e+05, -3.03215215e+04,\n'
 '         8.48749000e+05,  8.73759250e+05,  3.76045972e+03,\n'
 '         5.85714844e+04,  4.09790688e+05, -1.38083594e+05,\n'
 '        -2.83679094e+05, -7.43375703e+04, -1.79606391e+05,\n'
 '         1.77124375e+05, -4.64683875e+05,  3.49654969e+05,\n'
 '        -8.37352109e+04, -7.37523250e+05,  1.10558250e+06,\n'
 '        -5.37064375e+05,  5.44222062e+05, -3.92863000e+05,\n'
 '         1.39439650e+06,  3.24960656e+05, -1.40651922e+05,\n'
 '         9.32099312e+05, -2.73046375e+05, -8.29582375e+05,\n'
 '        -2.97986188e+05, -1.21830406e+05, -1.04586444e+06,\n'
 '        -5.56340156e+04, -2.24060109e+05, -8.61043750e+05,\n'
 '        -1.79699281e+05, -1.08137112e+06, -3.32458125e+05,\n'
 '        -5.40632930e+04,  1.14840062e+06, -1.09701788e+06,\n'
 '        -1.48766219e+05,  1.84334906e+05, -2.84442531e+05,\n'
 '        -5.15976484e+04, -8.15744453e+04, -6.33192688e+05,\n'
 '         6.26064312e+05, -1.59703469e+05,  4.31603469e+05,\n'
 '        -3.93355062e+05,  8.80718672e+04, -6.04456750e+05,\n'
 '        -6.21551125e+05,  5.94672312e+05, -4.32052500e+05,\n'
 '         1.01710438e+05, -1.81302188e+05, -8.85525188e+05,\n'
 '         2.51879156e+05, -1.29058850e+06,  7.79570859e+04,\n'
 '         3.35099562e+05,  9.72206938e+05,  9.39076375e+05,\n'
 '        -3.98398000e+05, -1.87881906e+05, -9.63480500e+05,\n'
 '         7.45200062e+05, -1.94615203e+05, -1.13352375e+06,\n'
 '        -7.99016328e+04,  3.29947125e+05, -1.20040352e+05,\n'
 '         6.19715688e+05, -2.46437402e+04, -3.38231469e+05,\n'
 '         3.51861531e+05, -2.63674656e+05,  1.31334150e+06,\n'
 '        -2.13370703e+05, -6.68311250e+05, -1.55327484e+05,\n'
 '         5.33312438e+05, -1.16932350e+06,  1.72441297e+05,\n'
 '        -3.55268969e+05, -7.52847688e+05,  7.04368062e+05,\n'
 '         1.45393781e+05,  2.02520273e+04,  3.82639906e+05,\n'
 '         1.02393625e+06, -2.26533688e+05, -9.35892000e+05,\n'
 '        -1.45032453e+05,  7.67855875e+05,  2.90533625e+05,\n'
 '        -7.95337266e+04,  6.11981438e+05, -6.02991562e+04,\n'
 '        -2.71254938e+05, -1.71333812e+05,  7.09018875e+05,\n'
 '         5.34351125e+05, -3.68642969e+05, -4.88679094e+05,\n'
 '        -2.66034906e+05, -5.93130812e+05,  1.56183328e+05,\n'
 '         3.79515078e+04,  2.45226234e+05,  8.42436125e+05,\n'
 '        -4.10062500e+05,  1.27938266e+05, -3.66486281e+05,\n'
 '         6.11754375e+05,  8.31160250e+05,  3.35684688e+05,\n'
 '         4.22362062e+05, -1.22115875e+06,  6.74654938e+05,\n'
 '         2.29280031e+05,  5.18332062e+05,  1.01202578e+04,\n'
 '        -6.61865375e+05,  9.67179750e+05,  1.04329494e+06,\n'
 '        -1.65555820e+04,  4.76901562e+05, -7.13855625e+05,\n'
 '         3.64385500e+05,  1.67304297e+05, -1.44720812e+06,\n'
 '        -6.33587812e+05, -2.36595656e+05,  1.11650675e+06,\n'
 '         7.56423359e+04, -1.14671242e+05,  9.84887250e+05,\n'
 '        -9.02817438e+05,  8.38457000e+05,  2.02938656e+05,\n'
 '        -3.52390438e+05,  2.42262469e+05,  2.67825188e+05,\n'
 '         6.74762875e+05,  1.65495703e+05,  1.02194969e+06,\n'
 '        -6.36082938e+05, -1.27800438e+06,  4.49431000e+05,\n'
 '         4.89420938e+05, -3.08799719e+05, -5.66546062e+05,\n'
 '         5.50098312e+05,  6.29198250e+05, -3.24817438e+05,\n'
 '        -7.41890688e+05, -8.97295156e+04,  6.69492875e+05,\n'
 '         4.37931750e+05, -1.64852406e+05,  1.46415638e+06,\n'
 '        -3.87660375e+05, -9.95047500e+04, -5.77204562e+05,\n'
 '        -4.44404188e+05,  5.98969102e+04,  3.59545000e+04,\n'
 '         8.42433500e+05, -3.70866344e+05,  7.86549250e+05,\n'
 '         8.21334844e+04,  5.22229688e+05, -3.71503156e+05,\n'
 '        -1.17058825e+06,  3.10386125e+05, -2.64080594e+05,\n'
 '         8.34345938e+05,  3.49403125e+05, -6.66329562e+05,\n'
 '         8.92050188e+05, -4.16018250e+05, -1.09088962e+06,\n'
 '         8.54064250e+05, -7.86113312e+05, -6.58662812e+05,\n'
 '         7.26181875e+05, -2.65826750e+05, -6.05281625e+05,\n'
 '        -5.52228625e+05, -4.33996219e+05,  4.80722094e+05,\n'
 '         4.61691625e+05,  1.31602703e+05,  6.42515500e+05,\n'
 '         8.90161188e+05,  7.19855812e+05, -2.70004875e+05,\n'
 '         3.44156406e+05, -7.32609312e+05,  4.24008844e+05,\n'
 '         2.11710957e+04,  5.76621367e+04, -5.88481250e+05,\n'
 '         3.36106875e+05, -5.55608875e+05,  2.85279000e+05,\n'
 '        -5.55214625e+05,  7.78452812e+05,  7.28147109e+04,\n'
 '        -2.73889125e+05,  1.27343453e+05, -3.92128828e+04,\n'
 '         4.35002625e+05, -8.96599312e+05,  5.48197500e+05,\n'
 '        -5.71206641e+03, -5.51545742e+04, -3.97763938e+05,\n'
 '        -1.35124288e+06,  7.15029000e+05,  3.06673496e+04,\n'
 '         1.97649588e+06,  1.72897609e+05, -6.02699062e+05,\n'
 '        -6.82808000e+05, -9.54513125e+05, -5.54404062e+05,\n'
 '         3.72323000e+05, -5.08806469e+05, -2.99589438e+05,\n'
 '         1.94978031e+05, -7.36088906e+04,  2.85096844e+05,\n'
 '        -5.53620750e+05,  2.35813438e+05,  1.29961391e+05,\n'
 '        -5.11261062e+05,  3.98853086e+04,  3.68778094e+05,\n'
 '         7.22885938e+05, -1.57043738e+06, -5.99106938e+05,\n'
 '         6.87268125e+05,  8.43754219e+04, -9.45070375e+05,\n'
 '        -2.59391250e+04,  2.65756688e+05, -1.24858850e+06,\n'
 '        -1.01004350e+06, -1.20380205e+04, -2.11155891e+05,\n'
 '         1.81556344e+05,  2.55267391e+05, -2.16694031e+05,\n'
 '        -1.77442094e+05,  1.97522156e+05,  4.46526250e+05,\n'
 '        -8.11338938e+05, -5.54660875e+05, -1.09558825e+06,\n'
 '         2.27992406e+05,  2.35471172e+05, -4.93254938e+05,\n'
 '         4.42761406e+05,  2.88925188e+05,  1.76019969e+05,\n'
 '         3.73684625e+05, -8.37652312e+05,  5.87030176e+03,\n'
 '        -1.11089031e+05,  6.30483938e+05, -7.01816172e+04,\n'
 '         8.20978062e+05, -6.93523125e+05, -1.31528425e+06,\n'
 '        -7.22063375e+05, -5.04452875e+05,  1.38192312e+05,\n'
 '         7.46180000e+05,  5.48836250e+04, -3.43956469e+05,\n'
 '        -1.01352406e+06,  4.22134312e+05, -5.45344062e+05,\n'
 '         1.19138273e+05, -9.94502422e+04, -2.94789250e+05,\n'
 '        -1.68187250e+05, -5.53560812e+05,  6.01866188e+05,\n'
 '         5.64018875e+05,  9.37468875e+05,  1.43433406e+05,\n'
 '        -1.16607362e+06,  3.39438672e+04, -6.54234062e+05,\n'
 '        -1.06379953e+05, -2.12255453e+05,  2.01239797e+05,\n'
 '        -2.85020500e+05, -1.70034062e+05, -8.49038188e+05,\n'
 '        -8.47716438e+05,  1.96894500e+05,  8.93051625e+05,\n'
 '        -6.28346312e+05,  1.70141344e+05, -2.70819500e+05,\n'
 '         1.61803828e+05,  1.06577912e+06, -2.91520438e+05,\n'
 '        -9.81591188e+05,  1.28916664e+05,  8.17112109e+04,\n'
 '         4.76819438e+05,  4.76291031e+05,  7.28459938e+05,\n'
 '         7.42659812e+05, -7.65506500e+05, -7.37135688e+05,\n'
 '        -2.82648406e+05, -5.23549406e+05,  1.20380344e+05,\n'
 '        -1.76221734e+05,  7.85844250e+05, -6.45188688e+05,\n'
 '        -2.77981699e+04,  8.80800188e+05,  5.84389812e+05,\n'
 '         2.16654719e+05, -2.07091438e+05,  4.25177969e+04,\n'
 '         1.13166688e+06,  3.13744219e+05, -4.66986445e+04,\n'
 '        -4.08192148e+04,  6.34134938e+05, -6.74692875e+05,\n'
 '        -9.70389312e+05,  1.32317275e+06,  4.45396375e+05,\n'
 '         7.09599125e+05, -4.39647969e+05,  5.52498125e+05,\n'
 '        -1.84267141e+05, -1.53263188e+05, -2.78470594e+05,\n'
 '        -6.95379562e+05, -5.72599438e+05, -9.26913203e+04,\n'
 '        -3.55894969e+05, -1.07289288e+06, -5.90807250e+05,\n'
 '         2.76822844e+05,  1.75953047e+05, -7.80895562e+05,\n'
 '         9.34311875e+05,  3.11236387e+04, -2.29768703e+05,\n'
 '         4.82514875e+05,  4.58910906e+05,  4.44232281e+05,\n'
 '         3.93236875e+05,  3.48173125e+05,  1.06931675e+06,\n'
 '         5.86585625e+05,  7.64282422e+04,  1.42098312e+05,\n'
 '        -5.97033688e+05,  1.34007047e+05,  4.25767188e+05,\n'
 '        -6.33276055e+04,  1.00721569e+06, -3.89898125e+04,\n'
 '        -9.21741500e+05,  4.15281938e+05, -2.26939234e+05,\n'
 '        -2.86123398e+04, -1.00577044e+06, -6.41427125e+05,\n'
 '         8.95757141e+02,  4.38601562e+05, -1.88678734e+05,\n'
 '         2.97754125e+05, -7.12010812e+05,  4.29704938e+05,\n'
 '        -4.16151406e+05, -2.89370344e+05, -1.07955266e+05,\n'
 '         4.49253438e+05,  1.71543406e+05,  6.76322812e+05,\n'
 '         7.85700875e+05, -1.89582531e+05, -4.01546719e+05,\n'
 '         5.25561062e+05, -2.63902031e+05,  3.82305750e+05,\n'
 '        -1.58584938e+05,  1.50585254e+03,  6.25424188e+05,\n'
 '         6.19530875e+05,  1.08265425e+06,  2.96421469e+05,\n'
 '         1.02347256e+06,  5.14059031e+05, -3.66726906e+05,\n'
 '         4.77928625e+05, -7.02329375e+05,  1.85133484e+05,\n'
 '        -4.30657094e+05,  6.79523188e+05, -1.52048656e+05,\n'
 '         1.63974863e+04, -5.69022375e+05,  7.24701250e+04,\n'
 '         3.41315625e+05, -3.61111625e+05,  1.71341906e+05,\n'
 '         1.23937662e+06,  5.85897188e+05, -4.01404688e+05,\n'
 '        -6.69612188e+05,  4.35590391e+04,  3.32828469e+05,\n'
 '        -2.45211453e+05, -6.28803516e+04, -9.51969312e+05,\n'
 '         1.05743875e+06,  6.46001250e+05, -3.26805469e+04,\n'
 '         8.45539062e+04, -6.20813047e+04, -1.44228625e+05,\n'
 '        -5.13912125e+05, -6.80763312e+05,  2.17194562e+05,\n'
 '        -4.11038156e+05, -3.32322688e+05, -2.17834500e+05,\n'
 '        -4.38041688e+05, -4.41909082e+03,  6.99786375e+05,\n'
 '         1.02161781e+06, -2.54520188e+05,  5.91203062e+05,\n'
 '        -4.53773516e+04,  4.13746250e+04,  2.76637156e+05,\n'
 '         1.00529438e+06, -6.01511375e+05,  5.25243562e+05,\n'
 '        -5.69963688e+05,  7.08371938e+05, -6.46945125e+05,\n'
 '        -1.08917688e+06,  1.31656141e+05,  1.04575469e+06,\n'
 '         3.09623625e+05, -6.89178203e+04,  2.22725297e+05,\n'
 '        -1.25798289e+05, -7.38067938e+05, -2.99582375e+05,\n'
 '        -1.32354984e+05, -6.06224125e+05, -6.14262938e+05,\n'
 '        -1.51717281e+05, -1.01152969e+06,  2.28892047e+05,\n'
 '        -1.44866012e+06,  9.12203875e+05, -8.65391812e+05,\n'
 '         3.61292906e+05, -2.11292344e+05, -5.85065188e+05,\n'
 '         5.38521875e+05, -2.48137141e+05, -1.54372838e+06,\n'
 '        -4.06151133e+04,  1.02446000e+06, -5.95150375e+05,\n'
 '         1.38970800e+06, -1.00573462e+06, -9.99887000e+05,\n'
 '        -1.50082016e+05,  1.06784988e+06, -2.14400203e+05,\n'
 '         1.82733641e+05, -5.36000250e+05,  7.43816938e+05,\n'
 '        -3.82220531e+05, -6.47749750e+05, -1.24936094e+05,\n'
 '         9.11872812e+05, -2.56084219e+05,  4.58997938e+05,\n'
 '        -1.81266828e+05,  1.56022638e+06,  1.02052388e+06,\n'
 '        -6.09249219e+03,  9.43289062e+05,  1.79929922e+05,\n'
 '        -6.95925688e+05]])')
'test_inceptionnet | batch_shape is: [1]'
'||'
'test_inceptionnet | device is: cpu'
'test_inceptionnet | fw is: jax'
'test_inceptionnet | load_weights is: True'
'layer 1/22 built'
'layer 2/22 built'
'layer 3/22 built'
'layer 4/22 built'
'layer 5/22 built'
'layer 6/22 built'
'layer 7/22 built'
'layer 8/22 built'
'layer 9/22 built'
'layer 10/22 built'
'layer 11/22 built'
'layer 12/22 built'
'layer 13/22 built'
'layer 14/22 built'
'layer 15/22 built'
'layer 17/22 built'
'layer 18/22 built'
'layer 19/22 built'
'layer 20/22 built'
'layer 21/22 built'
'layer 22/22 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/4 built'
'layer 2/4 built'
'layer 3/4 built'
'layer 4/4 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/6 built'
'layer 2/6 built'
'layer 3/6 built'
'layer 4/6 built'
'layer 5/6 built'
'layer 6/6 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'inceptionNet_v3 | building InceptionV3 model | done 1/3'
'inceptionNet_v3 | clearning pretrained weights | done 2/3'
'inceptionNet_v3 | loading pretrained weights | done 3/3'
'input shape is:(1, 224, 224, 3)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 224, 224, 3) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 111, 111, 32) | done 3/3'
'v3 1/23, output shape is:ivy.Shape(1, 111, 111, 32)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 111, 111, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 32) | done 3/3'
'v3 2/23, output shape is:ivy.Shape(1, 109, 109, 32)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 109, 109, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 64) | done 3/3'
'v3 3/23, output shape is:ivy.Shape(1, 109, 109, 64)'
'v3 4/23, output shape is:ivy.Shape(1, 54, 54, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 54, 54, 80) | done 3/3'
'v3 5/23, output shape is:ivy.Shape(1, 54, 54, 80)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 80) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 52, 52, 192) | done 3/3'
'v3 6/23, output shape is:ivy.Shape(1, 52, 52, 192)'
'v3 7/23, output shape is:ivy.Shape(1, 25, 25, 192)'
'input shape is:ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 32) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 32)'
'InceptionA | outputs 20/20'
'v3 8/23, output is:ivy.Shape(1, 25, 25, 256)'
'input shape is:ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'v3 9/23, output shape is:ivy.Shape(1, 25, 25, 288)'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'v3 10/23, output shape is:ivy.Shape(1, 25, 25, 288)'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 384) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 96) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 96)'
'one 20/20, output shape is:ivy.Shape(1, 12, 12, 288)'
'one 20/20'
'v3 11/23, output shape is:ivy.Shape(1, 12, 12, 768)'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'v3 12/23, output shape is:ivy.Shape(1, 12, 12, 768)'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'v3 13/23, output shape is:ivy.Shape(1, 12, 12, 768)'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'v3 14/23, output shape is:ivy.Shape(1, 12, 12, 768)'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'v3 15/23, output shape is:ivy.Shape(1, 12, 12, 768)'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 5, 5, 192)'
'one 7/20, output shape is:ivy.Shape(1, 5, 5, 768)'
'one 20/20'
'v3 17/23, output shape is:ivy.Shape(1, 5, 5, 1280)'
'input shape is:ivy.Shape(1, 5, 5, 1280)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'v3 18/23, output shape is:ivy.Shape(1, 5, 5, 2048)'
'input shape is:ivy.Shape(1, 5, 5, 2048)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'v3 19/23, output shape is:ivy.Shape(1, 5, 5, 2048)'
'Inception3 | input shape to adaptive_avg_pool2d is:ivy.Shape(1, 5, 5, 2048)'
('Inception3 | permuted input shape to adaptive_avg_pool2d is:ivy.Shape(1, '
 '2048, 5, 5)')
'Inception3 | output shape from adaptive_avg_pool2d is:ivy.Shape(1, 2048, 1, 1)'
('Inception3 | permuted output shape from adaptive_avg_pool2d is:ivy.Shape(1, '
 '1, 1, 2048)')
'v3 20/23, avgpool output shape is:ivy.Shape(1, 1, 1, 2048)'
'v3 21/23, dropout output shape is:ivy.Shape(1, 1, 1, 2048)'
'v3 22/23, flatten output shape is:ivy.Shape(1, 2048)'
'fc done 23/23'
('test_inceptionnet | logits is: ivy.array([[-6.34916067e-01, -5.97195625e-01, '
 '-8.71945202e-01,\n'
 '         1.83199680e+00,  2.77833045e-01, -1.47463036e+00,\n'
 '        -7.85805404e-01, -3.87829065e-01,  7.52843857e-01,\n'
 '         3.65877294e+00, -4.82103825e-01, -8.96078497e-02,\n'
 '         1.11856175e+00, -9.64942098e-01, -1.47361410e+00,\n'
 '         2.23247457e+00,  4.33629215e-01, -2.76230216e+00,\n'
 '        -2.54228497e+00, -2.61641622e+00, -1.85132790e+00,\n'
 '         1.05759358e+00,  1.16643619e+00,  8.24897051e-01,\n'
 '         1.97151160e+00,  2.93683797e-01, -9.80210304e-03,\n'
 '        -9.57115412e-01, -2.38260937e+00,  9.37759459e-01,\n'
 '         4.04562771e-01, -8.05220678e-02, -7.90115833e-01,\n'
 '        -7.75041282e-01, -1.88473249e+00, -3.46444964e-01,\n'
 '         6.43066347e-01, -2.57593155e+00,  2.34072995e+00,\n'
 '         1.02414012e+00, -1.78057656e-01,  2.97783762e-01,\n'
 '         4.49694604e-01,  3.05987299e-01,  1.08440983e+00,\n'
 '         1.98280275e-01,  8.19389820e-01, -6.42958880e-02,\n'
 '        -2.95863926e-01,  1.13417613e+00,  4.76524591e-01,\n'
 '         5.40755987e-02,  1.10675454e+00,  1.24081922e+00,\n'
 '        -2.74206519e-01, -9.71266627e-02, -8.14943016e-01,\n'
 '         1.33093977e+00,  1.38340548e-01, -9.80151653e-01,\n'
 '         2.13347554e-01,  3.29381585e-01, -3.55219543e-01,\n'
 '        -6.77423179e-03, -5.83064616e-01, -3.55433524e-02,\n'
 '         4.67050165e-01, -6.56285882e-01,  1.59114909e+00,\n'
 '         1.19800389e+00,  6.47041500e-01, -1.42472839e+00,\n'
 '        -9.19947863e-01, -2.04786539e+00, -1.71586955e+00,\n'
 '        -8.23191643e-01, -6.47493959e-01, -1.27867556e+00,\n'
 '        -9.25468087e-01, -7.68031657e-01, -1.12991405e+00,\n'
 '        -2.95575380e+00,  4.22789782e-01,  2.20940518e+00,\n'
 '         3.11993360e-02, -1.33831489e+00, -1.66835278e-01,\n'
 '        -4.61199164e-01,  1.34200037e-01, -1.77603543e+00,\n'
 '         8.45704973e-02,  4.78482068e-01, -1.27877033e+00,\n'
 '         4.76217508e-01, -9.47835386e-01,  2.08767438e+00,\n'
 '         2.12586284e-01, -2.14525127e+00, -7.77109146e-01,\n'
 '        -7.83889890e-01,  2.24500060e+00, -7.67577171e-01,\n'
 '        -2.46941662e+00, -2.24175721e-01, -2.20833778e+00,\n'
 '        -2.22513056e+00, -1.08264661e+00, -5.07611454e-01,\n'
 '        -2.43980098e+00,  4.98012900e-02, -1.14303768e+00,\n'
 '        -6.79956198e-01,  1.01471662e+00, -1.03015685e+00,\n'
 '         5.33424020e-01, -9.69452977e-01, -8.04113090e-01,\n'
 '         1.30461740e+00, -1.40627062e+00, -1.37770808e+00,\n'
 '        -8.07335794e-01, -1.66021943e+00, -1.00809246e-01,\n'
 '        -1.91011179e+00,  3.29957992e-01, -4.31532681e-01,\n'
 '         1.00720549e+00, -6.70395136e-01,  6.27563536e-01,\n'
 '        -1.09307909e+00,  2.34685779e+00, -9.15749431e-01,\n'
 '         1.31600690e+00,  3.56449652e+00, -7.93369114e-01,\n'
 '         1.18456459e+00, -7.10877120e-01, -2.69223142e+00,\n'
 '         1.46274138e+00,  1.29817820e+00, -3.61577106e+00,\n'
 '        -3.03378433e-01, -8.62287402e-01, -2.36844945e+00,\n'
 '        -9.88378465e-01,  2.75030732e-02, -2.95623755e+00,\n'
 '        -2.74330199e-01, -4.11035828e-02,  2.53232717e-01,\n'
 '         1.27227378e+00,  1.58399606e+00, -1.40077382e-01,\n'
 '        -3.28644848e+00, -1.45599198e+00, -2.69202876e+00,\n'
 '         2.35166494e-03, -2.42979980e+00, -2.55866861e+00,\n'
 '        -5.05179346e-01,  9.67935503e-01, -2.40130156e-01,\n'
 '        -1.30467033e+00, -4.24150854e-01, -9.25292730e-01,\n'
 '        -8.22141945e-01, -2.94830346e+00, -1.78973103e+00,\n'
 '         3.58085215e-01,  5.41324914e-01,  1.55654264e+00,\n'
 '         7.13862240e-01,  8.73124301e-01,  1.12239361e-01,\n'
 '        -1.65390563e+00, -7.81591952e-01, -1.24798751e+00,\n'
 '        -8.31175148e-01, -1.86835957e+00,  4.30143475e-01,\n'
 '         1.73565841e+00, -1.03322911e+00, -5.62150478e-01,\n'
 '         4.77985322e-01, -1.10232331e-01,  1.51014137e+00,\n'
 '         1.14159799e+00, -4.06170726e-01,  1.40835297e+00,\n'
 '         6.54870272e-01, -7.15251863e-02,  1.58266675e+00,\n'
 '        -9.42517817e-01,  1.83161139e+00, -4.54157800e-01,\n'
 '        -6.54816866e-01,  1.14891076e+00,  3.91355133e+00,\n'
 '        -9.89278853e-02,  1.41171098e+00,  3.55960786e-01,\n'
 '        -2.44928151e-01,  4.84442830e-01, -3.05058956e+00,\n'
 '        -4.93565470e-01,  3.14838004e+00,  2.80107069e+00,\n'
 '        -3.63400161e-01,  1.69486463e+00,  5.81953585e-01,\n'
 '        -6.95206702e-01,  1.19154882e+00, -2.13536787e+00,\n'
 '        -6.86631024e-01, -3.39249372e-01, -2.07977629e+00,\n'
 '        -2.00747514e+00, -2.37729263e+00, -6.23013854e-01,\n'
 '         1.43520367e+00, -3.27358171e-02,  4.81069237e-01,\n'
 '         1.09934294e+00, -9.99934554e-01,  6.35801554e-01,\n'
 '        -3.33575583e+00, -4.23152745e-02, -1.52261126e+00,\n'
 '        -2.27437675e-01, -8.68075311e-01, -3.07011175e+00,\n'
 '        -3.36482197e-01,  9.97350454e-01,  1.63617981e+00,\n'
 '        -8.47824514e-01,  1.83984757e-01,  4.70344961e-01,\n'
 '         1.06007767e+00, -6.68423057e-01,  5.47932923e-01,\n'
 '        -6.40380442e-01, -6.32682919e-01,  7.12341487e-01,\n'
 '         1.05138290e+00,  6.09598756e-02,  7.06742823e-01,\n'
 '         6.46957755e-01, -3.96585643e-01,  6.22351587e-01,\n'
 '        -1.43550360e+00, -1.36479259e+00, -4.10264552e-01,\n'
 '         1.16764343e+00,  4.18958068e-01, -1.81970513e+00,\n'
 '         1.05984241e-01,  2.42075872e+00, -5.52527428e-01,\n'
 '        -2.58326554e+00, -4.89191592e-01,  8.97904992e-01,\n'
 '        -1.37006390e+00,  1.05805314e+00, -1.32726610e+00,\n'
 '         1.71864891e+00,  2.19752908e+00,  4.90070611e-01,\n'
 '         1.80789128e-01, -1.12557936e+00, -2.96233344e+00,\n'
 '        -3.85567641e+00, -2.39551902e+00, -3.58682215e-01,\n'
 '        -7.43503392e-01, -2.26212203e-01, -9.02310371e-01,\n'
 '        -3.80789012e-01, -1.48078859e+00, -3.72409642e-01,\n'
 '        -3.33862209e+00, -9.51050103e-01,  1.56497650e+01,\n'
 '         1.49889889e+01,  1.19459164e+00,  1.18486857e+00,\n'
 '         1.10718851e+01, -1.35133302e+00,  2.50667500e+00,\n'
 '         1.35648102e-01, -9.24212456e-01, -2.02208757e-04,\n'
 '         3.91069800e-01,  2.65031147e+00, -2.29691476e-01,\n'
 '        -1.49892956e-01, -3.71820211e-01, -2.02533889e+00,\n'
 '         1.02177048e+00,  2.79353714e+00,  1.10079825e+00,\n'
 '        -3.15048039e-01, -8.65647435e-01,  6.96531236e-01,\n'
 '         1.68548906e+00, -2.51780319e+00,  5.68987250e-01,\n'
 '         8.10476720e-01, -8.24344635e-01, -1.56220108e-01,\n'
 '        -1.80805218e+00,  4.91207838e-01, -7.72530138e-01,\n'
 '        -1.89835042e-01,  4.48402643e-01, -1.78899825e+00,\n'
 '        -2.98939586e-01,  1.14338422e+00, -3.41195047e-01,\n'
 '        -1.70124626e+00, -1.69147587e+00, -1.37424514e-01,\n'
 '         1.50463671e-01,  1.06862402e+00, -1.35380590e+00,\n'
 '         1.29973984e+00,  1.05373752e+00, -1.61698484e+00,\n'
 '        -1.48373747e+00, -1.20795712e-01,  2.61184454e+00,\n'
 '         4.65882778e-01, -4.22202289e-01, -1.09865940e+00,\n'
 '        -1.07282567e+00, -1.16684854e+00,  7.01702118e-01,\n'
 '        -5.42434931e-01, -1.05255199e+00,  5.28969050e-01,\n'
 '         2.49790952e-01,  2.21396709e+00,  1.23847687e+00,\n'
 '         1.15407836e+00, -3.61200750e-01, -3.68508726e-01,\n'
 '         1.62497187e+00,  8.10956806e-02,  5.83602846e-01,\n'
 '        -3.60914290e-01,  2.74149835e-01, -1.49081171e+00,\n'
 '         1.24106991e+00,  8.20711196e-01,  4.88445535e-02,\n'
 '         2.06964940e-01, -1.06423092e+00, -1.77905870e+00,\n'
 '         6.44914150e-01, -5.07991075e-01, -2.28738025e-01,\n'
 '         5.47622383e-01, -1.90433907e+00, -1.96298921e+00,\n'
 '        -6.24240756e-01,  9.26178694e-01, -1.29360747e+00,\n'
 '        -1.32314825e+00, -1.54603410e+00, -1.56720042e+00,\n'
 '         7.80011773e-01, -1.07733369e+00, -1.74133062e+00,\n'
 '         1.17689848e+00,  7.76836157e-01,  1.62598044e-01,\n'
 '        -1.04913163e+00, -1.73497930e-01,  2.13629913e+00,\n'
 '        -7.98154175e-01,  4.57773566e-01,  1.48988223e+00,\n'
 '        -4.54633594e-01,  1.39373696e+00, -2.63577747e+00,\n'
 '        -6.05840385e-02, -5.59111655e-01,  5.94710052e-01,\n'
 '         1.03680325e+00, -1.08669400e+00,  1.26815391e+00,\n'
 '        -6.28712058e-01, -1.40903860e-01, -2.92848587e-01,\n'
 '        -1.62558055e+00,  1.49253595e+00,  3.09083909e-01,\n'
 '         4.59042609e-01,  9.98022914e-01,  5.65858960e-01,\n'
 '        -8.89074206e-01, -7.99027011e-02, -3.96346211e-01,\n'
 '         2.08630815e-01, -1.49340963e+00, -3.32818687e-01,\n'
 '        -6.86479330e-01, -2.01553559e+00,  2.29173019e-01,\n'
 '         1.13607573e+00, -1.11924994e+00, -2.98745155e-01,\n'
 '        -1.12047875e+00, -1.56014574e+00, -1.82699275e+00,\n'
 '         4.61090922e-01, -1.33882165e+00,  1.12536766e-01,\n'
 '        -4.58088368e-02, -2.43734264e+00, -1.55254531e+00,\n'
 '        -2.53026634e-02,  1.47122681e+00, -5.07661104e-01,\n'
 '         6.31281018e-01,  2.38046432e+00, -6.62392497e-01,\n'
 '        -2.82875895e-02, -5.03280878e-01,  1.78368378e+00,\n'
 '         1.31932759e+00, -8.93050313e-01,  1.35018337e+00,\n'
 '        -5.99352121e-02, -9.66531157e-01, -2.77350903e+00,\n'
 '        -7.54140556e-01, -7.65993834e-01,  2.49923420e+00,\n'
 '        -2.43932709e-01,  2.42190218e+00,  5.88677824e-02,\n'
 '         3.06778461e-01, -4.77252662e-01,  3.19171250e-01,\n'
 '        -1.78422272e+00, -1.85059452e+00, -1.04562497e+00,\n'
 '         1.57519865e+00, -7.30100274e-01,  7.33217239e-01,\n'
 '         1.99666649e-01,  9.92104948e-01,  3.63351727e+00,\n'
 '         2.51196957e+00,  2.86030269e+00, -1.67196989e+00,\n'
 '        -2.76441479e+00,  8.91192675e-01, -1.92543709e+00,\n'
 '        -1.43528056e+00,  8.80891264e-01, -2.46179724e+00,\n'
 '        -1.98668063e+00,  3.56696397e-01,  2.41758561e+00,\n'
 '         7.08192587e-03, -9.97861743e-01,  1.18348265e+00,\n'
 '         1.49944758e+00, -1.58569205e+00, -8.61855626e-01,\n'
 '         9.93449390e-02, -4.20929074e-01, -1.25566769e+00,\n'
 '         1.86473459e-01,  2.35620046e+00,  5.15333712e-01,\n'
 '         7.88123727e-01,  2.83437872e+00,  5.15952468e-01,\n'
 '        -1.59490097e+00,  2.86247581e-01,  4.40930039e-01,\n'
 '        -9.62192595e-01,  5.47561407e-01, -1.18423247e+00,\n'
 '        -8.49176109e-01, -3.09682775e+00, -2.32687330e+00,\n'
 '         1.35629439e+00, -3.19272608e-01, -3.19709849e+00,\n'
 '         1.89882064e+00, -8.00682008e-02, -1.50154203e-01,\n'
 '        -9.93481696e-01, -1.09734148e-01, -4.07098055e-01,\n'
 '        -1.45639300e+00, -3.05083811e-01, -2.39513248e-01,\n'
 '        -1.10193527e+00, -1.58166885e+00, -1.97342038e-01,\n'
 '         1.77701891e+00,  4.92916584e-01,  2.37110734e+00,\n'
 '        -6.56006217e-01,  3.16895032e+00, -7.88881421e-01,\n'
 '         5.72383463e-01, -1.39138484e+00,  2.90978253e-01,\n'
 '        -3.29620302e-01, -2.26774991e-01,  1.24517059e+00,\n'
 '         6.85377717e-01, -1.20507217e+00,  7.66527772e-01,\n'
 '         1.76948905e+00,  1.59441876e+00,  7.33901918e-01,\n'
 '         5.13662696e-01, -7.58109808e-01,  1.44848013e+00,\n'
 '        -1.49346471e+00, -1.85966313e+00, -1.82081056e+00,\n'
 '         7.94929385e-01, -1.51690137e+00, -1.74627650e+00,\n'
 '        -5.68442226e-01,  1.31045866e+00, -1.13837576e+00,\n'
 '         3.69979429e+00,  1.96208859e+00,  2.25729990e+00,\n'
 '        -1.89755881e+00, -1.30160481e-01, -2.26595104e-01,\n'
 '        -1.20253277e+00,  1.62798941e+00, -1.06795162e-01,\n'
 '         2.05933738e+00,  2.47310102e-01, -3.03410619e-01,\n'
 '        -6.46757483e-01, -8.32225382e-01, -6.25642955e-01,\n'
 '        -1.86626482e+00,  2.78566718e+00,  5.89950800e-01,\n'
 '         1.63060486e+00, -7.66808867e-01,  1.10431182e+00,\n'
 '        -1.93218425e-01, -2.30494690e+00,  7.09284395e-02,\n'
 '         4.55655187e-01, -9.71426219e-02,  1.42480993e+00,\n'
 '        -1.27266669e+00,  1.58517122e+00,  1.17375958e+00,\n'
 '         9.13014710e-01, -1.23643470e+00, -1.18051004e+00,\n'
 '         7.07379460e-01,  7.66708970e-01, -1.23276591e+00,\n'
 '         1.87439406e+00,  1.27591419e+00, -8.21599960e-01,\n'
 '        -7.67073512e-01,  3.74865860e-01, -2.74427205e-01,\n'
 '         1.70299184e+00, -6.62761271e-01, -1.07009804e+00,\n'
 '        -4.80392754e-01,  1.12759805e+00, -7.36488223e-01,\n'
 '        -3.96948218e-01, -1.05699086e+00, -1.96787739e+00,\n'
 '        -1.18673694e+00, -7.69948483e-01,  8.61200690e-01,\n'
 '         2.92171955e-01,  1.14732838e+00, -2.05205107e+00,\n'
 '        -1.74759102e+00,  3.97074223e-01,  1.09284055e+00,\n'
 '         6.54810250e-01,  2.71139681e-01,  2.85478950e-01,\n'
 '        -1.99920431e-01, -3.02891064e+00, -2.69394469e+00,\n'
 '        -2.02166796e+00,  4.93529916e-01,  8.18263590e-01,\n'
 '         9.19713378e-01,  1.12651050e+00,  1.21395981e+00,\n'
 '        -4.55922753e-01, -2.48081088e-01, -2.77259064e+00,\n'
 '        -7.57989109e-01, -1.59370565e+00,  5.93655706e-02,\n'
 '        -2.26557449e-01,  6.49076879e-01, -8.07353914e-01,\n'
 '         1.92471042e-01, -8.92807424e-01, -3.16655016e+00,\n'
 '        -3.76380265e-01, -1.46987581e+00,  1.22392809e+00,\n'
 '         4.57829833e-01,  3.64039183e+00, -2.59424210e-01,\n'
 '         4.58940864e-02,  1.63525552e-01, -2.35267353e+00,\n'
 '        -1.17394257e+00,  1.11871970e+00, -9.11427617e-01,\n'
 '         1.12899542e+00,  7.79995322e-02, -3.63181204e-01,\n'
 '         4.26650572e+00,  2.04900241e+00,  1.08468771e+00,\n'
 '        -2.89624381e+00,  4.02269483e-01,  4.32856679e-02,\n'
 '         1.49695337e-01, -8.95756245e-01, -6.10425949e-01,\n'
 '         1.40131497e+00,  2.62134290e+00, -3.03681016e+00,\n'
 '        -1.20205855e+00, -1.52154517e+00,  5.94488561e-01,\n'
 '        -2.50264740e+00,  5.72559893e-01,  2.54286957e+00,\n'
 '        -1.11531460e+00,  7.70103857e-02,  6.60452068e-01,\n'
 '         6.91992938e-01, -4.79519367e-01,  8.12454343e-01,\n'
 '         1.69687164e+00,  2.16221595e+00,  7.84898281e-01,\n'
 '        -9.60670412e-03,  2.12538052e+00,  2.35742003e-01,\n'
 '         7.38674462e-01,  5.96060008e-02,  6.07064724e-01,\n'
 '        -7.29358345e-02,  4.19434220e-01,  1.55991852e+00,\n'
 '        -9.35560048e-01,  7.48594344e-01,  1.01683760e+00,\n'
 '        -2.38302779e+00,  2.09823561e+00, -7.91682363e-01,\n'
 '        -1.14891544e-01,  5.73069334e-01, -8.89920235e-01,\n'
 '         3.87174785e-01,  1.29358605e-01,  3.54526401e-01,\n'
 '        -8.63829851e-02,  1.24207711e+00, -3.80581021e-01,\n'
 '        -9.07181054e-02,  2.09278986e-01,  1.75375664e+00,\n'
 '         1.35793185e+00, -1.06541669e+00,  1.15702176e+00,\n'
 '         3.11128527e-01,  1.85347354e+00, -1.08922303e+00,\n'
 '         4.48799074e-01,  2.15992236e+00, -5.68130970e-01,\n'
 '        -7.00068474e-01,  1.20708978e+00, -2.47475624e+00,\n'
 '        -2.01145530e-01,  2.67997622e+00, -9.44924951e-02,\n'
 '        -2.52141893e-01,  9.54502761e-01, -1.61834741e+00,\n'
 '        -1.86562896e+00, -1.57565558e+00, -1.19844854e+00,\n'
 '         1.31953085e+00, -1.19112492e+00, -8.48482728e-01,\n'
 '        -1.78064179e+00, -3.46347904e+00, -7.45875120e-01,\n'
 '         6.25837922e-01,  1.48212349e+00,  7.11944699e-01,\n'
 '        -1.43654752e+00, -3.71565998e-01, -2.30141789e-01,\n'
 '         2.01048446e+00, -2.81681418e+00,  1.79641151e+00,\n'
 '        -3.81878287e-01,  8.71046424e-01, -1.50796199e+00,\n'
 '         1.42374027e+00,  7.40951002e-01,  1.35753548e+00,\n'
 '         8.64593089e-02, -6.65381029e-02, -9.91710544e-01,\n'
 '         6.96386456e-01, -1.15811324e+00,  2.08196092e+00,\n'
 '        -3.42217636e+00,  4.11800742e-02,  2.58100629e-01,\n'
 '         3.78101826e-01, -3.69802535e-01, -5.78091383e-01,\n'
 '         1.62710398e-01,  1.70545554e+00, -1.67290604e+00,\n'
 '         3.39052856e-01, -2.32188964e+00, -6.53525949e-01,\n'
 '         9.40440416e-01, -8.12310278e-02, -2.08761931e+00,\n'
 '         2.75535560e+00,  1.84982848e+00,  2.47373462e+00,\n'
 '         2.44755602e+00, -1.41356111e-01, -6.33118987e-01,\n'
 '        -1.71550125e-01, -6.36503875e-01, -2.71436930e-01,\n'
 '         9.66257215e-01,  8.99311900e-03,  1.53446066e+00,\n'
 '        -1.89153075e+00, -9.66312349e-01,  6.85231090e-01,\n'
 '         1.51561022e+00, -4.05655086e-01, -5.00580430e-01,\n'
 '         5.79438269e-01, -5.37458301e-01,  4.90257740e-01,\n'
 '        -2.97392559e+00, -2.18687868e+00, -1.86000097e+00,\n'
 '         4.03781414e-01,  1.57294607e+00, -5.72328687e-01,\n'
 '         1.85989392e+00, -2.05634046e+00, -9.49419737e-01,\n'
 '        -1.00555286e-01, -2.10766506e+00,  7.14788079e-01,\n'
 '         2.86679316e+00, -2.98321724e-01,  6.94688916e-01,\n'
 '        -2.62043297e-01, -2.07211089e+00, -1.16422009e+00,\n'
 '         1.01524305e+00, -6.48078442e-01, -3.46849942e+00,\n'
 '        -1.15742207e+00, -1.44652235e+00, -1.27319312e+00,\n'
 '        -3.50260997e+00, -3.85248363e-02, -4.05971944e-01,\n'
 '         2.03136325e+00, -1.48351395e+00,  4.01598811e-02,\n'
 '         5.58815241e-01,  4.43088084e-01,  2.60923171e+00,\n'
 '        -1.41796815e+00,  3.42338920e+00,  2.96844411e+00,\n'
 '        -1.52114928e+00,  1.68638086e+00,  5.37384033e-01,\n'
 '        -6.31590962e-01,  7.30445623e-01,  1.78392029e+00,\n'
 '         7.44974375e-01, -6.71170950e-02, -1.08045387e+00,\n'
 '         2.00180721e+00, -1.26562059e-01,  1.99209690e+00,\n'
 '         1.50071669e+00, -4.10089493e-02,  9.42645907e-01,\n'
 '         1.00858831e+00,  1.26823854e+00, -1.67349410e+00,\n'
 '        -5.68670929e-01, -8.32969546e-01,  1.25033271e+00,\n'
 '         1.27466869e+00, -9.63025272e-01, -2.29847407e+00,\n'
 '         2.54132837e-01,  1.36170983e+00, -6.54671252e-01,\n'
 '         6.90709650e-01, -6.73922479e-01,  2.44886994e+00,\n'
 '         1.54153895e+00,  7.99372435e-01,  3.44731629e-01,\n'
 '         2.27402282e+00, -2.18634152e+00, -1.92596614e+00,\n'
 '        -8.94488320e-02, -1.07892013e+00, -7.36600220e-01,\n'
 '        -2.21677780e+00,  4.18679774e-01, -9.43595886e-01,\n'
 '        -1.09486580e-02,  2.27783024e-01, -1.68297958e+00,\n'
 '         3.17341328e-01,  2.02631688e+00, -2.84020042e+00,\n'
 '         6.89822316e-01,  2.18235552e-01, -1.28849888e+00,\n'
 '         6.97086096e-01, -2.19340277e+00,  1.81625485e+00,\n'
 '         1.44452259e-01,  6.12745822e-01, -6.05021000e-01,\n'
 '        -2.30574870e+00,  5.32970071e-01,  1.47309899e+00,\n'
 '        -1.50695518e-01, -5.55683635e-02, -7.58014739e-01,\n'
 '        -2.35805297e+00,  6.79324686e-01, -1.43373334e+00,\n'
 '         1.32187998e+00,  3.99052858e-01,  2.06285095e+00,\n'
 '        -1.05005896e+00, -1.88898921e+00,  4.21175599e-01,\n'
 '        -8.16471577e-01, -1.48474681e+00,  1.02701426e+00,\n'
 '         2.71001637e-01, -1.67342162e+00, -1.63807464e+00,\n'
 '         2.56256962e+00, -2.47812957e-01, -7.76172876e-01,\n'
 '        -9.84954894e-01,  1.66945541e+00,  6.62659645e-01,\n'
 '        -7.57001519e-01, -1.83311307e+00, -1.90923953e+00,\n'
 '         1.02651358e+00, -1.85444570e+00,  1.98453856e+00,\n'
 '         1.18618810e+00,  3.93548369e-01, -1.64966679e+00,\n'
 '         1.39385819e+00,  5.05839467e-01,  5.45510173e-01,\n'
 '         2.58567667e+00,  8.84861708e-01, -3.23185861e-01,\n'
 '         1.77797377e-02,  2.37249660e+00, -9.83815551e-01,\n'
 '         1.70892847e+00, -8.21215153e-01,  2.58317423e+00,\n'
 '        -4.63118970e-01,  3.75781864e-01,  1.92905223e+00,\n'
 '        -1.24009371e+00, -1.57919288e+00, -1.29374242e+00,\n'
 '         2.58446026e+00, -6.23968124e-01,  3.85222435e-01,\n'
 '        -2.02345222e-01,  4.52068150e-01,  6.03249967e-01,\n'
 '         1.32316911e+00,  2.28919908e-02,  1.69051099e+00,\n'
 '         1.42715871e+00,  6.00420535e-02, -1.23157889e-01,\n'
 '         8.10745895e-01, -7.47963011e-01, -1.20992744e+00,\n'
 '        -2.41560489e-03, -9.44050431e-01,  9.18414295e-01,\n'
 '         4.94935065e-01,  9.04858589e-01,  4.90592159e-02,\n'
 '         1.48379326e+00,  2.87423420e+00, -2.05145747e-01,\n'
 '         8.86005402e-01,  7.28913367e-01, -9.24082816e-01,\n'
 '        -1.20718658e+00, -1.94010043e+00,  1.33587217e+00,\n'
 '        -1.58458620e-01, -1.68226767e+00, -8.49615395e-01,\n'
 '         7.39003301e-01,  5.06117940e-01, -5.11993527e-01,\n'
 '         5.55744290e-01, -5.46728671e-02,  1.27538753e+00,\n'
 '         1.06701100e+00,  7.16173410e-01, -2.71692067e-01,\n'
 '         4.96034324e-02,  1.45450282e+00,  7.55038857e-02,\n'
 '         4.21261162e-01,  7.20127821e-01, -2.67130852e-01,\n'
 '         1.16889024e+00,  2.55704117e+00,  2.08736777e-01,\n'
 '         3.82427549e+00, -3.58150482e+00,  2.37448841e-01,\n'
 '        -2.00934768e+00, -2.78408599e+00,  1.10951757e+00,\n'
 '        -1.14332557e+00, -6.94019794e-02,  5.56433856e-01,\n'
 '        -4.51918781e-01, -1.40212381e+00,  1.51113033e-01,\n'
 '         4.11571026e-01,  1.06580555e-04,  2.43718341e-01,\n'
 '         8.07102382e-01,  2.08144277e-01,  2.94968456e-01,\n'
 '         3.77588898e-01, -3.76498043e-01, -1.25812781e+00,\n'
 '         1.01031756e+00, -7.75994062e-01, -1.36243558e+00,\n'
 '         7.69443273e-01, -1.03505862e+00,  3.47303182e-01,\n'
 '        -6.95268631e-01, -6.44535780e-01, -4.32768241e-02,\n'
 '        -1.59243977e+00]])')
'test_inceptionnet | batch_shape is: [1]'
'||'
'test_inceptionnet | device is: cpu'
'test_inceptionnet | fw is: tensorflow'
'test_inceptionnet | load_weights is: False'
'layer 1/22 built'
'layer 2/22 built'
'layer 3/22 built'
'layer 4/22 built'
'layer 5/22 built'
'layer 6/22 built'
'layer 7/22 built'
'layer 8/22 built'
'layer 9/22 built'
'layer 10/22 built'
'layer 11/22 built'
'layer 12/22 built'
'layer 13/22 built'
'layer 14/22 built'
'layer 15/22 built'
'layer 17/22 built'
'layer 18/22 built'
'layer 19/22 built'
'layer 20/22 built'
'layer 21/22 built'
'layer 22/22 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/4 built'
'layer 2/4 built'
'layer 3/4 built'
'layer 4/4 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/6 built'
'layer 2/6 built'
'layer 3/6 built'
'layer 4/6 built'
'layer 5/6 built'
'layer 6/6 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'inceptionNet_v3 | building InceptionV3 model | done 1/3'
'input shape is:(1, 224, 224, 3)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 224, 224, 3) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 111, 111, 32) | done 3/3'
'v3 1/23, output shape is:ivy.Shape(1, 111, 111, 32)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 111, 111, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 32) | done 3/3'
'v3 2/23, output shape is:ivy.Shape(1, 109, 109, 32)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 109, 109, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 64) | done 3/3'
'v3 3/23, output shape is:ivy.Shape(1, 109, 109, 64)'
'v3 4/23, output shape is:ivy.Shape(1, 54, 54, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 54, 54, 80) | done 3/3'
'v3 5/23, output shape is:ivy.Shape(1, 54, 54, 80)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 80) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 52, 52, 192) | done 3/3'
'v3 6/23, output shape is:ivy.Shape(1, 52, 52, 192)'
'v3 7/23, output shape is:ivy.Shape(1, 25, 25, 192)'
'input shape is:ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 32) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 32)'
'InceptionA | outputs 20/20'
'v3 8/23, output is:ivy.Shape(1, 25, 25, 256)'
'input shape is:ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'v3 9/23, output shape is:ivy.Shape(1, 25, 25, 288)'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'v3 10/23, output shape is:ivy.Shape(1, 25, 25, 288)'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 384) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 96) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 96)'
'one 20/20, output shape is:ivy.Shape(1, 12, 12, 288)'
'one 20/20'
'v3 11/23, output shape is:ivy.Shape(1, 12, 12, 768)'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'v3 12/23, output shape is:ivy.Shape(1, 12, 12, 768)'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'v3 13/23, output shape is:ivy.Shape(1, 12, 12, 768)'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'v3 14/23, output shape is:ivy.Shape(1, 12, 12, 768)'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'v3 15/23, output shape is:ivy.Shape(1, 12, 12, 768)'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 5, 5, 192)'
'one 7/20, output shape is:ivy.Shape(1, 5, 5, 768)'
'one 20/20'
'v3 17/23, output shape is:ivy.Shape(1, 5, 5, 1280)'
'input shape is:ivy.Shape(1, 5, 5, 1280)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'v3 18/23, output shape is:ivy.Shape(1, 5, 5, 2048)'
'input shape is:ivy.Shape(1, 5, 5, 2048)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'v3 19/23, output shape is:ivy.Shape(1, 5, 5, 2048)'
'Inception3 | input shape to adaptive_avg_pool2d is:ivy.Shape(1, 5, 5, 2048)'
('Inception3 | permuted input shape to adaptive_avg_pool2d is:ivy.Shape(1, '
 '2048, 5, 5)')
'Inception3 | output shape from adaptive_avg_pool2d is:ivy.Shape(1, 2048, 1, 1)'
('Inception3 | permuted output shape from adaptive_avg_pool2d is:ivy.Shape(1, '
 '1, 1, 2048)')
'v3 20/23, avgpool output shape is:ivy.Shape(1, 1, 1, 2048)'
'v3 21/23, dropout output shape is:ivy.Shape(1, 1, 1, 2048)'
'v3 22/23, flatten output shape is:ivy.Shape(1, 2048)'
'fc done 23/23'
('test_inceptionnet | logits is: ivy.array([[-9.93940875e+05,  '
 '8.85552438e+05,  2.01885588e+06,\n'
 '         1.01378492e+05, -2.16038250e+06, -1.58335750e+06,\n'
 '        -6.53167688e+05,  2.69883300e+06, -3.63952906e+05,\n'
 '         1.62226562e+06,  2.64450700e+06, -1.88807212e+06,\n'
 '         1.08966525e+06,  1.08358450e+06, -2.20176850e+06,\n'
 '         5.05291680e+04, -6.20748000e+05,  1.50081550e+06,\n'
 '         1.32931750e+06,  2.28361150e+06, -2.92027150e+06,\n'
 '         2.30626400e+06, -1.04887775e+06,  1.73681575e+06,\n'
 '         1.34487950e+06,  1.22831975e+06, -1.70733350e+06,\n'
 '        -3.06532725e+06, -3.30982938e+05, -2.25867250e+05,\n'
 '        -1.58215938e+05,  3.16030550e+06, -3.60608125e+05,\n'
 '         1.16067225e+06,  1.02916144e+06, -1.23970688e+06,\n'
 '        -2.04550638e+06, -1.35872050e+06, -7.72705562e+05,\n'
 '         2.32322225e+06, -5.06323531e+05,  4.22775844e+05,\n'
 '        -1.36498388e+06, -8.95808250e+05,  2.95401125e+05,\n'
 '         3.35435100e+06, -2.50205300e+06,  5.45789102e+04,\n'
 '         4.95589938e+05,  8.50424438e+05,  4.18276281e+05,\n'
 '         4.60777438e+05, -9.86558375e+05, -6.88248062e+05,\n'
 '         2.13655675e+06,  1.29613000e+06,  1.77857578e+05,\n'
 '        -5.44125812e+05,  2.69915469e+05,  1.39407703e+05,\n'
 '         3.86569406e+05, -4.33244375e+04, -1.92007469e+05,\n'
 '         7.10514000e+05,  3.56898188e+05, -9.25013812e+05,\n'
 '         2.82071250e+05,  3.66064000e+05, -2.91000775e+06,\n'
 '        -2.36408275e+06, -5.57339875e+05,  1.93046638e+06,\n'
 '         2.19242050e+06,  9.92573688e+05, -6.72410688e+05,\n'
 '        -8.50620938e+05, -6.63723688e+05,  3.86491250e+05,\n'
 '        -4.54559156e+05, -2.44419844e+05, -1.34215125e+06,\n'
 '        -1.40899688e+06,  3.25383594e+04, -8.13192750e+05,\n'
 '         6.03432125e+05,  1.40297500e+06, -7.13180000e+05,\n'
 '        -2.29308175e+06,  1.90420250e+06,  6.87106188e+05,\n'
 '        -1.50224950e+06, -2.08453112e+06, -3.44672656e+05,\n'
 '         1.99572862e+06, -9.49951062e+05,  8.37221688e+05,\n'
 '        -3.76017688e+05, -3.92126469e+05,  7.13006125e+05,\n'
 '        -1.40055512e+06,  3.13452875e+06,  1.21216525e+06,\n'
 '         1.26354762e+06,  2.84070500e+06, -4.93105500e+05,\n'
 '        -8.77651875e+05, -1.15536112e+06,  7.24818438e+05,\n'
 '         3.62734800e+06,  2.55687950e+06,  4.00003047e+04,\n'
 '         1.42557200e+06,  1.94967225e+06,  1.82029525e+06,\n'
 '         2.76028075e+06, -1.69401350e+06, -5.95811438e+05,\n'
 '        -1.74571438e+06, -5.10059188e+05,  3.97842025e+06,\n'
 '        -1.45945912e+06, -7.16537625e+05,  7.36640000e+05,\n'
 '         5.34289500e+05,  6.70965750e+05, -1.39039075e+06,\n'
 '         1.28793688e+06, -9.54057750e+05, -2.44830000e+04,\n'
 '         2.08238212e+06, -5.24586650e+06,  9.76153000e+05,\n'
 '         7.91207000e+05, -6.15826000e+05, -2.23764975e+06,\n'
 '        -1.71116388e+06, -6.46815000e+05, -1.85882812e+06,\n'
 '         2.25828300e+06, -1.24689738e+06,  1.49325338e+06,\n'
 '         2.66451025e+06, -3.13334875e+06, -2.35313375e+05,\n'
 '         1.13649188e+05,  6.81697500e+05, -3.82192719e+05,\n'
 '        -2.76676325e+06, -8.99493188e+05,  6.42317750e+05,\n'
 '         1.41251238e+06,  1.60090100e+06, -9.12167500e+05,\n'
 '         5.52719375e+05,  1.42472475e+06,  1.00524766e+04,\n'
 '         1.24393038e+06, -3.58159050e+06, -9.12097312e+05,\n'
 '        -2.56920800e+06,  6.55384500e+05,  1.02980391e+04,\n'
 '        -1.94880938e+04, -2.51025575e+06,  7.19671875e+02,\n'
 '        -1.27171700e+06, -5.42088906e+04,  1.43355312e+06,\n'
 '        -8.61932562e+05, -1.00668769e+06,  8.10190562e+05,\n'
 '        -2.09709250e+05, -8.97077875e+05,  3.11456325e+06,\n'
 '        -1.36947984e+05,  1.47837475e+06, -8.40855625e+05,\n'
 '         1.77699862e+06,  1.27899338e+06,  2.88595844e+05,\n'
 '        -3.61143825e+06, -2.86909656e+05, -9.10725625e+05,\n'
 '        -3.57863094e+05,  1.96287700e+06,  3.10936062e+05,\n'
 '         5.50967148e+04, -1.05016412e+06,  7.24125938e+04,\n'
 '         1.55027188e+06,  7.70341375e+05, -1.29959352e+05,\n'
 '        -1.88811641e+04, -8.39848438e+05,  7.44103312e+05,\n'
 '        -1.91636338e+06,  1.09671512e+06,  2.02300800e+06,\n'
 '        -2.18845625e+06, -1.19039700e+06,  4.67602875e+05,\n'
 '         6.71365500e+05,  1.21512168e+04,  1.18904562e+05,\n'
 '        -4.02438094e+05,  9.06557500e+05,  1.48322325e+06,\n'
 '        -9.82440125e+05, -9.39591500e+05, -7.09256938e+05,\n'
 '         6.87713125e+05, -1.37783175e+06, -6.98530875e+05,\n'
 '         2.13360938e+05, -9.90627938e+05, -1.25517138e+06,\n'
 '         1.02083238e+06, -2.48453350e+06, -9.98913812e+05,\n'
 '         4.26992094e+05, -6.79947250e+05,  2.41300328e+05,\n'
 '         6.78880812e+05,  1.18768050e+06,  8.12429312e+05,\n'
 '        -8.28218062e+05,  2.61088475e+06, -1.11826612e+06,\n'
 '         4.28448219e+05, -3.18968250e+06,  1.44479400e+06,\n'
 '         1.84013212e+06,  1.11388862e+06, -3.96330469e+03,\n'
 '         1.54391825e+06, -9.58019312e+05, -1.28583438e+06,\n'
 '        -4.55544938e+05, -1.79908638e+06,  6.41890000e+05,\n'
 '        -5.50434938e+05,  1.04214984e+05, -5.30019250e+05,\n'
 '         2.56439575e+06,  4.62869906e+05,  1.85101912e+06,\n'
 '        -1.89551188e+06,  1.56961225e+06, -1.50149488e+06,\n'
 '         5.75300312e+05,  1.17825008e+05,  1.97566000e+05,\n'
 '        -1.82676438e+06,  9.17064562e+05, -1.27271125e+06,\n'
 '        -8.93810000e+05,  9.24077938e+05, -2.43115825e+06,\n'
 '         1.26035575e+06, -8.57575812e+05, -7.42196875e+05,\n'
 '         1.53021088e+06,  1.23684912e+06, -1.69952912e+06,\n'
 '         3.05526525e+06,  9.63136000e+05,  1.46094425e+06,\n'
 '         8.02257125e+05,  2.31585250e+06, -3.07218625e+06,\n'
 '         1.53359712e+06, -1.83406362e+06,  9.33695125e+05,\n'
 '         5.10874375e+05,  1.94967225e+06,  2.57503100e+06,\n'
 '         2.08561162e+06,  1.35434262e+06, -1.10318462e+06,\n'
 '         8.82113750e+04,  9.06321500e+05,  3.57548900e+06,\n'
 '         4.00425156e+04,  7.49191688e+05,  7.16584562e+05,\n'
 '        -4.09204600e+06, -1.78172575e+06,  2.74207925e+06,\n'
 '         1.66002225e+06,  1.61205100e+06,  2.45402281e+05,\n'
 '        -6.64499438e+05, -3.64028406e+05, -8.78468281e+04,\n'
 '        -6.88790125e+05,  9.86731938e+05,  1.86440600e+06,\n'
 '        -1.20620150e+06, -7.36954688e+03, -3.29644000e+06,\n'
 '         6.74493938e+05, -3.03883094e+05, -1.54868338e+06,\n'
 '         1.01590194e+06, -3.74839275e+06, -1.97588125e+06,\n'
 '         6.16156562e+05,  9.82510875e+05, -1.72125338e+06,\n'
 '        -9.96883625e+05, -7.74996688e+05, -4.58434344e+05,\n'
 '         5.29618000e+05,  9.60050469e+04, -1.70726525e+06,\n'
 '         2.05506812e+06, -7.17779812e+05, -1.92020550e+06,\n'
 '        -4.14261969e+05,  6.38461625e+05,  2.81043075e+06,\n'
 '         2.21904075e+06, -2.18703625e+06, -5.58932250e+05,\n'
 '         5.53907812e+03, -9.81198750e+05, -3.60979844e+05,\n'
 '        -8.74458750e+05,  3.65027781e+05, -3.91215900e+06,\n'
 '        -8.63359938e+05,  4.44950562e+05,  2.56148975e+06,\n'
 '        -9.33051500e+05, -1.11307988e+06, -1.99318438e+06,\n'
 '        -1.64866275e+06, -3.10588625e+06,  7.35471062e+05,\n'
 '        -2.86667125e+06,  3.73219812e+05,  2.36388875e+06,\n'
 '         2.01796250e+06,  2.23771500e+06, -2.54854425e+06,\n'
 '        -8.59054125e+05, -3.58581900e+06, -1.67194925e+06,\n'
 '         2.63522200e+06, -5.96971688e+05,  1.78224275e+06,\n'
 '         1.06710725e+06,  7.67584562e+05,  5.78136125e+05,\n'
 '        -9.06439812e+05, -1.95301288e+06, -7.65531125e+05,\n'
 '        -1.64652512e+06, -3.81201844e+05,  1.64680312e+06,\n'
 '         2.92594450e+06, -1.59834812e+06,  8.63146312e+05,\n'
 '         2.78413575e+06, -9.91665938e+05,  2.13699950e+06,\n'
 '        -1.35186500e+06,  9.78581125e+05, -1.74989850e+06,\n'
 '        -2.55192800e+06, -4.95269531e+05, -1.50438712e+06,\n'
 '         1.27843328e+05, -1.92488281e+05,  5.40373875e+05,\n'
 '         7.13668062e+05,  1.75005812e+06,  1.07694475e+06,\n'
 '         2.13600825e+06, -7.82732562e+05,  3.00679094e+05,\n'
 '         3.50803775e+06,  1.72930438e+06,  8.81298750e+05,\n'
 '        -3.26744850e+06, -1.48838575e+06, -1.37157725e+06,\n'
 '         1.09995488e+06, -3.31352100e+06,  9.61980750e+05,\n'
 '         5.23435586e+04,  1.52239588e+06, -3.31439200e+06,\n'
 '         9.60074000e+05, -7.46982312e+05,  3.30117100e+06,\n'
 '        -4.42686312e+05, -7.50917875e+05,  7.41741688e+05,\n'
 '        -2.34205300e+06,  1.16462430e+05,  1.55877400e+06,\n'
 '        -1.45512000e+06,  3.10168150e+06, -1.77866547e+05,\n'
 '        -1.41659500e+06,  2.75289150e+06, -2.08588288e+06,\n'
 '         1.94243425e+06, -3.15714600e+06, -4.42927062e+05,\n'
 '        -2.84396425e+06,  8.90043250e+05, -8.50569312e+05,\n'
 '         2.89710900e+06, -1.47437500e+06,  1.41127600e+06,\n'
 '         2.55443600e+06,  2.73359062e+04,  7.25994625e+05,\n'
 '        -9.74960562e+05, -2.75200656e+05,  1.54209225e+06,\n'
 '        -2.41735075e+06,  5.77275500e+05, -7.96437688e+05,\n'
 '         1.55034362e+06,  8.99330625e+05,  1.93816800e+06,\n'
 '         3.75088406e+05,  6.32007812e+05,  2.75794188e+05,\n'
 '         1.87898656e+05,  5.08989969e+05, -1.43158875e+06,\n'
 '        -6.61385250e+05, -1.00650050e+06,  3.71399900e+06,\n'
 '        -1.68562362e+06, -5.86538000e+05,  2.90795650e+06,\n'
 '         9.37077375e+05, -1.70093375e+06, -2.76701800e+06,\n'
 '         3.55543025e+06,  2.60563075e+06, -2.48382234e+05,\n'
 '         1.06877025e+06,  1.97324925e+06, -1.64370412e+06,\n'
 '         1.15824281e+05,  4.34421000e+05, -1.24255175e+06,\n'
 '         1.76719300e+06,  7.62637062e+05,  4.52726850e+06,\n'
 '        -3.27944438e+05, -3.78094875e+05,  2.12188734e+05,\n'
 '        -1.45966350e+06,  1.48661712e+06,  3.34341525e+06,\n'
 '        -8.79031875e+05,  6.70679062e+04,  1.10554625e+06,\n'
 '        -1.04400856e+06,  2.44340950e+06,  1.02377988e+06,\n'
 '        -3.79122625e+05,  1.08254550e+06,  2.31558750e+06,\n'
 '         1.06493675e+06, -1.85962975e+06, -3.53841475e+06,\n'
 '         1.07205200e+06, -1.03523844e+06, -2.17224156e+05,\n'
 '        -2.81036875e+06, -9.17084875e+05,  2.68608938e+05,\n'
 '         9.14536500e+05,  1.81843625e+06, -1.77217900e+06,\n'
 '        -1.24266212e+06, -2.25981000e+06,  2.93355175e+06,\n'
 '        -1.12464031e+05,  8.49568125e+05,  1.79224262e+06,\n'
 '         6.78476875e+05,  1.50535125e+06, -1.65307138e+06,\n'
 '         9.53549875e+05,  5.45120688e+05, -7.93504000e+05,\n'
 '         1.59628750e+05, -4.35770156e+05, -1.45133925e+06,\n'
 '        -1.86684662e+06, -3.99616438e+05, -3.17970975e+06,\n'
 '         1.77462325e+06, -3.67783812e+05, -1.91656050e+06,\n'
 '        -1.08219500e+06,  1.96229450e+06,  1.05511450e+06,\n'
 '        -9.85271375e+05, -6.85378875e+05, -1.06370562e+06,\n'
 '        -2.64719450e+06, -1.40552962e+06,  4.62657891e+04,\n'
 '        -9.57332000e+05, -9.14061438e+05, -1.33670175e+06,\n'
 '         1.76091906e+05,  8.41606625e+05,  2.27895275e+06,\n'
 '        -2.44534150e+06,  3.81247300e+06,  2.34195425e+06,\n'
 '         9.19933188e+05, -2.53779250e+05,  6.00789000e+05,\n'
 '         2.83420750e+05, -6.33569688e+05,  8.84124000e+05,\n'
 '        -5.05502938e+05, -3.81192969e+05, -2.57118650e+06,\n'
 '         2.06399062e+06, -2.44622500e+05, -1.14414075e+06,\n'
 '        -1.60835588e+06,  3.34155750e+05,  1.00711956e+06,\n'
 '        -3.22870850e+06,  6.77016438e+05, -5.83384375e+04,\n'
 '        -7.21091500e+05,  3.29713672e+04, -3.34783175e+06,\n'
 '        -1.37595062e+06,  1.11243362e+06,  9.31489812e+05,\n'
 '         2.88034375e+06,  1.40461862e+06, -2.68803875e+06,\n'
 '        -3.05908000e+06, -1.55570538e+06, -2.16051250e+06,\n'
 '         1.71711238e+06, -2.60437578e+05,  3.04456656e+05,\n'
 '         2.26052625e+06,  2.26750725e+06, -8.24708562e+05,\n'
 '         1.87056550e+06,  3.76680188e+05, -1.41862250e+06,\n'
 '         2.35937625e+05, -1.13647450e+06,  1.44913362e+06,\n'
 '        -5.43499625e+05, -1.46003391e+05,  1.60024225e+06,\n'
 '         2.32650300e+06,  1.51460100e+06, -9.33256750e+05,\n'
 '         1.32955109e+05,  1.01180619e+06,  1.11737650e+06,\n'
 '         7.98662812e+05, -1.42971875e+06, -3.62519750e+05,\n'
 '         8.36078438e+05,  1.87491962e+06,  1.64225312e+06,\n'
 '         1.04095412e+06, -3.84513812e+05, -9.18903500e+05,\n'
 '         1.81424375e+06, -5.24092438e+05, -1.13880612e+06,\n'
 '        -1.03559519e+06, -2.63768400e+06,  6.71222500e+05,\n'
 '         1.30234300e+06, -3.25482281e+05, -1.08278175e+06,\n'
 '         9.95363812e+05, -1.05577359e+05,  2.58500200e+06,\n'
 '        -8.19021000e+05, -1.13747475e+06, -2.34974750e+06,\n'
 '        -1.08267662e+06,  1.86689262e+06, -2.88097150e+06,\n'
 '        -2.19937225e+06, -1.51165094e+05,  2.32808275e+06,\n'
 '        -8.31292625e+05, -5.25935312e+05, -9.52824188e+05,\n'
 '        -2.75713300e+06,  5.82379812e+05,  4.80258719e+05,\n'
 '         2.16493150e+06, -2.86195531e+05,  1.17648100e+06,\n'
 '         5.85698812e+05,  1.61784788e+06,  1.22714388e+06,\n'
 '         2.70395812e+05,  9.01860750e+05,  1.42767375e+06,\n'
 '        -2.33016700e+06,  3.58121350e+06,  1.08274588e+06,\n'
 '        -1.71836450e+06,  8.58531625e+05,  1.02676812e+05,\n'
 '        -2.42256075e+06, -2.63078375e+06, -1.25513062e+06,\n'
 '         1.36276450e+06, -1.47061812e+06, -1.62246125e+06,\n'
 '         7.31499375e+05, -1.74250550e+06, -4.25073700e+06,\n'
 '         3.45050312e+05,  3.80459375e+05, -2.92638975e+06,\n'
 '        -1.88757000e+05, -1.55557838e+06,  7.11250750e+05,\n'
 '         9.05624688e+05, -1.76614838e+06,  2.35944050e+06,\n'
 '         9.64015938e+04,  9.70586812e+05, -8.16585875e+05,\n'
 '         2.51941562e+05, -2.75379375e+06,  5.78350062e+05,\n'
 '         1.96015275e+06,  1.24324212e+06,  2.89377219e+05,\n'
 '         4.69301594e+05, -7.83759562e+05,  8.00664875e+05,\n'
 '        -1.67820288e+06,  1.19378750e+05, -3.61326969e+05,\n'
 '         1.37726344e+05,  1.64678612e+06, -1.76838562e+06,\n'
 '        -5.81055375e+05, -2.55571300e+06,  5.18672000e+05,\n'
 '        -1.11800862e+06,  5.98602812e+05, -1.96406900e+06,\n'
 '        -1.23974550e+06, -3.58377781e+05, -1.46739412e+06,\n'
 '        -9.37824938e+05, -9.93887062e+05,  9.60504500e+05,\n'
 '         1.17917862e+06, -1.79030400e+06,  1.19607212e+06,\n'
 '         1.80153412e+06,  1.56967112e+06,  3.60544844e+04,\n'
 '        -5.11541750e+05, -1.60625925e+06, -2.13607150e+06,\n'
 '         2.42123825e+06, -2.49376600e+06,  7.41034875e+05,\n'
 '        -2.98390750e+05,  9.40016250e+05, -1.72044725e+06,\n'
 '        -4.65646156e+05, -7.38507250e+05, -2.67137600e+06,\n'
 '        -7.58120938e+05,  2.00986150e+06,  1.59935988e+06,\n'
 '         2.05242700e+06, -2.78256406e+05, -4.87512719e+05,\n'
 '         1.71773450e+06, -2.54722766e+05,  7.21333312e+05,\n'
 '        -1.43161988e+06, -4.23767219e+05,  4.99437461e+04,\n'
 '        -4.43100469e+05, -1.59690775e+06,  1.27156250e+03,\n'
 '        -9.92297688e+05, -1.39771656e+05, -1.27529875e+06,\n'
 '        -4.58209406e+05, -1.91987500e+06,  8.38211938e+05,\n'
 '         7.08098562e+05,  8.73761812e+05, -7.64442812e+05,\n'
 '        -1.43722788e+06,  5.44471500e+05, -2.65612109e+04,\n'
 '         1.77149875e+05,  1.06742172e+05,  1.36535700e+06,\n'
 '        -6.11258000e+05, -4.39856250e+03, -1.02045819e+06,\n'
 '        -1.03160612e+06,  1.79232250e+06,  3.36522375e+06,\n'
 '         2.74815400e+06,  4.05018050e+06, -2.16792781e+05,\n'
 '        -1.95490762e+06, -1.13820025e+06, -3.34076719e+04,\n'
 '        -1.74675825e+06, -3.38931950e+06,  1.07558200e+06,\n'
 '        -1.06563891e+05,  5.88029875e+05,  1.45166388e+06,\n'
 '         1.60009875e+05,  1.13137612e+06, -5.23361094e+05,\n'
 '        -1.44805031e+05, -1.29460525e+06,  6.59601125e+05,\n'
 '        -3.73166312e+05,  1.71707875e+05, -1.81283412e+06,\n'
 '         6.34640938e+05,  1.16370225e+06,  1.46870888e+06,\n'
 '        -1.59442550e+06,  2.77437725e+06, -1.79772453e+05,\n'
 '         5.23394950e+06,  8.48387188e+05, -2.17080525e+06,\n'
 '         4.32943562e+05, -6.83487812e+05, -6.36360938e+05,\n'
 '        -1.97087734e+04,  2.78730850e+06,  6.04601688e+05,\n'
 '         2.56946000e+05,  5.65912812e+05,  3.56808656e+05,\n'
 '         1.30891450e+06,  1.85419188e+06, -4.48389812e+05,\n'
 '         2.15123900e+06,  1.09964750e+06,  1.39971812e+05,\n'
 '        -3.34904031e+05, -1.85947875e+06,  4.70411188e+05,\n'
 '         8.12618438e+05, -5.52923250e+05, -1.55499725e+06,\n'
 '        -3.71729925e+06,  5.00730547e+04, -2.54198328e+05,\n'
 '        -9.08502438e+05, -2.11341250e+06,  3.32464094e+05,\n'
 '        -5.11477625e+05,  4.28960406e+05, -7.97575625e+05,\n'
 '        -1.56371450e+06,  9.05663688e+05,  2.34878641e+05,\n'
 '         2.63554775e+06, -1.87321250e+04, -8.54356812e+05,\n'
 '        -1.05575275e+06, -1.45318496e+04, -1.46048750e+06,\n'
 '        -2.24721300e+06, -7.57307188e+05, -2.33199281e+05,\n'
 '         1.82761962e+06,  9.67670562e+05, -2.61821725e+06,\n'
 '        -1.42869925e+06, -2.22660775e+06, -1.47081825e+06,\n'
 '         4.44077900e+06, -4.21290844e+05, -3.07640188e+05,\n'
 '        -5.89139375e+05, -5.20495469e+04, -7.39685062e+05,\n'
 '         1.61464362e+06, -2.54532225e+06,  1.78962562e+06,\n'
 '         2.36691422e+05, -7.26421312e+05,  9.70485250e+05,\n'
 '         2.04015275e+06,  3.58179609e+04,  1.32641312e+06,\n'
 '        -2.61931800e+06, -1.24507578e+04,  1.65611250e+06,\n'
 '        -2.15980031e+05, -6.11382250e+05,  1.18347788e+06,\n'
 '         9.42162312e+05,  8.83180812e+05, -1.19093800e+06,\n'
 '         4.99175531e+05,  1.54204300e+06,  1.54804125e+06,\n'
 '         3.52698250e+06, -2.32019906e+05, -9.90595875e+05,\n'
 '         1.69413650e+06,  1.69243750e+05,  3.76393250e+05,\n'
 '        -6.24006250e+05,  1.32658950e+06,  2.38973625e+06,\n'
 '        -1.70934662e+06,  2.70796875e+05,  7.93142969e+04,\n'
 '         2.09374925e+06, -1.81250012e+06, -1.30063275e+06,\n'
 '         1.15161700e+06,  3.58150425e+06, -2.09783484e+05,\n'
 '         4.19525812e+05,  3.15203438e+05,  2.47252550e+06,\n'
 '         4.94484719e+05, -2.51074750e+06,  1.75629406e+05,\n'
 '         1.82012862e+06,  2.52924500e+05, -9.35387812e+05,\n'
 '         2.20088200e+06, -3.44780500e+06, -1.15385275e+06,\n'
 '         1.24351200e+06, -9.98037500e+05, -2.32809450e+06,\n'
 '        -3.05144050e+06, -3.49718656e+05, -2.95971450e+06,\n'
 '         1.24481612e+06,  1.11621225e+06,  1.56999850e+06,\n'
 '         1.01005625e+06,  4.24868438e+05,  3.55244400e+06,\n'
 '        -8.65986562e+05, -1.03894969e+06, -8.29574000e+05,\n'
 '        -5.25097438e+05,  3.87507188e+05, -1.62376422e+05,\n'
 '         1.83739225e+06, -1.23811781e+05,  1.35818812e+06,\n'
 '         1.02260394e+06, -2.97998425e+06, -2.89833281e+05,\n'
 '         4.85441156e+05, -1.31446016e+05,  6.24248750e+04,\n'
 '         9.57983625e+05, -6.25311641e+04,  1.15652300e+06,\n'
 '         1.71646762e+06,  7.34342312e+05,  9.75126188e+05,\n'
 '        -3.66571375e+05,  9.55198625e+05, -2.25325400e+06,\n'
 '        -1.00065500e+06, -5.53588875e+05,  9.68343375e+05,\n'
 '         3.08072025e+06, -3.90093031e+05, -7.06808984e+04,\n'
 '         2.01394969e+05, -2.78262075e+06, -5.57925312e+05,\n'
 '         1.67019975e+06,  5.61735062e+05,  2.71215938e+04,\n'
 '         3.22439062e+05,  1.00742419e+06,  1.79704925e+06,\n'
 '        -3.46461125e+05, -5.61344125e+05,  9.19806875e+05,\n'
 '         2.33350625e+06, -1.53042675e+06,  6.28202875e+05,\n'
 '        -2.99029675e+06,  6.62237812e+05,  1.73244125e+06,\n'
 '        -1.63850438e+05,  7.20811062e+05,  1.89747125e+06,\n'
 '        -1.78851425e+06, -2.08445650e+06,  1.67992325e+06,\n'
 '        -8.06825188e+05,  8.83015562e+05,  3.72285725e+06,\n'
 '        -9.02439188e+05,  3.47149000e+05,  5.11100375e+05,\n'
 '        -8.55357000e+05, -3.04955719e+05,  1.45801000e+06,\n'
 '         1.07634900e+06,  1.21052725e+06, -1.71568475e+06,\n'
 '        -1.32717575e+06,  1.44082512e+06,  5.17933312e+05,\n'
 '         4.20280125e+05,  9.15667438e+05, -1.08519700e+06,\n'
 '        -2.06665488e+06,  9.92742875e+05,  2.74468300e+06,\n'
 '         8.62344625e+05, -2.14892975e+06, -1.80531812e+05,\n'
 '        -1.56031388e+06,  4.47283719e+05, -7.79912812e+04,\n'
 '         2.84220906e+05, -1.42223312e+05,  1.50905588e+06,\n'
 '         2.66755050e+06,  1.96351412e+06, -7.31961562e+05,\n'
 '         5.04753875e+05, -3.60976950e+06,  2.39453075e+06,\n'
 '         2.40092575e+06,  8.03207562e+05,  1.54052188e+06,\n'
 '         2.87608375e+05, -2.81754500e+06,  1.07364750e+06,\n'
 '        -1.47465188e+06,  2.09182075e+06,  3.81150062e+05,\n'
 '         1.08476862e+06,  1.79979900e+06, -2.08367500e+06,\n'
 '        -2.30807650e+06, -3.51270700e+06,  1.70483862e+06,\n'
 '        -2.52458875e+06,  1.08929575e+06,  3.53888828e+04,\n'
 '         1.51092162e+06, -7.68933250e+05,  5.91269562e+05,\n'
 '         2.19033650e+06,  3.33106031e+05, -1.07909825e+06,\n'
 '        -1.67331812e+06,  1.13952000e+06,  9.15653312e+05,\n'
 '        -3.73929625e+06,  8.20350812e+05, -1.77589969e+05,\n'
 '        -2.12692250e+06,  8.33917734e+04,  2.06739275e+06,\n'
 '        -6.28700500e+05,  8.59596188e+05,  4.44808344e+05,\n'
 '         1.40524338e+06]])')
'test_inceptionnet | batch_shape is: [1]'
'||'
'test_inceptionnet | device is: cpu'
'test_inceptionnet | fw is: tensorflow'
'test_inceptionnet | load_weights is: True'
'layer 1/22 built'
'layer 2/22 built'
'layer 3/22 built'
'layer 4/22 built'
'layer 5/22 built'
'layer 6/22 built'
'layer 7/22 built'
'layer 8/22 built'
'layer 9/22 built'
'layer 10/22 built'
'layer 11/22 built'
'layer 12/22 built'
'layer 13/22 built'
'layer 14/22 built'
'layer 15/22 built'
'layer 17/22 built'
'layer 18/22 built'
'layer 19/22 built'
'layer 20/22 built'
'layer 21/22 built'
'layer 22/22 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/4 built'
'layer 2/4 built'
'layer 3/4 built'
'layer 4/4 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/6 built'
'layer 2/6 built'
'layer 3/6 built'
'layer 4/6 built'
'layer 5/6 built'
'layer 6/6 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'inceptionNet_v3 | building InceptionV3 model | done 1/3'
'inceptionNet_v3 | clearning pretrained weights | done 2/3'
'inceptionNet_v3 | loading pretrained weights | done 3/3'
'input shape is:(1, 224, 224, 3)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 224, 224, 3) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 111, 111, 32) | done 3/3'
'v3 1/23, output shape is:ivy.Shape(1, 111, 111, 32)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 111, 111, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 32) | done 3/3'
'v3 2/23, output shape is:ivy.Shape(1, 109, 109, 32)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 109, 109, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 64) | done 3/3'
'v3 3/23, output shape is:ivy.Shape(1, 109, 109, 64)'
'v3 4/23, output shape is:ivy.Shape(1, 54, 54, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 54, 54, 80) | done 3/3'
'v3 5/23, output shape is:ivy.Shape(1, 54, 54, 80)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 80) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 52, 52, 192) | done 3/3'
'v3 6/23, output shape is:ivy.Shape(1, 52, 52, 192)'
'v3 7/23, output shape is:ivy.Shape(1, 25, 25, 192)'
'input shape is:ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 32) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 32)'
'InceptionA | outputs 20/20'
'v3 8/23, output is:ivy.Shape(1, 25, 25, 256)'
'input shape is:ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'v3 9/23, output shape is:ivy.Shape(1, 25, 25, 288)'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'v3 10/23, output shape is:ivy.Shape(1, 25, 25, 288)'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 384) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 96) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 96)'
'one 20/20, output shape is:ivy.Shape(1, 12, 12, 288)'
'one 20/20'
'v3 11/23, output shape is:ivy.Shape(1, 12, 12, 768)'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'v3 12/23, output shape is:ivy.Shape(1, 12, 12, 768)'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'v3 13/23, output shape is:ivy.Shape(1, 12, 12, 768)'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'v3 14/23, output shape is:ivy.Shape(1, 12, 12, 768)'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'v3 15/23, output shape is:ivy.Shape(1, 12, 12, 768)'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 5, 5, 192)'
'one 7/20, output shape is:ivy.Shape(1, 5, 5, 768)'
'one 20/20'
'v3 17/23, output shape is:ivy.Shape(1, 5, 5, 1280)'
'input shape is:ivy.Shape(1, 5, 5, 1280)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'v3 18/23, output shape is:ivy.Shape(1, 5, 5, 2048)'
'input shape is:ivy.Shape(1, 5, 5, 2048)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'v3 19/23, output shape is:ivy.Shape(1, 5, 5, 2048)'
'Inception3 | input shape to adaptive_avg_pool2d is:ivy.Shape(1, 5, 5, 2048)'
('Inception3 | permuted input shape to adaptive_avg_pool2d is:ivy.Shape(1, '
 '2048, 5, 5)')
'Inception3 | output shape from adaptive_avg_pool2d is:ivy.Shape(1, 2048, 1, 1)'
('Inception3 | permuted output shape from adaptive_avg_pool2d is:ivy.Shape(1, '
 '1, 1, 2048)')
'v3 20/23, avgpool output shape is:ivy.Shape(1, 1, 1, 2048)'
'v3 21/23, dropout output shape is:ivy.Shape(1, 1, 1, 2048)'
'v3 22/23, flatten output shape is:ivy.Shape(1, 2048)'
'fc done 23/23'
('test_inceptionnet | logits is: ivy.array([[-3.46971750e-02, '
 '-8.20964694e-01,  7.50075579e-01,\n'
 '         5.58999777e-01,  1.52140045e+00, -5.57699204e-01,\n'
 '        -9.34542537e-01, -1.58372152e+00, -1.33428335e+00,\n'
 '         2.09729481e+00,  9.52491283e-01, -5.75632691e-01,\n'
 '         1.63562596e+00, -1.04917371e+00, -1.67813516e+00,\n'
 '         4.10345936e+00,  1.43612385e+00, -2.53383589e+00,\n'
 '        -1.14111721e+00, -3.65155816e-01, -1.08929670e+00,\n'
 '         9.55352247e-01,  3.81278992e-01,  2.38987660e+00,\n'
 '         2.14879823e+00, -3.24544012e-01,  7.52269268e-01,\n'
 '        -7.73244023e-01, -2.53435516e+00,  1.21482873e+00,\n'
 '         4.03328121e-01, -6.20154917e-01, -2.80929756e+00,\n'
 '        -2.18036026e-01, -1.99180913e+00, -1.68238848e-01,\n'
 '         6.39501870e-01, -2.69450998e+00,  9.02196169e-02,\n'
 '        -8.69111419e-02, -1.52563810e+00, -2.10052776e+00,\n'
 '        -1.03239489e+00, -1.72770762e+00,  4.61956263e-02,\n'
 '        -5.56597114e-01, -1.13339698e+00, -7.28304684e-01,\n'
 '        -8.33707631e-01,  2.90773094e-01,  4.16624039e-01,\n'
 '         1.14906335e+00,  6.22361004e-01,  2.26133156e+00,\n'
 '         8.49339008e-01,  1.42758465e+00, -1.38562202e+00,\n'
 '        -4.70537037e-01,  1.51659453e+00,  6.33212626e-02,\n'
 '         2.14095160e-01, -5.14557958e-01, -5.89707613e-01,\n'
 '         2.24825287e+00, -3.96814346e-01,  7.30886340e-01,\n'
 '         7.07431138e-02, -7.02585220e-01,  3.20047349e-01,\n'
 '         6.97865784e-01,  8.16981435e-01, -2.80154324e+00,\n'
 '        -1.02946925e+00,  3.40765089e-01, -6.86290741e-01,\n'
 '        -1.28341448e+00,  2.19119489e-01, -2.44786549e+00,\n'
 '        -9.43881869e-02,  1.14685729e-01, -1.68190098e+00,\n'
 '        -2.30472684e+00,  1.33399272e+00,  3.19740343e+00,\n'
 '         5.45744419e-01, -2.03612018e+00,  1.50980830e+00,\n'
 '        -4.28086281e-01, -3.05820406e-02, -5.19686759e-01,\n'
 '        -6.45922482e-01, -9.40642834e-01,  7.34930515e-01,\n'
 '         4.11889553e-02,  9.85933423e-01,  1.59806395e+00,\n'
 '         1.51347786e-01,  1.24202359e+00, -8.27585697e-01,\n'
 '         2.92407084e+00,  3.14819646e+00,  6.57224357e-01,\n'
 '        -3.13323212e+00, -1.04171038e-02, -2.49696469e+00,\n'
 '        -1.72813344e+00, -2.04199624e+00,  7.12193489e-01,\n'
 '        -7.99934804e-01, -1.45106167e-01,  2.42712021e-01,\n'
 '        -6.22621894e-01,  1.14615583e+00, -2.25268888e+00,\n'
 '        -9.19197977e-01,  2.05674410e-01, -5.95355630e-01,\n'
 '         1.75862777e+00,  1.47003365e+00,  9.74305153e-01,\n'
 '         1.58149052e+00,  1.77439773e+00,  1.82077789e+00,\n'
 '        -1.42699152e-01, -4.00520593e-01,  7.87508905e-01,\n'
 '        -1.36312455e-01,  8.17509115e-01,  2.50846005e+00,\n'
 '         9.01234031e-01,  1.61337197e+00, -1.10148621e+00,\n'
 '         2.15762901e+00,  3.45036673e+00,  4.57177013e-01,\n'
 '         5.84905893e-02,  4.98418272e-01, -1.17381764e+00,\n'
 '        -2.26416767e-01,  2.43867827e+00, -4.28266192e+00,\n'
 '         7.60571480e-01, -8.66489559e-02, -5.27613580e-01,\n'
 '         6.74997270e-01,  1.17821920e+00, -6.44001722e-01,\n'
 '        -3.82985949e-01, -2.86215573e-01,  6.74812019e-01,\n'
 '         2.13966179e+00, -5.36824584e-01,  5.84103167e-03,\n'
 '        -3.12916660e+00, -2.33089709e+00, -1.31250346e+00,\n'
 '         7.31758714e-01, -1.37158260e-01, -8.66342604e-01,\n'
 '         2.01654482e+00,  3.41752708e-01, -1.11269605e+00,\n'
 '        -1.77831292e+00, -1.05094576e+00, -1.77962506e+00,\n'
 '        -1.30651104e+00, -1.15061068e+00, -1.44988453e+00,\n'
 '         8.45332503e-01,  2.35120416e-01,  1.68282366e+00,\n'
 '         2.86532491e-01, -6.46522939e-01,  1.45043421e+00,\n'
 '        -2.01705933e+00, -2.05884147e+00, -1.78741121e+00,\n'
 '        -5.28664231e-01,  3.24623406e-01,  1.99683607e-01,\n'
 '         1.11540532e+00,  1.38524342e+00, -5.65976977e-01,\n'
 '         1.79797506e+00, -1.17824125e+00,  6.06016815e-01,\n'
 '         7.73464918e-01,  1.52584243e+00,  2.19782686e+00,\n'
 '         1.45779252e+00,  1.53290021e+00,  1.27661574e+00,\n'
 '        -2.34897542e+00,  1.63659024e+00, -1.44068968e+00,\n'
 '         2.47564763e-01,  4.39945877e-01,  3.35713267e+00,\n'
 '        -2.10084915e-01,  2.71443576e-01,  1.36650753e+00,\n'
 '         1.91852713e+00,  3.00564694e+00, -3.50986332e-01,\n'
 '         7.40814388e-01,  1.51535630e+00,  2.51742649e+00,\n'
 '        -2.37266993e+00,  6.28834307e-01, -6.99336171e-01,\n'
 '        -1.04618454e+00,  2.03919578e+00, -1.86191893e+00,\n'
 '        -6.72117174e-01,  1.69222784e+00, -2.09128082e-01,\n'
 '         1.16431266e-02,  5.79043925e-02,  2.79418141e-01,\n'
 '         1.75375807e+00,  5.18529058e-01,  2.53460622e+00,\n'
 '         7.88953245e-01, -2.06179571e+00, -2.81658947e-01,\n'
 '        -2.22902107e+00,  1.51506198e+00, -2.24161387e+00,\n'
 '         1.18792140e+00, -3.52632999e-03, -1.78298998e+00,\n'
 '        -1.12049592e+00, -8.90950263e-02,  1.12156808e+00,\n'
 '        -8.28592256e-02,  9.54871416e-01,  1.47031117e+00,\n'
 '         1.10547102e+00, -1.30693257e-01,  2.09734172e-01,\n'
 '         2.09522635e-01, -1.26309490e+00,  2.82320046e+00,\n'
 '         1.92775929e+00, -6.91476703e-01,  4.73421872e-01,\n'
 '         2.06955433e-01, -1.53966522e+00,  4.96796854e-02,\n'
 '        -1.84164858e+00, -2.16423011e+00, -1.02366996e+00,\n'
 '         5.07107496e-01, -1.72682673e-01, -3.47221971e+00,\n'
 '        -2.07328463e+00,  1.36002576e+00, -7.85891592e-01,\n'
 '        -2.06912303e+00, -1.09250200e+00, -1.60947096e+00,\n'
 '        -2.10143614e+00,  3.07505041e-01, -1.88566661e+00,\n'
 '         2.93009281e-02, -2.21894324e-01, -6.35696590e-01,\n'
 '        -2.67612279e-01, -9.68289375e-02, -4.36534309e+00,\n'
 '        -4.63543606e+00, -3.55959630e+00, -1.44229388e+00,\n'
 '        -1.44593954e+00, -1.95520377e+00, -1.47234154e+00,\n'
 '        -1.93986392e+00, -2.87572789e+00, -2.68897819e+00,\n'
 '        -3.69892120e+00,  1.02509335e-01,  1.75806217e+01,\n'
 '         1.77038364e+01,  3.87511849e-01,  8.04080665e-01,\n'
 '         1.07039728e+01, -8.62486601e-01,  3.55522370e+00,\n'
 '         1.18731165e+00, -1.00291908e+00, -1.25230819e-01,\n'
 '        -3.33983302e-01,  2.78599572e+00, -1.27508092e+00,\n'
 '         4.29335207e-01,  1.34732413e+00, -2.99232006e-02,\n'
 '         2.03886569e-01,  2.46974349e+00,  2.19373965e+00,\n'
 '         3.70506756e-02, -8.70806128e-02, -6.03594005e-01,\n'
 '         1.57528615e+00, -8.41221571e-01, -1.88234538e-01,\n'
 '        -1.77209020e-01,  4.66609418e-01,  2.89333701e-01,\n'
 '        -1.96311533e+00, -1.21871400e+00,  1.34354040e-01,\n'
 '        -3.16935837e-01,  5.52220941e-01, -1.81546748e+00,\n'
 '         4.57054794e-01,  8.29402506e-01, -1.56419134e+00,\n'
 '        -6.53132439e-01, -2.44326353e+00, -5.47293723e-01,\n'
 '        -3.04772794e-01, -4.69829738e-02, -5.75601220e-01,\n'
 '         1.41794890e-01, -1.64883107e-01, -6.13204479e-01,\n'
 '        -8.44352484e-01, -3.21413159e-01,  3.47294140e+00,\n'
 '        -7.90526271e-01, -1.07469606e+00, -2.32898617e+00,\n'
 '        -2.93821788e+00, -2.86666369e+00,  3.27646583e-01,\n'
 '        -2.06417036e+00, -8.15065622e-01, -5.99908769e-01,\n'
 '         5.20635188e-01,  2.09957552e+00,  6.71584487e-01,\n'
 '         5.47537953e-03, -8.68977904e-01,  1.49837351e+00,\n'
 '         2.02659130e+00,  5.05328775e-01, -2.16214871e+00,\n'
 '        -4.41797108e-01,  8.18890929e-01, -3.14420760e-01,\n'
 '         2.12887907e+00,  5.51954031e-01, -4.35059786e-01,\n'
 '        -8.60587835e-01, -1.54405642e+00, -1.66092253e+00,\n'
 '        -1.40818730e-01, -6.74335957e-01,  1.07955769e-01,\n'
 '        -9.53340888e-01,  3.01733762e-02, -2.31730270e+00,\n'
 '         2.61050999e-01, -6.08203471e-01, -1.86872983e+00,\n'
 '        -1.11928463e+00, -8.39216828e-01, -6.81194782e-01,\n'
 '         1.05286312e+00, -5.23208857e-01, -2.12335229e+00,\n'
 '         1.46344304e+00, -4.48907852e-01,  5.71983576e-01,\n'
 '        -1.26365423e+00, -5.36739886e-01,  1.25984061e+00,\n'
 '        -2.65820885e+00, -1.78358924e+00, -9.12777782e-02,\n'
 '         1.22418594e+00,  1.05582547e+00, -3.51029873e-01,\n'
 '         2.56591678e-01,  7.40034998e-01,  1.81344664e+00,\n'
 '        -1.96020603e+00, -1.31237030e+00,  1.43141544e+00,\n'
 '        -1.67687029e-01,  1.20577395e+00, -7.00472891e-01,\n'
 '         7.63081312e-02,  3.09939742e+00,  2.17102742e+00,\n'
 '         3.49194348e-01,  7.07442045e-01, -3.80477011e-01,\n'
 '        -2.72650003e+00,  1.70821476e+00,  9.56919074e-01,\n'
 '         9.67886329e-01, -3.59140545e-01,  8.24922919e-01,\n'
 '         2.17411232e+00, -1.15268338e+00, -7.59638190e-01,\n'
 '         2.05321741e+00, -4.06386644e-01, -6.15119875e-01,\n'
 '        -2.45935082e+00, -2.27299309e+00, -7.61605799e-01,\n'
 '         1.75211382e+00, -1.61309290e+00,  5.70968986e-01,\n'
 '         5.96929967e-01,  1.43708199e-01, -9.82764244e-01,\n'
 '         1.77466011e+00,  1.05450141e+00, -1.97544384e+00,\n'
 '        -1.83055389e+00,  1.19398606e+00,  1.91183016e-01,\n'
 '         2.39266181e+00, -2.16026044e+00,  2.41185427e+00,\n'
 '         2.27349997e+00,  9.17520046e-01, -1.66740799e+00,\n'
 '        -1.35331750e-02,  1.87970072e-01, -2.77323365e+00,\n'
 '         1.81085813e+00, -3.71155381e+00,  1.07669246e+00,\n'
 '         1.61238432e+00,  2.75781065e-01, -8.25791001e-01,\n'
 '        -5.06480813e-01, -1.58237433e+00, -4.15541604e-02,\n'
 '        -4.31428134e-01, -2.37005568e+00, -4.73271847e-01,\n'
 '         1.00380778e+00, -3.21655601e-01,  2.16353989e+00,\n'
 '        -1.90726364e+00,  1.51584888e+00,  3.90417308e-01,\n'
 '         3.37986541e+00,  1.06429422e+00, -1.29190779e+00,\n'
 '        -6.73897147e-01,  1.01802445e+00,  6.61767006e-01,\n'
 '        -2.42970991e+00,  2.57415086e-01, -2.71003056e+00,\n'
 '        -8.68890166e-01,  6.86584413e-01,  2.75597024e+00,\n'
 '         6.19381666e-02, -2.03429937e+00, -3.94024104e-01,\n'
 '        -2.10071516e+00,  1.60087317e-01, -1.16835463e+00,\n'
 '        -1.24627662e+00, -3.47607613e-01, -4.08312917e-01,\n'
 '         5.83016992e-01,  2.81390715e+00, -1.13899791e+00,\n'
 '         7.58259535e-01,  1.94472730e+00,  8.92919362e-01,\n'
 '        -4.20893907e+00, -3.38634908e-01,  6.65663064e-01,\n'
 '        -1.44197673e-01, -2.31831700e-01, -1.70330167e+00,\n'
 '        -3.77188861e-01, -2.87856221e+00,  1.03761062e-01,\n'
 '         1.99516034e+00,  3.55938852e-01, -1.10345423e+00,\n'
 '         4.28421378e-01,  1.86346739e-01,  2.80120939e-01,\n'
 '        -2.15869927e+00,  8.60415697e-01,  9.36486840e-01,\n'
 '        -4.75850761e-01, -2.50457334e+00, -1.04027009e+00,\n'
 '        -1.09933400e+00, -3.35662532e+00,  6.44409120e-01,\n'
 '         1.93314338e+00, -2.35847640e+00,  1.58195400e+00,\n'
 '         2.53878742e-01,  1.65762758e+00, -2.36943078e+00,\n'
 '        -1.26737893e+00, -3.07790399e+00, -9.88254070e-01,\n'
 '         1.19354391e+00,  4.22109187e-01,  1.03043973e-01,\n'
 '         5.93339503e-02,  6.46333516e-01, -1.01846504e+00,\n'
 '         3.65700841e+00,  3.31188708e-01,  9.99965906e-01,\n'
 '         1.30241513e+00,  4.00404751e-01,  5.42529762e-01,\n'
 '         2.68178046e-01, -6.42877817e-03, -9.02024925e-01,\n'
 '         1.94322020e-02, -2.88935685e+00, -8.65402698e-01,\n'
 '        -1.46272957e+00,  2.24156380e+00, -1.14140606e+00,\n'
 '         6.14734471e-01,  1.27623033e+00, -8.27910960e-01,\n'
 '        -2.66160369e+00, -6.19343996e-01,  1.28733075e+00,\n'
 '         1.60564887e+00,  1.10324073e+00, -9.94573712e-01,\n'
 '         6.40238345e-01,  5.11128068e-01, -1.67084527e+00,\n'
 '         2.44209051e+00, -1.52660474e-01,  4.78980929e-01,\n'
 '        -2.72274852e+00, -2.12506518e-01,  7.12797940e-01,\n'
 '        -6.80119097e-02,  7.54110217e-02,  6.45200551e-01,\n'
 '         1.16667747e-02,  7.89843142e-01,  2.38018107e+00,\n'
 '        -8.22573781e-01, -1.33238137e-02,  8.75043154e-01,\n'
 '        -2.57307112e-01,  2.36628270e+00,  1.87677169e+00,\n'
 '        -3.99610639e-01, -7.60452270e-01,  2.97490776e-01,\n'
 '         8.48374665e-02, -8.33613098e-01, -2.02071965e-01,\n'
 '         6.53271377e-01,  2.08386970e+00, -1.33978796e+00,\n'
 '        -1.42646506e-01,  1.57120073e+00, -1.04452777e+00,\n'
 '        -7.99903870e-01,  3.27076256e-01,  5.34794569e-01,\n'
 '         6.94786832e-02,  2.41147590e+00, -1.56483555e+00,\n'
 '        -1.32155085e+00, -5.80991060e-02, -2.88467240e+00,\n'
 '        -2.17487240e+00,  2.61527956e-01,  6.56235039e-01,\n'
 '        -4.57998931e-01, -8.68335605e-01, -2.70206213e-01,\n'
 '        -3.37861013e+00,  8.74369443e-01,  2.02122188e+00,\n'
 '        -1.00954020e+00,  1.05363357e+00,  1.37131095e-01,\n'
 '        -2.13724613e+00, -6.50781930e-01, -2.54213977e+00,\n'
 '        -8.30521464e-01, -2.98466325e+00, -8.97070766e-02,\n'
 '        -1.10625848e-02, -6.35916293e-01,  9.81525719e-01,\n'
 '        -6.35083914e-02, -1.46365833e+00, -3.12497568e+00,\n'
 '        -8.57153118e-01, -1.33536851e+00,  2.38696432e+00,\n'
 '        -4.93266821e-01,  3.80330235e-02, -6.56654358e-01,\n'
 '        -2.18648863e+00,  8.19091380e-01, -3.94784617e+00,\n'
 '         4.47327822e-01, -1.32617783e+00,  2.48749805e+00,\n'
 '         4.64345008e-01,  2.56940055e+00,  1.59078658e-01,\n'
 '         1.25105083e+00,  1.36926806e+00, -3.19889832e+00,\n'
 '        -2.18147111e+00, -1.03264022e+00, -2.43367100e+00,\n'
 '        -5.96139431e-02, -1.42598438e+00,  6.55790567e-01,\n'
 '         3.39087105e+00,  2.32551527e+00,  9.13204908e-01,\n'
 '        -1.03462505e+00, -2.20120236e-01,  9.52638030e-01,\n'
 '         4.07132328e-01, -9.12725329e-01, -2.72040391e+00,\n'
 '        -9.57392633e-01,  7.74763465e-01,  7.07028031e-01,\n'
 '        -8.87987673e-01, -7.15450942e-01,  4.39007521e-01,\n'
 '        -1.90831590e+00, -4.96577025e-02,  1.61222160e+00,\n'
 '        -1.60421479e+00,  4.74579871e-01, -9.12399367e-02,\n'
 '         8.31153810e-01, -3.72525668e+00,  5.55254102e-01,\n'
 '         2.24271679e+00,  1.43752813e+00,  7.65776277e-01,\n'
 '         1.93529570e+00,  1.28439558e+00,  2.03382230e+00,\n'
 '         2.90980816e-01,  1.02365859e-01, -8.00640166e-01,\n'
 '         7.99903333e-01, -1.36259168e-01,  1.20438799e-01,\n'
 '        -1.33462417e+00,  9.74738598e-03,  1.17376804e+00,\n'
 '        -1.38111222e+00,  1.93215609e+00, -5.05850911e-01,\n'
 '        -1.18466997e+00,  2.36025119e+00,  2.20860824e-01,\n'
 '        -2.72476125e+00, -2.57227707e+00, -1.80416036e+00,\n'
 '         1.72057795e+00,  1.00913167e+00,  8.83032322e-01,\n'
 '        -1.97102332e+00,  2.67769068e-01, -8.05453420e-01,\n'
 '        -9.28007841e-01,  1.57820249e+00, -8.20458531e-01,\n'
 '         9.18815613e-01, -3.94608706e-01, -1.76610100e+00,\n'
 '         2.05681944e+00,  2.40208149e+00, -5.90543985e-01,\n'
 '         8.67396355e-01,  1.84579754e+00, -1.23416603e+00,\n'
 '        -3.75961959e-02,  3.21187806e+00,  1.17800677e+00,\n'
 '        -1.28936052e+00,  5.07283747e-01, -8.26824069e-01,\n'
 '        -1.43082178e+00, -5.02113521e-01, -1.77174419e-01,\n'
 '         1.40594220e+00, -2.17605662e+00, -3.20712507e-01,\n'
 '        -1.46359062e+00, -5.84507942e-01, -9.61524725e-01,\n'
 '        -1.35568440e+00,  2.32626796e-01,  5.15027761e-01,\n'
 '         7.87835836e-01, -1.99053383e+00,  1.23687839e+00,\n'
 '         1.78771341e+00, -1.56007874e+00,  1.04067647e+00,\n'
 '         7.16332793e-01,  2.04908848e+00,  1.17999423e+00,\n'
 '         8.98202658e-01,  1.88844204e+00,  3.80642843e+00,\n'
 '         2.47083688e+00, -4.40711640e-02, -1.69018722e+00,\n'
 '         1.36596859e-01,  1.05566156e+00,  3.58255923e-01,\n'
 '        -2.62007236e+00, -4.80278462e-01,  1.06769159e-01,\n'
 '         1.74320006e+00,  8.34342778e-01,  1.13848984e-01,\n'
 '        -1.47113368e-01,  6.34446084e-01, -7.32594878e-02,\n'
 '         1.79907024e+00, -1.41825199e+00, -3.20940924e+00,\n'
 '         6.63983583e-01, -1.78350937e+00, -1.43733919e+00,\n'
 '         8.35521102e-01, -1.01201497e-01, -1.48704398e+00,\n'
 '         2.36797881e+00,  1.42225182e+00,  1.39083967e-01,\n'
 '         1.18752074e+00,  7.06495762e-01, -3.81542772e-01,\n'
 '         6.07258916e-01, -5.84877133e-01,  2.00699520e+00,\n'
 '        -2.32644272e+00, -8.03909957e-01,  1.22892964e+00,\n'
 '        -2.34321415e-01, -1.68866718e+00,  8.40978026e-01,\n'
 '         7.87612259e-01,  5.52840710e-01,  3.77135217e-01,\n'
 '        -3.79217768e+00, -3.05927801e+00, -2.41424632e+00,\n'
 '        -7.15275407e-02,  4.28627193e-01,  2.03866458e+00,\n'
 '         3.86167377e-01, -1.28378868e+00,  8.25294733e-01,\n'
 '         1.27613693e-01, -1.75554144e+00, -4.37563181e-01,\n'
 '         4.66293544e-02,  5.40793687e-02, -1.59461641e+00,\n'
 '        -2.10440189e-01, -3.09437060e+00, -3.24254203e+00,\n'
 '         2.10536718e+00,  9.50435162e-01, -3.79109907e+00,\n'
 '         1.09206688e+00, -2.40069604e+00, -4.22210813e-01,\n'
 '        -2.74367976e+00, -2.65306950e-01, -5.43354332e-01,\n'
 '         8.56468976e-01, -8.17355037e-01, -8.12762499e-01,\n'
 '         1.58429801e+00, -6.51154220e-01,  3.13628340e+00,\n'
 '        -3.00105429e+00,  1.18751371e+00,  2.18948770e+00,\n'
 '         1.57183909e+00,  1.68031561e+00, -1.15927482e+00,\n'
 '         1.10497320e+00,  2.75193882e+00,  1.91954088e+00,\n'
 '        -1.97899568e+00, -7.00629830e-01,  7.23369598e-01,\n'
 '         1.53327763e+00, -1.81872606e-01,  7.07896471e-01,\n'
 '         7.25568295e-01, -4.71373349e-01,  7.89967895e-01,\n'
 '         1.19752073e+00,  1.78271818e+00, -2.12689948e+00,\n'
 '         1.18024051e+00, -1.64125770e-01,  5.37415862e-01,\n'
 '         1.02378678e+00, -1.23040295e+00, -8.89809549e-01,\n'
 '        -1.68985635e-01,  1.14144146e+00,  7.19877064e-01,\n'
 '         2.05501223e+00, -2.35028386e-01,  3.50235283e-01,\n'
 '        -1.30792093e+00, -9.69463587e-02,  6.12726808e-03,\n'
 '         1.82066298e+00, -2.55157542e+00,  1.37154448e+00,\n'
 '        -5.81800401e-01,  8.46504033e-01, -1.11283040e+00,\n'
 '        -1.77045450e-01,  1.70912695e+00, -6.15063548e-01,\n'
 '        -2.48762667e-02, -6.20808065e-01, -8.89505595e-02,\n'
 '         1.00100660e+00,  2.15166831e+00, -1.46065617e+00,\n'
 '         8.95509720e-01,  1.70034337e+00,  3.63406658e-01,\n'
 '         4.49640900e-01, -1.84546828e+00,  6.76985025e-01,\n'
 '        -2.99528646e+00,  2.94717163e-01,  2.60139346e-01,\n'
 '        -1.01346993e+00, -2.41570997e+00,  2.27227911e-01,\n'
 '         5.15172839e-01, -1.50616622e+00, -1.93735993e+00,\n'
 '        -1.53728819e+00,  1.13642049e+00, -8.34045887e-01,\n'
 '        -3.34371120e-01,  7.94824779e-01,  2.99140549e+00,\n'
 '        -1.19659233e+00, -1.05984569e+00,  1.09615564e+00,\n'
 '        -2.60069758e-01,  3.04746479e-01,  4.18878138e-01,\n'
 '        -1.53152275e+00,  3.69438559e-01, -6.99301958e-01,\n'
 '         2.08096957e+00, -1.51011276e+00, -1.53405189e+00,\n'
 '        -1.14332569e+00,  1.85732305e-01,  5.61913848e-01,\n'
 '        -2.47484517e+00, -1.97206366e+00, -3.07955980e+00,\n'
 '         7.90829539e-01,  7.23297596e-02,  3.39526176e+00,\n'
 '        -8.34340513e-01,  6.33975565e-01,  4.54806536e-01,\n'
 '         8.26269031e-01,  1.87162864e+00, -7.39855290e-01,\n'
 '         1.71526539e+00,  1.95511627e+00, -5.31020105e-01,\n'
 '         8.93894017e-01,  5.50250471e-01,  4.13895667e-01,\n'
 '         7.21438289e-01, -1.35706317e+00,  1.99609339e+00,\n'
 '         2.10255599e+00,  2.26096296e+00,  1.55292499e+00,\n'
 '        -4.62599367e-01, -4.35554951e-01,  8.13912451e-01,\n'
 '         1.70549357e+00, -9.12812710e-01, -3.19926858e-01,\n'
 '         6.05258703e-01, -1.65646625e+00,  1.47925317e-01,\n'
 '         2.15156889e+00,  1.44021749e+00,  1.40420902e+00,\n'
 '        -1.59919012e+00, -1.13457680e+00, -2.58171940e+00,\n'
 '         5.79641700e-01,  8.03632319e-01,  2.01809257e-02,\n'
 '        -2.02413058e+00, -5.20075083e-01,  2.56522358e-01,\n'
 '        -1.17816830e+00, -2.50022709e-01, -2.02383590e+00,\n'
 '         9.81115818e-01,  3.18011582e-01, -2.24129820e+00,\n'
 '        -1.26374006e+00,  4.56891119e-01, -3.15822458e+00,\n'
 '        -4.61628854e-01, -3.28180122e+00,  4.71232414e-01,\n'
 '        -9.44719434e-01, -3.04285884e+00, -1.14201999e+00,\n'
 '        -1.87948003e-01, -3.78410369e-01, -1.48165858e+00,\n'
 '         3.85844558e-01, -1.23525941e+00,  2.45428383e-02,\n'
 '        -6.16447806e-01,  1.59600020e+00,  1.13876319e+00,\n'
 '        -5.37504494e-01,  7.44045556e-01,  1.76587617e+00,\n'
 '         8.66029143e-01, -1.10318102e-01, -2.95942783e-01,\n'
 '        -3.57527733e-02,  1.51708961e+00,  2.13072586e+00,\n'
 '         2.54533982e+00, -1.88797629e+00, -8.59227240e-01,\n'
 '         5.27022123e-01, -1.98894548e+00,  5.61859310e-01,\n'
 '         1.49464869e+00, -1.34936476e+00,  2.72597599e+00,\n'
 '         1.18727946e+00,  5.97321987e-01,  1.11092293e+00,\n'
 '        -1.34954405e+00,  6.96266949e-01,  1.13183975e+00,\n'
 '         1.74919772e+00,  3.42125744e-01,  2.71506280e-01,\n'
 '        -8.06486905e-01, -1.50904381e+00, -1.25415012e-01,\n'
 '        -2.09549531e-01, -1.75093496e+00, -2.38885665e+00,\n'
 '        -9.66843963e-01, -1.61919594e+00, -9.46895003e-01,\n'
 '        -2.23751950e+00, -2.10206270e+00,  6.79231286e-01,\n'
 '        -3.33657801e-01]])')
'test_inceptionnet | batch_shape is: [1]'
'||'
'test_inceptionnet | device is: cpu'
'test_inceptionnet | fw is: torch'
'test_inceptionnet | load_weights is: False'
'layer 1/22 built'
'layer 2/22 built'
'layer 3/22 built'
'layer 4/22 built'
'layer 5/22 built'
'layer 6/22 built'
'layer 7/22 built'
'layer 8/22 built'
'layer 9/22 built'
'layer 10/22 built'
'layer 11/22 built'
'layer 12/22 built'
'layer 13/22 built'
'layer 14/22 built'
'layer 15/22 built'
'layer 17/22 built'
'layer 18/22 built'
'layer 19/22 built'
'layer 20/22 built'
'layer 21/22 built'
'layer 22/22 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/4 built'
'layer 2/4 built'
'layer 3/4 built'
'layer 4/4 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/6 built'
'layer 2/6 built'
'layer 3/6 built'
'layer 4/6 built'
'layer 5/6 built'
'layer 6/6 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'inceptionNet_v3 | building InceptionV3 model | done 1/3'
'input shape is:(1, 224, 224, 3)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 224, 224, 3) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 111, 111, 32) | done 3/3'
'v3 1/23, output shape is:ivy.Shape(1, 111, 111, 32)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 111, 111, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 32) | done 3/3'
'v3 2/23, output shape is:ivy.Shape(1, 109, 109, 32)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 109, 109, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 64) | done 3/3'
'v3 3/23, output shape is:ivy.Shape(1, 109, 109, 64)'
'v3 4/23, output shape is:ivy.Shape(1, 54, 54, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 54, 54, 80) | done 3/3'
'v3 5/23, output shape is:ivy.Shape(1, 54, 54, 80)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 80) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 52, 52, 192) | done 3/3'
'v3 6/23, output shape is:ivy.Shape(1, 52, 52, 192)'
'v3 7/23, output shape is:ivy.Shape(1, 25, 25, 192)'
'input shape is:ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 32) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 32)'
'InceptionA | outputs 20/20'
'v3 8/23, output is:ivy.Shape(1, 25, 25, 256)'
'input shape is:ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'v3 9/23, output shape is:ivy.Shape(1, 25, 25, 288)'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'v3 10/23, output shape is:ivy.Shape(1, 25, 25, 288)'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 384) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 96) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 96)'
'one 20/20, output shape is:ivy.Shape(1, 12, 12, 288)'
'one 20/20'
'v3 11/23, output shape is:ivy.Shape(1, 12, 12, 768)'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'v3 12/23, output shape is:ivy.Shape(1, 12, 12, 768)'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'v3 13/23, output shape is:ivy.Shape(1, 12, 12, 768)'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'v3 14/23, output shape is:ivy.Shape(1, 12, 12, 768)'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'v3 15/23, output shape is:ivy.Shape(1, 12, 12, 768)'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 5, 5, 192)'
'one 7/20, output shape is:ivy.Shape(1, 5, 5, 768)'
'one 20/20'
'v3 17/23, output shape is:ivy.Shape(1, 5, 5, 1280)'
'input shape is:ivy.Shape(1, 5, 5, 1280)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'v3 18/23, output shape is:ivy.Shape(1, 5, 5, 2048)'
'input shape is:ivy.Shape(1, 5, 5, 2048)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'v3 19/23, output shape is:ivy.Shape(1, 5, 5, 2048)'
'Inception3 | input shape to adaptive_avg_pool2d is:ivy.Shape(1, 5, 5, 2048)'
('Inception3 | permuted input shape to adaptive_avg_pool2d is:ivy.Shape(1, '
 '2048, 5, 5)')
'Inception3 | output shape from adaptive_avg_pool2d is:ivy.Shape(1, 2048, 1, 1)'
('Inception3 | permuted output shape from adaptive_avg_pool2d is:ivy.Shape(1, '
 '1, 1, 2048)')
'v3 20/23, avgpool output shape is:ivy.Shape(1, 1, 1, 2048)'
'v3 21/23, dropout output shape is:ivy.Shape(1, 1, 1, 2048)'
'v3 22/23, flatten output shape is:ivy.Shape(1, 2048)'
'fc done 23/23'
('test_inceptionnet | logits is: ivy.array([[ 1.57863516e+04,  1.59339656e+05, '
 '-2.33579344e+05,\n'
 '        -1.21369375e+04,  5.22689312e+05,  6.75379750e+05,\n'
 '        -6.47643375e+05, -5.36454125e+05, -9.55877250e+05,\n'
 '         3.16114719e+05, -4.49737219e+05, -5.37955562e+05,\n'
 '        -5.68005562e+05,  1.51509906e+05,  5.12207281e+05,\n'
 '         5.00782562e+05,  4.62994062e+04, -3.99684562e+05,\n'
 '        -6.66937500e+02, -1.31788750e+05,  2.12170406e+05,\n'
 '         1.93913281e+05,  5.48959250e+05,  1.09884266e+05,\n'
 '         1.94621562e+04,  4.95745875e+05, -6.84028984e+04,\n'
 '         8.88755781e+04,  6.02781750e+05,  4.92939453e+03,\n'
 '         1.47045781e+05,  1.00647812e+04,  3.86755844e+05,\n'
 '        -2.18054469e+05, -2.56840219e+05, -2.96160156e+03,\n'
 '        -2.23779297e+04, -4.94204375e+04,  5.03062062e+05,\n'
 '        -1.49951125e+05, -5.01260625e+05,  1.57630273e+04,\n'
 '         4.45802625e+05,  6.35318188e+05, -3.96268281e+05,\n'
 '        -3.14734875e+05, -2.69087875e+05, -3.77925562e+05,\n'
 '        -1.30164594e+05,  2.26456094e+05, -1.15955930e+05,\n'
 '        -9.50752344e+04,  2.41734531e+05,  1.12019906e+05,\n'
 '        -6.98420000e+04,  1.33874219e+03, -1.40522469e+05,\n'
 '        -7.58028594e+04, -4.91699500e+05,  6.99423625e+05,\n'
 '         1.28957797e+05, -3.00588531e+05,  2.03231516e+05,\n'
 '        -2.96281906e+05,  8.45950812e+05, -3.35089375e+05,\n'
 '        -2.68399625e+05,  4.57577062e+05,  1.29859383e+05,\n'
 '         2.10422938e+05,  1.00133484e+05, -1.98349375e+05,\n'
 '         3.25044938e+05, -6.47072969e+04, -3.53645406e+05,\n'
 '        -3.95781812e+05,  1.77296859e+05,  7.48174875e+05,\n'
 '        -3.85884812e+05, -4.23364438e+05, -5.37522000e+05,\n'
 '        -4.54310375e+05, -2.28182438e+05, -2.02844438e+05,\n'
 '         8.66895391e+04,  8.92705688e+05,  3.51163281e+05,\n'
 '         1.04765477e+05, -2.47885609e+05,  4.48678062e+05,\n'
 '        -3.38320312e+05, -5.29022812e+05, -2.18583984e+04,\n'
 '        -2.89122125e+05,  7.28456875e+04,  3.05994500e+05,\n'
 '        -4.27811188e+05, -7.84710625e+04, -5.49523750e+04,\n'
 '        -1.05343523e+05, -9.56523906e+04,  2.39566500e+05,\n'
 '        -2.07917469e+05, -5.99150000e+04, -2.29330375e+05,\n'
 '        -2.90626844e+05, -1.84931938e+05,  1.56148516e+05,\n'
 '        -2.47812094e+05,  4.83480844e+05,  2.80683219e+05,\n'
 '         1.76415109e+05,  6.44757969e+04, -1.31153375e+05,\n'
 '        -3.15812812e+05,  1.22227070e+05,  4.20019375e+04,\n'
 '        -9.97425625e+04, -1.41879984e+05,  2.49728594e+04,\n'
 '         3.02864531e+04,  8.20113125e+05,  3.06528906e+03,\n'
 '        -3.95770562e+05, -3.50302438e+05,  5.00026812e+05,\n'
 '        -2.93478219e+05, -5.08879281e+05,  6.77201953e+04,\n'
 '        -3.51495375e+05,  4.42272438e+05,  3.83762438e+05,\n'
 '        -1.74554578e+05,  4.68567875e+05, -1.79693547e+05,\n'
 '        -3.45482281e+05,  6.38282375e+05, -5.94214062e+03,\n'
 '        -6.84127031e+04, -3.39930688e+05, -2.03631906e+05,\n'
 '        -1.07312750e+05, -3.17015656e+05, -1.20801609e+05,\n'
 '        -8.32139688e+04, -6.98341938e+05, -2.01273109e+05,\n'
 '        -5.31537875e+05, -1.56028391e+05, -6.46809375e+04,\n'
 '         2.79440062e+05,  7.78465750e+05,  1.29455156e+05,\n'
 '        -3.99288062e+05,  7.87652031e+04, -4.44192094e+05,\n'
 '        -3.06161719e+05,  6.14503312e+05, -5.49921438e+05,\n'
 '        -3.77759000e+05, -6.77740688e+05, -9.76760625e+05,\n'
 '         4.50028938e+05, -1.18605273e+05, -1.13085112e+06,\n'
 '         8.97609062e+04,  2.35830484e+05, -6.27189648e+04,\n'
 '         4.93769688e+05,  2.72037500e+05,  7.95752375e+05,\n'
 '        -1.84868172e+05, -9.67097500e+04, -1.49722031e+05,\n'
 '        -1.50314078e+05,  2.61673188e+05,  1.12713203e+04,\n'
 '         6.71809922e+04, -2.49264844e+05, -2.70094250e+05,\n'
 '         3.00309281e+05,  7.05167188e+04,  2.23921750e+05,\n'
 '         5.21626406e+05, -6.27207109e+04, -6.81841094e+04,\n'
 '        -7.93316250e+05, -8.90189375e+04,  1.10220000e+04,\n'
 '         1.50335219e+05,  2.68592375e+05,  2.97807312e+05,\n'
 '         8.10836375e+05,  4.82608344e+05, -8.63959375e+05,\n'
 '         1.32645031e+05,  4.31804844e+04,  5.79276484e+04,\n'
 '         3.54561562e+05,  6.20461875e+04, -4.76548562e+05,\n'
 '         1.53989047e+05,  4.99782375e+05,  4.42107148e+04,\n'
 '        -4.66739062e+04,  1.20215320e+05,  5.80839438e+05,\n'
 '        -1.48308531e+05,  4.05010438e+05, -2.42864750e+05,\n'
 '        -9.53965156e+04, -3.10406500e+05, -1.64279281e+05,\n'
 '        -2.43275578e+05,  5.66908906e+04, -2.18611375e+05,\n'
 '        -3.86362344e+04, -3.76093750e+04,  3.41186875e+05,\n'
 '        -3.46916438e+05,  5.54701875e+04,  2.85449188e+05,\n'
 '         3.12289469e+05,  5.10127812e+04,  3.06308938e+05,\n'
 '         2.35687344e+05, -5.91627562e+05,  6.09063812e+05,\n'
 '         4.69035781e+05, -2.78411406e+05, -1.84989500e+05,\n'
 '        -1.77755344e+05,  9.38500125e+05,  2.71722812e+04,\n'
 '         2.34184734e+05,  2.55435625e+05, -3.09825281e+05,\n'
 '        -4.41110000e+04,  3.50790938e+04, -5.65800438e+05,\n'
 '        -2.32194469e+05, -2.81615188e+05,  1.62071906e+05,\n'
 '         2.68238812e+05, -5.25482500e+05,  4.97528594e+04,\n'
 '        -3.81605000e+04,  1.67763281e+05,  1.59881609e+05,\n'
 '        -3.82834344e+05, -5.36927938e+05, -6.37040500e+05,\n'
 '        -4.20140875e+05, -3.73497312e+05,  9.95612656e+04,\n'
 '        -6.34151000e+05, -9.01159062e+04, -6.66975562e+05,\n'
 '        -6.31376875e+05,  3.33621125e+05, -2.55608359e+05,\n'
 '         6.75710438e+05,  8.46219219e+04,  2.27387781e+05,\n'
 '         4.42271312e+05, -4.42268125e+05,  2.20345641e+05,\n'
 '         7.03229844e+04,  1.45933906e+05,  1.03528125e+03,\n'
 '        -5.05588688e+05,  1.58445609e+05,  1.67416547e+05,\n'
 '         3.01582625e+05, -4.18674500e+05,  5.44028750e+05,\n'
 '        -7.79920625e+05,  3.81674719e+05,  2.35043578e+05,\n'
 '        -1.76304266e+05, -1.86152906e+05, -7.79261875e+04,\n'
 '        -8.00084453e+04, -1.38320938e+04, -2.64870969e+05,\n'
 '        -2.87731125e+05,  4.63677906e+05, -7.02352375e+05,\n'
 '         1.77550625e+05,  1.19561906e+05, -3.07090625e+05,\n'
 '         6.02675375e+05, -3.85249188e+05,  3.30457375e+05,\n'
 '        -8.45601875e+04, -5.33334648e+04, -5.50162812e+04,\n'
 '        -7.13841062e+05, -6.85781172e+04, -4.82519312e+05,\n'
 '         4.89711531e+05,  4.91165312e+04,  4.39968281e+05,\n'
 '        -1.40476875e+05, -5.53430625e+04, -3.04783188e+05,\n'
 '        -6.70514922e+04, -1.32134141e+05,  6.82017875e+05,\n'
 '        -1.39703922e+05,  1.81724750e+05, -3.77158438e+04,\n'
 '        -3.65560562e+05,  1.84973031e+05, -3.74488500e+05,\n'
 '        -2.18494531e+05,  8.61462500e+05, -2.41431562e+04,\n'
 '         1.08983297e+05,  1.58368297e+05, -3.52300125e+05,\n'
 '         5.50910000e+04,  3.68017250e+05, -4.15281969e+05,\n'
 '         3.16914656e+05,  1.57754688e+05, -2.53098188e+05,\n'
 '         1.78532156e+05,  7.76458828e+04,  2.88798500e+05,\n'
 '        -1.06987578e+05, -4.41740250e+05, -1.08753461e+05,\n'
 '        -5.48482250e+05,  7.55487500e+05, -3.45852312e+05,\n'
 '        -3.56150812e+05, -9.63312656e+04, -8.52331250e+03,\n'
 '        -1.60809906e+05,  1.10612203e+05, -2.19067281e+05,\n'
 '        -2.13984875e+05, -5.54779812e+05, -1.99288547e+05,\n'
 '         5.72083750e+05, -4.36900531e+05, -2.44309969e+05,\n'
 '         5.02824312e+05,  7.89998438e+03,  8.60235688e+05,\n'
 '         1.90563062e+05, -1.84220344e+05,  6.42782938e+05,\n'
 '        -1.42929062e+05, -4.01194250e+05, -1.20321453e+05,\n'
 '         4.31082875e+05, -8.47959375e+05, -4.81731469e+05,\n'
 '        -3.37443500e+05,  1.09855391e+04, -4.18689023e+04,\n'
 '         4.31400188e+05,  3.91096406e+04,  3.23677031e+05,\n'
 '        -5.45621719e+04,  3.46035500e+05,  3.72683344e+05,\n'
 '        -4.90124438e+05,  1.66493438e+05, -4.20238688e+05,\n'
 '         1.02882250e+05,  3.14419531e+05,  3.00252656e+05,\n'
 '        -3.35068594e+05, -2.29247500e+04,  2.82592938e+05,\n'
 '         3.90411062e+05,  2.80323125e+04, -3.45383906e+04,\n'
 '        -8.05660312e+04,  2.70070406e+05,  3.72991750e+05,\n'
 '         3.70727656e+05,  7.81541625e+05, -1.38455188e+05,\n'
 '        -7.09718688e+05,  4.32186062e+05, -6.77116000e+05,\n'
 '        -2.77822344e+05, -5.28719312e+05,  2.31713578e+05,\n'
 '        -2.57359656e+05, -1.51696469e+05,  1.89650172e+05,\n'
 '        -1.02561425e+06, -1.97220953e+05,  2.76183625e+05,\n'
 '        -4.42711250e+05, -9.16071094e+04, -1.40177625e+05,\n'
 '        -3.36192125e+05,  5.88591438e+05,  9.82702500e+05,\n'
 '        -9.46268594e+04, -1.22130688e+05,  2.39027469e+05,\n'
 '         9.79697500e+04,  2.94312156e+05,  6.72742125e+05,\n'
 '         1.04045625e+05,  5.18284688e+05, -1.84598859e+05,\n'
 '         6.20497062e+05, -2.16847125e+05, -1.23167300e+06,\n'
 '        -6.27255375e+05,  5.42405195e+04,  3.25373188e+05,\n'
 '        -6.50859312e+05, -2.50292375e+05,  1.01836297e+05,\n'
 '        -2.92917734e+04, -1.10806425e+06,  6.01218359e+04,\n'
 '        -7.92959500e+05,  5.12126000e+05,  6.67596250e+04,\n'
 '         5.68710312e+05, -1.56336156e+05, -3.66912375e+05,\n'
 '         3.30251688e+05,  5.28315375e+05,  3.48282812e+03,\n'
 '         3.32308312e+05,  3.71169844e+05,  1.84142859e+05,\n'
 '        -2.03614000e+05, -4.71980312e+04,  4.87906750e+05,\n'
 '         1.72040438e+05, -1.57770938e+04,  3.02136906e+05,\n'
 '         3.57803656e+05, -1.55872484e+05,  5.86396438e+05,\n'
 '        -1.95418375e+05, -4.68683625e+05, -1.92257828e+05,\n'
 '        -7.04803875e+05, -2.62531312e+05, -5.97427562e+05,\n'
 '         5.17155062e+05, -2.21792156e+05, -2.54588828e+04,\n'
 '        -3.42205938e+05, -9.51687812e+05,  2.40368781e+05,\n'
 '         6.00523125e+05,  3.87238594e+04, -8.74929375e+05,\n'
 '         5.86875688e+05,  4.93305656e+05, -2.25470234e+04,\n'
 '         7.54199062e+05,  5.98729125e+05, -1.08745062e+05,\n'
 '         1.65538250e+05,  6.56937000e+05, -6.98178125e+03,\n'
 '        -2.65090688e+05,  3.96611000e+05, -7.13921625e+05,\n'
 '         7.76778438e+05,  3.56470125e+05,  6.76265125e+05,\n'
 '         4.72691812e+05,  1.64514125e+05,  7.69029000e+05,\n'
 '        -3.09551562e+05, -8.78741312e+05,  8.19678688e+05,\n'
 '         1.03567344e+05,  3.22223812e+05,  2.72373750e+05,\n'
 '         3.41051500e+05, -4.77953844e+05,  9.28519500e+05,\n'
 '         4.89744844e+05, -6.46898125e+05,  2.90558562e+05,\n'
 '        -1.46180344e+05, -5.73690375e+05,  8.01865781e+04,\n'
 '        -1.33282000e+05, -4.81211719e+04, -3.61612969e+04,\n'
 '         2.22752203e+05,  3.03110469e+05,  1.72766625e+05,\n'
 '        -8.85891000e+05,  4.80364062e+04, -4.74754469e+05,\n'
 '         2.17028359e+05,  8.87550000e+04, -2.08572500e+05,\n'
 '        -1.19863700e+06, -5.00239219e+04,  2.24872688e+05,\n'
 '         7.38842188e+05, -4.49114375e+05,  2.48132875e+05,\n'
 '        -3.62013375e+05, -2.47305641e+05,  2.78169406e+05,\n'
 '         1.10769891e+05, -3.44766406e+05, -2.02745625e+04,\n'
 '        -2.00134922e+04, -1.67756844e+05, -1.93013922e+05,\n'
 '        -2.75338438e+05,  5.10623359e+04, -1.46495484e+05,\n'
 '         2.81859297e+04, -2.57185859e+05, -9.94162969e+04,\n'
 '         4.56729500e+05,  2.45064258e+04, -1.48681250e+05,\n'
 '         6.47590156e+04,  1.38077297e+05,  1.18705031e+05,\n'
 '         3.99697625e+05,  6.90746875e+04,  5.08066094e+04,\n'
 '         4.39616344e+05, -5.61810875e+05,  9.78911719e+04,\n'
 '         7.45154375e+04,  8.91919250e+05,  7.71376625e+05,\n'
 '         5.88849875e+05, -3.75140000e+04, -3.31961531e+05,\n'
 '        -1.78916250e+04,  3.30985188e+05, -7.61299562e+05,\n'
 '        -1.48919547e+05,  2.93932375e+05, -9.05186875e+04,\n'
 '         6.04180125e+05,  6.78129219e+04, -5.21465938e+05,\n'
 '         5.04903750e+05, -6.17280500e+05,  4.48554469e+05,\n'
 '        -1.22883141e+05, -2.27240375e+05, -4.42055000e+04,\n'
 '         2.93620469e+04, -9.80442891e+04,  9.60551562e+04,\n'
 '        -2.70327266e+04, -1.30032609e+05, -4.91182062e+05,\n'
 '        -1.96336500e+05,  3.27624312e+05, -1.58242375e+05,\n'
 '        -4.85383875e+05, -5.94625000e+03,  3.65752344e+03,\n'
 '         2.92129688e+05, -6.51643516e+04, -2.90743906e+05,\n'
 '         2.35125000e+03, -3.23566875e+05,  2.02134812e+05,\n'
 '         1.85240906e+05, -4.34250625e+05, -1.41760031e+05,\n'
 '         1.38530328e+05, -1.42432188e+04,  4.14816594e+05,\n'
 '        -3.49358000e+05, -5.54304625e+05,  4.38473594e+05,\n'
 '         5.06014969e+05,  7.44894938e+05, -1.36832219e+05,\n'
 '        -4.30795531e+05, -8.33536953e+04,  3.28639594e+05,\n'
 '         1.82365312e+05, -2.61960219e+05,  4.97519906e+05,\n'
 '         3.36097969e+05,  1.35106422e+05,  1.96297625e+05,\n'
 '         6.37441125e+05,  7.03106250e+04,  1.40516344e+05,\n'
 '         5.29216438e+05, -1.77242938e+05,  2.18167734e+05,\n'
 '         1.71998984e+05, -5.46920062e+05,  6.56023625e+05,\n'
 '        -1.80751719e+05, -2.73629906e+05,  1.22671656e+05,\n'
 '        -3.93303125e+03,  7.00617875e+05,  3.67385438e+05,\n'
 '         3.84177875e+05, -2.24042344e+05,  2.20756062e+05,\n'
 '        -5.96161250e+05,  2.42706031e+05, -1.62436188e+05,\n'
 '         2.62907781e+05,  2.99676062e+05, -7.93586000e+05,\n'
 '         3.90551531e+05,  5.86007500e+05,  2.22845031e+05,\n'
 '        -3.56745125e+05,  5.77478938e+05,  1.00685617e+05,\n'
 '        -5.42507625e+05, -1.85364219e+05,  3.68569922e+04,\n'
 '         2.15543188e+05, -4.09786562e+05,  5.98195500e+05,\n'
 '         2.22578469e+05,  2.25842062e+05, -1.18106195e+05,\n'
 '         3.18871344e+05,  8.73653672e+04, -1.43039719e+05,\n'
 '        -2.34284734e+05,  6.91618750e+04,  1.78117453e+05,\n'
 '         5.18864625e+05, -1.04686019e+06,  5.03180469e+05,\n'
 '         4.41565625e+04,  6.64807188e+04, -4.34283281e+05,\n'
 '         6.11975500e+05,  2.94824188e+05,  1.65315500e+05,\n'
 '        -3.40489938e+05, -4.64290250e+05,  3.40625781e+05,\n'
 '         4.30050078e+04, -2.77512938e+05,  1.94378281e+05,\n'
 '         5.19717344e+04,  5.39332688e+05, -3.71229938e+05,\n'
 '         3.64967312e+05,  2.10201719e+05,  6.10670156e+04,\n'
 '        -7.95644375e+05,  5.62034062e+05, -1.14993750e+04,\n'
 '        -1.00268125e+05,  1.11156388e+06,  8.03933062e+05,\n'
 '        -1.83424375e+04, -7.82139375e+05, -4.71113281e+05,\n'
 '         1.77324344e+05,  4.84527188e+04, -2.39320406e+05,\n'
 '         1.43168594e+05,  8.58937188e+04,  2.56044203e+05,\n'
 '        -9.65355625e+04, -2.20973938e+05,  2.57026562e+05,\n'
 '        -1.15297508e+05, -6.82614750e+05,  7.10332344e+04,\n'
 '         1.18145641e+05,  1.18225000e+04, -3.18194562e+05,\n'
 '        -1.83697344e+04,  5.93678250e+05,  5.32362938e+05,\n'
 '         2.07095406e+05, -5.99874883e+04,  2.00017375e+05,\n'
 '         1.37612500e+03,  2.73016750e+05, -5.21206344e+05,\n'
 '        -9.40540625e+03, -8.79343000e+05,  4.31758000e+05,\n'
 '         3.56801562e+05,  4.80798562e+05,  1.41678094e+05,\n'
 '        -4.97579062e+04,  3.00289000e+05,  1.17042062e+05,\n'
 '         2.13557250e+05, -2.76407188e+05,  2.55179953e+05,\n'
 '        -2.84806625e+05, -1.34195984e+05,  7.46614219e+04,\n'
 '         4.77393969e+05,  3.31148219e+05, -4.10562281e+05,\n'
 '         3.14062500e+05, -1.00555312e+05,  9.70703250e+05,\n'
 '        -1.00172180e+05,  3.19747812e+05,  4.60814219e+05,\n'
 '         1.90220938e+04, -2.46474312e+05, -4.57573000e+05,\n'
 '         1.28818125e+04, -6.83013438e+04,  3.10929688e+02,\n'
 '        -9.26575812e+05,  1.35617078e+05, -1.83438469e+05,\n'
 '        -2.32095531e+05,  9.71204844e+04,  2.79867625e+05,\n'
 '        -3.37233969e+05, -2.68201375e+05, -8.55008828e+04,\n'
 '        -5.20110938e+04,  1.47505641e+05, -9.06203906e+04,\n'
 '         3.25180188e+05, -9.49014062e+04,  3.14832938e+05,\n'
 '         8.41840625e+04, -1.66125469e+05,  5.35371812e+05,\n'
 '         1.51728031e+05,  5.69686062e+05,  2.84031125e+05,\n'
 '        -1.44760469e+05,  7.81815000e+04, -1.20758031e+05,\n'
 '        -3.52178875e+05,  2.51017531e+05,  4.19495812e+05,\n'
 '         2.25980031e+05,  2.04322266e+03,  4.80693375e+05,\n'
 '        -5.66323125e+04, -9.78121484e+03,  2.17639805e+04,\n'
 '        -3.94140938e+05, -1.48236375e+05,  4.13473750e+04,\n'
 '         1.08843602e+05,  8.23044875e+05,  6.26399250e+05,\n'
 '         1.70801641e+04,  4.82172188e+04, -2.41696781e+05,\n'
 '         1.31090281e+05,  5.38962062e+05, -7.93303125e+04,\n'
 '        -9.44242250e+05, -4.40189469e+05, -7.76516562e+05,\n'
 '         1.00744828e+05, -3.13278594e+04,  1.72620719e+05,\n'
 '         7.38788906e+04, -3.24182062e+05, -6.63979938e+05,\n'
 '        -2.80478125e+05,  7.72177750e+05,  8.30632750e+05,\n'
 '        -2.04281719e+05, -4.06372562e+05,  1.76200125e+05,\n'
 '        -2.61228375e+05,  2.48577250e+05, -9.52044062e+04,\n'
 '        -4.12932031e+04, -5.05520312e+03,  4.34829531e+04,\n'
 '         5.78626016e+04, -2.61678297e+05,  1.12137461e+05,\n'
 '        -1.43467375e+05,  1.62029656e+05, -2.85731438e+05,\n'
 '        -3.64046781e+05,  1.80259297e+05,  7.30264750e+05,\n'
 '         2.42242391e+05,  5.89532812e+05, -9.71595750e+05,\n'
 '         3.36920719e+05, -1.55153297e+05,  2.03314688e+05,\n'
 '        -4.60092438e+05,  5.78065375e+05,  2.37415688e+05,\n'
 '         7.10863500e+05, -9.47710250e+05, -4.89276875e+04,\n'
 '         2.74692688e+05, -1.01241281e+05,  1.07993312e+05,\n'
 '        -2.75130875e+05, -3.35310625e+05,  4.42945438e+05,\n'
 '        -7.68411125e+05,  2.40291781e+05, -5.04989406e+05,\n'
 '         8.63493750e+03, -2.87601938e+05,  6.32212438e+05,\n'
 '        -4.25112688e+05,  6.04815469e+04, -2.94903688e+05,\n'
 '        -6.10188875e+05,  1.25846609e+05, -4.07586906e+05,\n'
 '        -1.45985641e+05, -2.47562906e+05,  2.39874188e+05,\n'
 '         3.85053562e+05,  1.63086641e+05, -4.07235438e+05,\n'
 '        -7.53016562e+05, -1.56360922e+05,  8.26196000e+05,\n'
 '         8.10478938e+05,  3.59648844e+05,  3.07918750e+05,\n'
 '        -2.30691688e+05,  1.80362070e+04, -2.49748516e+05,\n'
 '        -5.00879188e+05, -9.73058438e+04, -8.83181250e+03,\n'
 '        -3.61607688e+05, -8.15277656e+04,  1.30912195e+05,\n'
 '        -5.65937375e+05, -1.35401781e+05,  1.95489062e+05,\n'
 '         5.78561625e+05,  3.75480062e+05,  7.46903125e+04,\n'
 '         2.35981750e+05,  1.94887812e+04, -7.69565750e+05,\n'
 '         7.35921125e+05, -2.36465734e+05,  4.28780156e+05,\n'
 '        -3.36715250e+05,  1.21007906e+05,  1.64289141e+05,\n'
 '        -3.69359062e+05,  7.20292500e+05,  4.72523219e+05,\n'
 '         1.10885273e+04,  9.97437250e+05, -2.09523219e+05,\n'
 '        -3.10439125e+05,  4.11564438e+05, -2.86564141e+04,\n'
 '        -2.66217688e+05, -1.50966266e+05,  5.69477125e+05,\n'
 '         3.09448531e+05, -2.70175664e+04,  4.01475969e+05,\n'
 '        -3.98162188e+05, -1.28357961e+05, -4.45639156e+05,\n'
 '        -6.40710312e+05, -3.62762500e+03, -7.18169000e+05,\n'
 '         1.41027328e+05, -1.06270148e+05, -7.36960438e+05,\n'
 '         1.24299938e+05, -2.32703359e+05, -4.20672188e+04,\n'
 '        -4.40736625e+05, -7.37102625e+05,  9.91088438e+04,\n'
 '        -3.04374875e+05, -1.01759375e+05, -2.47588875e+05,\n'
 '        -9.27226875e+04,  3.46450625e+04,  3.67221938e+05,\n'
 '        -3.47303969e+05, -3.76179469e+05, -3.67368344e+05,\n'
 '        -5.58778906e+04,  1.15651984e+05,  1.17552391e+05,\n'
 '        -6.66288984e+04, -3.36757312e+05, -5.99280625e+04,\n'
 '        -3.95500125e+05, -1.27786781e+05, -3.16608125e+05,\n'
 '        -9.02444875e+05, -3.87453688e+05, -4.10513562e+05,\n'
 '         5.81541312e+05,  1.78534375e+04,  1.22342766e+05,\n'
 '         3.83114609e+04, -1.85498938e+05, -4.70762875e+05,\n'
 '         3.90215781e+05, -1.94647578e+05, -1.19252625e+05,\n'
 '        -5.87399688e+04, -2.80594438e+05,  3.45616312e+05,\n'
 '        -1.64482500e+04,  2.36902125e+05, -1.55153234e+05,\n'
 '        -8.44246812e+05,  4.71702938e+05, -1.75050844e+05,\n'
 '         3.32152656e+04, -3.62047719e+05,  2.39445391e+05,\n'
 '         1.26153297e+05,  5.34896688e+05, -5.47279688e+04,\n'
 '        -9.45758750e+04, -2.15416500e+05, -3.65879531e+04,\n'
 '         1.47449359e+05, -1.92837656e+05, -4.34767375e+05,\n'
 '        -3.50283688e+05, -1.72557469e+05,  2.01376500e+05,\n'
 '         2.63639250e+05, -5.35248875e+05, -6.05119438e+05,\n'
 '         2.28188438e+05, -9.07494531e+04, -3.35045344e+05,\n'
 '        -3.76070312e+05, -3.87102375e+05,  3.11739938e+05,\n'
 '         1.00405742e+05,  1.79123250e+05, -1.11244922e+04,\n'
 '         3.01044609e+04, -2.26437344e+05, -7.84116625e+05,\n'
 '        -4.50628656e+05, -7.10281062e+05, -1.51998438e+03,\n'
 '        -1.98670375e+05,  2.08403344e+05,  3.19838500e+05,\n'
 '         2.32719391e+05,  1.61484078e+05, -5.14007156e+05,\n'
 '        -6.54569438e+05, -1.13084688e+05,  1.12421102e+05,\n'
 '        -3.76605469e+04, -2.31808453e+05,  9.60687812e+04,\n'
 '        -2.95471094e+04, -2.13585750e+05, -6.23393125e+05,\n'
 '         7.15606125e+05, -1.31951719e+05, -4.78637875e+05,\n'
 '         2.11044422e+05, -1.74289953e+05, -2.26357969e+04,\n'
 '        -2.73292938e+05, -1.21786961e+05,  4.77686500e+05,\n'
 '        -1.08548898e+05,  5.33139750e+05,  2.57917438e+05,\n'
 '         1.65820500e+05]])')
'test_inceptionnet | batch_shape is: [1]'
'||'
'test_inceptionnet | device is: cpu'
'test_inceptionnet | fw is: torch'
'test_inceptionnet | load_weights is: True'
'layer 1/22 built'
'layer 2/22 built'
'layer 3/22 built'
'layer 4/22 built'
'layer 5/22 built'
'layer 6/22 built'
'layer 7/22 built'
'layer 8/22 built'
'layer 9/22 built'
'layer 10/22 built'
'layer 11/22 built'
'layer 12/22 built'
'layer 13/22 built'
'layer 14/22 built'
'layer 15/22 built'
'layer 17/22 built'
'layer 18/22 built'
'layer 19/22 built'
'layer 20/22 built'
'layer 21/22 built'
'layer 22/22 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/4 built'
'layer 2/4 built'
'layer 3/4 built'
'layer 4/4 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/6 built'
'layer 2/6 built'
'layer 3/6 built'
'layer 4/6 built'
'layer 5/6 built'
'layer 6/6 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'inceptionNet_v3 | building InceptionV3 model | done 1/3'
'inceptionNet_v3 | clearning pretrained weights | done 2/3'
'inceptionNet_v3 | loading pretrained weights | done 3/3'
'input shape is:(1, 224, 224, 3)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 224, 224, 3) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 111, 111, 32) | done 3/3'
'v3 1/23, output shape is:ivy.Shape(1, 111, 111, 32)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 111, 111, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 32) | done 3/3'
'v3 2/23, output shape is:ivy.Shape(1, 109, 109, 32)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 109, 109, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 64) | done 3/3'
'v3 3/23, output shape is:ivy.Shape(1, 109, 109, 64)'
'v3 4/23, output shape is:ivy.Shape(1, 54, 54, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 54, 54, 80) | done 3/3'
'v3 5/23, output shape is:ivy.Shape(1, 54, 54, 80)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 80) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 52, 52, 192) | done 3/3'
'v3 6/23, output shape is:ivy.Shape(1, 52, 52, 192)'
'v3 7/23, output shape is:ivy.Shape(1, 25, 25, 192)'
'input shape is:ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 32) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 32)'
'InceptionA | outputs 20/20'
'v3 8/23, output is:ivy.Shape(1, 25, 25, 256)'
'input shape is:ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'v3 9/23, output shape is:ivy.Shape(1, 25, 25, 288)'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'v3 10/23, output shape is:ivy.Shape(1, 25, 25, 288)'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 384) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 96) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 96)'
'one 20/20, output shape is:ivy.Shape(1, 12, 12, 288)'
'one 20/20'
'v3 11/23, output shape is:ivy.Shape(1, 12, 12, 768)'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'v3 12/23, output shape is:ivy.Shape(1, 12, 12, 768)'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'v3 13/23, output shape is:ivy.Shape(1, 12, 12, 768)'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'v3 14/23, output shape is:ivy.Shape(1, 12, 12, 768)'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'v3 15/23, output shape is:ivy.Shape(1, 12, 12, 768)'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 5, 5, 192)'
'one 7/20, output shape is:ivy.Shape(1, 5, 5, 768)'
'one 20/20'
'v3 17/23, output shape is:ivy.Shape(1, 5, 5, 1280)'
'input shape is:ivy.Shape(1, 5, 5, 1280)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'v3 18/23, output shape is:ivy.Shape(1, 5, 5, 2048)'
'input shape is:ivy.Shape(1, 5, 5, 2048)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'v3 19/23, output shape is:ivy.Shape(1, 5, 5, 2048)'
'Inception3 | input shape to adaptive_avg_pool2d is:ivy.Shape(1, 5, 5, 2048)'
('Inception3 | permuted input shape to adaptive_avg_pool2d is:ivy.Shape(1, '
 '2048, 5, 5)')
'Inception3 | output shape from adaptive_avg_pool2d is:ivy.Shape(1, 2048, 1, 1)'
('Inception3 | permuted output shape from adaptive_avg_pool2d is:ivy.Shape(1, '
 '1, 1, 2048)')
'v3 20/23, avgpool output shape is:ivy.Shape(1, 1, 1, 2048)'
'v3 21/23, dropout output shape is:ivy.Shape(1, 1, 1, 2048)'
'v3 22/23, flatten output shape is:ivy.Shape(1, 2048)'
'fc done 23/23'
('test_inceptionnet | logits is: ivy.array([[ 1.12633383e+00, '
 '-1.00923657e+00,  2.24370241e-01,\n'
 '         8.88615966e-01,  2.04041624e+00,  2.06651759e+00,\n'
 '         4.44947600e-01, -2.17132282e+00, -1.27759147e+00,\n'
 '         6.29327893e-01,  7.45705843e-01,  2.56588936e-01,\n'
 '         5.17064452e-01, -1.21758997e+00, -4.89358127e-01,\n'
 '         2.79451108e+00,  3.06434095e-01, -1.23646307e+00,\n'
 '        -1.54931462e+00, -1.52171063e+00, -2.12869191e+00,\n'
 '        -5.07764399e-01,  7.65123963e-01,  1.80740094e+00,\n'
 '         1.63933420e+00, -1.23997375e-01, -7.70689547e-02,\n'
 '        -8.57020259e-01, -8.34204316e-01,  2.51525998e-01,\n'
 '         1.47108519e+00,  4.45263386e-01, -1.36756349e+00,\n'
 '         4.46779788e-01, -1.04350543e+00,  1.07146466e+00,\n'
 '         2.63844967e+00, -1.08164120e+00,  1.09467208e+00,\n'
 '        -9.26150680e-01, -8.36935520e-01, -1.03928935e+00,\n'
 '        -6.56469822e-01, -1.56574631e+00, -1.96417719e-01,\n'
 '        -6.02642059e-01, -3.00456673e-01, -4.96529996e-01,\n'
 '        -1.96842301e+00,  4.14470017e-01, -1.85568821e+00,\n'
 '         1.27262497e+00, -2.54527926e-01,  2.40517521e+00,\n'
 '         7.64186978e-02, -5.35834134e-02,  2.37527549e-01,\n'
 '        -1.13144606e-01,  1.82873964e-01, -1.83762819e-01,\n'
 '        -5.78639627e-01, -3.66829574e-01,  1.02024353e+00,\n'
 '        -3.47118497e-01, -2.60239065e-01,  6.83907390e-01,\n'
 '         5.49805164e-01, -8.90687466e-01,  5.07041931e-01,\n'
 '         5.12669206e-01,  5.75964630e-01, -2.12707567e+00,\n'
 '         1.14389622e+00,  8.39312434e-01,  1.15314877e+00,\n'
 '        -1.08753431e+00,  6.14653230e-02, -3.39266229e+00,\n'
 '         6.75343871e-02,  9.20417249e-01, -4.26686287e-01,\n'
 '        -1.60722279e+00, -2.07856327e-01,  7.62848198e-01,\n'
 '        -1.35466504e+00, -3.57254243e+00,  1.24360174e-01,\n'
 '        -1.04391694e+00,  8.93024206e-01,  2.19640303e+00,\n'
 '        -2.67497092e-01, -1.18440628e+00, -6.53444648e-01,\n'
 '        -1.81967616e-01,  2.41177678e-02, -7.31716812e-01,\n'
 '        -3.97047728e-01, -4.19236898e-01, -2.96324998e-01,\n'
 '         1.42188180e+00,  2.13067007e+00,  7.06869736e-02,\n'
 '        -1.46538794e-01,  1.85364294e+00, -1.63469565e+00,\n'
 '        -3.83120090e-01, -2.23157108e-02,  1.18811333e+00,\n'
 '         1.08311570e+00,  1.85939240e+00,  7.96262145e-01,\n'
 '        -1.93361056e+00,  9.81077671e-01, -1.00902426e+00,\n'
 '         1.84202567e-01,  1.72463632e+00, -3.12322229e-01,\n'
 '         1.99091232e+00,  5.08951843e-01,  1.24160647e+00,\n'
 '        -6.66732550e-01,  3.90616655e-01,  3.18082839e-01,\n'
 '         2.58861780e-01, -9.41967070e-01,  2.59381592e-01,\n'
 '        -5.82049370e-01, -1.71862400e+00, -6.63208723e-01,\n'
 '         8.40719938e-01,  7.47673690e-01, -1.68735778e+00,\n'
 '         2.21259570e+00,  2.06577325e+00, -8.55642974e-01,\n'
 '        -2.47211838e+00, -2.69923270e-01, -2.13541460e+00,\n'
 '        -5.29105008e-01,  4.84516501e-01, -4.75146389e+00,\n'
 '        -1.22895682e+00, -2.59126163e+00, -1.22361255e+00,\n'
 '         3.12958538e-01,  1.92980087e+00, -7.69857883e-01,\n'
 '         1.55781555e+00,  3.62227249e+00,  9.86194372e-01,\n'
 '         3.17466879e+00, -1.49719036e+00, -7.52589107e-01,\n'
 '        -2.56048966e+00, -3.61767316e+00, -2.63469267e+00,\n'
 '        -1.65897715e+00, -2.34526300e+00, -1.74676931e+00,\n'
 '        -1.01879489e+00, -4.63589847e-01, -7.58419275e-01,\n'
 '        -1.87648821e+00, -2.34570414e-01, -2.43148065e+00,\n'
 '        -1.06882596e+00, -1.76061547e+00, -1.66373646e+00,\n'
 '         1.36939847e+00, -3.21012497e+00,  6.63780391e-01,\n'
 '        -8.08596253e-01, -8.67950261e-01,  5.15831530e-01,\n'
 '        -1.34840965e+00, -2.56018448e+00, -3.23110414e+00,\n'
 '        -6.43050253e-01, -9.29303825e-01,  3.71321529e-01,\n'
 '         9.28859949e-01,  3.97989184e-01, -4.90218401e-02,\n'
 '         1.88347149e+00, -1.59563005e+00, -2.82918096e-01,\n'
 '        -9.34910715e-01, -6.84278727e-01, -2.70554960e-01,\n'
 '        -3.61595482e-01,  8.96175206e-02, -5.45278490e-01,\n'
 '        -1.11065626e+00,  7.37125099e-01, -1.87392795e+00,\n'
 '        -4.33738291e-01,  4.33167666e-01,  2.20196152e+00,\n'
 '        -8.40596914e-01,  1.76961052e+00, -2.55847931e-01,\n'
 '        -1.81110442e+00, -2.35948145e-01,  9.48846221e-01,\n'
 '        -1.12102914e+00,  3.53420496e+00,  2.87452340e+00,\n'
 '        -8.41918170e-01,  1.63692045e+00,  8.25866461e-02,\n'
 '        -2.60539150e+00,  4.16416585e-01, -2.32328653e+00,\n'
 '        -6.61621913e-02,  2.50090361e+00, -1.29888785e+00,\n'
 '        -4.88075882e-01, -1.12987948e+00, -1.39296800e-01,\n'
 '         6.23066187e-01,  8.95542324e-01,  2.08073640e+00,\n'
 '        -7.27004632e-02, -9.13509250e-01, -6.12577438e-01,\n'
 '        -2.67119432e+00, -1.32416809e+00, -2.21978202e-01,\n'
 '         3.38445544e-01, -2.23560119e+00, -3.57968760e+00,\n'
 '        -1.38392985e+00,  4.60331738e-01,  6.90592408e-01,\n'
 '        -7.54910827e-01, -6.93627417e-01,  4.05386627e-01,\n'
 '         6.37433171e-01, -9.52864885e-01, -1.00917935e-01,\n'
 '         1.52449280e-01, -5.07920504e-01,  9.50505555e-01,\n'
 '        -7.38722682e-02, -1.10647917e-01,  3.03377867e-01,\n'
 '         1.68410957e+00, -1.96373343e+00,  1.20066667e+00,\n'
 '        -1.64096403e+00, -3.35311627e+00, -1.20805764e+00,\n'
 '        -4.72173542e-01, -1.18203640e+00, -2.93949318e+00,\n'
 '        -2.36846209e+00,  1.96788168e+00, -1.56381488e+00,\n'
 '        -2.80664086e+00, -2.20397234e+00, -1.10458195e+00,\n'
 '        -2.84558463e+00, -2.94450879e+00, -1.93647027e+00,\n'
 '        -7.66526461e-01, -1.25585884e-01, -1.36506629e+00,\n'
 '         9.04655993e-01,  7.83830226e-01, -4.04500103e+00,\n'
 '        -4.11480427e+00, -3.18709946e+00, -1.46179712e+00,\n'
 '        -1.54911876e+00, -1.77042747e+00, -1.34263408e+00,\n'
 '        -1.02704072e+00, -2.76057959e+00, -1.73701763e+00,\n'
 '        -1.55510938e+00, -1.94300726e-01,  1.93115654e+01,\n'
 '         2.07106895e+01,  1.75655103e+00,  2.42867327e+00,\n'
 '         1.34389830e+01,  1.40830553e+00,  5.41200829e+00,\n'
 '         1.51890683e+00,  1.46661317e+00,  1.26415157e+00,\n'
 '         6.86998248e-01,  5.65688133e+00, -1.35011911e+00,\n'
 '        -2.72318393e-01,  7.76793718e-01, -1.56627625e-01,\n'
 '        -7.75899589e-02,  1.84228289e+00,  1.82165444e+00,\n'
 '         2.97200739e-01,  1.56408501e+00,  2.18484878e+00,\n'
 '         3.35456491e+00,  4.36484486e-01, -6.11665010e-01,\n'
 '         1.01782286e+00,  1.72149110e+00,  2.08966208e+00,\n'
 '        -2.90564328e-01, -6.28739178e-01,  1.76785254e+00,\n'
 '        -9.08623993e-01,  1.91608965e-02, -1.53141653e+00,\n'
 '         1.22823667e+00,  3.21080041e+00,  1.58602595e+00,\n'
 '         1.07870996e-02, -1.35013104e-01, -2.40934908e-01,\n'
 '         1.01731753e+00,  1.25264025e+00,  8.83427262e-01,\n'
 '         6.23979926e-01,  8.61851335e-01, -1.48637310e-01,\n'
 '        -9.46503460e-01, -1.31758606e+00,  5.55134296e-01,\n'
 '         1.61845529e+00, -9.76761997e-01, -2.54365295e-01,\n'
 '        -2.14399409e+00, -8.25167179e-01,  1.26091540e+00,\n'
 '        -1.61892426e+00, -9.57533419e-02, -6.42061174e-01,\n'
 '        -1.78812191e-01,  1.20371425e+00,  1.50813711e+00,\n'
 '         3.39517862e-01, -1.78592682e+00,  7.82915473e-01,\n'
 '         1.85937786e+00,  1.97835624e+00,  2.99352765e-01,\n'
 '         1.11376548e+00, -2.64170557e-01, -6.64840460e-01,\n'
 '        -1.83391035e-01, -1.84028238e-01, -2.91121602e-01,\n'
 '        -2.15361595e+00, -9.76588190e-01, -2.29284310e+00,\n'
 '         6.13172233e-01,  8.69802058e-01, -5.90186417e-01,\n'
 '        -2.67501771e-01, -2.21618962e+00, -1.88982856e+00,\n'
 '        -7.09447145e-01, -1.41281992e-01, -7.33394265e-01,\n'
 '        -1.52859998e+00, -1.49506843e+00, -4.98419583e-01,\n'
 '         4.33323771e-01, -1.04752803e+00, -2.43144083e+00,\n'
 '        -2.42761716e-01, -1.02269220e+00, -4.17120934e-01,\n'
 '        -8.94495964e-01,  1.95424333e-01,  6.98369980e-01,\n'
 '        -2.40784359e+00, -2.10672319e-01, -2.31667519e+00,\n'
 '        -1.62115884e+00, -3.16953063e-01, -3.12274173e-02,\n'
 '         5.54706812e-01,  5.65102279e-01,  8.32506776e-01,\n'
 '         1.00118673e+00, -1.02494299e+00,  2.50030661e+00,\n'
 '        -6.12045526e-01,  2.24733210e+00,  1.00457704e+00,\n'
 '         5.04345834e-01,  3.36602950e+00,  1.61741459e+00,\n'
 '         1.91464710e+00,  4.25808728e-02, -6.25038385e-01,\n'
 '        -1.09591317e+00,  8.68386030e-01, -4.71232921e-01,\n'
 '         4.47744846e-01, -8.49927068e-02,  1.51424837e+00,\n'
 '         2.16310883e+00, -3.38440490e+00, -3.20455998e-01,\n'
 '         1.24675655e+00, -2.38447547e+00,  3.53917777e-01,\n'
 '        -2.84847188e+00, -3.41458797e+00, -2.03876066e+00,\n'
 '         1.14723754e+00, -2.55935478e+00,  1.31126904e+00,\n'
 '         1.39929676e+00, -1.05093336e+00, -6.22451544e-01,\n'
 '         7.94200301e-01,  1.16087520e+00,  2.10364968e-01,\n'
 '        -2.91744494e+00, -1.75993228e+00, -1.61883378e+00,\n'
 '         1.12483072e+00, -3.39000177e+00,  3.79137576e-01,\n'
 '        -3.16763312e-01, -9.80669022e-01, -1.01619613e+00,\n'
 '         7.66770005e-01,  5.89185953e-02, -2.06202030e+00,\n'
 '         1.06431615e+00, -1.87608600e+00,  4.51613665e-01,\n'
 '         1.60906470e+00,  4.15807992e-01, -1.25455189e+00,\n'
 '        -1.24744642e+00, -9.01826143e-01, -9.78609443e-01,\n'
 '         2.46368632e-01, -9.55198586e-01, -1.71359539e+00,\n'
 '         1.12608135e-01, -3.85213971e-01,  2.11758167e-03,\n'
 '         9.27160382e-01,  1.70291770e+00,  1.03677344e+00,\n'
 '         1.79591763e+00,  9.20746684e-01,  8.53836179e-01,\n'
 '         3.63189280e-01,  2.08175683e+00,  1.97072402e-02,\n'
 '        -6.24260902e-01, -8.69830489e-01, -7.88380504e-01,\n'
 '         1.17489398e+00, -7.79735029e-01,  2.73014069e+00,\n'
 '         9.13817525e-01, -1.78464556e+00,  1.20755625e+00,\n'
 '        -1.84211826e+00,  1.68056274e+00, -2.06040367e-01,\n'
 '         8.31142604e-01,  2.31926069e-01, -7.41687954e-01,\n'
 '         1.14278340e+00,  1.14696288e+00, -2.19565868e-01,\n'
 '         6.62613511e-01,  4.30689383e+00,  2.11552858e+00,\n'
 '        -1.62817717e+00, -6.08274519e-01,  1.09850369e-01,\n'
 '        -6.70410156e-01,  3.54483306e-01, -1.36325407e+00,\n'
 '         4.43217933e-01, -1.94156814e+00, -6.14898026e-01,\n'
 '         4.23961937e-01, -2.24394846e+00,  8.89441669e-01,\n'
 '        -1.25106144e+00, -4.12767827e-02,  2.82706886e-01,\n'
 '        -1.83559108e+00, -1.00573015e+00, -1.43958271e+00,\n'
 '        -8.70329499e-01, -1.60897958e+00, -9.76197958e-01,\n'
 '        -9.47523594e-01, -3.46851647e-01,  3.13308001e-01,\n'
 '        -3.31146479e-01, -2.80479312e+00,  5.60366511e-01,\n'
 '         1.53384232e+00,  2.15772390e-01, -1.37109089e+00,\n'
 '        -6.41299605e-01, -2.28901744e-01, -1.06871879e+00,\n'
 '         2.60797620e-01,  6.46486938e-01,  3.03522646e-01,\n'
 '        -1.10811937e+00, -3.50287199e-01,  1.65337420e+00,\n'
 '         2.85573077e+00,  5.39977789e-01,  8.68567586e-01,\n'
 '         1.93137750e-02, -1.32302201e+00, -6.01704240e-01,\n'
 '         6.50253534e-01, -2.84606576e-01,  3.93299699e-01,\n'
 '         2.93138027e+00, -1.32819188e+00, -1.48658693e+00,\n'
 '         5.53360283e-01,  1.21822131e+00, -1.29443002e+00,\n'
 '         4.67435211e-01,  1.51335120e+00,  2.19042301e-02,\n'
 '        -2.42847157e+00, -1.27665269e+00,  1.89358020e+00,\n'
 '         3.80086422e-01, -5.37878394e-01, -2.32801259e-01,\n'
 '         3.43425131e+00, -4.03031230e-01, -1.35996413e+00,\n'
 '         1.40054405e-01, -1.74613535e+00,  7.07309961e-01,\n'
 '        -1.23892736e+00,  6.60129130e-01,  3.07249516e-01,\n'
 '         2.48284435e+00,  1.08129054e-01,  2.26955676e+00,\n'
 '         3.99542451e-01, -2.19991565e+00, -7.19880581e-01,\n'
 '        -9.19211090e-01, -3.23514700e-01,  6.54338837e-01,\n'
 '         7.16372430e-01,  1.41185069e+00,  3.98938864e-01,\n'
 '        -2.63250053e-01, -7.98592925e-01,  1.40076017e+00,\n'
 '         4.75078881e-01, -1.29536438e+00,  5.73610425e-01,\n'
 '         1.38389552e+00, -4.34375852e-01, -1.40650845e+00,\n'
 '        -1.01467860e+00, -5.05095422e-02, -2.14593291e+00,\n'
 '         1.04850292e+00,  1.22876561e+00,  5.69833040e-01,\n'
 '        -5.85284352e-01, -6.55803829e-02,  5.43201208e-01,\n'
 '         5.44574797e-01, -6.97687447e-01,  8.08985293e-01,\n'
 '        -1.43652654e+00,  8.24679673e-01,  3.83254838e+00,\n'
 '         1.40252709e-01,  2.06122518e+00, -1.24525130e-02,\n'
 '        -3.70158172e+00,  1.14621544e+00,  1.02409780e+00,\n'
 '        -1.23834938e-01,  1.43239701e+00,  2.66238123e-01,\n'
 '        -6.43937647e-01, -8.16874087e-01,  2.92565286e-01,\n'
 '        -6.47012651e-01, -2.86497068e+00, -1.76741552e+00,\n'
 '        -5.78313887e-01, -7.94439316e-01, -7.17511773e-01,\n'
 '         2.96416879e-03, -1.66186273e-01, -1.45631301e+00,\n'
 '        -1.77968347e+00, -1.10025847e+00,  1.81019163e+00,\n'
 '        -5.12457967e-01, -8.37588906e-01,  3.74349296e-01,\n'
 '        -3.41543347e-01,  8.97729546e-02, -3.56157708e+00,\n'
 '         1.57124782e+00, -7.97719359e-01,  1.54851079e+00,\n'
 '        -1.51414469e-01,  1.84388781e+00, -5.17033458e-01,\n'
 '        -8.97101879e-01,  2.65355754e+00, -2.62353993e+00,\n'
 '        -1.27742219e+00, -1.33710146e+00, -1.78858376e+00,\n'
 '         4.44770455e-02, -1.27645779e+00,  5.76405883e-01,\n'
 '         1.66734958e+00,  1.46312511e+00,  7.78043568e-01,\n'
 '        -1.65219510e+00, -5.99967241e-01,  1.29913414e+00,\n'
 '        -5.10343164e-03,  1.20559025e+00, -2.06716850e-01,\n'
 '        -2.16827959e-01,  2.62515974e+00, -5.83079219e-01,\n'
 '        -9.15728331e-01, -8.62920165e-01, -5.19140661e-01,\n'
 '         5.38866460e-01, -4.77941275e-01,  1.86248660e-01,\n'
 '         1.12508941e+00,  9.31768775e-01, -3.25199699e+00,\n'
 '        -1.54405564e-01, -1.32333767e+00, -4.45811868e-01,\n'
 '         1.44801605e+00,  1.69260550e+00,  1.46065819e+00,\n'
 '         1.87204921e+00,  1.25514793e+00,  8.99531543e-02,\n'
 '         6.68508410e-01,  4.17751908e-01, -3.80892008e-01,\n'
 '         1.01037157e+00, -1.89634156e+00, -1.79081714e+00,\n'
 '        -1.22037506e+00,  1.67400312e+00,  2.36541128e+00,\n'
 '        -8.00581157e-01,  2.75374913e+00,  8.73181462e-01,\n'
 '         9.13212538e-01,  1.09149313e+00, -1.94253814e+00,\n'
 '        -8.30056846e-01, -1.59601986e+00, -2.49135590e+00,\n'
 '        -1.33160472e-01,  1.27547979e-01,  2.99613953e-01,\n'
 '         1.00438082e+00,  8.39022994e-01, -3.68106514e-01,\n'
 '        -1.65179372e-04, -2.47039095e-01, -9.25303757e-01,\n'
 '         1.44363570e+00, -8.22972059e-01,  7.81524479e-01,\n'
 '         1.04825032e+00,  2.36545992e+00, -7.31758118e-01,\n'
 '        -5.95837712e-01,  3.03550172e+00, -2.87439322e+00,\n'
 '         9.06595945e-01,  1.23235393e+00,  1.10363185e-01,\n'
 '        -2.99039102e+00, -2.35973954e+00, -1.67854381e+00,\n'
 '        -1.65227938e+00, -2.41270232e+00,  1.10078406e+00,\n'
 '         1.36076498e+00, -2.28897882e+00,  1.94415837e-01,\n'
 '        -2.57983088e+00,  2.06178993e-01,  1.73935711e+00,\n'
 '         4.99592692e-01,  9.80352163e-02,  8.16510677e-01,\n'
 '         2.62877196e-01, -1.61019754e+00,  2.08079243e+00,\n'
 '         2.80449295e+00, -1.98000372e+00,  9.15052414e-01,\n'
 '         5.81052899e-01,  7.78627515e-01,  1.10980833e+00,\n'
 '        -3.90509248e-01,  1.19929242e+00,  4.28343344e+00,\n'
 '         8.02420914e-01, -5.65477729e-01, -3.16308856e+00,\n'
 '        -1.20695913e+00, -1.25951743e+00, -1.01783621e+00,\n'
 '        -1.15445232e+00, -4.53880638e-01, -1.48182899e-01,\n'
 '         9.43540782e-02, -1.77548516e+00,  1.72512031e+00,\n'
 '        -3.18738222e-01,  2.71707606e+00, -4.44039226e-01,\n'
 '         1.58290863e+00,  2.02568150e+00, -3.48699951e+00,\n'
 '         6.64258003e-01, -2.74921727e+00, -8.92657340e-01,\n'
 '         1.39712721e-01,  1.46169364e+00,  1.92934012e+00,\n'
 '         4.44925833e+00, -9.91184294e-01, -6.10237598e-01,\n'
 '        -2.27309251e+00,  6.21675730e-01, -1.77534223e-01,\n'
 '         4.09771681e-01,  1.43400598e+00,  4.09939623e+00,\n'
 '        -3.28224277e+00, -5.15903115e-01,  9.75269437e-01,\n'
 '        -1.61139417e+00, -7.34280586e-01,  6.64896011e-01,\n'
 '        -1.54612970e+00,  1.08888865e-01,  1.66796768e+00,\n'
 '        -3.47274542e-01, -2.50127626e+00, -6.74989939e-01,\n'
 '         6.15474165e-01, -2.23573044e-01,  5.60333252e-01,\n'
 '         1.15106762e+00,  1.29721129e+00,  1.37177122e+00,\n'
 '         7.96952248e-01, -1.54767787e+00,  9.18357670e-01,\n'
 '        -4.69321489e-01, -1.55881655e+00, -7.95794249e-01,\n'
 '        -1.40572751e+00, -1.56578875e+00, -3.13575363e+00,\n'
 '         1.73163283e+00,  2.54580331e+00, -3.12104988e+00,\n'
 '         9.64837789e-01,  1.28236806e+00, -1.99450421e+00,\n'
 '         4.08039577e-02,  1.55086243e+00, -8.65636841e-02,\n'
 '         9.70887363e-01, -6.29807353e-01, -1.16583538e+00,\n'
 '         1.48792267e+00,  1.48205566e+00,  2.11732221e+00,\n'
 '        -1.77811825e+00,  6.39270663e-01,  2.85527349e+00,\n'
 '        -1.85911930e+00,  8.41640234e-01,  3.48869145e-01,\n'
 '        -9.95675087e-01,  3.48424149e+00,  1.21602094e+00,\n'
 '        -6.29897952e-01,  1.01319110e+00,  4.69272524e-01,\n'
 '         5.42286038e-01,  1.78257537e+00,  1.41270995e+00,\n'
 '         2.08149052e+00,  1.77192795e+00,  9.02683258e-01,\n'
 '         2.80348241e-01,  5.59136272e-01, -3.22554731e+00,\n'
 '        -3.60310137e-01, -1.04181552e+00,  8.38835716e-01,\n'
 '        -1.61811203e-01, -1.96590745e+00, -3.49705041e-01,\n'
 '         1.39682555e+00,  1.08649993e+00,  2.51046896e-01,\n'
 '         2.13425398e+00, -4.22235608e-01,  5.11928916e-01,\n'
 '         1.32459605e+00, -4.51949567e-01,  3.90034020e-01,\n'
 '         3.75962686e+00, -2.49864245e+00, -1.48877353e-01,\n'
 '        -1.59637010e+00, -5.69273889e-01, -1.94022083e+00,\n'
 '         2.85624981e-01, -5.74123621e-01, -2.14898491e+00,\n'
 '        -4.72770274e-01,  3.78738523e-01, -3.33887965e-01,\n'
 '         2.40592813e+00,  7.31997669e-01, -1.53878343e+00,\n'
 '         3.03844869e-01,  2.51119590e+00, -2.15995312e-01,\n'
 '         1.37547851e+00, -1.90099418e+00,  8.06861997e-01,\n'
 '        -1.21588480e+00,  3.77336323e-01,  2.61683822e-01,\n'
 '         1.04429543e-01, -9.82950568e-01, -6.27912879e-02,\n'
 '         1.37839639e+00, -2.81019068e+00, -2.51880002e+00,\n'
 '        -2.73172069e+00,  8.98061395e-01, -2.18803167e+00,\n'
 '        -1.41774130e+00, -1.17176838e-01,  2.70216489e+00,\n'
 '        -1.51403177e+00, -1.94149923e+00, -1.47627974e+00,\n'
 '        -1.19593287e+00,  5.13919771e-01,  1.22352630e-01,\n'
 '        -1.56298876e+00,  1.93655395e+00, -2.57758737e+00,\n'
 '         1.75145459e+00,  5.00014186e-01, -2.53228951e+00,\n'
 '        -1.85743642e+00,  2.23083067e+00, -7.40712524e-01,\n'
 '        -2.58094406e+00, -2.82653034e-01, -3.95376182e+00,\n'
 '         2.31006050e+00,  6.08498156e-01,  1.62893534e+00,\n'
 '         1.37260422e-01, -1.15766132e+00, -7.81950414e-01,\n'
 '        -6.96575761e-01,  1.80559802e+00,  1.50857186e+00,\n'
 '         3.54658699e+00,  2.69429684e+00, -7.54644275e-02,\n'
 '         1.75758743e+00, -1.55129898e+00,  9.56946194e-01,\n'
 '        -5.50289676e-02, -1.20241618e+00,  8.84731770e-01,\n'
 '         6.80053294e-01, -1.78725672e+00,  1.21671188e+00,\n'
 '        -9.07782316e-01, -6.74829483e-01, -2.65227437e-01,\n'
 '         1.88373411e+00, -2.01909518e+00, -7.20704079e-01,\n'
 '        -1.35614836e+00, -1.37041032e+00, -1.18987918e+00,\n'
 '         2.17767453e+00,  1.11987233e+00,  4.36011434e-01,\n'
 '        -7.34141171e-01,  6.99162245e-01, -1.38598871e+00,\n'
 '        -1.57730246e+00,  2.16956153e-01, -2.18219623e-01,\n'
 '        -8.99103105e-01, -1.30040216e+00, -2.84394622e-02,\n'
 '        -9.21215042e-02, -3.33493113e-01, -1.83533639e-01,\n'
 '         1.26397359e+00,  7.42362201e-01, -1.87224841e+00,\n'
 '         3.30170393e-02,  1.31187558e+00, -7.03325927e-01,\n'
 '        -6.41322255e-01, -3.46713543e-01,  1.93849897e+00,\n'
 '         1.10218179e+00, -6.74068451e-01,  1.02242827e+00,\n'
 '        -5.16386926e-01,  2.61791349e-01,  1.67992830e-01,\n'
 '         1.71963394e+00, -1.52646136e+00, -1.39614809e+00,\n'
 '         7.11562514e-01,  9.09052134e-01, -8.70117545e-01,\n'
 '         8.82049620e-01,  2.11858511e+00,  2.09763885e+00,\n'
 '        -1.19822085e-01,  1.23844504e-01,  1.67999700e-01,\n'
 '        -2.07305217e+00, -1.36495256e+00, -4.82378006e-02,\n'
 '         2.21521407e-01, -4.49046731e-01,  1.03509271e+00,\n'
 '        -2.30333209e-01, -2.01725459e+00,  1.12489533e+00,\n'
 '        -7.64065385e-02, -8.88209820e-01, -2.74969816e-01,\n'
 '        -4.67878044e-01,  1.07869196e+00,  1.76906729e+00,\n'
 '        -8.44366848e-01, -2.38188162e-01, -7.98377246e-02,\n'
 '         1.56413841e+00,  5.56219280e-01, -3.46520215e-01,\n'
 '        -5.74387535e-02, -1.63165247e+00, -3.52744341e-01,\n'
 '        -3.16206545e-01,  1.30511224e+00, -5.08893371e-01,\n'
 '        -7.51146674e-01, -3.78815979e-01,  7.65555024e-01,\n'
 '        -8.69657040e-01, -1.31269550e+00,  2.27261972e+00,\n'
 '        -1.59697485e+00]])')
'test_inceptionnet | batch_shape is: [1]'
'||'
