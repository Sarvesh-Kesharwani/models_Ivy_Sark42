'BasicConv2d | Test | input shape is: ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 128) | done 3/3'
'BasicConv2d | Test | Test Successfull!'
'||'
'InceptionAux | random_test_tensor shape is: ivy.Shape(1, 17, 17, 768)'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'InceptionAux | input shape is:ivy.Shape(1, 17, 17, 768)'
'InceptionAux | done 1/8, output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 128) | done 3/3'
'InceptionAux | done 2/8'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 1, 1, 768) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 1, 1, 768) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 1, 1, 768) | done 3/3'
'InceptionAux | done 3/8'
'InceptionAux | input shape to adaptive_avg_pool2d is:ivy.Shape(1, 1, 1, 768)'
('InceptionAux | permuted input shape to adaptive_avg_pool2d is:ivy.Shape(1, '
 '768, 1, 1)')
('InceptionAux | output shape from adaptive_avg_pool2d is:ivy.Shape(1, 768, 1, '
 '1)')
('InceptionAux | permuted output shape from adaptive_avg_pool2d '
 'is:ivy.Shape(1, 1, 1, 768)')
'InceptionAux | done 4/8'
'InceptionAux | done 5/8'
'InceptionAux | done 8/8'
'InceptionAux | Test Successfull!'
'random_test_tensor shape is: ivy.Shape(1, 35, 35, 192)'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'input shape is:ivy.Shape(1, 35, 35, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 35, 35, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 35, 35, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 35, 35, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 35, 35, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 35, 35, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 35, 35, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 35, 35, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 35, 35, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 35, 35, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 35, 35, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 35, 35, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 35, 35, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 35, 35, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 35, 35, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 35, 35, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 35, 35, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 35, 35, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 35, 35, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 35, 35, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 35, 35, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 35, 35, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 35, 35, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 35, 35, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 35, 35, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 35, 35, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 35, 35, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 35, 35, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 35, 35, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 35, 35, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 35, 35, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 35, 35, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 35, 35, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 35, 35, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 35, 35, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 35, 35, 32) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 35, 35, 32)'
'InceptionA | outputs 20/20'
'Test Successfull!'
'random_test_tensor shape is: ivy.Shape(1, 35, 35, 288)'
'layer 1/4 built'
'layer 2/4 built'
'layer 3/4 built'
'layer 4/4 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'input shape is:ivy.Shape(1, 35, 35, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 35, 35, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 17, 17, 384) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 17, 17, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 35, 35, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 35, 35, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 35, 35, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 35, 35, 64) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 35, 35, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 35, 35, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 35, 35, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 35, 35, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 35, 35, 96) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 35, 35, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 35, 35, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 17, 17, 96) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 17, 17, 96)'
'one 20/20, output shape is:ivy.Shape(1, 17, 17, 288)'
'one 20/20'
'Test Successfull!'
'random_test_tensor shape is: ivy.Shape(1, 17, 17, 768)'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'input shape is:ivy.Shape(1, 17, 17, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 17, 17, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 17, 17, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 17, 17, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 17, 17, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 17, 17, 128) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 17, 17, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 17, 17, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 17, 17, 128) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 17, 17, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 17, 17, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 17, 17, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 17, 17, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 17, 17, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 17, 17, 128) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 17, 17, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 17, 17, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 17, 17, 128) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 17, 17, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 17, 17, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 17, 17, 128) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 17, 17, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 17, 17, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 17, 17, 128) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 17, 17, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 17, 17, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 17, 17, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 17, 17, 192)'
'one 10/20, output shape is:ivy.Shape(1, 17, 17, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 17, 17, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 17, 17, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 17, 17, 192)'
'one 20/20'
'Test Successfull!'
'random_test_tensor shape is: ivy.Shape(1, 17, 17, 768)'
'layer 1/6 built'
'layer 2/6 built'
'layer 3/6 built'
'layer 4/6 built'
'layer 5/6 built'
'layer 6/6 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'input shape is:ivy.Shape(1, 17, 17, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 17, 17, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 17, 17, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 17, 17, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 17, 17, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 8, 8, 320) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 8, 8, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 17, 17, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 17, 17, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 17, 17, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 17, 17, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 17, 17, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 17, 17, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 17, 17, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 17, 17, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 17, 17, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 17, 17, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 8, 8, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 8, 8, 192)'
'one 7/20, output shape is:ivy.Shape(1, 8, 8, 768)'
'one 20/20'
'Test Successfull!'
'random_test_tensor shape is: ivy.Shape(1, 8, 8, 1280)'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'input shape is:ivy.Shape(1, 8, 8, 1280)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 8, 8, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 8, 8, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 8, 8, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 8, 8, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 8, 8, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 8, 8, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 8, 8, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 8, 8, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 8, 8, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 8, 8, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 8, 8, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 8, 8, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 8, 8, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 8, 8, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 8, 8, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 8, 8, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 8, 8, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 8, 8, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 8, 8, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 8, 8, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 8, 8, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 8, 8, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 8, 8, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 8, 8, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 8, 8, 192)'
'20/20'
'Test Successfull!'
'test_inceptionnet | device is: cpu'
'test_inceptionnet | fw is: numpy'
'test_inceptionnet | load_weights is: False'
'InceptionV3 | build | layer 1/22 built'
'InceptionV3 | build | layer 2/22 built'
'layer 3/22 built'
'InceptionV3 | build | layer 4/22 built'
'InceptionV3 | build | layer 5/22 built'
'InceptionV3 | build | layer 6/22 built'
'InceptionV3 | build | layer 7/22 built'
'InceptionV3 | build | layer 8/22 built'
'InceptionV3 | build | layer 9/22 built'
'InceptionV3 | build | layer 10/22 built'
'InceptionV3 | build | layer 11/22 built'
'InceptionV3 | build | layer 12/22 built'
'InceptionV3 | build | layer 13/22 built'
'InceptionV3 | build | layer 14/22 built'
'InceptionV3 | build | layer 15/22 built'
'InceptionV3 | build | layer 17/22 built'
'InceptionV3 | build | layer 18/22 built'
'InceptionV3 | build | layer 19/22 built'
'InceptionV3 | build | layer 20/22 built'
'InceptionV3 | build | layer 21/22 built'
'InceptionV3 | build | layer 22/22 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/4 built'
'layer 2/4 built'
'layer 3/4 built'
'layer 4/4 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/6 built'
'layer 2/6 built'
'layer 3/6 built'
'layer 4/6 built'
'layer 5/6 built'
'layer 6/6 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'inceptionNet_v3 | building InceptionV3 model | done 1/3'
'InceptionV3 | forward | input shape is:ivy.Shape(1, 224, 224, 3) | done 1/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 224, 224, 3) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 111, 111, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 111, 111, 32) | done 2/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 111, 111, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 32) | done 3/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 109, 109, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 64) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 64) | done 4/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 54, 54, 64) | done 5/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 54, 54, 80) | done 3/3'
'InceptionV3 | forward | is:ivy.Shape(1, 54, 54, 80) | done 6/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 80) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 52, 52, 192) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 52, 52, 192) | done 7/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 192) | done 8/27'
'input shape is:ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 32) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 32)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 25, 25, 256) | done 9/27'
'input shape is:ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 10/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 11/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 384) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 96) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 96)'
'one 20/20, output shape is:ivy.Shape(1, 12, 12, 288)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 12/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 12, 12, 768) | done 13/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 14/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 15/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 16/27'
'v3 16/27, output shape is:ivy.Shape(1, 12, 12, 768)'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 5, 5, 192)'
'one 7/20, output shape is:ivy.Shape(1, 5, 5, 768)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 1280) | done 17/27'
'input shape is:ivy.Shape(1, 5, 5, 1280)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 18/27'
'input shape is:ivy.Shape(1, 5, 5, 2048)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 19/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 20/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 5, 5) | done 21/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 1, 1) | done 22/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 27/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 24/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 25/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048) | done 26/27'
'InceptionV3 | forward | fc | done 27/27'
('test_inceptionnet | logits is: ivy.array([[ 1.61469484e+05,  '
 '2.01256250e+03,  2.22111812e+05,\n'
 '         7.02361188e+05, -7.44046125e+05, -5.58538000e+05,\n'
 '        -1.54829688e+05,  3.98044844e+05,  7.50964000e+05,\n'
 '        -4.17675719e+05, -2.65899688e+05, -1.46312625e+06,\n'
 '        -3.37510750e+05, -6.44452891e+04,  3.28304375e+05,\n'
 '         9.65842422e+04, -7.53708438e+04, -1.00084156e+05,\n'
 '        -4.41067062e+05, -2.23825039e+04, -1.07448586e+05,\n'
 '         3.87651812e+05,  7.24121875e+05,  3.37595125e+05,\n'
 '         1.64885750e+05,  5.82318375e+05,  3.26116219e+05,\n'
 '         9.03829938e+05,  4.02143875e+05, -9.18582438e+05,\n'
 '         2.47578438e+04,  1.07896609e+05, -1.42300875e+05,\n'
 '         3.33534875e+05,  3.71582688e+05,  1.21918062e+05,\n'
 '        -2.68226969e+05, -6.56983938e+05, -7.89554875e+05,\n'
 '        -8.10527875e+05, -5.55376750e+05, -3.34907875e+05,\n'
 '        -3.66186250e+05,  5.78351250e+05, -3.99762625e+05,\n'
 '         3.33375125e+05,  6.49129312e+05, -3.68568156e+05,\n'
 '         5.26398250e+05, -2.55341297e+05,  5.51820062e+05,\n'
 '         6.65411625e+05, -6.05097188e+05,  2.96812125e+05,\n'
 '         6.99550625e+05, -6.76107312e+05, -2.34803953e+05,\n'
 '        -6.31510250e+05, -3.61734875e+05,  1.15102859e+05,\n'
 '        -4.97573125e+05, -1.01405312e+06,  1.86370891e+05,\n'
 '        -6.17306625e+05,  2.31069906e+05,  3.92060656e+05,\n'
 '        -6.33037875e+05,  5.59532812e+05,  2.85008875e+05,\n'
 '        -1.17247538e+06,  8.14310125e+05,  1.97718938e+05,\n'
 '         4.56148250e+05, -2.79908562e+05,  4.93165281e+05,\n'
 '        -5.37940250e+05,  3.98695312e+03, -3.48387062e+05,\n'
 '         5.56753125e+04, -5.67470000e+05, -6.27529844e+04,\n'
 '         1.35891031e+05, -6.13994188e+05,  6.46317812e+05,\n'
 '        -3.03775625e+05,  1.81529875e+05, -2.90044781e+05,\n'
 '        -1.31327250e+05,  3.11771375e+05, -3.30791594e+05,\n'
 '         9.19199250e+05, -1.21813000e+05,  4.56885625e+05,\n'
 '        -6.46466875e+05, -1.48194422e+05, -4.69627875e+05,\n'
 '         1.36268516e+05, -3.86121812e+05,  2.73338562e+05,\n'
 '        -1.14129047e+05,  6.83553188e+05, -5.42872750e+05,\n'
 '         5.13516625e+05,  3.93429031e+05,  5.19930656e+05,\n'
 '        -5.12087000e+05,  1.02279109e+05,  5.69422500e+05,\n'
 '        -8.50670812e+05, -8.51061438e+05, -2.32213766e+05,\n'
 '        -6.62360625e+04, -5.22426781e+05, -1.86364500e+05,\n'
 '         1.84918281e+05,  5.69328438e+05,  5.14333812e+05,\n'
 '        -4.60520250e+05,  4.68415875e+05, -6.41253938e+05,\n'
 '         1.87762625e+05,  5.61305469e+04, -5.10519625e+05,\n'
 '        -8.40166875e+05, -6.97047750e+05,  8.72840750e+05,\n'
 '        -4.55266750e+05, -8.74051125e+05, -3.93888781e+05,\n'
 '        -1.59045797e+05,  4.62249562e+05, -2.21649484e+05,\n'
 '        -1.18706875e+05, -5.56513984e+04, -7.08064750e+05,\n'
 '        -1.03877719e+05,  3.15497438e+05, -1.34401609e+05,\n'
 '        -8.83503359e+04,  2.86343188e+05, -4.81589406e+05,\n'
 '         8.01689250e+05, -3.94643719e+05, -5.21983562e+05,\n'
 '        -7.28850000e+05,  5.58904625e+05,  7.26008750e+05,\n'
 '         1.29673406e+05,  4.41513719e+05, -1.98247219e+05,\n'
 '         4.18057156e+05, -6.67034438e+05, -1.80174750e+05,\n'
 '         1.35344094e+05,  9.91290438e+05, -1.01220781e+05,\n'
 '         5.04073750e+04, -5.47932312e+05,  3.30261438e+05,\n'
 '        -2.92858062e+05,  8.30274688e+04,  5.04248812e+05,\n'
 '         5.76103562e+05,  8.00456562e+05,  6.37244375e+04,\n'
 '         3.81830312e+05,  7.50703000e+05, -2.75592375e+05,\n'
 '        -3.80987312e+05,  7.03483250e+05, -2.58779266e+05,\n'
 '        -3.60437344e+04,  5.96179375e+05,  1.90006016e+05,\n'
 '         4.73419750e+05, -4.06914500e+05, -5.28582656e+04,\n'
 '        -4.24924219e+05,  7.18373281e+04,  1.89786562e+05,\n'
 '        -2.49315656e+05, -4.53911062e+05, -3.32199250e+05,\n'
 '        -4.37739125e+05, -3.58698906e+05,  2.08130781e+05,\n'
 '         4.37229594e+05, -2.93892188e+05,  4.55612250e+05,\n'
 '         5.24228688e+05, -5.84886250e+04, -1.75138469e+05,\n'
 '         2.57314844e+05, -8.11586500e+05,  4.39852750e+05,\n'
 '        -3.63763781e+05, -1.35771094e+04,  2.36489625e+05,\n'
 '         1.03153297e+05, -2.64631594e+05, -3.31908281e+04,\n'
 '        -5.20791531e+05,  3.99783531e+05, -2.27262547e+05,\n'
 '         7.51130547e+04,  7.40343750e+05,  4.73442969e+03,\n'
 '        -4.38039875e+05, -5.05346953e+04,  1.66352141e+05,\n'
 '         4.66277875e+05,  3.84471375e+05, -3.91148062e+05,\n'
 '         4.73063656e+05,  5.97572500e+05, -3.21132250e+05,\n'
 '         3.30539812e+05,  7.16318938e+05, -5.53612562e+05,\n'
 '         2.95891625e+05, -1.24148438e+05, -2.01675625e+05,\n'
 '         6.00242688e+05, -5.32893062e+05, -5.87393438e+05,\n'
 '         4.36415562e+05, -3.74945594e+05,  2.43324031e+05,\n'
 '        -7.27051562e+05,  1.31041125e+06,  7.45483000e+05,\n'
 '        -1.43464500e+05,  2.87380094e+05,  5.25525750e+05,\n'
 '        -2.45531719e+04, -8.97453125e+03,  3.36852875e+05,\n'
 '        -2.90283438e+05, -4.41718844e+05,  1.00706550e+06,\n'
 '        -4.84241031e+05, -5.27528625e+05, -5.05212406e+05,\n'
 '        -4.22200312e+05,  2.06989516e+05, -1.66717094e+05,\n'
 '         7.44143125e+05,  4.42975188e+05,  4.74475000e+04,\n'
 '        -7.51459562e+05, -7.55645859e+04,  5.46637062e+05,\n'
 '        -3.71187969e+04,  3.65024812e+05, -7.19489531e+04,\n'
 '        -4.80884719e+05,  6.59295469e+04, -2.43987938e+05,\n'
 '        -7.27489938e+05,  3.52851688e+05, -6.18330875e+05,\n'
 '        -6.75359938e+05, -2.32567109e+05, -4.42308250e+05,\n'
 '        -3.50849188e+05, -1.81189375e+05, -4.91286750e+05,\n'
 '        -9.85763500e+05, -7.39515375e+05, -4.16985625e+04,\n'
 '         9.21626562e+04,  3.91599625e+05, -1.15364725e+06,\n'
 '        -2.26505203e+05, -7.15796250e+05, -7.06640938e+04,\n'
 '        -4.63248656e+05,  1.00050594e+05,  6.89810500e+05,\n'
 '        -5.67169188e+05, -5.63675250e+05,  1.74650500e+05,\n'
 '        -9.26991688e+05,  7.00065500e+05,  2.20812094e+05,\n'
 '        -3.41342375e+05, -4.77111062e+05,  4.32088250e+05,\n'
 '         8.52580625e+04,  5.71570625e+05,  1.20579844e+04,\n'
 '         4.69980000e+05, -5.77821250e+04, -2.23326844e+05,\n'
 '        -2.69108938e+05,  3.46351844e+05,  4.18889812e+05,\n'
 '         1.43747969e+05,  8.34129125e+05, -4.40615312e+05,\n'
 '        -3.82601656e+05, -3.65853875e+05,  2.50398062e+05,\n'
 '        -4.03573156e+05,  7.15179188e+05, -7.03768188e+05,\n'
 '         4.98610219e+05, -5.02382562e+05,  1.51699406e+05,\n'
 '        -7.46883750e+05, -4.16556445e+04, -6.57894844e+04,\n'
 '         1.18674912e+06, -7.37742812e+04,  1.26035867e+05,\n'
 '        -7.49635000e+04, -5.29383875e+05,  4.76905625e+04,\n'
 '        -8.79613359e+04, -3.22514812e+05,  9.26108281e+04,\n'
 '         4.35229125e+05, -1.50346469e+05,  4.11929062e+05,\n'
 '         3.20252031e+04, -4.23037656e+05, -2.61055938e+05,\n'
 '         2.48554453e+04,  2.33053859e+05, -6.06320375e+05,\n'
 '        -3.51725125e+05, -5.36454922e+04, -2.08065672e+05,\n'
 '        -1.49726375e+05,  4.45184219e+04, -7.26435000e+04,\n'
 '        -6.27492500e+05,  9.52538594e+04,  7.90441375e+05,\n'
 '         4.29891750e+05, -7.58301812e+05,  3.81626500e+05,\n'
 '        -1.06106100e+06,  2.19802375e+05,  1.79225250e+05,\n'
 '         6.63440375e+05,  4.08343375e+05,  9.29914375e+04,\n'
 '         5.59774875e+05, -1.84526625e+05, -6.63209250e+05,\n'
 '         4.28058750e+04, -6.96046375e+05, -9.53720781e+04,\n'
 '         8.26538750e+05, -1.17553500e+05,  4.26475125e+05,\n'
 '         2.74035312e+05, -1.07414719e+05,  5.15874906e+05,\n'
 '         1.08244812e+05,  8.63346250e+05,  1.26293078e+05,\n'
 '        -2.89155750e+05,  3.60743250e+05,  4.73367781e+05,\n'
 '         1.84437125e+05, -6.38200875e+05,  2.68488625e+05,\n'
 '        -1.20910725e+06, -1.27152391e+05,  8.78659141e+04,\n'
 '         8.43105469e+04,  7.23383438e+04, -5.14141969e+05,\n'
 '        -3.48336250e+05, -1.13907325e+06, -3.76422375e+05,\n'
 '        -3.35761250e+04,  1.02620206e+06, -5.18795312e+03,\n'
 '        -1.09878075e+06, -5.83745312e+03, -6.53821438e+05,\n'
 '         1.71335922e+05, -8.02965469e+04, -7.80373906e+04,\n'
 '         4.67504938e+05,  7.65572375e+05,  1.44639975e+06,\n'
 '         4.08702469e+05,  3.14652812e+04, -2.29621812e+05,\n'
 '        -4.53916312e+05,  2.50814859e+05,  1.04813438e+05,\n'
 '        -5.39273062e+05, -4.05674844e+05,  3.79518500e+05,\n'
 '        -3.15620125e+05, -8.24536312e+05,  1.40432212e+06,\n'
 '         9.32229438e+05, -7.13608688e+05, -9.08047625e+05,\n'
 '        -2.32074688e+04, -1.29966266e+05, -2.20727672e+05,\n'
 '        -3.87631438e+05,  2.36123953e+05,  2.83800656e+05,\n'
 '         1.07756781e+05, -1.88229469e+05,  1.50683172e+05,\n'
 '         1.32051225e+06, -3.86616625e+05,  4.19291562e+05,\n'
 '         1.83472406e+05, -5.38491000e+05, -1.85999125e+05,\n'
 '         1.82053875e+05, -9.37951562e+04, -4.65856250e+04,\n'
 '        -6.47498062e+05,  2.49065625e+05,  4.68359562e+05,\n'
 '        -5.66528125e+04, -7.14674688e+05,  9.19384250e+05,\n'
 '        -8.32978125e+05, -5.79414844e+04, -2.86629125e+05,\n'
 '         3.55974094e+05, -1.00028875e+05,  7.82002750e+05,\n'
 '        -5.47103938e+05,  4.02901188e+05,  1.38902175e+06,\n'
 '         6.78062438e+05, -4.64853094e+05, -8.74544219e+04,\n'
 '         1.81401203e+05, -1.63809875e+05,  1.40660000e+04,\n'
 '         8.37598250e+05,  2.34059219e+05,  5.90767250e+05,\n'
 '        -8.44722688e+05, -2.98398656e+05,  1.04802445e+05,\n'
 '        -9.00873062e+05,  3.42432344e+05,  7.94981375e+05,\n'
 '         6.39332312e+05, -7.22639922e+04, -2.01375688e+05,\n'
 '         6.35453625e+05, -2.20070141e+05, -3.50551344e+05,\n'
 '        -1.22662883e+05,  6.67278375e+05, -2.05735125e+05,\n'
 '         1.09257450e+06,  6.69377562e+05, -8.55542969e+04,\n'
 '         1.27144638e+06, -4.81653125e+03, -3.50196469e+05,\n'
 '         1.46865906e+05,  4.10289875e+05, -1.77446375e+05,\n'
 '         9.57791812e+05,  4.96342312e+05, -3.81269312e+05,\n'
 '        -7.09695312e+05,  2.69528875e+05, -1.66715438e+05,\n'
 '        -9.60080000e+05,  1.22959062e+04,  1.18653650e+06,\n'
 '        -1.60973219e+05, -4.90367438e+05,  2.14895781e+05,\n'
 '        -6.11958375e+05, -8.39999500e+05,  8.43428125e+03,\n'
 '         6.54554750e+05, -6.43498125e+05,  6.94674125e+05,\n'
 '         2.57958750e+05,  2.89143562e+05,  1.65808703e+05,\n'
 '         2.14208719e+05,  3.59711344e+05,  2.32488594e+05,\n'
 '        -3.62692312e+05,  4.60157312e+05,  1.35415375e+05,\n'
 '        -2.29741312e+05,  6.25782812e+05,  2.75582062e+05,\n'
 '         4.10537750e+05,  1.16845906e+05,  1.41782797e+05,\n'
 '         1.84440078e+05,  1.35378516e+05, -7.61946188e+05,\n'
 '        -1.84137188e+05,  8.01429250e+05, -4.51284312e+05,\n'
 '         4.85647125e+05, -3.54917500e+04, -5.01871094e+05,\n'
 '        -3.31713344e+05, -7.03645750e+05, -3.48780906e+05,\n'
 '        -2.76779062e+05, -3.21640031e+05, -1.93063312e+05,\n'
 '        -5.77916062e+05,  4.74409656e+05,  3.55353250e+05,\n'
 '         9.41923875e+05, -8.26315391e+04, -1.49763047e+05,\n'
 '        -4.80021875e+04,  6.16164062e+05,  7.83811750e+05,\n'
 '         4.29386875e+04, -1.24943100e+06,  4.48172812e+05,\n'
 '         1.76412812e+04,  1.36010000e+05, -6.11400500e+05,\n'
 '         1.09800641e+05, -1.44134266e+05,  3.34018750e+03,\n'
 '        -2.12417703e+05, -3.76859812e+05, -1.99168906e+05,\n'
 '         1.05535812e+06, -3.19497688e+05, -1.89378578e+05,\n'
 '        -4.37656188e+05,  1.71874141e+05, -1.53192328e+05,\n'
 '         1.20561344e+05, -1.86596250e+05,  4.99093688e+05,\n'
 '        -3.78275562e+05,  1.24026312e+05,  6.56699125e+05,\n'
 '         7.39580469e+03, -3.35493969e+05,  4.38506625e+05,\n'
 '         3.31427562e+05,  5.86073938e+05,  4.64580875e+05,\n'
 '        -1.25078266e+05, -7.98960312e+05, -1.41924422e+05,\n'
 '         3.17285781e+05, -1.84992688e+05,  2.81872938e+05,\n'
 '        -3.95200781e+05,  1.73490484e+05, -3.28565125e+05,\n'
 '        -6.61338188e+05,  2.58495656e+05,  7.16525875e+05,\n'
 '        -3.55022562e+05, -3.30796906e+05, -3.61843781e+05,\n'
 '         3.68233188e+05,  6.30776625e+05, -2.69189562e+05,\n'
 '         1.28030531e+05,  2.09352297e+05, -4.67690812e+05,\n'
 '        -8.81302500e+05, -1.30571375e+06, -4.00988031e+05,\n'
 '         8.11165625e+04, -1.36281141e+05, -3.25688906e+04,\n'
 '        -1.42737281e+05, -1.12655050e+06, -3.84783781e+05,\n'
 '         3.94231812e+05,  6.46824375e+05,  3.69480062e+05,\n'
 '         6.65156875e+05, -3.86447750e+05, -8.60918375e+05,\n'
 '        -6.82543000e+05,  6.45889125e+05,  4.76479750e+05,\n'
 '         1.16208000e+05, -4.66794719e+05, -3.81069812e+05,\n'
 '         2.73249500e+05, -3.35282250e+05, -5.86038625e+05,\n'
 '        -5.62592500e+05,  2.75520625e+05, -1.08863500e+05,\n'
 '         4.91767750e+05, -2.23985281e+05, -5.10625750e+05,\n'
 '         2.93396625e+05,  2.10517281e+05, -6.71890625e+05,\n'
 '        -5.23841625e+05, -8.78782750e+05, -1.08440500e+05,\n'
 '         9.60418750e+05, -4.73363250e+05,  1.61810688e+05,\n'
 '        -1.13435625e+04,  4.80275750e+05,  2.07547531e+05,\n'
 '         3.59217031e+05,  5.06786062e+05, -4.61262875e+05,\n'
 '         5.33178750e+05,  7.85771500e+05, -2.62278250e+05,\n'
 '        -1.65296797e+05, -3.35689125e+05,  2.13566391e+05,\n'
 '         4.59177422e+04,  1.40135938e+05, -3.34422938e+05,\n'
 '         3.11152812e+05,  4.05889688e+04,  8.19098062e+05,\n'
 '         2.65992812e+05,  4.85314719e+05,  1.96202406e+05,\n'
 '         6.94326406e+04,  1.58556906e+05,  4.00921250e+04,\n'
 '         6.99235500e+05, -6.02282688e+05,  5.91078750e+04,\n'
 '         8.47159188e+05,  2.91321500e+05,  9.04979688e+04,\n'
 '         5.96000812e+05, -6.69100750e+05,  4.51833875e+05,\n'
 '         5.31251000e+05,  1.13616050e+06,  4.11039500e+05,\n'
 '        -6.85175156e+04,  4.02347594e+05,  1.99017844e+05,\n'
 '        -3.37108812e+05, -6.80961375e+05, -7.13252438e+05,\n'
 '         7.85478438e+04, -2.57368547e+05,  4.10185562e+05,\n'
 '        -6.88014500e+05,  7.17064625e+05,  4.95058906e+05,\n'
 '        -5.13324062e+05, -2.22620125e+05, -5.17614125e+05,\n'
 '         6.39930625e+04, -2.71419938e+05,  4.40436000e+05,\n'
 '         5.90154125e+05, -1.56128391e+05, -7.00888812e+05,\n'
 '         3.01140781e+05,  2.02264406e+05, -1.37756250e+04,\n'
 '         2.86236875e+05,  7.55885688e+05,  4.79613312e+05,\n'
 '        -1.03481306e+06, -3.95394688e+04,  1.49742531e+05,\n'
 '        -1.01575794e+06, -3.44406719e+05,  2.14709016e+05,\n'
 '         2.19493750e+05, -5.04619031e+05, -4.53962875e+05,\n'
 '         5.72831875e+05,  5.01247094e+05, -9.16970156e+04,\n'
 '        -4.74257250e+05, -2.91928125e+03,  3.92075000e+04,\n'
 '        -3.31193812e+05, -5.74227062e+05, -1.07737250e+06,\n'
 '        -4.99592281e+05, -2.84846531e+05,  5.18529875e+05,\n'
 '        -5.08726531e+05, -4.98781250e+04,  4.28498562e+05,\n'
 '        -3.40984375e+03,  8.48840125e+05, -6.21485469e+04,\n'
 '        -3.69496438e+05, -2.84333594e+05,  2.01182969e+05,\n'
 '         1.19906688e+06,  1.54859406e+05, -1.30471975e+06,\n'
 '        -5.77968625e+05, -2.62154500e+05, -1.04217769e+06,\n'
 '         5.70196750e+05, -1.26192812e+04,  4.22417062e+05,\n'
 '        -6.20169875e+05,  7.41618125e+05,  6.50052500e+04,\n'
 '        -7.24041875e+05, -4.54240156e+05,  5.95195562e+05,\n'
 '         7.68020000e+05, -5.89081875e+05, -1.12593000e+05,\n'
 '         5.23639750e+05, -5.23663500e+05, -3.74233844e+05,\n'
 '         1.73351719e+04, -4.53403688e+05, -6.39701250e+05,\n'
 '        -3.22728656e+05,  1.29476219e+05, -7.08735938e+04,\n'
 '        -4.90401125e+05,  5.73793281e+04, -7.67013375e+05,\n'
 '         8.64388188e+05, -1.24180953e+05, -5.31811438e+05,\n'
 '         6.34714812e+05, -4.73848625e+05,  4.86185531e+05,\n'
 '         3.86025062e+05,  6.39313875e+05, -2.38179922e+04,\n'
 '        -8.26914125e+05, -3.98887734e+04,  1.11060875e+05,\n'
 '        -4.36744688e+04, -6.52643500e+05,  3.19191688e+05,\n'
 '         6.92890438e+05, -2.06247938e+05, -3.21404719e+05,\n'
 '        -4.57687266e+04, -2.67845750e+05, -6.97563750e+05,\n'
 '        -1.26562797e+05, -3.81587500e+04,  3.54669500e+05,\n'
 '        -1.98969906e+05, -2.08320094e+05,  2.37798734e+05,\n'
 '        -6.93944312e+05, -6.83620750e+05,  8.39680250e+05,\n'
 '        -4.56991875e+05, -1.32799988e+06, -7.77120000e+05,\n'
 '        -6.85687500e+05,  1.41448938e+05, -1.95645594e+05,\n'
 '        -9.65003250e+05,  1.25807688e+05,  5.58083750e+05,\n'
 '         4.25876375e+05, -3.88307938e+05, -1.91714719e+05,\n'
 '        -2.25039016e+05, -1.53422312e+05, -1.88664500e+05,\n'
 '         3.39410062e+05, -5.01733562e+05, -6.44246875e+04,\n'
 '         2.79731531e+05,  3.24947344e+05, -1.21764422e+05,\n'
 '         3.10101062e+05,  5.41327062e+05, -2.10344219e+05,\n'
 '         4.03110312e+05,  1.82468219e+05, -3.43432438e+05,\n'
 '        -3.92754562e+05,  8.20378875e+05,  3.69068688e+05,\n'
 '         2.17789312e+05, -2.28892141e+05, -4.79337219e+05,\n'
 '         4.68671250e+05, -4.42437938e+05, -7.38957500e+04,\n'
 '        -6.32109562e+05, -1.03286773e+05, -2.67538688e+05,\n'
 '         1.77971844e+05, -1.86629859e+05, -3.07009750e+05,\n'
 '         3.56386969e+05,  8.33979688e+03,  4.07033344e+05,\n'
 '        -5.34557969e+04, -1.57482000e+05, -5.00405125e+05,\n'
 '        -3.12579812e+05,  2.13945594e+05,  4.22010594e+05,\n'
 '         6.01575625e+04,  6.58916875e+05,  3.72816250e+05,\n'
 '        -2.23864266e+05,  2.58040844e+05,  5.96386875e+04,\n'
 '         2.60123547e+05,  8.62077000e+05,  7.43117500e+04,\n'
 '         3.42547188e+04, -3.74552688e+05, -5.47530688e+05,\n'
 '         4.10749000e+05, -1.53133438e+04, -3.45262750e+05,\n'
 '        -2.57561469e+05,  3.85240875e+05, -2.77743750e+03,\n'
 '        -1.13015625e+03,  1.04766812e+05,  1.59925406e+05,\n'
 '         1.10619469e+05, -2.03622516e+05, -2.35534250e+05,\n'
 '        -8.93700250e+05,  1.44450625e+04, -5.64014625e+05,\n'
 '         7.01257500e+04, -3.56678938e+05,  1.03248883e+05,\n'
 '         6.43349000e+05,  5.81619438e+05, -2.95253625e+05,\n'
 '         1.52128312e+05, -4.85110781e+04,  5.54335500e+05,\n'
 '         4.16375938e+04,  6.11613312e+05, -3.49607281e+05,\n'
 '        -2.78184000e+05,  4.55992812e+04,  7.01466750e+05,\n'
 '        -8.32356125e+05,  1.25442594e+05, -7.51330781e+04,\n'
 '         9.35770625e+05,  7.39108250e+05, -7.26654000e+05,\n'
 '        -3.01775219e+05, -2.63930656e+05,  1.05199638e+06,\n'
 '        -1.48964406e+05, -2.02145359e+05, -3.60529188e+05,\n'
 '        -4.37884812e+05,  5.06752375e+05, -7.84311875e+05,\n'
 '        -1.11134312e+05, -2.65931344e+05, -5.88593062e+05,\n'
 '         4.50427656e+05, -5.77774125e+05, -1.30003406e+05,\n'
 '         1.51384562e+05, -1.21236727e+05, -8.34975750e+05,\n'
 '        -2.91613094e+05,  4.11221406e+05,  2.26928531e+05,\n'
 '         8.16221688e+05, -3.95140938e+05, -7.27258750e+04,\n'
 '        -2.07800844e+05, -7.32511562e+05,  4.97183672e+04,\n'
 '        -7.54218750e+01, -1.32546328e+05, -2.43040531e+05,\n'
 '        -1.63050609e+05, -5.59666094e+04, -8.45154375e+04,\n'
 '         5.89198906e+04, -1.02128125e+04,  3.79077969e+05,\n'
 '        -2.54188359e+05, -3.11530438e+05,  9.07550938e+05,\n'
 '        -3.04725031e+05,  1.23484900e+06,  5.53230562e+05,\n'
 '        -8.17504000e+05, -7.96878625e+05,  5.44014750e+05,\n'
 '        -6.64460312e+05, -1.07599953e+05,  1.15600344e+05,\n'
 '        -5.08628438e+05,  1.54997875e+05,  4.07557688e+05,\n'
 '        -2.50917969e+05,  7.86650188e+05,  1.50798250e+05,\n'
 '         2.29799406e+05, -2.48775688e+05,  2.52340438e+05,\n'
 '        -4.43037906e+05,  2.14754969e+05, -2.70864875e+05,\n'
 '        -8.97198938e+05, -7.37607188e+04,  2.64168750e+03,\n'
 '         2.26247500e+04, -1.94800000e+05, -8.95606750e+05,\n'
 '        -4.29414188e+05,  8.19221250e+05, -2.31426750e+05,\n'
 '        -3.73074312e+05, -4.34610969e+05, -5.67744625e+05,\n'
 '        -5.32924125e+05,  1.35732875e+05, -7.01353562e+05,\n'
 '         1.92387531e+05, -3.17593469e+05, -1.14025055e+05,\n'
 '         2.09674375e+04,  6.08361812e+05,  5.57820438e+05,\n'
 '         9.86255312e+04,  8.17775812e+05, -2.68740625e+05,\n'
 '        -3.40674812e+05,  2.55781562e+05, -5.80197375e+05,\n'
 '        -2.17828969e+05, -9.48281125e+05, -6.24281375e+05,\n'
 '         7.05684000e+05, -3.61271469e+05, -5.45044125e+05,\n'
 '        -5.22955125e+05,  7.06564062e+05,  2.55822703e+05,\n'
 '        -1.10732838e+06,  5.83725000e+04, -3.97183906e+04,\n'
 '         5.31262500e+05, -3.21828469e+05,  6.55378438e+05,\n'
 '        -4.30277750e+05,  2.47606125e+05,  5.66687688e+05,\n'
 '         2.15751016e+04,  5.38890062e+05, -4.80188250e+05,\n'
 '        -7.08496094e+04,  3.90207875e+05,  2.80208938e+05,\n'
 '        -3.78237000e+05,  4.32040062e+05,  7.46057125e+05,\n'
 '        -1.25716125e+05, -4.36546438e+05,  1.96006516e+05,\n'
 '        -5.44229750e+05, -1.88044672e+05,  3.12915406e+05,\n'
 '        -6.25791000e+05, -3.73550438e+05,  8.99242125e+05,\n'
 '        -7.72715875e+05,  3.09453625e+05,  5.89845000e+05,\n'
 '         3.30627031e+04,  1.88353281e+05, -3.98930125e+05,\n'
 '         5.53898438e+03]])')
'test_inceptionnet | batch_shape is: [1]'
'test_inceptionnet | logits.shape is: ivy.Shape(1, 1000)'
'||'
'test_inceptionnet | device is: cpu'
'test_inceptionnet | fw is: numpy'
'test_inceptionnet | load_weights is: True'
'InceptionV3 | build | layer 1/22 built'
'InceptionV3 | build | layer 2/22 built'
'layer 3/22 built'
'InceptionV3 | build | layer 4/22 built'
'InceptionV3 | build | layer 5/22 built'
'InceptionV3 | build | layer 6/22 built'
'InceptionV3 | build | layer 7/22 built'
'InceptionV3 | build | layer 8/22 built'
'InceptionV3 | build | layer 9/22 built'
'InceptionV3 | build | layer 10/22 built'
'InceptionV3 | build | layer 11/22 built'
'InceptionV3 | build | layer 12/22 built'
'InceptionV3 | build | layer 13/22 built'
'InceptionV3 | build | layer 14/22 built'
'InceptionV3 | build | layer 15/22 built'
'InceptionV3 | build | layer 17/22 built'
'InceptionV3 | build | layer 18/22 built'
'InceptionV3 | build | layer 19/22 built'
'InceptionV3 | build | layer 20/22 built'
'InceptionV3 | build | layer 21/22 built'
'InceptionV3 | build | layer 22/22 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/4 built'
'layer 2/4 built'
'layer 3/4 built'
'layer 4/4 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/6 built'
'layer 2/6 built'
'layer 3/6 built'
'layer 4/6 built'
'layer 5/6 built'
'layer 6/6 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'inceptionNet_v3 | building InceptionV3 model | done 1/3'
'inceptionNet_v3 | clearning pretrained weights | done 2/3'
'inceptionNet_v3 | loading pretrained weights | done 3/3'
'InceptionV3 | forward | input shape is:ivy.Shape(1, 224, 224, 3) | done 1/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 224, 224, 3) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 111, 111, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 111, 111, 32) | done 2/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 111, 111, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 32) | done 3/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 109, 109, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 64) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 64) | done 4/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 54, 54, 64) | done 5/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 54, 54, 80) | done 3/3'
'InceptionV3 | forward | is:ivy.Shape(1, 54, 54, 80) | done 6/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 80) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 52, 52, 192) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 52, 52, 192) | done 7/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 192) | done 8/27'
'input shape is:ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 32) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 32)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 25, 25, 256) | done 9/27'
'input shape is:ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 10/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 11/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 384) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 96) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 96)'
'one 20/20, output shape is:ivy.Shape(1, 12, 12, 288)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 12/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 12, 12, 768) | done 13/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 14/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 15/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 16/27'
'v3 16/27, output shape is:ivy.Shape(1, 12, 12, 768)'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 5, 5, 192)'
'one 7/20, output shape is:ivy.Shape(1, 5, 5, 768)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 1280) | done 17/27'
'input shape is:ivy.Shape(1, 5, 5, 1280)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 18/27'
'input shape is:ivy.Shape(1, 5, 5, 2048)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 19/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 20/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 5, 5) | done 21/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 1, 1) | done 22/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 27/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 24/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 25/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048) | done 26/27'
'InceptionV3 | forward | fc | done 27/27'
('test_inceptionnet | logits is: ivy.array([[-8.88040841e-01,  1.26253814e-01, '
 '-8.98354471e-01,\n'
 '         1.65514636e+00, -8.96761179e-01, -1.14338867e-01,\n'
 '         2.65923643e+00, -2.83914179e-01, -9.58102465e-01,\n'
 '        -2.54909325e+00, -5.92503190e-01, -1.47946751e+00,\n'
 '        -2.31790185e-01,  3.84620905e-01,  8.70853007e-01,\n'
 '        -2.14922905e-01, -1.66560113e+00, -1.04295516e+00,\n'
 '        -1.24896538e+00,  1.35765147e+00,  1.54914963e+00,\n'
 '        -2.75456476e+00,  4.49923128e-01, -2.76944733e+00,\n'
 '         4.77162480e-01, -9.64006185e-01, -3.20395023e-01,\n'
 '        -1.87502134e+00, -1.79067194e-01,  5.12326181e-01,\n'
 '        -3.47880125e-01, -6.41183555e-01,  7.20693767e-01,\n'
 '         1.64625204e+00,  1.76729381e+00, -9.30785656e-01,\n'
 '         3.15560532e+00, -8.54746461e-01, -1.69398055e-01,\n'
 '         1.18942821e+00,  9.29553360e-02,  1.94302809e+00,\n'
 '         1.80168927e-01,  1.89682603e-01, -3.14536691e-03,\n'
 '        -2.52813190e-01, -9.47081923e-01,  4.90285099e-01,\n'
 '        -3.44352722e-01, -1.85784066e+00, -6.64389670e-01,\n'
 '        -4.14588273e-01,  2.29189372e+00, -1.71876848e+00,\n'
 '        -3.71347070e-02,  2.09832692e+00, -2.23902082e+00,\n'
 '        -8.12330484e-01, -8.30419809e-02, -1.03788352e+00,\n'
 '         1.10926962e+00,  1.78445387e+00, -9.34389293e-01,\n'
 '        -7.06382632e-01, -2.98167646e-01, -3.60472590e-01,\n'
 '         3.17695350e-01,  2.64283133e+00,  1.31186271e+00,\n'
 '         2.39203304e-01, -9.42140460e-01, -7.43179798e-01,\n'
 '        -1.82154930e+00, -3.69953251e+00, -1.01357639e+00,\n'
 '         3.19208801e-02,  3.27192724e-01, -7.04492807e-01,\n'
 '         7.80321360e-02,  1.67488432e+00, -2.30355430e+00,\n'
 '         5.80299139e-01, -1.94591433e-01,  6.49059713e-01,\n'
 '         8.83391857e-01, -3.77696455e-01, -1.53890753e+00,\n'
 '        -1.34455633e+00, -7.75777340e-01, -1.63056970e-01,\n'
 '        -3.26019824e-01,  1.94296908e+00, -1.06290448e+00,\n'
 '         8.80579650e-02, -1.80510545e+00, -2.94847083e+00,\n'
 '         1.10500526e+00, -4.26702857e-01, -1.39016599e-01,\n'
 '         1.34155858e+00,  8.72252464e-01, -1.84825540e-01,\n'
 '        -6.88080728e-01, -3.62199426e-01,  7.53573895e-01,\n'
 '        -1.25046432e+00, -8.56398821e-01,  1.32552540e+00,\n'
 '         1.12139952e+00,  1.60369539e+00, -1.71469748e-01,\n'
 '        -1.56947506e+00,  2.14678264e+00,  2.24420547e+00,\n'
 '        -3.83611798e-01, -5.74059784e-01, -1.17515814e+00,\n'
 '         6.70426011e-01, -2.43500137e+00,  1.04604833e-01,\n'
 '        -2.15396285e-01, -2.01511669e+00,  2.40872294e-01,\n'
 '         8.67094636e-01, -5.13505161e-01,  2.01864064e-01,\n'
 '        -2.38000536e+00,  5.96673369e-01, -1.29732561e+00,\n'
 '        -3.04121137e-01,  9.77946818e-01,  1.69697672e-01,\n'
 '         1.07093477e+00, -2.58954239e+00, -8.03427100e-01,\n'
 '         1.88571811e+00, -1.63643002e-01, -2.38750726e-01,\n'
 '        -1.78839970e+00, -1.53709781e+00, -2.81099379e-01,\n'
 '         1.97942579e+00, -2.15017557e+00,  6.15981638e-01,\n'
 '         2.48431277e+00, -1.30144811e+00,  7.47109652e-02,\n'
 '        -1.90755606e+00, -1.39000142e+00, -5.79583645e-01,\n'
 '        -4.49229598e-01,  1.31621945e+00,  3.18109965e+00,\n'
 '        -3.82508040e-02,  9.10224318e-01, -2.11084747e+00,\n'
 '         2.54910290e-01,  5.20044517e+00, -2.65833855e+00,\n'
 '        -1.06629491e+00, -3.00568402e-01, -3.00574112e+00,\n'
 '        -1.83042407e+00,  1.11946678e+00, -1.24249601e+00,\n'
 '        -3.39408442e-02, -9.02183890e-01, -1.84241533e-01,\n'
 '        -1.20938373e+00,  1.33712244e+00,  3.79792869e-01,\n'
 '        -3.81240845e-02, -6.69804215e-01,  7.30366170e-01,\n'
 '         5.47714174e-01, -1.64437675e+00, -7.88805038e-02,\n'
 '         1.07993834e-01,  1.14740479e+00, -9.76453781e-01,\n'
 '        -5.37308097e-01, -1.75543755e-01, -1.64795661e+00,\n'
 '        -1.87484932e+00, -1.87337184e+00,  3.56705606e-01,\n'
 '         1.96807098e+00,  2.95895279e-01, -1.87477136e+00,\n'
 '        -4.00404310e+00, -8.26383114e-01, -1.23120820e+00,\n'
 '         1.22375965e+00, -5.11847019e-01, -2.72896099e+00,\n'
 '        -1.55880165e+00, -1.99127281e+00,  2.27522492e+00,\n'
 '        -1.03287578e+00,  6.35088444e-01, -3.69246006e-01,\n'
 '        -2.12317276e+00, -1.26522958e+00,  5.50033712e+00,\n'
 '        -2.53504038e+00, -3.76935697e+00, -3.34551454e+00,\n'
 '        -4.11106020e-01, -1.80549741e+00, -2.99333262e+00,\n'
 '        -1.95273352e+00, -2.96064949e+00, -9.45991874e-01,\n'
 '         1.20394683e+00,  2.20880842e+00,  2.66715765e-01,\n'
 '         1.08948672e+00, -4.43922728e-01,  9.47734773e-01,\n'
 '        -3.25367999e+00, -1.13720894e+00, -3.27923507e-01,\n'
 '         2.48630428e+00,  2.48189068e+00,  6.91919327e+00,\n'
 '        -1.50987077e+00,  1.66281795e+00, -3.29902244e+00,\n'
 '         1.63176107e+00,  1.48506641e+00,  3.23996258e+00,\n'
 '         3.53622580e+00,  2.58097839e+00,  1.90325487e+00,\n'
 '        -6.54618666e-02,  8.21750283e-01, -1.15320444e-01,\n'
 '        -2.31842256e+00,  6.41903043e-01,  4.27236021e-01,\n'
 '         1.93509936e-01,  1.97229624e+00,  1.96561337e+00,\n'
 '        -1.73330903e-01, -8.99074197e-01, -3.40352982e-01,\n'
 '        -3.51553917e-01,  1.18148911e+00,  8.84074402e+00,\n'
 '         4.95126820e+00,  5.57656193e+00,  5.51455677e-01,\n'
 '        -5.34073949e-01, -1.54442930e+00, -3.48696709e-01,\n'
 '         1.30082965e+00,  2.49020076e+00,  6.09447956e+00,\n'
 '         1.93545284e+01,  7.82167244e+00,  6.08418655e+00,\n'
 '         7.09396839e+00, -8.77390981e-01, -5.98804593e-01,\n'
 '        -2.43354654e+00, -1.03822923e+00, -2.94514656e+00,\n'
 '        -4.97651935e-01, -5.03363192e-01,  3.85266757e+00,\n'
 '         1.24284134e+01, -1.42963624e+00,  1.04230356e+00,\n'
 '        -5.13340890e-01,  1.80872750e+00, -3.79277873e+00,\n'
 '        -1.33645606e+00,  2.34337688e+00, -1.20995009e+00,\n'
 '         1.33204384e+01,  2.93704701e+00, -5.13532281e-01,\n'
 '        -2.60613775e+00,  4.85159826e+00, -2.31107664e+00,\n'
 '        -2.71063471e+00, -1.64088368e+00,  2.27293754e+00,\n'
 '         1.86188102e+00,  1.20890522e+00, -1.67257619e+00,\n'
 '         3.28944534e-01,  2.35239789e-01, -2.60942650e+00,\n'
 '        -1.71464872e+00, -2.28191996e+00,  3.76470375e+00,\n'
 '        -1.29150271e-01, -2.48248148e+00, -2.92974853e+00,\n'
 '        -1.09629106e+00, -8.91465425e-01,  6.47152781e-01,\n'
 '        -4.68066305e-01,  1.32391465e+00, -1.22945714e+00,\n'
 '         6.84512734e-01,  1.11097097e+00,  7.11109281e-01,\n'
 '         1.39494169e+00, -1.78684008e+00, -2.21493769e+00,\n'
 '         2.01555908e-01, -1.95290184e+00,  6.34773433e-01,\n'
 '         3.12940657e-01, -3.15103889e+00, -1.57333660e+00,\n'
 '        -1.12406254e+00, -2.89599866e-01,  3.67303789e-01,\n'
 '        -5.74366152e-02,  1.17030740e-01,  2.38551188e+00,\n'
 '        -2.42224741e+00, -4.17837888e-01,  1.38132826e-01,\n'
 '         2.53347492e+00,  1.77538526e+00, -8.52874100e-01,\n'
 '        -1.89050943e-01,  1.37988651e+00,  2.50559998e+00,\n'
 '         1.74392551e-01,  1.19053888e+00, -2.36354732e+00,\n'
 '        -2.96806765e+00, -1.06380820e+00,  3.85499311e+00,\n'
 '        -2.62867403e+00, -1.73971131e-01,  1.68302023e+00,\n'
 '        -9.90335405e-01,  3.81144881e-01, -1.78017640e+00,\n'
 '         2.75484919e-01, -9.37437415e-01, -3.70581113e-02,\n'
 '         1.26348960e+00, -3.22162747e-01, -2.03666019e+00,\n'
 '        -2.26540804e+00, -1.71650291e+00,  5.97277224e-01,\n'
 '        -1.94870246e+00,  1.86657596e+00,  4.18608367e-01,\n'
 '         3.93574357e-01,  3.74072790e-03,  1.52184820e+00,\n'
 '        -3.42746973e-01,  4.78632540e-01, -2.01841784e+00,\n'
 '         5.72972953e-01, -1.72691190e+00, -2.08416629e+00,\n'
 '        -3.00617695e+00, -1.37818384e+00, -2.57369816e-01,\n'
 '        -2.83233762e+00, -1.31526566e+00, -1.17257953e+00,\n'
 '        -1.55995250e+00, -4.65235531e-01, -1.97757840e-01,\n'
 '        -1.13448334e+00, -2.90483713e+00, -5.48213959e-01,\n'
 '        -2.04986858e+00, -8.44860196e-01, -7.49298632e-01,\n'
 '        -1.34232748e+00, -2.38468862e+00, -1.54266834e+00,\n'
 '        -2.49920678e+00, -4.69608098e-01, -1.43441153e+00,\n'
 '         1.20697700e-01, -1.69574416e+00, -3.01308918e+00,\n'
 '         1.27951205e-01, -1.74639583e+00, -2.60168672e-01,\n'
 '         1.13639879e+00, -6.27407074e-01, -5.53362489e-01,\n'
 '         1.68035889e+00,  3.43861282e-01,  9.36567426e-01,\n'
 '         1.14057207e+00, -2.26265645e+00, -1.73706031e+00,\n'
 '         1.29328203e+00, -3.59265119e-01,  4.04386091e+00,\n'
 '        -4.97894883e-02,  5.64071059e-01, -3.20348233e-01,\n'
 '        -1.14622545e+00, -1.19482362e+00, -5.75843573e-01,\n'
 '        -1.03427756e+00, -2.76235819e+00, -1.66784549e+00,\n'
 '        -1.42338228e+00, -4.13808644e-01, -2.56766528e-01,\n'
 '        -7.90619016e-01, -3.32267451e+00, -9.07920480e-01,\n'
 '         3.45809907e-02, -2.78390932e+00,  1.29400217e+00,\n'
 '         1.06511331e+00,  6.22729123e-01,  2.34520340e+00,\n'
 '        -1.23838171e-01,  9.55525398e-01, -3.47531498e-01,\n'
 '        -1.89267373e+00,  1.55951071e+00, -6.90533280e-01,\n'
 '         2.81979084e-01,  1.55311167e+00,  1.11549568e+00,\n'
 '         1.16129070e-02, -7.24001408e-01, -2.73054957e-01,\n'
 '        -5.85831344e-01, -2.54788113e+00,  1.50266087e+00,\n'
 '        -1.09689224e+00,  1.73943687e+00, -1.52672744e+00,\n'
 '        -1.45242918e+00,  1.22229338e+00, -9.21932161e-01,\n'
 '         3.33145559e-01,  3.47343504e-01, -7.86769152e-01,\n'
 '        -1.09927881e+00, -3.15595448e-01, -4.66625363e-01,\n'
 '        -7.09993005e-01, -1.59407568e+00, -4.59859878e-01,\n'
 '         2.59563506e-01, -1.14618576e+00, -9.27851975e-01,\n'
 '        -3.66166055e-01, -2.20016599e-01, -1.60645080e+00,\n'
 '         1.13351607e+00,  1.43247700e+00,  1.33413422e+00,\n'
 '        -2.39272261e+00,  3.37334961e-01, -8.77852976e-01,\n'
 '         1.81841087e+00, -1.86857611e-01,  1.45237660e+00,\n'
 '        -2.21993357e-01, -5.81474781e-01,  2.24472785e+00,\n'
 '        -2.14319420e+00, -2.64905071e+00,  3.16269875e+00,\n'
 '        -1.92972988e-01,  2.48941040e+00, -4.10854340e-01,\n'
 '         8.69098902e-01, -3.01035970e-01, -2.70712304e+00,\n'
 '         1.44518018e+00, -8.12075734e-01, -6.21587098e-01,\n'
 '        -1.07454121e+00, -4.17805642e-01,  7.17965663e-01,\n'
 '         7.55445480e-01,  1.42823410e+00,  9.51682270e-01,\n'
 '        -1.44185567e+00, -1.08212459e+00, -1.52045762e+00,\n'
 '         2.39987087e+00, -1.02571249e-01, -2.29213881e+00,\n'
 '         1.02418625e+00,  2.55159020e-01, -7.26582408e-01,\n'
 '         1.00493670e+00, -1.26542687e+00, -1.46944523e+00,\n'
 '        -1.39104211e+00,  2.91454077e-01,  4.94709998e-01,\n'
 '        -6.64388001e-01,  1.93185210e-01, -1.88002616e-01,\n'
 '         3.91303152e-01,  4.94300723e-01,  1.47377932e+00,\n'
 '        -9.26196575e-01, -5.72133422e-01, -4.37761247e-01,\n'
 '        -1.10406458e+00,  3.73512983e-01, -9.50790405e-01,\n'
 '        -9.83108401e-01,  1.21243596e+00,  2.25820482e-01,\n'
 '        -1.34876478e+00, -3.46202373e+00, -1.04171252e+00,\n'
 '        -9.73078728e-01, -1.35984504e+00, -2.41720176e+00,\n'
 '         1.14945972e+00,  6.10618293e-02, -9.41546917e-01,\n'
 '         7.08537221e-01,  8.70215297e-01, -6.27579510e-01,\n'
 '        -1.67849731e+00,  1.22704685e-01, -2.44072461e+00,\n'
 '         3.34392119e+00, -7.44657815e-01, -1.26911402e+00,\n'
 '         5.21414220e-01,  1.00966835e+00, -6.21124208e-02,\n'
 '         2.58870506e+00,  1.93237722e+00, -4.32391077e-01,\n'
 '         2.24259424e+00, -1.96228847e-01, -8.96340370e-01,\n'
 '        -6.83694124e-01, -1.12900412e+00,  1.07680106e+00,\n'
 '        -1.33247495e-01, -3.44687843e+00,  3.12175870e-01,\n'
 '         1.37206745e+00,  1.22633433e+00,  5.26595592e-01,\n'
 '        -8.35612774e-01,  7.70135164e-01,  8.97829294e-01,\n'
 '         1.26404715e+00,  2.67829871e+00, -5.79377651e-01,\n'
 '         9.83923972e-01, -1.52222765e+00, -2.70596087e-01,\n'
 '         2.72466749e-01,  9.63247299e-01,  1.19693756e+00,\n'
 '         1.13371289e+00,  3.50250930e-01,  5.83523452e-01,\n'
 '         2.87326479e+00, -2.42299533e+00, -1.85507000e+00,\n'
 '         1.67087704e-01,  1.57356679e-01,  7.83224404e-01,\n'
 '        -1.88489592e+00, -8.39847475e-02,  5.84956765e-01,\n'
 '         4.62101996e-01,  5.90240955e-01,  1.97263944e+00,\n'
 '         1.10338831e+00, -1.93653965e+00,  9.83105063e-01,\n'
 '        -6.24188900e-01, -8.62129450e-01,  4.04208422e-01,\n'
 '        -4.68269587e-01,  3.84064817e+00,  7.79369772e-02,\n'
 '         1.56036544e+00, -5.43322980e-01,  2.37781024e+00,\n'
 '        -3.35698366e-01, -2.26053357e+00,  1.60233188e+00,\n'
 '        -1.32695711e+00, -3.43285501e-01, -1.55379033e+00,\n'
 '        -2.18321860e-01,  9.59853291e-01, -1.83232701e+00,\n'
 '         3.40514541e+00,  3.08286339e-01,  7.96540976e-02,\n'
 '        -6.79200232e-01, -1.11555517e+00,  1.69308472e+00,\n'
 '         2.93871969e-01,  1.41975629e+00,  1.82453811e-01,\n'
 '        -1.02798855e+00,  2.07312539e-01, -8.39477301e-01,\n'
 '        -6.41236901e-01, -7.10051119e-01, -6.95429325e-01,\n'
 '        -5.50460577e-01,  6.86296225e-02,  7.25413322e-01,\n'
 '         1.65371180e+00, -1.85582900e+00, -5.13251662e-01,\n'
 '         1.03167665e+00,  2.88598561e+00, -6.22184157e-01,\n'
 '        -1.64365458e+00, -4.98502850e-01, -1.28974938e+00,\n'
 '        -1.07227767e+00, -1.11997759e+00, -1.39636695e-02,\n'
 '        -1.35692373e-01,  3.28080952e-02, -9.64155197e-01,\n'
 '         7.57505238e-01, -1.01513040e+00,  1.17375600e+00,\n'
 '        -1.56373715e+00, -9.28120315e-02,  4.91188139e-01,\n'
 '         1.60937476e+00,  1.39860714e+00, -1.20848477e+00,\n'
 '         7.82701373e-01,  4.42601800e-01, -1.43507063e+00,\n'
 '        -9.25949037e-01,  5.13413250e-01, -9.67510402e-01,\n'
 '         9.52914834e-01, -2.24589682e+00,  1.47111452e+00,\n'
 '        -9.76942301e-01, -1.08445132e+00, -5.02379298e-01,\n'
 '        -1.38389647e+00,  2.01863790e+00,  3.12316328e-01,\n'
 '        -2.57791972e+00, -1.08570421e+00,  8.33821893e-01,\n'
 '         2.74484587e+00, -8.24926197e-02, -4.34705496e-01,\n'
 '         1.07155752e+00,  8.85496795e-01, -2.15997517e-01,\n'
 '         2.58140421e+00,  5.19126654e-02, -4.27304923e-01,\n'
 '         1.76597476e+00,  1.64896202e+00, -9.69869375e-01,\n'
 '         1.05807841e+00,  2.48027414e-01,  2.08706081e-01,\n'
 '        -2.78468800e+00,  4.09525299e+00, -1.28119349e+00,\n'
 '        -3.73657972e-01,  3.39080512e-01,  2.54210144e-01,\n'
 '        -2.87599504e-01, -6.87466502e-01,  3.84788692e-01,\n'
 '         1.12112403e+00,  3.73228788e-02, -7.55684227e-02,\n'
 '        -3.85341096e+00,  5.85331261e-01, -3.06116194e-01,\n'
 '        -1.63589746e-01, -5.46594262e-01,  8.32035065e-01,\n'
 '        -7.68164635e-01, -1.55296934e+00, -1.83817172e+00,\n'
 '        -2.23891044e+00,  2.27234173e+00, -6.98096991e-01,\n'
 '        -2.68740368e+00,  1.38222128e-01,  2.52012515e+00,\n'
 '        -2.13599706e+00, -2.98679781e+00, -1.30211461e+00,\n'
 '         3.50387979e+00, -8.33917499e-01, -2.64390564e+00,\n'
 '        -9.29677129e-01,  7.39014983e-01, -1.08819961e+00,\n'
 '         5.19848347e-01, -4.61248755e-01,  5.60280800e-01,\n'
 '         2.31396198e-01, -7.01361239e-01, -3.80992562e-01,\n'
 '        -1.67816079e+00,  8.60780954e-01, -8.46021831e-01,\n'
 '         1.04312992e+00, -8.13263476e-01, -8.25420737e-01,\n'
 '        -4.71493751e-01,  1.46499902e-01,  1.02739906e+00,\n'
 '        -6.82790518e-01,  1.84087181e+00, -1.59589589e-01,\n'
 '        -2.03761840e+00,  5.61993241e-01, -9.42523956e-01,\n'
 '         2.53144741e+00,  1.32788435e-01,  2.90213847e+00,\n'
 '         1.49489749e+00, -1.27516925e+00, -2.91835093e+00,\n'
 '         3.41507971e-01, -2.95205426e+00,  4.85893917e+00,\n'
 '         9.28628206e-01, -8.96244109e-01, -7.06897899e-02,\n'
 '        -2.06460333e+00,  4.90124077e-02, -1.49502051e+00,\n'
 '        -1.83671689e+00, -7.79967725e-01, -3.16329896e-01,\n'
 '        -2.17660642e+00,  4.83738661e-01,  3.59698105e+00,\n'
 '        -2.02643871e+00, -2.20740867e+00, -2.36501408e+00,\n'
 '         3.20352882e-01,  7.08136976e-01, -1.22928309e+00,\n'
 '         1.46208787e+00, -1.76055896e+00,  2.35526705e+00,\n'
 '        -1.36858535e+00,  2.78137970e+00, -1.35419619e+00,\n'
 '        -2.41322756e+00, -1.17287540e+00,  5.25299072e-01,\n'
 '        -2.07703805e+00,  1.49689579e+00, -1.98392689e-01,\n'
 '         1.02394156e-01,  6.36207938e-01, -3.97118628e-01,\n'
 '         8.15138102e-01,  4.16928947e-01,  1.34629929e+00,\n'
 '        -6.04218841e-02, -1.12226129e+00, -2.03540754e+00,\n'
 '        -4.99830991e-01,  1.32019663e+00, -6.33047968e-02,\n'
 '        -8.15277457e-01,  1.14832878e-01,  1.21581924e+00,\n'
 '         1.18881607e+00, -1.49967313e-01, -1.32186353e+00,\n'
 '         2.02130184e-01,  2.83989430e-01, -9.30292249e-01,\n'
 '        -3.29219103e-01,  6.49311125e-01,  1.53879213e+00,\n'
 '         8.12968135e-01,  1.00021029e+00,  1.51743889e+00,\n'
 '        -2.49592090e+00, -3.33022863e-01, -4.37045956e+00,\n'
 '        -2.48322010e+00,  7.90115714e-01,  2.08761120e+00,\n'
 '         1.73639369e+00, -1.53803444e+00,  1.89241529e+00,\n'
 '        -7.07945943e-01,  1.35325992e+00, -2.14282513e-01,\n'
 '         3.06479216e+00, -1.65499940e-01, -2.35552216e+00,\n'
 '        -4.68298048e-01,  1.16418946e+00, -2.57423067e+00,\n'
 '         9.43973839e-01,  9.02402699e-01,  2.40514412e-01,\n'
 '        -1.02933001e+00,  1.03496563e+00,  1.31468070e+00,\n'
 '         4.10640955e+00, -5.94488621e-01,  1.37313438e+00,\n'
 '         8.36658955e-01,  1.40958667e+00, -3.02821040e-01,\n'
 '        -2.98247004e+00, -3.01769638e+00,  2.07914066e+00,\n'
 '        -1.27231705e+00, -2.01055676e-01, -1.21749020e+00,\n'
 '         6.55219793e-01,  2.02506423e-01,  3.67078692e-01,\n'
 '         2.58206177e+00,  2.63232470e+00, -4.16089177e-01,\n'
 '        -1.87046313e+00, -2.09877229e+00, -1.22372222e+00,\n'
 '        -3.18199038e-01, -3.58243227e-01, -2.34327054e+00,\n'
 '         1.32269311e+00,  1.06876862e+00, -6.74101591e-01,\n'
 '         1.01182353e+00, -2.83446908e-02,  3.48807907e+00,\n'
 '        -1.51750058e-01, -1.79294169e+00,  4.78732735e-02,\n'
 '         9.66852903e-02,  2.09706354e+00,  3.19052964e-01,\n'
 '        -5.70908904e-01, -1.59889591e+00,  3.71937036e-01,\n'
 '         3.50559854e+00, -1.29303336e+00, -6.56285226e-01,\n'
 '         9.60871995e-01, -1.40980053e+00,  5.71031094e-01,\n'
 '        -2.13789582e-01, -8.06487024e-01, -2.53497934e+00,\n'
 '        -9.77292210e-02, -8.17912400e-01,  2.96075726e+00,\n'
 '        -1.05629969e+00, -1.49212790e+00, -8.48341167e-01,\n'
 '         9.72598076e-01, -1.36585522e+00,  3.52270335e-01,\n'
 '        -7.99115956e-01,  9.44095492e-01,  1.15634596e+00,\n'
 '         4.80200320e-01, -9.64420259e-01,  1.94869995e-01,\n'
 '        -2.15550840e-01, -4.55276847e-01,  3.66771698e-01,\n'
 '        -1.13967216e+00, -6.45654440e-01,  1.79732609e+00,\n'
 '        -2.40546155e+00,  2.46175766e+00, -6.44543394e-02,\n'
 '        -4.58311111e-01, -1.00500572e+00,  6.26194716e-01,\n'
 '        -2.48538923e+00, -2.65456581e+00, -3.18654227e+00,\n'
 '        -1.62254882e+00,  1.97926104e+00,  1.23306394e-01,\n'
 '         1.79535115e+00,  1.28938413e+00,  2.17833662e+00,\n'
 '         6.31653428e-01, -5.54016173e-01, -6.62852287e-01,\n'
 '         3.07804346e+00, -1.74875927e+00, -3.06026554e+00,\n'
 '         5.26063979e-01,  6.87379718e-01, -2.20275119e-01,\n'
 '         5.43160319e-01,  1.88061938e-01,  1.55653346e+00,\n'
 '        -7.71353304e-01,  5.75729370e-01, -2.38421932e-01,\n'
 '        -8.57060254e-02,  8.00459623e-01, -4.21182662e-01,\n'
 '         2.40344858e+00,  1.29913285e-01,  1.98497608e-01,\n'
 '        -7.04556167e-01, -1.68635058e+00,  2.21597016e-01,\n'
 '        -1.86288282e-02,  1.27470875e+00, -6.38679564e-01,\n'
 '         3.94760340e-01, -2.46256709e-01,  1.42927706e+00,\n'
 '         2.87238431e+00,  1.29513788e+00,  1.63646996e+00,\n'
 '         9.03420269e-01, -1.52145132e-01, -1.47911024e+00,\n'
 '         6.22944772e-01,  8.31294417e-01,  1.80569720e+00,\n'
 '         8.93246472e-01,  2.59773493e+00, -6.34840608e-01,\n'
 '         2.29430795e+00,  1.48817348e+00,  3.00163269e+00,\n'
 '         1.40559614e+00,  1.04515266e+00,  6.38004959e-01,\n'
 '         1.85489511e+00,  4.32609606e+00,  1.23604500e+00,\n'
 '        -3.96343052e-01, -1.38585019e+00, -1.80608109e-01,\n'
 '         1.21676493e+00,  8.15657496e-01, -5.91951251e-01,\n'
 '        -2.69985706e-01,  8.98457170e-02, -9.63780999e-01,\n'
 '         2.69973218e-01, -8.63214254e-01, -5.00181317e-02,\n'
 '        -1.06524086e+00, -1.60342598e+00,  1.19633722e+00,\n'
 '        -1.41452599e+00, -1.08676183e+00,  6.01818919e-01,\n'
 '        -2.33955359e+00, -6.19713008e-01,  7.23114669e-01,\n'
 '        -2.36263466e+00, -1.07875633e+00, -9.88653362e-01,\n'
 '         8.13151658e-01,  1.11135328e+00,  2.52598226e-01,\n'
 '         5.20048857e-01, -1.97122860e+00, -3.34119511e+00,\n'
 '        -2.99807429e+00, -2.10485625e+00, -9.12389278e-01,\n'
 '        -8.25940728e-01, -1.12705040e+00, -2.17486024e+00,\n'
 '        -4.96741950e-01]])')
'test_inceptionnet | batch_shape is: [1]'
'test_inceptionnet | logits.shape is: ivy.Shape(1, 1000)'
'||'
'test_inceptionnet | indices_test | true_indices is: [258 270 279]'
'test_inceptionnet | indices_test | calc_indices is: [258 279 270]'
'test_inceptionnet | device is: cpu'
'test_inceptionnet | fw is: numpy'
'test_inceptionnet | load_weights is: False'
'InceptionV3 | build | layer 1/22 built'
'InceptionV3 | build | layer 2/22 built'
'layer 3/22 built'
'InceptionV3 | build | layer 4/22 built'
'InceptionV3 | build | layer 5/22 built'
'InceptionV3 | build | layer 6/22 built'
'InceptionV3 | build | layer 7/22 built'
'InceptionV3 | build | layer 8/22 built'
'InceptionV3 | build | layer 9/22 built'
'InceptionV3 | build | layer 10/22 built'
'InceptionV3 | build | layer 11/22 built'
'InceptionV3 | build | layer 12/22 built'
'InceptionV3 | build | layer 13/22 built'
'InceptionV3 | build | layer 14/22 built'
'InceptionV3 | build | layer 15/22 built'
'InceptionV3 | build | layer 17/22 built'
'InceptionV3 | build | layer 18/22 built'
'InceptionV3 | build | layer 19/22 built'
'InceptionV3 | build | layer 20/22 built'
'InceptionV3 | build | layer 21/22 built'
'InceptionV3 | build | layer 22/22 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/4 built'
'layer 2/4 built'
'layer 3/4 built'
'layer 4/4 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/6 built'
'layer 2/6 built'
'layer 3/6 built'
'layer 4/6 built'
'layer 5/6 built'
'layer 6/6 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'inceptionNet_v3 | building InceptionV3 model | done 1/3'
'InceptionV3 | forward | input shape is:ivy.Shape(1, 3, 224, 224) | done 1/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 3, 224, 224) | done 0/3'
'test_inceptionnet | device is: cpu'
'test_inceptionnet | fw is: numpy'
'test_inceptionnet | load_weights is: True'
'InceptionV3 | build | layer 1/22 built'
'InceptionV3 | build | layer 2/22 built'
'layer 3/22 built'
'InceptionV3 | build | layer 4/22 built'
'InceptionV3 | build | layer 5/22 built'
'InceptionV3 | build | layer 6/22 built'
'InceptionV3 | build | layer 7/22 built'
'InceptionV3 | build | layer 8/22 built'
'InceptionV3 | build | layer 9/22 built'
'InceptionV3 | build | layer 10/22 built'
'InceptionV3 | build | layer 11/22 built'
'InceptionV3 | build | layer 12/22 built'
'InceptionV3 | build | layer 13/22 built'
'InceptionV3 | build | layer 14/22 built'
'InceptionV3 | build | layer 15/22 built'
'InceptionV3 | build | layer 17/22 built'
'InceptionV3 | build | layer 18/22 built'
'InceptionV3 | build | layer 19/22 built'
'InceptionV3 | build | layer 20/22 built'
'InceptionV3 | build | layer 21/22 built'
'InceptionV3 | build | layer 22/22 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/4 built'
'layer 2/4 built'
'layer 3/4 built'
'layer 4/4 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/6 built'
'layer 2/6 built'
'layer 3/6 built'
'layer 4/6 built'
'layer 5/6 built'
'layer 6/6 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'inceptionNet_v3 | building InceptionV3 model | done 1/3'
'inceptionNet_v3 | clearning pretrained weights | done 2/3'
'inceptionNet_v3 | loading pretrained weights | done 3/3'
'InceptionV3 | forward | input shape is:ivy.Shape(1, 3, 224, 224) | done 1/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 3, 224, 224) | done 0/3'
'test_inceptionnet | device is: cpu'
'test_inceptionnet | fw is: jax'
'test_inceptionnet | load_weights is: False'
'InceptionV3 | build | layer 1/22 built'
'InceptionV3 | build | layer 2/22 built'
'layer 3/22 built'
'InceptionV3 | build | layer 4/22 built'
'InceptionV3 | build | layer 5/22 built'
'InceptionV3 | build | layer 6/22 built'
'InceptionV3 | build | layer 7/22 built'
'InceptionV3 | build | layer 8/22 built'
'InceptionV3 | build | layer 9/22 built'
'InceptionV3 | build | layer 10/22 built'
'InceptionV3 | build | layer 11/22 built'
'InceptionV3 | build | layer 12/22 built'
'InceptionV3 | build | layer 13/22 built'
'InceptionV3 | build | layer 14/22 built'
'InceptionV3 | build | layer 15/22 built'
'InceptionV3 | build | layer 17/22 built'
'InceptionV3 | build | layer 18/22 built'
'InceptionV3 | build | layer 19/22 built'
'InceptionV3 | build | layer 20/22 built'
'InceptionV3 | build | layer 21/22 built'
'InceptionV3 | build | layer 22/22 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/4 built'
'layer 2/4 built'
'layer 3/4 built'
'layer 4/4 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/6 built'
'layer 2/6 built'
'layer 3/6 built'
'layer 4/6 built'
'layer 5/6 built'
'layer 6/6 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'inceptionNet_v3 | building InceptionV3 model | done 1/3'
'InceptionV3 | forward | input shape is:ivy.Shape(1, 224, 224, 3) | done 1/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 224, 224, 3) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 111, 111, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 111, 111, 32) | done 2/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 111, 111, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 32) | done 3/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 109, 109, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 64) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 64) | done 4/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 54, 54, 64) | done 5/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 54, 54, 80) | done 3/3'
'InceptionV3 | forward | is:ivy.Shape(1, 54, 54, 80) | done 6/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 80) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 52, 52, 192) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 52, 52, 192) | done 7/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 192) | done 8/27'
'input shape is:ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 32) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 32)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 25, 25, 256) | done 9/27'
'input shape is:ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 10/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 11/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 384) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 96) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 96)'
'one 20/20, output shape is:ivy.Shape(1, 12, 12, 288)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 12/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 12, 12, 768) | done 13/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 14/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 15/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 16/27'
'v3 16/27, output shape is:ivy.Shape(1, 12, 12, 768)'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 5, 5, 192)'
'one 7/20, output shape is:ivy.Shape(1, 5, 5, 768)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 1280) | done 17/27'
'input shape is:ivy.Shape(1, 5, 5, 1280)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 18/27'
'input shape is:ivy.Shape(1, 5, 5, 2048)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 19/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 20/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 5, 5) | done 21/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 1, 1) | done 22/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 27/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 24/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 25/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048) | done 26/27'
'InceptionV3 | forward | fc | done 27/27'
('test_inceptionnet | logits is: ivy.array([[ 2.27084395e+04,  9.02972500e+05, '
 '-1.48047031e+05,\n'
 '         1.50825562e+06,  7.02987812e+04,  2.68975719e+05,\n'
 '         6.10630688e+05,  6.24932812e+05,  1.30753211e+05,\n'
 '        -5.68577062e+05, -3.33157781e+05, -2.83188875e+05,\n'
 '         2.90093965e+04,  1.87509625e+05,  2.02536762e+06,\n'
 '         2.20257625e+05,  4.01504375e+05,  4.65943594e+04,\n'
 '        -1.58974672e+05,  9.40858875e+05,  4.19863281e+05,\n'
 '        -2.17941516e+05,  7.28214922e+04, -1.25830800e+06,\n'
 '        -7.19036484e+04,  3.19953594e+05,  1.62201538e+06,\n'
 '         7.42074062e+04,  5.88096438e+05, -1.70515750e+05,\n'
 '         4.23096133e+04,  2.08597375e+06, -1.19681888e+06,\n'
 '        -4.84080656e+05,  5.37465438e+05,  3.94377531e+05,\n'
 '         1.37637688e+06,  1.46621175e+06, -7.28789938e+05,\n'
 '         8.54831719e+04,  2.76134062e+05,  8.09559938e+05,\n'
 '         1.98899562e+05,  1.30644971e+04,  6.01807875e+05,\n'
 '         1.45819425e+06, -4.75434344e+05, -2.17449297e+05,\n'
 '         8.89954438e+05, -2.15412141e+05, -5.15748719e+05,\n'
 '        -8.10930688e+05,  1.21651850e+06, -7.21186062e+05,\n'
 '        -8.53000312e+05,  7.15168125e+04, -1.36163438e+05,\n'
 '         1.48243750e+05, -6.57639438e+05, -1.20536297e+05,\n'
 '        -1.18773075e+06, -5.68357250e+05, -8.83685312e+04,\n'
 '        -5.18229719e+05,  7.62716328e+04, -4.06820562e+05,\n'
 '        -4.36336656e+05,  1.60518675e+06, -3.06847469e+05,\n'
 '         6.21513562e+05,  5.66296750e+05,  8.42708516e+04,\n'
 '         9.35234625e+05, -2.00088172e+05,  1.16045050e+06,\n'
 '        -1.29850712e+06, -5.21900625e+05,  1.43596699e+04,\n'
 '         4.19007812e+05,  2.19740047e+05, -7.69785812e+05,\n'
 '         2.27287297e+05,  2.99672281e+05, -1.07860200e+06,\n'
 '        -9.58209125e+05,  1.23176609e+05,  6.40560062e+05,\n'
 '        -4.32720438e+05, -1.01383356e+06,  7.69803500e+05,\n'
 '        -4.29292906e+05,  2.63589875e+05,  1.24375112e+06,\n'
 '        -2.75201938e+05,  8.32796250e+05, -1.09594350e+06,\n'
 '         1.74809422e+05,  7.53624812e+05, -9.21690812e+05,\n'
 '        -1.21390875e+06,  8.20893625e+05,  9.73333500e+05,\n'
 '        -9.29228188e+05,  4.75898094e+05, -3.18229629e+04,\n'
 '        -3.21347312e+05, -1.85609638e+06,  1.43289750e+06,\n'
 '         7.85911484e+04, -6.27003250e+05, -1.78421825e+06,\n'
 '        -1.50463438e+06, -7.72830188e+05,  6.63451000e+05,\n'
 '        -5.87725438e+05,  1.36936212e+06,  1.04382150e+06,\n'
 '        -1.46193734e+05,  8.18876648e+02, -7.63183875e+05,\n'
 '         8.05949438e+05, -1.36493266e+05, -2.79889188e+05,\n'
 '         5.30569625e+05,  3.55141250e+05,  9.71362625e+05,\n'
 '        -7.56824125e+05,  6.17819625e+05, -8.90573594e+04,\n'
 '         5.77750703e+04, -6.86414688e+05,  8.09985312e+05,\n'
 '        -5.11538188e+05,  3.88458625e+05,  3.37547375e+05,\n'
 '         2.17688781e+05, -7.35891750e+05,  1.46289638e+06,\n'
 '         1.23493500e+06,  2.48038391e+05, -2.07810098e+04,\n'
 '        -9.59415188e+05,  2.65621062e+05,  2.43146609e+05,\n'
 '         1.22876212e+06, -9.83687750e+05, -3.88731094e+05,\n'
 '        -3.95030031e+05,  6.26916250e+05,  1.15571450e+06,\n'
 '         2.41193391e+05,  1.85555838e+06, -6.50659812e+05,\n'
 '         4.59495094e+05,  2.61582484e+05,  1.72828625e+06,\n'
 '        -1.02234769e+06, -4.56392656e+05,  5.22639281e+05,\n'
 '         8.57937125e+05,  8.31108438e+05,  2.33619359e+05,\n'
 '         4.92552422e+04,  4.39586812e+05, -1.35213238e+06,\n'
 '         7.16408500e+05,  3.20125449e+04,  2.40780906e+05,\n'
 '         6.80569625e+05,  7.89717812e+05, -1.15271175e+06,\n'
 '        -7.02726438e+05, -3.81885688e+05, -1.96929375e+05,\n'
 '        -2.92472875e+05,  1.30884212e+06, -3.95611125e+05,\n'
 '        -3.74716281e+05, -7.51081812e+05,  5.76059938e+05,\n'
 '        -5.64187109e+04, -6.60568438e+05, -7.08046000e+05,\n'
 '         7.78135562e+05,  2.18974453e+05,  7.40767125e+05,\n'
 '        -1.82856172e+05,  3.12592406e+05, -5.47137125e+05,\n'
 '         7.52161406e+04,  3.62288875e+05,  2.25959578e+05,\n'
 '         1.92623612e+06,  3.07432719e+05,  6.98658750e+05,\n'
 '         7.66415391e+04, -1.33137031e+05,  2.59632188e+05,\n'
 '         7.32712688e+05, -1.45349638e+06,  1.75446488e+06,\n'
 '         8.16790781e+04,  9.09932812e+05, -1.91672725e+06,\n'
 '        -4.99043438e+05, -1.13303212e+06, -2.00186469e+05,\n'
 '        -3.28237062e+05,  4.94655969e+05, -2.03303000e+06,\n'
 '         1.03794875e+05, -1.31923100e+06, -5.64653164e+04,\n'
 '         1.21348325e+06,  9.07457500e+05,  5.37380688e+05,\n'
 '         1.40278250e+05,  3.79335750e+05,  1.25540625e+06,\n'
 '         3.75894375e+05, -2.62877109e+04,  1.95657900e+06,\n'
 '        -1.46682812e+06, -1.08184250e+06,  9.01433312e+05,\n'
 '         1.54767281e+05, -3.73943688e+05,  1.07149412e+06,\n'
 '         1.04456856e+06,  1.78476609e+05, -6.26699188e+05,\n'
 '         1.04802531e+05, -4.39842750e+05, -4.61283281e+05,\n'
 '         4.22378312e+05,  8.72257125e+05, -4.11975719e+05,\n'
 '         5.51981938e+05, -5.99553938e+05, -3.97749594e+05,\n'
 '        -1.32340812e+06,  1.20767451e+04,  1.14941812e+06,\n'
 '        -1.07244797e+05, -7.22422062e+05,  2.61445547e+05,\n'
 '         1.37003450e+06, -6.91242875e+05,  4.60995219e+05,\n'
 '        -3.92568031e+05,  2.48722141e+05,  6.71538750e+04,\n'
 '        -1.44004312e+05,  2.88087781e+05, -6.22725062e+05,\n'
 '        -8.64359688e+05, -1.60492031e+05, -6.48684375e+05,\n'
 '         1.87939500e+05,  1.98981189e+03, -8.94329812e+05,\n'
 '        -1.01909269e+06, -1.84213531e+05,  1.48209450e+06,\n'
 '         1.39470075e+06,  1.37372850e+06,  2.15668691e+04,\n'
 '         6.27385750e+05,  1.09853012e+06, -2.86074219e+05,\n'
 '         5.03453781e+05, -1.60696062e+05,  2.05210200e+06,\n'
 '         5.86930500e+05,  1.40264038e+06, -2.50633422e+05,\n'
 '        -4.92803688e+05,  4.02463000e+05,  5.33786062e+05,\n'
 '        -3.05854719e+05, -7.87882375e+05, -5.14118969e+05,\n'
 '        -2.73146156e+05, -5.01138375e+05, -1.48372859e+05,\n'
 '        -1.15602388e+06,  1.47207641e+05, -5.15511062e+05,\n'
 '        -5.70746445e+04,  1.91043672e+05,  7.57703875e+05,\n'
 '         1.05512925e+06, -9.28310750e+05, -3.12541344e+05,\n'
 '        -1.90201100e+06, -4.62225664e+04, -9.08511062e+05,\n'
 '         1.09302539e+05, -4.85479438e+05, -1.02674269e+06,\n'
 '         3.36556062e+05, -7.47929141e+04, -4.60339656e+05,\n'
 '         3.89840500e+05,  2.05095266e+05, -2.60315750e+05,\n'
 '         5.35608000e+05, -1.56728712e+06,  7.43279750e+05,\n'
 '         3.97453250e+05,  4.54822031e+04,  1.36477850e+06,\n'
 '        -1.75557938e+05, -4.16768312e+05, -7.46268438e+05,\n'
 '        -5.54310000e+05, -1.00233606e+06,  1.68918050e+06,\n'
 '         1.00425431e+06,  3.55155250e+05,  6.23095188e+05,\n'
 '         2.92622250e+05, -1.06731125e+06,  2.08332219e+05,\n'
 '        -1.07421050e+06,  5.49440750e+05,  1.07688850e+06,\n'
 '         2.59701406e+05, -7.62969188e+05, -7.74702250e+05,\n'
 '         1.04487088e+06,  1.57227788e+06, -6.96917125e+05,\n'
 '         9.38282938e+05,  1.14312662e+06,  2.09476850e+06,\n'
 '         2.29207844e+05,  7.65937000e+05, -1.64462725e+06,\n'
 '        -5.71962383e+04,  1.37637688e+05, -1.05242800e+06,\n'
 '        -1.90963703e+05,  6.35949875e+05,  1.56954800e+06,\n'
 '        -1.26616612e+06,  3.95247812e+05,  1.99192297e+05,\n'
 '        -1.86013900e+06, -5.16028672e+04,  2.83365410e+04,\n'
 '         3.82021000e+05, -9.37556938e+05, -1.07378162e+06,\n'
 '         1.19848195e+05, -8.46073812e+05,  6.38205312e+05,\n'
 '         1.22826172e+05,  4.05804281e+05, -2.86442344e+05,\n'
 '         4.83463938e+05,  4.12525500e+05,  8.38660500e+05,\n'
 '        -1.14768638e+06,  3.76596000e+05,  5.48542500e+04,\n'
 '         7.93801000e+05,  6.86907000e+05, -4.52541219e+05,\n'
 '        -8.01828438e+05,  6.98008000e+05, -7.03807312e+05,\n'
 '         4.46524156e+05,  5.03399453e+04,  1.19284400e+06,\n'
 '        -1.37792912e+06, -5.55808375e+05,  1.76651297e+05,\n'
 '        -4.96840000e+05, -1.11596538e+06,  3.82885000e+05,\n'
 '        -1.41837875e+06,  1.65940312e+06,  4.12881188e+05,\n'
 '        -1.82565225e+06, -3.70386844e+05, -3.95065594e+05,\n'
 '        -1.20748488e+06, -4.21470812e+05,  8.45168688e+05,\n'
 '         5.56933750e+05, -6.94625812e+05, -1.14152266e+05,\n'
 '        -1.33040100e+06, -3.59714812e+05, -9.90715625e+05,\n'
 '        -7.71940562e+05,  7.21533188e+05, -1.27485462e+06,\n'
 '         1.72848300e+06, -1.53974188e+06,  5.98841375e+05,\n'
 '        -9.87896312e+05, -5.52485352e+04,  6.14740250e+05,\n'
 '         9.76677875e+05, -4.18782062e+05,  7.34768375e+05,\n'
 '         4.23655438e+05, -1.35882175e+06,  8.81446312e+05,\n'
 '         3.90757938e+05, -2.80798188e+05,  5.04923438e+05,\n'
 '        -6.51337438e+05,  1.90480656e+05,  2.95388156e+05,\n'
 '        -7.26610312e+04,  4.46717594e+05,  1.17269150e+06,\n'
 '         1.15506398e+05,  1.48547078e+05, -1.39120500e+05,\n'
 '         1.14865562e+06,  3.46532000e+05,  3.26983531e+05,\n'
 '        -5.15743156e+05,  4.13009594e+05, -6.02194375e+05,\n'
 '         1.42647725e+06,  1.07936836e+05, -6.82474438e+05,\n'
 '        -1.14221188e+05,  1.36054525e+06, -1.62322351e+03,\n'
 '         1.97578828e+05,  8.84178750e+05,  2.62142891e+05,\n'
 '        -3.95521094e+05,  5.83997812e+05, -1.06751912e+06,\n'
 '         4.21863625e+05,  7.49413750e+05, -1.07173212e+06,\n'
 '         8.22961719e+04, -3.07678531e+05, -2.22025975e+06,\n'
 '         1.40206875e+05, -8.68673438e+04, -7.31904453e+04,\n'
 '        -9.29801625e+05,  2.30731150e+06, -9.21194438e+05,\n'
 '         2.30537688e+05,  5.40924500e+05,  2.81615469e+05,\n'
 '         6.15488062e+05,  8.14787688e+05, -2.64272125e+05,\n'
 '         3.32288094e+05, -5.68552750e+05,  6.84758312e+05,\n'
 '         8.62265312e+05, -6.31073000e+05, -5.40629625e+05,\n'
 '         2.48431469e+05, -1.80827475e+06,  1.38531862e+06,\n'
 '         7.99734562e+05,  2.01591750e+06, -4.40999170e+03,\n'
 '         5.14470156e+05, -1.26430912e+06, -1.39299525e+06,\n'
 '         2.61358422e+05, -1.00200438e+06, -1.36715850e+06,\n'
 '         6.88174250e+05,  4.05390281e+05,  6.75570438e+05,\n'
 '        -2.13560273e+04, -1.15000412e+06,  1.55199953e+05,\n'
 '         5.30019688e+05,  7.71797062e+05, -1.58354859e+05,\n'
 '         1.79690844e+05,  1.50209512e+06,  4.19722344e+05,\n'
 '         3.62443062e+05, -7.28148250e+05,  3.49982422e+04,\n'
 '        -1.68797625e+06,  9.42571328e+04, -1.44442025e+06,\n'
 '         1.19755312e+04,  8.98598125e+05, -8.98940859e+04,\n'
 '         1.06205712e+06,  1.08757312e+06,  5.78625156e+04,\n'
 '         8.20948125e+04,  5.70025125e+05, -2.19163531e+05,\n'
 '        -3.58901938e+05,  1.78374297e+04, -2.43691484e+05,\n'
 '         2.49889531e+05, -6.41067125e+05,  4.87933250e+05,\n'
 '        -1.70969016e+05, -1.02148819e+06,  1.52062062e+06,\n'
 '        -7.30923188e+05,  6.97791875e+05, -5.50513188e+05,\n'
 '         1.80171138e+06,  4.45116188e+05, -1.85772359e+05,\n'
 '         1.16753800e+06, -3.94404500e+05, -1.00639300e+06,\n'
 '        -3.59689375e+05, -1.64956922e+05, -1.40841362e+06,\n'
 '        -5.53734424e+03, -3.62630094e+05, -1.17618088e+06,\n'
 '        -1.40571391e+05, -1.43034038e+06, -4.50712688e+05,\n'
 '        -7.96505938e+04,  1.50337362e+06, -1.49241975e+06,\n'
 '        -2.02633531e+05,  2.15233000e+05, -3.63074406e+05,\n'
 '        -6.14222383e+04, -4.22021523e+04, -8.65703375e+05,\n'
 '         8.11547375e+05, -1.60554312e+05,  6.22248625e+05,\n'
 '        -5.31342375e+05,  6.95865625e+04, -8.20804188e+05,\n'
 '        -7.52556688e+05,  8.02795812e+05, -5.64986812e+05,\n'
 '         7.06484219e+04, -2.75366969e+05, -1.13889062e+06,\n'
 '         3.96665219e+05, -1.65347462e+06,  3.81297070e+04,\n'
 '         4.02649438e+05,  1.25365138e+06,  1.27079462e+06,\n'
 '        -4.95469656e+05, -1.82857219e+05, -1.25939212e+06,\n'
 '         9.67801688e+05, -1.88724438e+05, -1.50761175e+06,\n'
 '        -1.44138562e+05,  4.24874594e+05, -2.61173625e+05,\n'
 '         8.08446625e+05, -9.50742188e+04, -4.42479812e+05,\n'
 '         4.68949125e+05, -3.39622250e+05,  1.70392350e+06,\n'
 '        -3.12471000e+05, -9.01093812e+05, -2.24732641e+05,\n'
 '         5.97289500e+05, -1.52318150e+06,  2.98857375e+05,\n'
 '        -4.96681688e+05, -1.03513012e+06,  8.90078188e+05,\n'
 '         1.94942391e+05,  6.13725742e+04,  5.47331812e+05,\n'
 '         1.34681650e+06, -2.97997594e+05, -1.22748075e+06,\n'
 '        -1.94616016e+05,  9.84827375e+05,  3.76015844e+05,\n'
 '        -1.00222258e+05,  8.62951688e+05, -5.93963984e+04,\n'
 '        -3.56981594e+05, -1.99279125e+05,  9.49325438e+05,\n'
 '         6.69539062e+05, -4.68403719e+05, -6.74919125e+05,\n'
 '        -3.62755594e+05, -7.91146562e+05,  7.08309453e+04,\n'
 '         8.74937188e+04,  2.34538125e+05,  1.15972212e+06,\n'
 '        -5.77441000e+05,  1.67352750e+05, -5.22249312e+05,\n'
 '         7.88284312e+05,  1.02704194e+06,  4.12872094e+05,\n'
 '         5.27219500e+05, -1.58521888e+06,  9.24713125e+05,\n'
 '         2.62229344e+05,  6.39620062e+05, -1.16177539e+04,\n'
 '        -9.08113500e+05,  1.32374750e+06,  1.33267512e+06,\n'
 '        -2.38153574e+04,  6.30908375e+05, -9.73825500e+05,\n'
 '         4.62256188e+05,  2.28857266e+05, -1.97358500e+06,\n'
 '        -8.12561500e+05, -3.02644219e+05,  1.46317262e+06,\n'
 '         1.50520359e+05, -2.09811625e+05,  1.26390175e+06,\n'
 '        -1.26793800e+06,  1.15505412e+06,  2.81820000e+05,\n'
 '        -5.39160625e+05,  3.16407250e+05,  3.12545312e+05,\n'
 '         9.06577750e+05,  2.00814094e+05,  1.35920812e+06,\n'
 '        -8.27918000e+05, -1.71361612e+06,  6.30509125e+05,\n'
 '         5.83808750e+05, -3.41343531e+05, -7.81941750e+05,\n'
 '         7.64577062e+05,  8.08521125e+05, -4.34193875e+05,\n'
 '        -9.24373125e+05, -9.30527266e+04,  9.15929812e+05,\n'
 '         6.43459000e+05, -2.95738594e+05,  1.96295900e+06,\n'
 '        -5.09570281e+05, -1.09431328e+05, -7.62834000e+05,\n'
 '        -6.15095875e+05,  1.03050594e+05,  1.90998516e+04,\n'
 '         1.08343262e+06, -5.23635500e+05,  9.90537938e+05,\n'
 '         1.42688969e+05,  7.10888000e+05, -4.29831094e+05,\n'
 '        -1.56238412e+06,  4.54556969e+05, -3.73602750e+05,\n'
 '         1.10121562e+06,  4.56195688e+05, -8.19388438e+05,\n'
 '         1.15271525e+06, -5.75328500e+05, -1.43965800e+06,\n'
 '         1.10569138e+06, -1.05508450e+06, -9.13289812e+05,\n'
 '         9.42776125e+05, -3.62666594e+05, -7.96357875e+05,\n'
 '        -8.21629938e+05, -4.77761094e+05,  6.06834312e+05,\n'
 '         6.28162750e+05,  1.69995031e+05,  8.14085750e+05,\n'
 '         1.15984788e+06,  9.15983750e+05, -3.11007812e+05,\n'
 '         4.72976469e+05, -1.01461844e+06,  4.52257594e+05,\n'
 '         3.23171406e+04,  4.91196250e+04, -7.91354062e+05,\n'
 '         4.44375531e+05, -7.17157562e+05,  3.11285906e+05,\n'
 '        -7.21715188e+05,  1.04439338e+06,  1.27689867e+05,\n'
 '        -3.63900781e+05,  1.38301312e+05, -6.27084258e+04,\n'
 '         5.22813469e+05, -1.23067100e+06,  6.40323750e+05,\n'
 '        -4.85705820e+04, -1.01203750e+05, -5.10921938e+05,\n'
 '        -1.68379350e+06,  9.37163250e+05,  9.11155156e+04,\n'
 '         2.58276525e+06,  2.70809500e+05, -8.14711312e+05,\n'
 '        -9.39403625e+05, -1.19054562e+06, -6.70934750e+05,\n'
 '         5.26936125e+05, -6.49491812e+05, -4.24938719e+05,\n'
 '         2.87811531e+05, -1.59637156e+05,  3.82491719e+05,\n'
 '        -7.78327000e+05,  2.75579750e+05,  1.84554297e+05,\n'
 '        -7.05086062e+05,  9.05459180e+03,  5.19070344e+05,\n'
 '         9.90307625e+05, -2.10956300e+06, -7.79882938e+05,\n'
 '         9.78354625e+05,  6.78559375e+04, -1.23904500e+06,\n'
 '        -5.19129453e+04,  3.49646094e+05, -1.62400612e+06,\n'
 '        -1.30687862e+06, -3.71802344e+04, -3.05626938e+05,\n'
 '         2.87357562e+05,  3.63732188e+05, -2.90001688e+05,\n'
 '        -2.14320859e+05,  2.62651062e+05,  6.12501875e+05,\n'
 '        -1.15810312e+06, -7.06190938e+05, -1.35722862e+06,\n'
 '         2.85307406e+05,  3.00312188e+05, -6.41766438e+05,\n'
 '         5.37723062e+05,  3.93349219e+05,  2.55418859e+05,\n'
 '         4.43621781e+05, -1.03633275e+06,  7.47406445e+03,\n'
 '        -1.34847656e+05,  7.42764812e+05, -6.93185625e+04,\n'
 '         1.14048975e+06, -8.91111000e+05, -1.69679988e+06,\n'
 '        -1.05524212e+06, -6.32073688e+05,  2.79687969e+05,\n'
 '         8.63609938e+05,  1.52908734e+05, -4.88472094e+05,\n'
 '        -1.41315662e+06,  5.87635812e+05, -7.01594438e+05,\n'
 '         1.22973641e+05, -1.02577109e+05, -4.33570469e+05,\n'
 '        -2.58075000e+05, -7.32435812e+05,  7.20186938e+05,\n'
 '         7.23285688e+05,  1.26857700e+06,  1.87966750e+05,\n'
 '        -1.50135550e+06, -8.80149219e+03, -8.79030875e+05,\n'
 '        -1.06649844e+05, -2.60005516e+05,  1.88685406e+05,\n'
 '        -3.44751125e+05, -2.37459688e+05, -1.13153938e+06,\n'
 '        -1.21080950e+06,  2.60553812e+05,  1.19474900e+06,\n'
 '        -7.92677875e+05,  2.24565109e+05, -3.66438188e+05,\n'
 '         8.72658906e+04,  1.44445225e+06, -3.66013469e+05,\n'
 '        -1.36231088e+06,  2.07035547e+05,  3.91077979e+03,\n'
 '         6.53184312e+05,  6.14978125e+05,  9.27509750e+05,\n'
 '         1.00306644e+06, -9.52440688e+05, -9.21691250e+05,\n'
 '        -3.92921594e+05, -7.02343125e+05,  1.88907719e+05,\n'
 '        -2.70035375e+05,  1.02456150e+06, -8.77804188e+05,\n'
 '        -3.50133359e+04,  1.20166900e+06,  7.93501875e+05,\n'
 '         2.72854469e+05, -2.92181125e+05,  7.85173984e+04,\n'
 '         1.49869162e+06,  4.47160594e+05, -3.92792812e+04,\n'
 '        -2.76478789e+04,  8.07951438e+05, -9.71275625e+05,\n'
 '        -1.28009338e+06,  1.68594062e+06,  6.24214562e+05,\n'
 '         9.38662312e+05, -5.50984938e+05,  6.90251625e+05,\n'
 '        -2.76022719e+05, -2.46431250e+05, -3.78154719e+05,\n'
 '        -9.16080188e+05, -7.42604688e+05, -5.56462734e+04,\n'
 '        -4.98757688e+05, -1.42557612e+06, -7.74051688e+05,\n'
 '         3.73114219e+05,  2.33265797e+05, -9.99750062e+05,\n'
 '         1.23287325e+06,  5.41457891e+04, -2.35233234e+05,\n'
 '         6.80171062e+05,  5.55091812e+05,  5.69809062e+05,\n'
 '         5.59522688e+05,  3.94537750e+05,  1.43355525e+06,\n'
 '         7.53863750e+05,  6.07625469e+04,  1.90707094e+05,\n'
 '        -7.83863750e+05,  2.32183578e+05,  4.87705469e+05,\n'
 '        -9.46947031e+04,  1.35413300e+06, -9.26950234e+04,\n'
 '        -1.21672088e+06,  6.07823125e+05, -2.47102828e+05,\n'
 '         2.50762363e+04, -1.30039388e+06, -8.11621500e+05,\n'
 '        -3.15730977e+04,  5.31300750e+05, -2.80446312e+05,\n'
 '         4.78108281e+05, -9.10854938e+05,  4.94714938e+05,\n'
 '        -5.23183375e+05, -3.58921656e+05, -6.45320742e+04,\n'
 '         5.42101750e+05,  2.02089359e+05,  9.63581562e+05,\n'
 '         1.00533419e+06, -3.22790156e+05, -5.21668469e+05,\n'
 '         7.52662625e+05, -3.05606750e+05,  4.05685281e+05,\n'
 '        -1.46442188e+05,  4.56535078e+04,  9.13729250e+05,\n'
 '         7.58584250e+05,  1.42608375e+06,  3.12428438e+05,\n'
 '         1.37281362e+06,  7.23585938e+05, -4.44447375e+05,\n'
 '         6.82772688e+05, -9.09513938e+05,  2.46396641e+05,\n'
 '        -5.53683938e+05,  9.13081000e+05, -1.80966516e+05,\n'
 '         1.60022734e+04, -6.64700438e+05,  4.35639453e+04,\n'
 '         4.51118656e+05, -3.98245906e+05,  2.30071031e+05,\n'
 '         1.66656588e+06,  8.22070312e+05, -5.96871375e+05,\n'
 '        -8.96781625e+05,  3.68316602e+04,  4.17928062e+05,\n'
 '        -3.45903094e+05, -1.18205438e+05, -1.27579775e+06,\n'
 '         1.36796975e+06,  8.40630750e+05,  8.79737891e+03,\n'
 '         1.45047922e+05, -7.05771719e+04, -2.26442312e+05,\n'
 '        -6.96615625e+05, -9.20170688e+05,  1.99631047e+05,\n'
 '        -5.19155625e+05, -4.46190688e+05, -3.21601844e+05,\n'
 '        -6.15022562e+05, -1.55029619e+04,  9.06098688e+05,\n'
 '         1.32059000e+06, -3.10154188e+05,  8.19848938e+05,\n'
 '        -7.84361562e+04,  3.17137637e+04,  3.58130656e+05,\n'
 '         1.25313338e+06, -7.57740312e+05,  6.55118688e+05,\n'
 '        -8.03117125e+05,  9.42087562e+05, -8.47913250e+05,\n'
 '        -1.42983875e+06,  1.35585250e+05,  1.44066925e+06,\n'
 '         4.65618469e+05, -4.46187188e+04,  2.53913984e+05,\n'
 '        -1.76670734e+05, -1.01574469e+06, -2.78105750e+05,\n'
 '        -1.23381047e+05, -8.18085438e+05, -8.10626312e+05,\n'
 '        -1.58370609e+05, -1.29610175e+06,  2.61925891e+05,\n'
 '        -1.90716700e+06,  1.17159225e+06, -1.13790075e+06,\n'
 '         4.74739750e+05, -2.67889250e+05, -7.38362438e+05,\n'
 '         6.44241750e+05, -3.56749344e+05, -1.97098425e+06,\n'
 '        -4.14758633e+04,  1.27711025e+06, -8.10065812e+05,\n'
 '         1.84526938e+06, -1.30830250e+06, -1.22108662e+06,\n'
 '        -1.91218328e+05,  1.41957312e+06, -2.65781781e+05,\n'
 '         2.88492938e+05, -6.63087625e+05,  9.88722625e+05,\n'
 '        -4.27766656e+05, -7.56106125e+05, -1.67167234e+05,\n'
 '         1.23355262e+06, -3.22191375e+05,  6.43785438e+05,\n'
 '        -3.03078250e+05,  2.05577225e+06,  1.38688825e+06,\n'
 '        -5.44754258e+04,  1.21694100e+06,  2.35964656e+05,\n'
 '        -8.22704812e+05]])')
'test_inceptionnet | batch_shape is: [1]'
'test_inceptionnet | logits.shape is: ivy.Shape(1, 1000)'
'||'
'test_inceptionnet | device is: cpu'
'test_inceptionnet | fw is: jax'
'test_inceptionnet | load_weights is: True'
'InceptionV3 | build | layer 1/22 built'
'InceptionV3 | build | layer 2/22 built'
'layer 3/22 built'
'InceptionV3 | build | layer 4/22 built'
'InceptionV3 | build | layer 5/22 built'
'InceptionV3 | build | layer 6/22 built'
'InceptionV3 | build | layer 7/22 built'
'InceptionV3 | build | layer 8/22 built'
'InceptionV3 | build | layer 9/22 built'
'InceptionV3 | build | layer 10/22 built'
'InceptionV3 | build | layer 11/22 built'
'InceptionV3 | build | layer 12/22 built'
'InceptionV3 | build | layer 13/22 built'
'InceptionV3 | build | layer 14/22 built'
'InceptionV3 | build | layer 15/22 built'
'InceptionV3 | build | layer 17/22 built'
'InceptionV3 | build | layer 18/22 built'
'InceptionV3 | build | layer 19/22 built'
'InceptionV3 | build | layer 20/22 built'
'InceptionV3 | build | layer 21/22 built'
'InceptionV3 | build | layer 22/22 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/4 built'
'layer 2/4 built'
'layer 3/4 built'
'layer 4/4 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/6 built'
'layer 2/6 built'
'layer 3/6 built'
'layer 4/6 built'
'layer 5/6 built'
'layer 6/6 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'inceptionNet_v3 | building InceptionV3 model | done 1/3'
'inceptionNet_v3 | clearning pretrained weights | done 2/3'
'inceptionNet_v3 | loading pretrained weights | done 3/3'
'InceptionV3 | forward | input shape is:ivy.Shape(1, 224, 224, 3) | done 1/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 224, 224, 3) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 111, 111, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 111, 111, 32) | done 2/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 111, 111, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 32) | done 3/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 109, 109, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 64) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 64) | done 4/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 54, 54, 64) | done 5/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 54, 54, 80) | done 3/3'
'InceptionV3 | forward | is:ivy.Shape(1, 54, 54, 80) | done 6/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 80) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 52, 52, 192) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 52, 52, 192) | done 7/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 192) | done 8/27'
'input shape is:ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 32) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 32)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 25, 25, 256) | done 9/27'
'input shape is:ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 10/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 11/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 384) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 96) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 96)'
'one 20/20, output shape is:ivy.Shape(1, 12, 12, 288)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 12/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 12, 12, 768) | done 13/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 14/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 15/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 16/27'
'v3 16/27, output shape is:ivy.Shape(1, 12, 12, 768)'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 5, 5, 192)'
'one 7/20, output shape is:ivy.Shape(1, 5, 5, 768)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 1280) | done 17/27'
'input shape is:ivy.Shape(1, 5, 5, 1280)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 18/27'
'input shape is:ivy.Shape(1, 5, 5, 2048)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 19/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 20/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 5, 5) | done 21/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 1, 1) | done 22/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 27/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 24/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 25/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048) | done 26/27'
'InceptionV3 | forward | fc | done 27/27'
('test_inceptionnet | logits is: ivy.array([[ 1.31299067e+00, '
 '-9.10785675e-01,  3.29865634e-01,\n'
 '         2.95258331e+00,  8.10467839e-01, -1.74668193e-01,\n'
 '         3.33803892e+00, -4.99150723e-01,  3.54579031e-01,\n'
 '        -2.29515171e+00, -8.64671648e-01, -1.98412105e-01,\n'
 '        -3.90140653e-01,  7.65480340e-01,  1.74564564e+00,\n'
 '        -2.13141465e+00, -7.49898195e-01, -5.30144215e-01,\n'
 '        -8.65069032e-02,  7.65097320e-01,  2.37927437e+00,\n'
 '        -1.88421369e+00,  2.49732637e+00, -1.08412588e+00,\n'
 '        -4.48239707e-02, -1.80822110e+00, -1.82645321e+00,\n'
 '        -1.37985373e+00, -1.37592447e+00, -2.46960449e+00,\n'
 '         3.62911224e-01,  2.09339738e+00,  2.26349568e+00,\n'
 '         2.32192755e-01,  1.15667307e+00, -2.12245965e+00,\n'
 '         1.59595132e+00, -4.85648304e-01, -1.03329372e+00,\n'
 '         1.12369633e+00,  2.13360620e+00,  8.51906762e-02,\n'
 '        -2.22364634e-01, -8.22054446e-02, -1.68499076e+00,\n'
 '        -2.53725553e+00,  3.35364044e-01,  2.46555448e-01,\n'
 '        -6.07675493e-01, -7.94708192e-01, -6.19937956e-01,\n'
 '        -1.70803368e-01, -2.56604493e-01, -2.32648611e+00,\n'
 '        -6.46273255e-01,  1.80998161e-01, -2.00289607e+00,\n'
 '        -1.29700410e+00, -3.74266028e-01, -1.41839993e+00,\n'
 '         1.94198862e-01,  1.05324566e+00, -2.64131141e+00,\n'
 '        -2.48587108e+00, -1.18723214e+00, -1.12153977e-01,\n'
 '        -1.62936866e+00,  3.90243769e-01, -7.47307062e-01,\n'
 '        -7.88031340e-01, -3.14520538e-01, -7.76716471e-01,\n'
 '         6.24767959e-01, -3.83098424e-01,  5.94073296e-01,\n'
 '        -1.92174941e-01, -9.85341787e-01,  7.41531908e-01,\n'
 '         4.97027725e-01,  5.51002264e-01, -1.69560388e-01,\n'
 '         7.84854651e-01, -3.09239179e-02,  7.80681789e-01,\n'
 '         2.94969416e+00, -2.50253499e-01, -1.36229396e+00,\n'
 '        -9.51480746e-01, -5.76352656e-01, -1.02229804e-01,\n'
 '        -1.15596259e+00,  1.81373286e+00, -4.51190352e-01,\n'
 '         1.76809371e-01,  6.65757060e-03, -1.17695928e+00,\n'
 '         1.18426228e+00, -1.24287569e+00, -2.47133231e+00,\n'
 '         2.64641666e+00,  4.80793059e-01, -6.29718900e-02,\n'
 '        -1.69238162e+00, -3.68132055e-01,  2.51331478e-02,\n'
 '        -3.57979584e+00, -2.13572502e+00, -1.47107136e+00,\n'
 '        -3.67922246e-01,  7.73108006e-02,  7.72117734e-01,\n'
 '        -1.33344305e+00,  3.25181222e+00,  2.34909773e+00,\n'
 '         2.54470634e+00, -1.09623992e+00, -1.46703267e+00,\n'
 '         7.89947748e-01, -1.55221403e+00,  7.41268873e-01,\n'
 '         6.34541392e-01, -2.41852617e+00,  1.27628958e+00,\n'
 '         2.69252658e-01, -3.58522153e+00, -1.62909090e-01,\n'
 '         6.48843884e-01,  1.82130682e+00,  6.06242530e-02,\n'
 '        -5.22779077e-02,  1.23804069e+00,  1.93971109e+00,\n'
 '         1.81441760e+00, -2.88097322e-01,  1.18351400e+00,\n'
 '         1.01108658e+00,  2.07667398e+00,  2.81822771e-01,\n'
 '         2.80646443e-01, -1.04469299e+00,  1.24296546e-02,\n'
 '        -3.98072630e-01, -2.22682929e+00, -1.52165949e-01,\n'
 '         3.02570128e+00, -6.50846600e-01,  1.45742750e+00,\n'
 '        -1.76012969e+00,  2.83863872e-01,  8.52133572e-01,\n'
 '         2.07457352e+00, -5.65059721e-01,  2.64077449e+00,\n'
 '         3.31345797e-02,  1.51128924e+00, -3.20420456e+00,\n'
 '        -1.04575205e+00,  2.29367566e+00, -2.14352274e+00,\n'
 '        -1.43027484e-01,  1.52774191e+00, -1.16168821e+00,\n'
 '        -2.65519500e+00,  5.28248429e-01, -4.31282371e-01,\n'
 '         1.10443793e-01, -1.95469415e+00,  4.07777756e-01,\n'
 '        -3.58594283e-02,  2.39306212e+00,  1.20718598e+00,\n'
 '        -7.08570301e-01, -1.38096297e+00,  6.67411625e-01,\n'
 '         2.00255465e+00, -7.56753445e-01,  6.92432106e-01,\n'
 '         3.13523412e-02,  1.53631449e+00, -5.89829803e-01,\n'
 '        -8.13118577e-01,  8.87891769e-01, -1.78675127e+00,\n'
 '        -7.75644302e-01, -7.57714331e-01,  1.58457935e+00,\n'
 '         2.83245373e+00, -1.06754446e+00, -1.07357359e+00,\n'
 '        -3.35644245e+00, -7.28168726e-01, -2.97324002e-01,\n'
 '         6.30246818e-01, -1.64007974e+00, -1.11458659e+00,\n'
 '        -1.01202786e+00, -1.58511639e+00,  1.41391706e+00,\n'
 '        -1.13703072e+00,  4.65241894e-02, -5.28113306e-01,\n'
 '        -6.40718996e-01, -2.75182873e-01,  4.22725916e+00,\n'
 '        -1.78423560e+00, -1.76112258e+00, -2.05757666e+00,\n'
 '         1.09190285e+00, -1.29299629e+00, -9.01336670e-01,\n'
 '        -3.43763739e-01, -2.77540278e+00,  4.84750420e-01,\n'
 '         6.86079264e-01,  1.78497672e+00, -4.74998415e-01,\n'
 '         6.69976592e-01, -2.74188906e-01,  1.61644006e+00,\n'
 '        -3.11041594e+00, -3.58595073e-01,  5.54959893e-01,\n'
 '         4.12714243e+00,  1.60246134e+00,  2.92876053e+00,\n'
 '        -2.00099921e+00,  1.15416884e+00, -2.76475000e+00,\n'
 '        -2.85969615e-01,  4.27217752e-01, -8.16433489e-01,\n'
 '         1.22574461e+00,  1.16542137e+00,  1.19505251e+00,\n'
 '        -3.03234965e-01,  5.01928210e-01,  5.65953851e-01,\n'
 '        -2.18483543e+00,  5.79733491e-01,  6.46641254e-02,\n'
 '         8.06972146e-01,  5.15662193e-01,  7.23054409e-01,\n'
 '        -2.46766615e+00, -2.19184780e+00, -4.98505682e-01,\n'
 '        -7.70313322e-01,  1.89824730e-01,  7.47451925e+00,\n'
 '         5.33715677e+00,  3.57476711e+00, -5.85550487e-01,\n'
 '        -2.40829658e+00, -1.38735032e+00, -1.58301556e+00,\n'
 '         1.08667254e+00,  8.84922862e-01,  8.00869846e+00,\n'
 '         1.86811581e+01,  5.27261925e+00,  5.41108274e+00,\n'
 '         7.16846991e+00, -2.35829353e+00, -1.51112580e+00,\n'
 '        -9.16061759e-01, -3.91483307e-01, -7.69016683e-01,\n'
 '         1.72555733e+00, -7.60342300e-01,  2.46913552e+00,\n'
 '         1.30873938e+01, -1.09022427e+00,  1.53984040e-01,\n'
 '         1.07574791e-01,  5.75494409e-01, -1.79728949e+00,\n'
 '         5.41732788e-01,  2.76693296e+00,  4.58031595e-02,\n'
 '         1.14548016e+01,  4.72625434e-01, -1.26451135e+00,\n'
 '        -7.22915232e-01,  3.83806276e+00, -4.54343468e-01,\n'
 '        -1.82099319e+00, -1.46204531e+00,  1.23415029e+00,\n'
 '         4.09051090e-01,  6.75023913e-01, -5.92758417e-01,\n'
 '         9.47472453e-01,  6.45741969e-02, -1.80035740e-01,\n'
 '        -8.68863344e-01, -1.30519807e+00,  4.78442478e+00,\n'
 '        -1.01080978e+00, -1.25170791e+00, -3.40994310e+00,\n'
 '        -6.45140350e-01, -1.59595239e+00,  7.79892683e-01,\n'
 '        -3.89477611e-02,  7.37080455e-01,  7.20574141e-01,\n'
 '         1.91789538e-01,  1.95250988e+00, -2.82944798e-01,\n'
 '        -6.86722279e-01, -1.11642837e+00,  5.44559717e-01,\n'
 '         1.27283311e+00, -9.63974297e-01, -4.01734650e-01,\n'
 '        -1.21175826e-01, -7.24398911e-01,  6.01847291e-01,\n'
 '        -5.64895153e-01, -1.42287087e+00,  1.83003068e+00,\n'
 '         1.06475651e-02,  5.55099964e-01, -8.66380334e-03,\n'
 '        -2.55518651e+00, -7.32988715e-01,  9.79528248e-01,\n'
 '         6.38596356e-01,  1.58810270e+00, -5.13626337e-01,\n'
 '        -1.02179825e+00,  3.04675841e+00,  2.72728872e+00,\n'
 '        -6.01510108e-01,  2.21661493e-01, -1.81530941e+00,\n'
 '        -1.89841116e+00,  1.00948143e+00,  3.34566474e+00,\n'
 '        -1.97105551e+00,  1.10418093e+00, -5.04382849e-01,\n'
 '        -2.12546140e-01,  7.99889684e-01, -7.32955337e-01,\n'
 '        -8.72524977e-02,  1.73876002e-01,  1.90280581e+00,\n'
 '        -2.09559023e-01, -9.66729343e-01, -6.75118491e-02,\n'
 '         7.48282433e-01,  4.70520139e-01,  8.34827959e-01,\n'
 '        -1.49499810e+00,  1.20835495e+00,  1.91914117e+00,\n'
 '        -1.08129948e-01,  1.28818119e+00,  9.15043354e-01,\n'
 '        -8.54649365e-01, -4.04508650e-01, -1.37287772e+00,\n'
 '         6.25299215e-01, -1.75490856e+00, -2.63772321e+00,\n'
 '        -2.72249723e+00, -2.24484778e+00, -1.42087948e+00,\n'
 '        -2.89774680e+00, -4.41263258e-01, -1.85462749e+00,\n'
 '        -2.26076558e-01, -2.43480146e-01,  1.01193786e-03,\n'
 '        -1.52000487e+00, -1.49550355e+00,  3.14483374e-01,\n'
 '         7.26479590e-01, -2.40330315e+00,  1.92579776e-01,\n'
 '        -2.77527118e+00, -1.40981698e+00, -2.29490447e+00,\n'
 '        -1.14794582e-01,  1.32535055e-01, -1.15686202e+00,\n'
 '         9.58482802e-01,  6.36359453e-01, -4.60347116e-01,\n'
 '        -1.22729570e-01, -1.24424684e+00,  1.11992538e+00,\n'
 '         5.71606457e-01, -5.41466325e-02, -1.19493484e-01,\n'
 '         2.31377578e+00,  9.46654797e-01,  2.04292726e+00,\n'
 '         4.52802539e-01, -5.46546936e-01, -1.79551744e+00,\n'
 '        -5.34612358e-01,  3.94421578e-01,  2.10508084e+00,\n'
 '         7.37293840e-01,  3.27955753e-01,  1.18199587e+00,\n'
 '         7.41559088e-01,  6.45167410e-01, -2.10318708e+00,\n'
 '        -5.73161721e-01, -2.42679572e+00, -1.12600243e+00,\n'
 '        -3.43039012e+00, -6.08257830e-01,  3.82181972e-01,\n'
 '         1.26612282e+00, -1.76849031e+00, -1.27043378e+00,\n'
 '        -7.66261518e-01, -2.94174981e+00, -1.49211407e+00,\n'
 '        -7.64558137e-01, -5.93529105e-01,  1.88867891e+00,\n'
 '        -5.09509027e-01,  8.63235474e-01, -6.52929544e-01,\n'
 '        -3.48426029e-02, -1.08903933e+00, -2.07611006e-02,\n'
 '        -4.17091519e-01,  1.17070401e+00, -1.21371615e+00,\n'
 '        -3.49706471e-01,  3.09930325e-01,  3.45139742e-01,\n'
 '        -2.12601447e+00,  9.35607314e-01,  3.82426321e-01,\n'
 '        -1.20760131e+00,  9.27040696e-01, -4.55548585e-01,\n'
 '        -5.51223099e-01,  1.52782249e+00, -2.85784245e+00,\n'
 '        -1.59772277e+00,  1.41056967e+00,  5.26244760e-01,\n'
 '         2.21086907e+00,  6.93734050e-01,  1.02244687e+00,\n'
 '        -1.21651757e+00,  8.88054967e-01, -1.37543631e+00,\n'
 '         8.11694324e-01, -7.69364834e-02, -2.18104982e+00,\n'
 '         4.87872399e-02, -4.58546281e-01, -9.25517678e-01,\n'
 '         1.95290148e+00,  1.00871146e+00,  9.84572172e-01,\n'
 '        -1.73531139e+00, -7.47951865e-01, -8.86001587e-01,\n'
 '         2.37438607e+00,  9.70177889e-01, -8.71894777e-01,\n'
 '        -3.62190366e-01, -1.62679410e+00,  1.23366380e+00,\n'
 '         1.05515420e-02,  9.16512907e-02,  4.42933083e+00,\n'
 '        -2.01546359e+00,  4.99840707e-01,  4.22400117e-01,\n'
 '        -2.05364972e-01, -1.50577456e-01, -1.04025876e+00,\n'
 '         6.19859934e-01,  6.12926364e-01, -2.16588473e+00,\n'
 '        -1.22494757e+00, -9.42519307e-01, -1.90435350e-03,\n'
 '        -3.46736252e-01,  5.38926959e-01,  1.72458291e+00,\n'
 '        -2.77202904e-01, -1.01548994e+00, -8.93109918e-01,\n'
 '         3.51765603e-01,  4.30259526e-01, -1.58520126e+00,\n'
 '         2.35348299e-01,  2.24259257e+00, -1.96689534e+00,\n'
 '        -1.28541261e-01,  3.36222708e-01, -1.76920295e+00,\n'
 '        -2.18321145e-01,  1.23644805e+00,  2.26640773e+00,\n'
 '         5.95559359e-01,  7.05029666e-02, -2.08216011e-01,\n'
 '         1.85138428e+00,  1.08320981e-01,  8.04521024e-01,\n'
 '        -1.16623962e+00, -1.21253228e+00, -9.98358309e-01,\n'
 '        -2.16863131e+00, -2.54282951e-01, -3.33209562e+00,\n'
 '        -2.98506141e+00, -1.53341103e+00,  4.45210576e-01,\n'
 '        -8.99410784e-01, -1.88145673e+00,  1.37210679e+00,\n'
 '        -9.40194130e-01, -1.61517215e+00, -3.60559773e+00,\n'
 '        -1.03777111e+00, -1.44762313e+00,  2.38241982e+00,\n'
 '         2.44416094e+00, -2.55858958e-01, -7.51895010e-01,\n'
 '         1.45174396e+00, -1.34915328e+00, -1.14940572e+00,\n'
 '         3.80013847e+00,  1.71430957e+00, -2.47186804e+00,\n'
 '         6.39586866e-01,  1.23334205e+00, -1.57204628e-01,\n'
 '         1.53114402e+00, -8.68448764e-02,  1.88791871e-01,\n'
 '        -2.45802879e-01,  2.20388323e-02, -2.79334021e+00,\n'
 '        -1.96329206e-01,  1.29788160e+00,  2.10646331e-01,\n'
 '        -1.30698085e-01, -4.02968836e+00,  7.97784925e-01,\n'
 '        -5.22951305e-01, -1.83197951e+00,  7.25605488e-01,\n'
 '        -7.82709777e-01,  2.15402991e-01,  4.86574799e-01,\n'
 '        -1.97193336e+00,  5.20665216e+00,  2.11060691e+00,\n'
 '         9.99555051e-01, -6.38246894e-01, -1.45385697e-01,\n'
 '         5.69691658e-01,  1.96416128e+00, -4.38162595e-01,\n'
 '         1.06997383e+00,  7.67360330e-01,  3.52091193e-01,\n'
 '         1.93418050e+00, -4.68877763e-01,  6.91629589e-01,\n'
 '         1.61171091e+00, -1.33255112e+00,  5.97281754e-01,\n'
 '        -1.17914844e+00,  8.56694341e-01,  1.53494984e-01,\n'
 '         8.56296659e-01, -1.22157717e+00,  1.12803507e+00,\n'
 '         3.69907439e-01, -2.45175457e+00, -7.25715041e-01,\n'
 '        -1.35353637e+00,  1.74381733e-02, -4.47029918e-02,\n'
 '         8.11541319e-01, -1.87433943e-01,  4.35248643e-01,\n'
 '         5.52488565e-02,  8.07267129e-01,  1.13799918e+00,\n'
 '        -1.17867017e+00, -1.92569923e+00, -1.55909824e+00,\n'
 '        -2.23679805e+00, -1.10633659e+00, -1.06066585e+00,\n'
 '         1.10950172e-01,  1.78208780e+00, -2.82214850e-01,\n'
 '         3.15347481e+00,  4.59222227e-01,  1.67374444e+00,\n'
 '        -3.65418285e-01,  2.26554275e-01, -7.31410742e-01,\n'
 '         1.89347744e+00,  7.48301566e-01,  5.99203885e-01,\n'
 '        -2.41923034e-01, -1.16421258e+00,  1.38349473e-01,\n'
 '        -9.19864953e-01, -8.62855494e-01, -1.59739566e+00,\n'
 '         1.66514122e+00,  1.29912662e+00, -9.26990747e-01,\n'
 '        -3.80122691e-01,  2.17164755e+00, -3.85546803e-01,\n'
 '         1.18578517e+00,  3.80796528e+00, -6.27548993e-02,\n'
 '        -3.48472500e+00, -1.56139171e+00, -2.60830689e+00,\n'
 '         7.48721242e-01, -3.77193856e+00, -1.73276877e+00,\n'
 '        -1.14822602e+00,  6.82441473e-01, -6.29153401e-02,\n'
 '         1.75510013e+00, -1.38898528e+00, -1.09769499e+00,\n'
 '         5.44754624e-01,  5.33089042e-01, -9.76034641e-01,\n'
 '        -4.06620651e-01,  1.59488380e+00, -8.10146630e-01,\n'
 '        -6.45726740e-01, -1.75891876e-01, -2.38749742e+00,\n'
 '         8.79703462e-03,  1.00060821e+00, -1.01359093e+00,\n'
 '        -3.10292363e-01, -6.98265016e-01,  1.18437898e+00,\n'
 '        -9.25673366e-01, -1.02924514e+00, -5.15683651e-01,\n'
 '        -1.06816244e+00,  5.87226510e-01,  1.08612084e+00,\n'
 '        -1.72632694e+00, -2.29405356e+00,  4.58127916e-01,\n'
 '        -2.04894280e+00,  2.30146378e-01,  7.48086274e-01,\n'
 '         1.17469037e+00,  7.94919074e-01, -1.41706419e+00,\n'
 '         2.57762766e+00, -2.27460074e+00, -1.09097838e+00,\n'
 '         3.07076484e-01,  3.02782536e-01, -1.36510932e+00,\n'
 '         1.20123673e+00,  8.30039144e-01,  1.86558962e-01,\n'
 '        -2.26777697e+00,  2.63456607e+00,  1.64245391e+00,\n'
 '        -4.65218663e-01, -4.84273672e-01, -1.16817188e+00,\n'
 '         6.33337438e-01, -2.10849690e+00,  2.77711451e-01,\n'
 '        -6.16892219e-01, -1.38678706e+00, -1.17077434e+00,\n'
 '        -1.60248280e+00,  9.66425121e-01,  2.56386280e+00,\n'
 '         1.50455213e+00,  1.16721720e-01,  1.06051052e+00,\n'
 '         8.36043477e-01, -3.69278288e+00, -7.28323340e-01,\n'
 '        -9.62186456e-01,  2.33851477e-01, -2.36694002e+00,\n'
 '        -3.58564973e+00,  7.86804915e-01, -1.93159175e+00,\n'
 '         1.49680167e-01, -1.64785516e+00,  1.28804743e+00,\n'
 '        -1.13643333e-01, -3.11974049e+00, -2.90349746e+00,\n'
 '        -1.57857612e-02,  1.19122302e+00, -1.05485237e+00,\n'
 '        -4.04773206e-01,  1.74457049e+00,  5.37680447e-01,\n'
 '         4.06473935e-01, -1.47137070e+00, -4.30740267e-01,\n'
 '         1.91788971e+00,  2.31595564e+00, -2.16161579e-01,\n'
 '        -2.75379241e-01, -4.11452502e-01, -1.42050064e+00,\n'
 '         1.07995200e+00, -7.72465468e-01,  2.08955121e+00,\n'
 '        -6.16471656e-02, -1.86309910e+00, -7.17742443e-01,\n'
 '        -2.05390406e+00, -1.97069228e+00, -3.49157602e-01,\n'
 '         2.13319674e-01,  4.52322736e-02,  8.81628573e-01,\n'
 '         4.86824930e-01,  7.00780809e-01, -1.90915144e+00,\n'
 '        -4.48268235e-01, -2.32732320e+00,  4.72917604e+00,\n'
 '        -3.76894951e-01,  3.09840024e-01,  6.39951169e-01,\n'
 '        -5.76846898e-01,  1.15659058e+00,  2.81492639e+00,\n'
 '        -3.64059115e+00, -3.06490159e+00, -5.41360200e-01,\n'
 '        -2.37523055e+00,  3.74071836e-01,  2.58048773e+00,\n'
 '        -2.17918301e+00, -3.15875268e+00, -2.13588905e+00,\n'
 '         2.62106925e-01,  1.54182649e+00, -1.99269652e+00,\n'
 '         1.29388082e+00,  5.44114828e-01, -1.26740491e+00,\n'
 '        -1.34050155e+00,  1.34792352e+00, -1.07968235e+00,\n'
 '        -6.11343622e-01, -1.19404209e+00, -2.42637420e+00,\n'
 '        -1.17271566e+00,  1.42386103e+00,  1.41675639e+00,\n'
 '        -5.26624203e-01, -1.86013329e+00, -7.11946428e-01,\n'
 '         2.98758173e+00,  2.02285782e-01, -5.98860979e-01,\n'
 '        -9.68651652e-01, -1.68987215e+00, -2.59272516e-01,\n'
 '         7.87679553e-02, -8.43708873e-01,  1.22300279e+00,\n'
 '         3.58421773e-01,  7.46525526e-01,  1.92916191e+00,\n'
 '         9.07877088e-01, -9.94392633e-01,  1.58759579e-01,\n'
 '        -1.05808639e+00, -2.41876721e+00, -1.90979838e+00,\n'
 '        -8.94129753e-01,  9.23582554e-01,  8.67985904e-01,\n'
 '         5.15782833e-01,  2.46541405e+00,  3.13095760e+00,\n'
 '        -2.15584064e+00,  1.09284759e+00, -3.47852564e+00,\n'
 '        -2.16483545e+00,  9.58190560e-01, -6.25417531e-01,\n'
 '         4.30167317e-01, -1.25430083e+00,  2.03081465e+00,\n'
 '         2.43094587e+00,  8.21640372e-01,  2.49755406e+00,\n'
 '         6.92541122e-01, -2.45759964e-01, -6.29885793e-01,\n'
 '         7.34316349e-01, -9.19881463e-02, -1.39759970e+00,\n'
 '         1.29274368e+00, -1.01905656e+00, -5.07230163e-01,\n'
 '        -7.56654799e-01,  5.36950290e-01,  1.10946655e+00,\n'
 '         2.80049729e+00, -5.38586974e-01,  4.44006264e-01,\n'
 '        -8.83946300e-01,  2.05146694e+00,  1.04112184e+00,\n'
 '        -6.18576288e-01, -1.32607788e-01,  1.09340298e+00,\n'
 '         1.88622922e-01,  2.83685327e-02, -7.64781535e-01,\n'
 '         3.64699721e-01, -5.10282330e-02,  1.92943132e+00,\n'
 '         3.07792902e+00,  4.33655620e-01, -2.91050076e-01,\n'
 '        -1.81725287e+00, -1.18990552e+00,  1.31468844e+00,\n'
 '         3.26648980e-01,  7.34665513e-01, -7.59813547e-01,\n'
 '         1.92051828e+00,  1.43334895e-01, -6.02307796e-01,\n'
 '        -1.24796927e-02, -1.66539502e+00,  4.65485096e-01,\n'
 '         4.20420915e-01, -3.94917905e-01,  1.30495143e+00,\n'
 '         1.40560079e+00,  1.97081476e-01,  1.22592568e+00,\n'
 '        -3.61966038e+00,  2.34814429e+00,  1.02485144e+00,\n'
 '         6.58562660e-01, -2.72794581e+00, -1.97141305e-01,\n'
 '         1.84729433e+00,  6.37867689e-01,  1.36250511e-01,\n'
 '        -7.06490278e-01, -1.17657936e+00, -6.39389276e-01,\n'
 '         9.72281814e-01, -3.83395553e+00,  1.44216371e+00,\n'
 '        -4.03670222e-01, -2.34627938e+00, -1.42738128e+00,\n'
 '        -2.04205364e-02, -2.05985904e+00,  8.34638357e-01,\n'
 '        -1.93759143e-01, -2.07830250e-01,  1.45636427e+00,\n'
 '        -1.24094689e+00,  8.80069137e-02,  8.02767932e-01,\n'
 '         1.33108520e+00, -2.00015736e+00,  4.86477554e-01,\n'
 '        -3.42551899e+00, -4.95351195e-01,  1.59944892e+00,\n'
 '        -7.85257220e-01,  1.69209301e-01,  4.32604253e-01,\n'
 '         1.52945840e+00, -3.12261319e+00,  1.88201666e-04,\n'
 '        -1.96887028e+00, -1.31541944e+00, -1.74799776e+00,\n'
 '        -1.24985170e+00,  7.69946575e-01,  2.34138161e-01,\n'
 '         4.11963731e-01,  5.49046934e-01, -2.03019738e-01,\n'
 '        -7.94441760e-01,  2.79753303e+00,  8.20819139e-01,\n'
 '         5.25583804e-01,  4.10407782e-03, -1.02674544e+00,\n'
 '        -2.50772893e-01, -1.05710357e-01, -3.15211952e-01,\n'
 '        -2.51639962e-01, -7.33663857e-01,  1.60687673e+00,\n'
 '        -1.65173638e+00,  1.72040284e+00, -8.01921129e-01,\n'
 '        -1.05521095e+00,  2.49657452e-01, -3.97244364e-01,\n'
 '         1.33953166e+00, -8.48071516e-01, -1.67218184e+00,\n'
 '        -1.17528021e+00, -1.60594881e+00, -6.40400112e-01,\n'
 '         9.71419215e-01,  1.12058687e+00, -2.49036372e-01,\n'
 '         5.57493210e-01, -8.38624597e-01,  8.91080856e-01,\n'
 '         1.45268047e+00,  8.01752210e-02,  1.39021075e+00,\n'
 '         3.11084628e-01, -3.68387937e-01, -2.98150003e-01,\n'
 '         2.98545152e-01, -1.21998859e+00, -1.47188187e-01,\n'
 '         1.10657299e+00,  1.63822102e+00,  4.69196320e-01,\n'
 '         1.26743209e+00,  1.83261001e+00,  1.70370841e+00,\n'
 '         5.25117934e-01,  3.63950133e-01, -3.59097183e-01,\n'
 '        -1.98337054e+00,  2.27274513e+00, -2.50685191e+00,\n'
 '        -2.09353685e-01,  3.04510891e-01, -1.01166213e+00,\n'
 '        -6.03046715e-01,  1.84628940e+00, -3.75565767e-01,\n'
 '        -8.51219058e-01, -1.93185031e+00,  1.44500208e+00,\n'
 '         1.13336349e+00, -9.60518360e-01, -8.01165462e-01,\n'
 '        -1.58961749e+00, -3.12870145e-01,  2.16207242e+00,\n'
 '         4.43394244e-01, -1.25083160e+00, -2.31580448e+00,\n'
 '        -7.15183497e-01, -3.27821255e-01,  5.62845051e-01,\n'
 '        -9.26003456e-02, -4.27219272e-02,  1.05260801e+00,\n'
 '        -5.60662270e-01,  6.35895729e-01, -1.49478689e-01,\n'
 '        -3.31471920e-01,  3.48633915e-01, -2.98962784e+00,\n'
 '        -1.24465060e+00, -3.55747294e+00,  5.79241514e-01,\n'
 '        -6.73242435e-02, -4.90707070e-01, -6.67316675e-01,\n'
 '        -2.36328125e+00]])')
'test_inceptionnet | batch_shape is: [1]'
'test_inceptionnet | logits.shape is: ivy.Shape(1, 1000)'
'||'
'test_inceptionnet | indices_test | true_indices is: [258 270 279]'
'test_inceptionnet | indices_test | calc_indices is: [258 270 279]'
'test_inceptionnet | device is: cpu'
'test_inceptionnet | fw is: jax'
'test_inceptionnet | load_weights is: False'
'InceptionV3 | build | layer 1/22 built'
'InceptionV3 | build | layer 2/22 built'
'layer 3/22 built'
'InceptionV3 | build | layer 4/22 built'
'InceptionV3 | build | layer 5/22 built'
'InceptionV3 | build | layer 6/22 built'
'InceptionV3 | build | layer 7/22 built'
'InceptionV3 | build | layer 8/22 built'
'InceptionV3 | build | layer 9/22 built'
'InceptionV3 | build | layer 10/22 built'
'InceptionV3 | build | layer 11/22 built'
'InceptionV3 | build | layer 12/22 built'
'InceptionV3 | build | layer 13/22 built'
'InceptionV3 | build | layer 14/22 built'
'InceptionV3 | build | layer 15/22 built'
'InceptionV3 | build | layer 17/22 built'
'InceptionV3 | build | layer 18/22 built'
'InceptionV3 | build | layer 19/22 built'
'InceptionV3 | build | layer 20/22 built'
'InceptionV3 | build | layer 21/22 built'
'InceptionV3 | build | layer 22/22 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/4 built'
'layer 2/4 built'
'layer 3/4 built'
'layer 4/4 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/6 built'
'layer 2/6 built'
'layer 3/6 built'
'layer 4/6 built'
'layer 5/6 built'
'layer 6/6 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'inceptionNet_v3 | building InceptionV3 model | done 1/3'
'InceptionV3 | forward | input shape is:ivy.Shape(1, 3, 224, 224) | done 1/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 3, 224, 224) | done 0/3'
'test_inceptionnet | device is: cpu'
'test_inceptionnet | fw is: jax'
'test_inceptionnet | load_weights is: True'
'InceptionV3 | build | layer 1/22 built'
'InceptionV3 | build | layer 2/22 built'
'layer 3/22 built'
'InceptionV3 | build | layer 4/22 built'
'InceptionV3 | build | layer 5/22 built'
'InceptionV3 | build | layer 6/22 built'
'InceptionV3 | build | layer 7/22 built'
'InceptionV3 | build | layer 8/22 built'
'InceptionV3 | build | layer 9/22 built'
'InceptionV3 | build | layer 10/22 built'
'InceptionV3 | build | layer 11/22 built'
'InceptionV3 | build | layer 12/22 built'
'InceptionV3 | build | layer 13/22 built'
'InceptionV3 | build | layer 14/22 built'
'InceptionV3 | build | layer 15/22 built'
'InceptionV3 | build | layer 17/22 built'
'InceptionV3 | build | layer 18/22 built'
'InceptionV3 | build | layer 19/22 built'
'InceptionV3 | build | layer 20/22 built'
'InceptionV3 | build | layer 21/22 built'
'InceptionV3 | build | layer 22/22 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/4 built'
'layer 2/4 built'
'layer 3/4 built'
'layer 4/4 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/6 built'
'layer 2/6 built'
'layer 3/6 built'
'layer 4/6 built'
'layer 5/6 built'
'layer 6/6 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'inceptionNet_v3 | building InceptionV3 model | done 1/3'
'inceptionNet_v3 | clearning pretrained weights | done 2/3'
'inceptionNet_v3 | loading pretrained weights | done 3/3'
'InceptionV3 | forward | input shape is:ivy.Shape(1, 3, 224, 224) | done 1/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 3, 224, 224) | done 0/3'
'test_inceptionnet | device is: cpu'
'test_inceptionnet | fw is: tensorflow'
'test_inceptionnet | load_weights is: False'
'InceptionV3 | build | layer 1/22 built'
'InceptionV3 | build | layer 2/22 built'
'layer 3/22 built'
'InceptionV3 | build | layer 4/22 built'
'InceptionV3 | build | layer 5/22 built'
'InceptionV3 | build | layer 6/22 built'
'InceptionV3 | build | layer 7/22 built'
'InceptionV3 | build | layer 8/22 built'
'InceptionV3 | build | layer 9/22 built'
'InceptionV3 | build | layer 10/22 built'
'InceptionV3 | build | layer 11/22 built'
'InceptionV3 | build | layer 12/22 built'
'InceptionV3 | build | layer 13/22 built'
'InceptionV3 | build | layer 14/22 built'
'InceptionV3 | build | layer 15/22 built'
'InceptionV3 | build | layer 17/22 built'
'InceptionV3 | build | layer 18/22 built'
'InceptionV3 | build | layer 19/22 built'
'InceptionV3 | build | layer 20/22 built'
'InceptionV3 | build | layer 21/22 built'
'InceptionV3 | build | layer 22/22 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/4 built'
'layer 2/4 built'
'layer 3/4 built'
'layer 4/4 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/6 built'
'layer 2/6 built'
'layer 3/6 built'
'layer 4/6 built'
'layer 5/6 built'
'layer 6/6 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'inceptionNet_v3 | building InceptionV3 model | done 1/3'
'InceptionV3 | forward | input shape is:ivy.Shape(1, 224, 224, 3) | done 1/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 224, 224, 3) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 111, 111, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 111, 111, 32) | done 2/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 111, 111, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 32) | done 3/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 109, 109, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 64) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 64) | done 4/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 54, 54, 64) | done 5/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 54, 54, 80) | done 3/3'
'InceptionV3 | forward | is:ivy.Shape(1, 54, 54, 80) | done 6/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 80) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 52, 52, 192) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 52, 52, 192) | done 7/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 192) | done 8/27'
'input shape is:ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 32) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 32)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 25, 25, 256) | done 9/27'
'input shape is:ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 10/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 11/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 384) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 96) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 96)'
'one 20/20, output shape is:ivy.Shape(1, 12, 12, 288)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 12/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 12, 12, 768) | done 13/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 14/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 15/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 16/27'
'v3 16/27, output shape is:ivy.Shape(1, 12, 12, 768)'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 5, 5, 192)'
'one 7/20, output shape is:ivy.Shape(1, 5, 5, 768)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 1280) | done 17/27'
'input shape is:ivy.Shape(1, 5, 5, 1280)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 18/27'
'input shape is:ivy.Shape(1, 5, 5, 2048)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 19/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 20/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 5, 5) | done 21/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 1, 1) | done 22/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 27/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 24/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 25/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048) | done 26/27'
'InceptionV3 | forward | fc | done 27/27'
('test_inceptionnet | logits is: ivy.array([[ 7.84242688e+05, -1.14801475e+06, '
 '-2.40221156e+05,\n'
 '         7.25734500e+05, -3.21607875e+05, -2.44590953e+05,\n'
 '        -1.43062262e+06,  7.54757125e+05,  1.75166531e+05,\n'
 '        -6.38079125e+05, -5.85298906e+04, -2.56744000e+05,\n'
 '         3.92098156e+05, -1.39155797e+05, -2.10766309e+03,\n'
 '        -8.71648000e+05,  3.21719453e+04,  5.43843688e+05,\n'
 '         1.23738400e+06,  3.70433250e+05,  3.64252031e+05,\n'
 '        -1.20140538e+06, -1.17472738e+06,  1.51000050e+06,\n'
 '        -1.63238225e+06,  5.61337773e+04,  8.31089062e+05,\n'
 '         3.61964188e+05, -5.84054766e+04, -2.88706656e+05,\n'
 '         7.53476375e+05,  5.29388562e+05,  1.14335758e+05,\n'
 '        -7.76404141e+04, -8.64058250e+05, -2.78076562e+05,\n'
 '        -3.82288000e+05,  4.84199531e+05,  2.00093422e+05,\n'
 '         5.38710875e+05, -1.10216656e+05, -1.47522469e+05,\n'
 '        -9.94386375e+05,  1.12548862e+06, -8.59616188e+05,\n'
 '        -9.25860250e+05, -1.40493734e+05, -1.46321344e+05,\n'
 '         5.64730375e+05, -2.15578203e+05, -4.49452469e+05,\n'
 '        -1.12342850e+06, -1.24305031e+05, -8.17117750e+05,\n'
 '         2.42955281e+05, -6.92258375e+05, -5.41582188e+05,\n'
 '        -1.25225477e+05, -7.34745000e+04,  6.47204562e+05,\n'
 '        -9.69188812e+05,  1.02955000e+06, -5.65135562e+05,\n'
 '        -4.15595750e+05,  8.80154531e+04, -2.71777125e+05,\n'
 '         9.10766625e+05,  5.96111375e+05,  1.11583027e+04,\n'
 '        -3.11785812e+05, -9.23999766e+04, -7.53891875e+05,\n'
 '        -5.67853375e+05, -5.21500844e+05, -1.23175438e+06,\n'
 '         1.42400922e+05, -1.49753325e+06,  1.09067547e+05,\n'
 '         1.01926369e+06, -8.57111750e+05,  3.63723375e+05,\n'
 '        -9.13360469e+04, -7.60536719e+04, -2.46924984e+05,\n'
 '         1.12239212e+06, -4.08505781e+05,  1.19538750e+05,\n'
 '         8.40058500e+05,  2.32698547e+05,  4.70855188e+05,\n'
 '         3.09866000e+05, -3.93596484e+04,  2.01507750e+05,\n'
 '         7.84347578e+04,  2.81059750e+05,  1.23242388e+06,\n'
 '         1.81236781e+05,  2.67753406e+05, -6.01803438e+04,\n'
 '         3.68908477e+04, -5.53528438e+04, -8.62715723e+03,\n'
 '        -6.92494625e+05, -4.55389781e+05,  4.59329812e+05,\n'
 '        -7.59097312e+05, -7.50663375e+05, -4.04694250e+05,\n'
 '        -6.57047438e+05,  7.36810875e+05, -4.16974469e+05,\n'
 '         4.93779375e+05,  3.63615500e+05,  2.99571000e+05,\n'
 '         7.18823125e+05, -5.41355188e+05,  1.40920512e+06,\n'
 '         6.04316688e+05,  6.20697375e+05, -2.66817500e+05,\n'
 '         1.92385500e+05,  1.40849112e+06,  6.69425125e+05,\n'
 '        -3.41615344e+05,  2.86213500e+05, -1.88147656e+05,\n'
 '        -1.38304707e+04, -1.18228766e+05, -2.63484906e+05,\n'
 '        -6.16166625e+05, -4.31284938e+05, -3.40935375e+05,\n'
 '        -4.87593344e+05,  6.27757188e+05, -2.67560875e+05,\n'
 '         7.02790500e+05,  3.57199625e+05,  3.43534125e+05,\n'
 '         6.10177750e+05,  4.68869312e+05, -3.79168094e+05,\n'
 '        -3.10369188e+05,  5.10900250e+05,  9.98858359e+04,\n'
 '         4.40044594e+05,  5.83121938e+05, -1.30241850e+06,\n'
 '        -3.60440195e+04, -7.99835125e+05,  9.15820812e+05,\n'
 '        -1.12106562e+04,  1.04420450e+06,  8.28885562e+05,\n'
 '         2.52317500e+05,  1.30351550e+06, -2.14124328e+05,\n'
 '        -2.93659125e+05,  6.02463312e+05, -1.79989469e+05,\n'
 '        -6.28521188e+05,  3.57326328e+04, -1.55415538e+06,\n'
 '        -1.67187938e+05,  1.08017425e+06, -2.40706055e+04,\n'
 '         2.84403969e+05, -2.83242156e+05, -5.93335156e+04,\n'
 '        -3.01617031e+05, -6.52940125e+05,  8.70754750e+05,\n'
 '        -7.44362812e+05, -6.84484250e+05,  3.67453656e+05,\n'
 '        -7.21266438e+05, -1.35519281e+05, -4.37014469e+05,\n'
 '         5.77243750e+05, -7.59120156e+04, -8.31634375e+05,\n'
 '         5.29707875e+05, -1.42465512e+06, -4.69624406e+05,\n'
 '        -6.37538625e+05,  1.08943375e+06, -5.40956312e+05,\n'
 '        -5.42238500e+05,  1.81183594e+04,  2.21645141e+05,\n'
 '         2.32189688e+05, -4.58358562e+05,  1.33839750e+06,\n'
 '        -2.44816125e+05, -1.01537225e+06, -8.39177750e+05,\n'
 '        -3.43615234e+04, -9.29931375e+05,  6.66101375e+05,\n'
 '        -6.23642188e+05, -9.82406875e+05, -1.04535906e+06,\n'
 '        -1.49789775e+06, -5.14263938e+05, -1.12831800e+06,\n'
 '         9.39051484e+04,  5.07072617e+04, -5.24100547e+04,\n'
 '        -2.12952812e+05, -3.66439469e+05, -7.08301562e+05,\n'
 '        -5.73617688e+05, -4.61238406e+05,  8.23935562e+05,\n'
 '        -5.16787531e+05, -5.25079500e+05,  2.72806469e+05,\n'
 '         2.20379125e+05,  8.96133500e+05, -4.59297906e+05,\n'
 '        -5.63525875e+05,  6.38180062e+05,  7.52526875e+04,\n'
 '         4.86585344e+05,  9.04833875e+05, -4.24056875e+05,\n'
 '         2.59351516e+05, -1.00201602e+05,  1.36991406e+05,\n'
 '        -1.58681000e+05,  3.31401375e+05, -6.07903250e+05,\n'
 '         8.24964062e+05, -4.80747344e+05,  4.13877250e+05,\n'
 '        -4.61234219e+05,  5.02728719e+05,  3.48213594e+05,\n'
 '        -7.60986250e+05,  1.45318925e+06,  2.54272930e+04,\n'
 '         2.65222156e+05,  1.46953500e+06, -2.54506797e+05,\n'
 '        -4.75766625e+05,  3.72308969e+05, -1.10649225e+06,\n'
 '         9.15264438e+05,  1.33266875e+06, -4.63985219e+05,\n'
 '        -8.15968125e+05, -6.41128625e+05, -1.97956725e+06,\n'
 '        -5.74974250e+05, -3.13206938e+05,  5.63050312e+05,\n'
 '         3.02041094e+05, -2.90015703e+04,  1.18622975e+06,\n'
 '        -2.43675250e+05, -5.86218688e+05, -8.71180688e+05,\n'
 '         6.66158688e+05,  1.02117919e+06,  2.87343188e+05,\n'
 '         6.15371000e+05,  2.45251359e+05,  5.54029125e+05,\n'
 '         3.55734844e+05,  4.87447188e+05, -2.15761438e+05,\n'
 '        -8.92761750e+05, -2.85431250e+05, -7.36304875e+05,\n'
 '        -7.62877438e+05,  1.04836006e+06,  4.99408000e+05,\n'
 '        -1.09868379e+04,  5.25969625e+05,  4.40370750e+05,\n'
 '         5.33243625e+05, -5.30012875e+05,  3.73228312e+05,\n'
 '         5.27075562e+05,  1.21400800e+06, -1.49582188e+06,\n'
 '         8.01950156e+04, -6.42852461e+04,  4.55058781e+05,\n'
 '         1.61286078e+05, -4.98204281e+05, -1.07373086e+05,\n'
 '         1.57293150e+06,  3.24377844e+05,  1.75774203e+05,\n'
 '        -1.25770350e+06, -6.57272875e+05,  4.82981836e+03,\n'
 '         1.68563000e+05, -7.58601625e+05,  2.08115719e+05,\n'
 '        -8.88408398e+03,  8.31538812e+05, -6.68299875e+05,\n'
 '        -4.28801156e+05,  6.27419688e+05, -2.97579750e+05,\n'
 '        -1.25805086e+05, -1.04945325e+06,  3.40668188e+05,\n'
 '        -7.66431438e+05,  2.15342275e+06, -4.81262250e+05,\n'
 '         8.92591375e+05,  7.09126312e+05,  8.77706438e+05,\n'
 '         5.89317500e+05,  3.70542844e+05,  6.18215375e+05,\n'
 '        -1.12540023e+05,  6.36482188e+05,  3.22372219e+05,\n'
 '         6.44393000e+05, -3.27711875e+05, -7.86211438e+05,\n'
 '        -5.36903000e+05,  3.05118781e+05, -1.92002047e+05,\n'
 '         1.12296109e+05,  4.97795844e+05, -7.77588875e+05,\n'
 '        -1.68707844e+05, -7.49643281e+04,  3.94713938e+05,\n'
 '        -2.62786531e+05,  7.41298938e+05,  1.18816350e+06,\n'
 '         1.59514156e+05, -8.19012188e+05,  1.11379812e+06,\n'
 '        -4.16205594e+05, -1.28856523e+05, -6.41232375e+05,\n'
 '         1.39012025e+06, -8.33677250e+05, -1.50368859e+05,\n'
 '        -1.78483688e+05,  2.75473438e+05,  2.96511938e+05,\n'
 '         5.94847125e+05, -1.79879078e+05, -1.23792775e+06,\n'
 '        -9.19094188e+05,  7.72421375e+05, -5.24408125e+05,\n'
 '        -3.04303188e+05,  3.82201062e+05,  8.04411938e+05,\n'
 '        -5.13913094e+05, -1.18291525e+06, -4.01987281e+05,\n'
 '         6.69293312e+05, -1.28938312e+05,  1.24084862e+06,\n'
 '         8.14113516e+04,  4.66701438e+05,  4.66284656e+05,\n'
 '         1.35131875e+06,  7.83225250e+05,  8.59995188e+05,\n'
 '        -1.07181912e+06,  1.15215391e+05, -1.12788180e+05,\n'
 '        -9.93602812e+05, -5.59586500e+05, -3.55465688e+05,\n'
 '         7.84746812e+05,  3.74835031e+05, -1.00944894e+06,\n'
 '        -4.46634000e+05,  5.65197688e+05, -6.16436000e+05,\n'
 '        -4.46262094e+05, -1.75081638e+06, -8.81710469e+04,\n'
 '         1.26550125e+05,  1.36756412e+06,  1.54152594e+05,\n'
 '         2.66957781e+05,  4.51350750e+05, -1.11058766e+05,\n'
 '         6.47171125e+05, -5.57097438e+05, -3.41471906e+05,\n'
 '         3.81923000e+05,  8.74181250e+04, -4.17645750e+05,\n'
 '         4.77156281e+05, -3.73148812e+05,  9.26606750e+05,\n'
 '        -2.83460875e+05, -3.99943359e+04, -5.89964562e+05,\n'
 '        -4.50449969e+05,  1.27426047e+05, -1.60599675e+06,\n'
 '        -6.19640562e+05,  1.79792969e+05, -6.39986312e+05,\n'
 '        -1.74448609e+05, -3.25319469e+05, -7.30381812e+05,\n'
 '        -2.22617844e+05, -7.24770188e+05,  4.18463281e+05,\n'
 '        -2.19542906e+05, -4.46012406e+05, -7.12528203e+04,\n'
 '        -7.98509188e+05, -1.22822641e+05, -8.96372438e+05,\n'
 '        -9.59272625e+05, -1.21587438e+06,  2.45631484e+05,\n'
 '         3.60295594e+05,  8.76786562e+04, -1.68351425e+06,\n'
 '         4.67528031e+05,  3.68502375e+05,  8.63307125e+05,\n'
 '         1.27900788e+06,  7.01598688e+05,  2.67771375e+05,\n'
 '         5.60564688e+05,  2.35851047e+05,  6.78186375e+05,\n'
 '        -3.54349336e+04, -1.47691425e+06, -1.08840875e+06,\n'
 '         3.46476656e+05,  1.44000712e+06, -3.08328844e+05,\n'
 '        -3.60248875e+05, -1.08171725e+06,  3.81552344e+05,\n'
 '         3.49879562e+05,  2.46948656e+05, -1.36298912e+06,\n'
 '         7.70494562e+05,  3.90950438e+05, -3.15537438e+05,\n'
 '         2.28906016e+05,  8.83452000e+05, -8.10107188e+05,\n'
 '         6.09697266e+04,  9.00116562e+04, -8.43596250e+04,\n'
 '        -5.38092438e+05, -1.04401350e+06, -7.81563000e+05,\n'
 '        -6.85556438e+05,  4.65862625e+05,  2.23166031e+05,\n'
 '         6.94092938e+05, -8.17602500e+05,  1.03053500e+06,\n'
 '        -1.66869656e+05, -9.10811000e+05, -4.47186625e+05,\n'
 '         1.18162070e+05, -1.60872225e+06,  2.89465812e+05,\n'
 '        -2.09784023e+04, -6.75008188e+05,  4.98550000e+05,\n'
 '         8.75218188e+05,  6.21862625e+05, -6.67300391e+04,\n'
 '         5.07101875e+05,  1.16864262e+06,  1.17898125e+06,\n'
 '         4.67911875e+05,  1.19561700e+06,  7.01871125e+05,\n'
 '        -6.59891250e+05,  6.64529062e+05,  9.18245500e+05,\n'
 '        -1.26729727e+04, -1.10483962e+06, -5.75029812e+05,\n'
 '        -4.27006750e+05, -5.05992891e+04, -1.82013078e+05,\n'
 '         4.91179281e+05, -1.33893825e+06, -1.08871367e+05,\n'
 '        -8.35336062e+05,  4.14370875e+05, -9.08510812e+05,\n'
 '        -1.82941094e+05,  7.23583312e+05,  7.45442812e+05,\n'
 '        -9.14901125e+05,  8.11251812e+05,  3.27335859e+04,\n'
 '        -3.08730031e+05,  4.17754719e+05,  1.49932925e+06,\n'
 '        -4.94724750e+05, -2.05525797e+05, -9.19936312e+05,\n'
 '        -2.58469938e+05, -7.99549609e+04, -8.56188938e+05,\n'
 '         1.16648125e+06,  1.50451725e+06, -9.55957312e+05,\n'
 '         1.03607394e+06,  5.94641625e+05, -3.27011000e+05,\n'
 '        -5.75156000e+05,  3.15961656e+05,  1.11057100e+06,\n'
 '        -1.88437969e+04, -3.17589344e+05, -5.16746125e+05,\n'
 '         8.34076625e+05, -1.29270254e+04,  8.60747188e+05,\n'
 '         2.45375953e+05, -6.38805375e+05, -4.37060391e+04,\n'
 '         2.66701406e+05,  8.39481094e+04, -1.18300445e+05,\n'
 '        -1.87904588e+06,  4.17824969e+05, -7.83280875e+05,\n'
 '         8.05073828e+03, -6.77625875e+05, -1.01596406e+06,\n'
 '        -3.44737406e+05,  3.19273438e+05, -2.98145406e+05,\n'
 '        -5.15034562e+05, -1.66472578e+04, -9.38013750e+05,\n'
 '         1.45068275e+06,  2.78940031e+05,  3.88488531e+05,\n'
 '         1.09589575e+06,  3.37902312e+05, -3.01109094e+05,\n'
 '        -1.06434925e+06, -7.29359688e+05,  7.69611562e+04,\n'
 '        -3.64476172e+03,  2.13721656e+05, -1.34929641e+05,\n'
 '         1.35426412e+06, -7.06267375e+05, -5.21754922e+04,\n'
 '         1.01118906e+05,  9.02390000e+04, -2.35816156e+05,\n'
 '        -6.80953000e+05, -6.25703789e+04,  9.20837344e+04,\n'
 '        -6.16753242e+04,  1.53552325e+06,  5.00846438e+05,\n'
 '         6.28646375e+05, -5.03638281e+04,  2.01304031e+05,\n'
 '        -4.41500875e+05,  1.18133047e+04,  4.43437094e+05,\n'
 '         1.69552488e+06,  1.35959781e+05,  1.71052531e+05,\n'
 '        -3.93862406e+05,  5.64525312e+05,  1.36846112e+06,\n'
 '         2.39149375e+05,  1.50843469e+05, -5.51251062e+05,\n'
 '         5.10259656e+05, -3.81754969e+05,  3.11797500e+05,\n'
 '         1.16083469e+05,  8.72657656e+04, -1.00358119e+06,\n'
 '         3.45276312e+05, -6.17682188e+05, -5.86660438e+05,\n'
 '        -6.91506438e+05, -3.46182844e+05,  4.25982625e+05,\n'
 '        -2.91016438e+05, -1.35625500e+06, -8.79074375e+05,\n'
 '        -3.81810625e+05, -5.55662938e+05, -6.73129375e+05,\n'
 '        -4.24192781e+05, -4.26281938e+05,  5.17093219e+05,\n'
 '        -6.36503125e+05, -5.32402562e+05,  1.55766788e+06,\n'
 '        -6.80265750e+05,  5.85927422e+04,  3.21998812e+05,\n'
 '         1.02169356e+06, -7.70896750e+05,  2.44872312e+05,\n'
 '        -5.03583375e+05,  1.02449238e+06,  3.28705344e+05,\n'
 '         1.59326031e+05,  1.64366250e+06,  1.02480086e+05,\n'
 '        -1.85205609e+05,  2.99102125e+05,  6.69036312e+05,\n'
 '         1.38042797e+05,  5.76838125e+05, -1.15023012e+06,\n'
 '        -7.60255438e+05,  9.79163672e+04,  2.30218281e+05,\n'
 '         8.78201797e+04, -1.18049338e+06,  5.41598188e+05,\n'
 '        -1.55594150e+06,  6.23040938e+05, -5.84313312e+05,\n'
 '         2.44874219e+05, -6.60329500e+05,  3.37863781e+05,\n'
 '         1.13603025e+06, -6.94910938e+05,  3.62725875e+05,\n'
 '         8.37615188e+05,  7.27793125e+05,  6.88306406e+04,\n'
 '         8.42392188e+04, -9.85755938e+05, -8.48583125e+05,\n'
 '         7.88894500e+05, -1.17700862e+06,  2.07773050e+06,\n'
 '        -1.03285138e+06, -9.71595938e+04, -4.58725188e+05,\n'
 '        -9.76276812e+05,  6.29150062e+05,  1.27052212e+06,\n'
 '         1.41441775e+06, -7.35748938e+05,  1.09123362e+06,\n'
 '         1.43700969e+05,  4.36424414e+04,  2.55434672e+05,\n'
 '        -2.31859109e+05, -1.43923950e+06,  5.47125312e+05,\n'
 '         3.38837305e+03,  1.10336375e+06, -2.25484672e+05,\n'
 '         4.36454562e+05,  2.26589828e+05,  8.50023500e+05,\n'
 '        -6.51590688e+05,  8.85006875e+05, -2.83361812e+05,\n'
 '         1.31887594e+05, -5.37724250e+05, -1.02042305e+04,\n'
 '         1.21992138e+06,  9.43744875e+05,  4.24379969e+05,\n'
 '        -1.55164412e+06, -9.46619375e+05, -6.66212750e+05,\n'
 '        -5.25574562e+05,  1.36104075e+06, -7.04401875e+05,\n'
 '        -4.38267562e+05,  8.16256562e+04,  1.00129512e+06,\n'
 '         1.32711138e+06, -1.15651938e+05, -3.50637094e+05,\n'
 '         6.89021938e+05,  1.24707508e+05,  5.02310000e+05,\n'
 '         5.27324062e+05, -8.20647250e+05, -2.80564781e+05,\n'
 '         5.74807688e+05, -7.79529531e+04,  2.74895125e+05,\n'
 '         3.03170750e+05,  9.42122125e+05, -9.75479625e+05,\n'
 '        -1.93653188e+05, -2.18565562e+05, -1.15218350e+06,\n'
 '         1.21698438e+06, -1.10104800e+06,  3.47131562e+05,\n'
 '         4.43345898e+04, -7.30445688e+05,  4.92477125e+05,\n'
 '        -1.44466288e+06,  7.94894250e+05, -5.05001000e+05,\n'
 '         7.09438000e+05, -3.22663438e+05, -5.69104188e+05,\n'
 '         9.89447500e+04, -3.05825000e+05, -3.51969531e+04,\n'
 '        -7.81177500e+05,  1.61259425e+06, -7.26754688e+04,\n'
 '         4.92927594e+05, -1.47093359e+05,  3.07601781e+05,\n'
 '         4.57418945e+04,  7.18396062e+05,  1.35736138e+06,\n'
 '         9.63657938e+05, -1.67635625e+05,  3.66571812e+05,\n'
 '        -4.78634344e+05, -2.58758734e+05, -3.24801719e+05,\n'
 '         3.47636188e+05,  5.21253750e+05, -1.13438438e+06,\n'
 '         2.09875750e+05,  4.00026844e+05,  4.45570156e+05,\n'
 '         2.95073812e+05,  3.91187562e+05,  1.07392906e+05,\n'
 '         1.35779281e+05,  1.57961125e+05, -5.47545062e+05,\n'
 '        -7.19056750e+05, -2.63239969e+05,  2.31767500e+04,\n'
 '        -9.87300312e+04, -1.49481000e+06, -3.63281797e+04,\n'
 '        -9.87902578e+04,  7.22719688e+05, -3.31548375e+05,\n'
 '         4.43671844e+05,  1.39326094e+05, -6.28006188e+05,\n'
 '        -1.17307938e+06, -5.12808781e+05, -7.06677031e+04,\n'
 '         3.63822156e+05, -4.85067719e+05, -1.50933422e+05,\n'
 '        -2.44179688e+05, -5.00715656e+05,  3.90815219e+05,\n'
 '        -8.97656688e+05,  6.86174000e+05,  6.53526172e+03,\n'
 '        -1.65196062e+05, -4.02632891e+04,  4.56535531e+05,\n'
 '        -1.60447625e+05, -1.91202875e+05, -7.17166938e+05,\n'
 '        -9.86027250e+05, -4.97140312e+05, -6.75398875e+05,\n'
 '        -1.21184988e+06, -6.98020938e+04,  2.13101859e+05,\n'
 '         9.41147812e+05,  1.23751281e+05, -4.58371500e+05,\n'
 '         8.12067562e+05, -3.46576438e+05, -1.31482969e+05,\n'
 '        -5.55639688e+04, -1.56779391e+05, -1.10007406e+05,\n'
 '         5.54205664e+04, -3.21929438e+05, -1.06447400e+06,\n'
 '         4.00690812e+05, -4.18435000e+05,  3.14864344e+05,\n'
 '        -4.63145312e+05,  8.36458125e+05,  2.02646609e+05,\n'
 '         9.80663688e+05, -1.49273500e+06, -6.91382875e+05,\n'
 '        -1.00085836e+05, -5.01320406e+05,  1.41498300e+06,\n'
 '        -1.15521031e+05,  9.91250250e+05,  4.58639156e+05,\n'
 '        -1.16808969e+05,  6.35053438e+04,  5.28078938e+05,\n'
 '         1.12160312e+05, -2.96692312e+05,  1.10357150e+06,\n'
 '         6.53882188e+05, -1.31145828e+05, -2.30115359e+05,\n'
 '        -6.57985500e+05, -1.62305891e+05,  1.27415117e+04,\n'
 '         1.01819919e+06,  2.10008297e+05, -1.07245738e+06,\n'
 '        -5.69487438e+05, -7.43730625e+05,  4.67915812e+05,\n'
 '         2.00379547e+05,  4.21518938e+05, -2.18599312e+05,\n'
 '        -6.27348438e+05, -3.59485938e+05, -1.00798450e+06,\n'
 '         7.63517438e+05, -2.12992922e+05,  1.66257375e+05,\n'
 '        -4.41846719e+05, -2.22409625e+05, -1.42272112e+06,\n'
 '         6.29854188e+05,  7.02950312e+05,  1.24752175e+06,\n'
 '        -2.04195375e+05, -5.94386250e+05,  1.49474031e+05,\n'
 '         8.03346125e+05, -1.54175938e+05,  5.98531875e+05,\n'
 '        -7.61409625e+05,  1.09956062e+06,  8.36631125e+05,\n'
 '         3.65153750e+05, -6.04617875e+05,  1.14447162e+06,\n'
 '        -1.72551844e+05,  1.89346641e+05,  1.06007250e+06,\n'
 '        -4.71133438e+05,  1.05574638e+06, -1.23500812e+06,\n'
 '        -1.42061562e+05, -3.21760219e+05,  6.55763750e+05,\n'
 '         1.97842859e+05, -3.42828375e+05, -6.73939938e+05,\n'
 '         2.06297375e+06, -3.51642219e+05,  6.18128633e+04,\n'
 '        -9.81475688e+05, -2.57840062e+05, -2.09739062e+05,\n'
 '        -1.06259125e+06,  4.00032375e+05,  2.12763375e+05,\n'
 '         4.08812031e+05,  6.26736000e+05, -7.17189219e+04,\n'
 '         2.27942469e+05,  6.95680688e+05,  6.07413562e+05,\n'
 '         2.78781969e+05, -1.42938975e+06,  6.09567250e+05,\n'
 '         2.21391000e+05, -4.05339250e+05,  8.62992625e+05,\n'
 '        -1.23108938e+05,  2.70289707e+04, -4.68365375e+05,\n'
 '         4.53810156e+03, -1.28251775e+06, -4.65318812e+05,\n'
 '         2.48016781e+05, -8.33407438e+05,  2.27186906e+05,\n'
 '         7.32151562e+05, -8.49836500e+05, -6.68868562e+05,\n'
 '        -5.06037688e+05,  4.99031062e+05, -3.67151594e+05,\n'
 '        -6.02778438e+05,  7.31689500e+05, -5.00943250e+05,\n'
 '        -3.86134031e+05, -2.61073891e+05,  1.02336869e+06,\n'
 '        -4.86861312e+05,  1.27424488e+06, -1.32326688e+06,\n'
 '         6.81331250e+05, -1.14609297e+05,  1.29589391e+05,\n'
 '        -6.90828625e+05, -5.38265062e+05,  1.26397162e+06,\n'
 '        -6.47954180e+04, -6.55141250e+05,  5.06461500e+05,\n'
 '         9.53539375e+05, -5.80973500e+05, -5.14622656e+05,\n'
 '         6.85349625e+05, -2.09925562e+05,  7.90224531e+04,\n'
 '        -1.42866862e+06, -3.92615594e+05,  5.86180562e+05,\n'
 '         7.64571875e+05, -5.41714375e+05,  2.01725406e+05,\n'
 '         1.20260800e+06, -1.78281281e+05, -4.34247219e+05,\n'
 '        -3.12754781e+05,  4.97954922e+04, -3.47153594e+04,\n'
 '        -3.31475938e+05, -2.94399750e+05,  3.93481062e+05,\n'
 '         1.75760516e+05,  6.30819250e+05, -2.79407031e+05,\n'
 '        -6.88082000e+05, -8.43647188e+04, -6.19779812e+05,\n'
 '         2.33906688e+05, -5.22178719e+05, -4.84611281e+05,\n'
 '         4.66531938e+05,  6.41968500e+05,  8.89801438e+05,\n'
 '         4.46699375e+04, -1.48983734e+05, -5.98193562e+05,\n'
 '        -3.20864812e+05, -6.11387625e+05,  7.05900875e+05,\n'
 '        -1.20362891e+05, -6.09168000e+05, -2.88989875e+05,\n'
 '         1.18338938e+05,  9.23396625e+05, -5.78946688e+05,\n'
 '         4.28218094e+05,  4.65704188e+05,  1.54921289e+04,\n'
 '        -4.78953250e+05, -3.70288672e+03,  5.59875875e+05,\n'
 '         8.28761125e+05,  5.33814531e+04,  2.97391812e+05,\n'
 '         2.07945031e+05,  8.53423312e+05,  9.43563594e+04,\n'
 '         8.33690250e+05, -1.24979788e+06, -7.84617500e+05,\n'
 '         2.20034297e+05, -4.14478000e+05,  6.43753000e+05,\n'
 '        -9.29602969e+04, -2.63186438e+05,  1.82891844e+05,\n'
 '         3.91010859e+04,  3.29533000e+05,  4.39347875e+05,\n'
 '        -8.24355938e+05, -4.34017969e+05,  6.21204750e+05,\n'
 '         6.91776125e+05,  2.64758156e+05,  8.87029188e+05,\n'
 '        -1.69201750e+05]])')
'test_inceptionnet | batch_shape is: [1]'
'test_inceptionnet | logits.shape is: ivy.Shape(1, 1000)'
'||'
'test_inceptionnet | device is: cpu'
'test_inceptionnet | fw is: tensorflow'
'test_inceptionnet | load_weights is: True'
'InceptionV3 | build | layer 1/22 built'
'InceptionV3 | build | layer 2/22 built'
'layer 3/22 built'
'InceptionV3 | build | layer 4/22 built'
'InceptionV3 | build | layer 5/22 built'
'InceptionV3 | build | layer 6/22 built'
'InceptionV3 | build | layer 7/22 built'
'InceptionV3 | build | layer 8/22 built'
'InceptionV3 | build | layer 9/22 built'
'InceptionV3 | build | layer 10/22 built'
'InceptionV3 | build | layer 11/22 built'
'InceptionV3 | build | layer 12/22 built'
'InceptionV3 | build | layer 13/22 built'
'InceptionV3 | build | layer 14/22 built'
'InceptionV3 | build | layer 15/22 built'
'InceptionV3 | build | layer 17/22 built'
'InceptionV3 | build | layer 18/22 built'
'InceptionV3 | build | layer 19/22 built'
'InceptionV3 | build | layer 20/22 built'
'InceptionV3 | build | layer 21/22 built'
'InceptionV3 | build | layer 22/22 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/4 built'
'layer 2/4 built'
'layer 3/4 built'
'layer 4/4 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/6 built'
'layer 2/6 built'
'layer 3/6 built'
'layer 4/6 built'
'layer 5/6 built'
'layer 6/6 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'inceptionNet_v3 | building InceptionV3 model | done 1/3'
'inceptionNet_v3 | clearning pretrained weights | done 2/3'
'inceptionNet_v3 | loading pretrained weights | done 3/3'
'InceptionV3 | forward | input shape is:ivy.Shape(1, 224, 224, 3) | done 1/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 224, 224, 3) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 111, 111, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 111, 111, 32) | done 2/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 111, 111, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 32) | done 3/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 109, 109, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 64) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 64) | done 4/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 54, 54, 64) | done 5/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 54, 54, 80) | done 3/3'
'InceptionV3 | forward | is:ivy.Shape(1, 54, 54, 80) | done 6/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 80) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 52, 52, 192) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 52, 52, 192) | done 7/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 192) | done 8/27'
'input shape is:ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 32) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 32)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 25, 25, 256) | done 9/27'
'input shape is:ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 10/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 11/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 384) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 96) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 96)'
'one 20/20, output shape is:ivy.Shape(1, 12, 12, 288)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 12/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 12, 12, 768) | done 13/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 14/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 15/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 16/27'
'v3 16/27, output shape is:ivy.Shape(1, 12, 12, 768)'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 5, 5, 192)'
'one 7/20, output shape is:ivy.Shape(1, 5, 5, 768)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 1280) | done 17/27'
'input shape is:ivy.Shape(1, 5, 5, 1280)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 18/27'
'input shape is:ivy.Shape(1, 5, 5, 2048)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 19/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 20/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 5, 5) | done 21/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 1, 1) | done 22/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 27/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 24/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 25/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048) | done 26/27'
'InceptionV3 | forward | fc | done 27/27'
('test_inceptionnet | logits is: ivy.array([[-2.08667070e-01, '
 '-7.30164647e-02,  2.19959593e+00,\n'
 '         1.99421847e+00,  5.14429808e-01, -4.04356196e-02,\n'
 '         2.64543819e+00,  7.88823008e-01,  1.74653947e-01,\n'
 '        -2.26732159e+00, -1.77254546e+00,  2.50269622e-02,\n'
 '        -1.70881879e+00,  5.83609581e-01,  1.37476468e+00,\n'
 '        -1.43033993e+00, -2.05608398e-01, -2.07818150e-01,\n'
 '        -8.00327420e-01,  1.27466619e-01,  1.50211716e+00,\n'
 '        -2.73477149e+00,  4.81782258e-01, -4.92328018e-01,\n'
 '         3.13111424e-01, -9.06719208e-01, -2.57332635e+00,\n'
 '        -4.62329298e-01, -8.28915119e-01, -1.58286119e+00,\n'
 '         2.46683001e-01,  1.84595418e+00, -3.73433344e-02,\n'
 '        -1.84616968e-01,  3.54163575e+00, -2.40843964e+00,\n'
 '         1.40683699e+00, -1.56340051e+00, -1.81354666e+00,\n'
 '         2.41892123e+00, -1.63880959e-01,  3.22547495e-01,\n'
 '         7.25097358e-02,  9.41646814e-01, -1.26275742e+00,\n'
 '         2.94735938e-01, -5.64040661e-01,  1.39392781e+00,\n'
 '         1.33695602e-01,  2.41760373e+00,  1.38155329e+00,\n'
 '         9.42986250e-01, -8.24378371e-01, -1.79972494e+00,\n'
 '         1.39741194e+00,  2.51662111e+00, -3.20458412e-01,\n'
 '         4.01176214e-01,  1.31676638e+00, -5.51295042e-01,\n'
 '        -5.68217397e-01,  3.05698800e+00,  2.82821804e-01,\n'
 '        -3.91763866e-01,  1.64804757e+00,  3.52150738e-01,\n'
 '         2.07358503e+00,  4.00101423e+00,  3.05280161e+00,\n'
 '         4.91310298e-01, -1.59184837e+00,  1.06637657e+00,\n'
 '        -1.44410467e+00, -1.27741623e+00, -1.73134172e+00,\n'
 '         7.29443252e-01, -7.24126935e-01, -7.56884336e-01,\n'
 '        -6.16010308e-01,  8.20008576e-01, -1.09805703e+00,\n'
 '         7.43492603e-01, -1.56609464e+00, -8.53835344e-01,\n'
 '         2.14681387e+00, -7.21699595e-01, -1.58225668e+00,\n'
 '         5.85254192e-01,  1.71163702e+00,  5.46830237e-01,\n'
 '        -6.40654445e-01,  8.72450650e-01, -1.74301135e+00,\n'
 '        -5.73602557e-01, -1.00948381e+00, -2.12305069e+00,\n'
 '         3.73964369e-01, -1.78044289e-02, -2.21390939e+00,\n'
 '         3.00215268e+00,  3.19166779e+00,  2.19036794e+00,\n'
 '         5.85717619e-01,  9.07672882e-01,  1.14267290e+00,\n'
 '        -1.69773638e+00, -1.38819778e+00,  7.47179508e-01,\n'
 '         7.55899429e-01, -7.27864623e-01, -7.72756934e-01,\n'
 '        -1.42822540e+00,  2.29609060e+00,  2.18004703e+00,\n'
 '         2.58853555e+00, -2.55035996e+00, -1.02523661e+00,\n'
 '        -2.14353502e-01, -2.36454678e+00,  1.26059383e-01,\n'
 '         1.24278307e-01, -2.04778576e+00,  1.85667133e+00,\n'
 '        -6.85265303e-01, -1.34509039e+00,  3.83723319e-01,\n'
 '        -3.24932933e-01,  2.27478361e+00,  4.99123692e-01,\n'
 '         7.86162674e-01,  4.99375999e-01,  4.45704758e-02,\n'
 '         2.54502439e+00, -2.22487474e+00,  7.87315547e-01,\n'
 '         3.29774767e-02,  1.44703531e+00,  7.93808639e-01,\n'
 '        -4.79034782e-01, -9.37324941e-01, -1.61104643e+00,\n'
 '        -9.77143049e-02, -2.03395605e+00,  4.07235503e-01,\n'
 '         3.26308989e+00,  7.04467297e-03,  2.21032000e+00,\n'
 '         9.88769174e-01,  2.79377103e+00,  1.99499691e+00,\n'
 '         1.19045699e+00, -8.53687525e-04,  4.23056793e+00,\n'
 '         2.07180113e-01,  1.62780285e+00, -2.73512649e+00,\n'
 '         1.36090994e+00,  4.82488298e+00, -2.82233667e+00,\n'
 '        -4.86477494e-01,  2.10822177e+00, -1.66934490e+00,\n'
 '        -3.19592237e+00, -8.10227156e-01, -2.35291615e-01,\n'
 '        -1.68721950e+00, -2.38132858e+00, -8.23396325e-01,\n'
 '        -1.33704495e+00,  2.79783225e+00,  1.93068242e+00,\n'
 '         4.62463766e-01,  4.25068557e-01,  4.19834197e-01,\n'
 '         2.50513649e+00, -5.13973534e-01, -4.54085827e-01,\n'
 '        -1.27416849e-01,  1.84525323e+00,  1.25893271e+00,\n'
 '        -4.11138445e-01,  9.85408902e-01, -3.00914407e-01,\n'
 '         8.70174706e-01, -9.72133353e-02,  1.28972018e+00,\n'
 '         4.44199562e+00, -8.30442488e-01, -1.55300498e+00,\n'
 '        -3.00232434e+00, -1.74983573e+00, -6.10597849e-01,\n'
 '        -6.81063831e-01, -1.52885079e+00, -1.15405369e+00,\n'
 '        -7.81593084e-01, -2.36626863e+00,  7.39720464e-01,\n'
 '        -1.01509297e+00, -5.18622041e-01, -6.93145335e-01,\n'
 '        -2.41482854e+00, -2.69170475e+00,  3.30249739e+00,\n'
 '        -2.05396771e+00, -7.30582357e-01, -4.51769412e-01,\n'
 '         1.44717062e+00, -2.81456256e+00, -1.16701937e+00,\n'
 '        -1.97882473e-01, -3.94607842e-01, -9.46476281e-01,\n'
 '         1.34619367e+00,  1.82158256e+00,  2.36750856e-01,\n'
 '         2.83366710e-01, -2.24805087e-01,  1.95104086e+00,\n'
 '        -3.40293002e+00, -7.76491523e-01, -2.30017960e-01,\n'
 '         2.91368365e+00,  2.33047008e+00,  6.48570251e+00,\n'
 '         1.94795251e+00,  3.20863557e+00, -3.67756176e+00,\n'
 '         4.50369120e-01,  2.48522043e+00,  1.90597093e+00,\n'
 '         3.96560216e+00,  3.11987281e+00,  4.20059383e-01,\n'
 '        -6.01295471e-01,  2.36716318e+00,  5.44456065e-01,\n'
 '        -1.30035794e+00, -9.28698420e-01,  1.21071100e+00,\n'
 '         7.21284807e-01,  9.11210060e-01,  2.58312774e+00,\n'
 '        -5.52895367e-02, -6.76817417e-01,  9.66211706e-02,\n'
 '         1.04638910e+00,  9.16975856e-01,  8.90199661e+00,\n'
 '         6.87587643e+00,  4.92388439e+00,  1.64900971e+00,\n'
 '        -2.26279521e+00,  2.94497788e-01, -7.39841282e-01,\n'
 '         2.08753586e+00,  2.48970890e+00,  6.84872341e+00,\n'
 '         2.30606480e+01,  6.43381071e+00,  4.41803169e+00,\n'
 '         7.67488670e+00, -1.26275432e+00,  7.89315939e-01,\n'
 '        -5.83822250e-01,  2.02479631e-01, -6.43654764e-01,\n'
 '         3.06405115e+00,  2.22391069e-01,  3.18120241e+00,\n'
 '         1.55928783e+01, -1.60036012e-02,  1.53209197e+00,\n'
 '         2.55203056e+00, -1.76223069e-01, -1.21524167e+00,\n'
 '         1.30304539e+00,  2.28835821e+00, -1.25107348e+00,\n'
 '         1.32295618e+01,  2.00201079e-01, -1.15537083e+00,\n'
 '         3.07187557e-01,  3.56307721e+00, -1.62238789e+00,\n'
 '        -2.40886259e+00, -6.86175346e-01, -9.06137884e-01,\n'
 '        -6.51629269e-01,  2.32595891e-01, -1.38901365e+00,\n'
 '         1.25700152e+00, -4.47617590e-01, -1.35261977e+00,\n'
 '        -1.73986781e+00, -1.11031282e+00,  5.56167316e+00,\n'
 '        -9.72961426e-01, -8.65691483e-01, -1.75106537e+00,\n'
 '        -2.23928690e-01, -4.47230130e-01,  1.10245883e+00,\n'
 '        -6.03494197e-02, -3.10142458e-01,  9.67350841e-01,\n'
 '         1.15289676e+00,  1.88473797e+00,  5.04953444e-01,\n'
 '         6.57547057e-01, -4.97295022e-01, -1.01282513e+00,\n'
 '        -1.20291853e+00, -1.69558215e+00,  4.26987708e-02,\n'
 '         3.18045616e-01, -2.00768995e+00,  4.14416164e-01,\n'
 '        -2.90250927e-01, -1.57091212e+00,  7.86743939e-01,\n'
 '        -3.11942011e-01,  3.60981822e-01,  2.08638239e+00,\n'
 '        -2.39520097e+00,  1.19349539e+00,  2.33380246e+00,\n'
 '         1.21515942e+00,  1.68418121e+00, -5.99606633e-01,\n'
 '        -1.80414343e+00,  1.24810874e+00,  1.84282374e+00,\n'
 '         3.24327260e-01,  4.44300205e-01, -3.26151013e+00,\n'
 '        -1.84512103e+00,  1.65633678e+00,  2.95714760e+00,\n'
 '        -1.75691247e+00,  1.27347827e+00, -4.39312935e-01,\n'
 '        -5.90860605e-01,  6.85818970e-01, -5.28506696e-01,\n'
 '         4.05705333e-01,  3.03977394e+00,  6.94572747e-01,\n'
 '         1.27446663e+00, -7.99408913e-01, -1.02727103e+00,\n'
 '         5.08044779e-01,  2.18708053e-01,  8.27844858e-01,\n'
 '        -1.71130454e+00,  2.42268634e+00, -4.04163748e-02,\n'
 '        -2.43207049e+00, -2.68522263e-01, -8.40133071e-01,\n'
 '        -2.84789848e+00,  6.04562461e-03, -1.84305143e+00,\n'
 '         1.18052220e+00, -1.75847042e+00, -2.42386961e+00,\n'
 '        -2.06893063e+00, -7.91405976e-01, -4.71747458e-01,\n'
 '        -2.00810313e+00, -1.65939853e-01, -1.02531362e+00,\n'
 '         9.95629847e-01,  3.24419558e-01,  8.70538235e-01,\n'
 '        -1.93453777e+00, -4.93837595e-01,  1.04405880e+00,\n'
 '        -1.11415649e+00, -1.92649805e+00, -1.55049968e+00,\n'
 '        -2.79047942e+00, -3.27159309e+00, -4.69143808e-01,\n'
 '        -1.89113891e+00,  9.14136171e-01,  1.46947503e-01,\n'
 '         1.98980570e-01,  2.75596261e-01, -1.66497958e+00,\n'
 '        -2.40234017e-01,  1.69309676e-02, -6.49058044e-01,\n'
 '         1.07034421e+00,  1.73034203e+00, -9.90730166e-01,\n'
 '         9.35502946e-01, -1.09708536e+00,  1.17169404e+00,\n'
 '         1.27890301e+00, -3.40133011e-01, -1.30102754e+00,\n'
 '        -2.66980231e-01,  1.71223795e+00,  2.23639011e+00,\n'
 '         1.40916562e+00, -1.29325199e+00,  4.25950587e-02,\n'
 '         5.60609520e-01, -8.62895012e-01, -2.69557238e-01,\n'
 '        -1.96291196e+00, -2.70262527e+00, -7.78078318e-01,\n'
 '        -1.09428453e+00, -5.78777254e-01, -7.45211661e-01,\n'
 '         1.91007614e-01, -6.29912913e-01, -1.85720348e+00,\n'
 '        -5.07504880e-01, -3.25915217e+00, -1.55404615e+00,\n'
 '        -5.49400210e-01,  2.43805245e-01,  6.63095772e-01,\n'
 '        -1.38682711e+00, -1.79019928e+00,  2.50246763e-01,\n'
 '        -8.69238079e-01,  6.18217111e-01,  8.96322429e-01,\n'
 '        -6.88026547e-01, -1.59332490e+00, -2.85486197e+00,\n'
 '         6.16103291e-01, -1.48751199e+00,  1.42597109e-01,\n'
 '         3.25432569e-01,  1.32797921e+00, -7.48341203e-01,\n'
 '         2.30458215e-01,  2.02047780e-01, -6.58737957e-01,\n'
 '         4.84081090e-01,  1.20171607e+00, -1.63637829e+00,\n'
 '        -4.04112279e-01, -1.94988280e-01,  7.83721268e-01,\n'
 '         4.61300999e-01,  1.93712139e+00, -1.46365523e+00,\n'
 '        -4.50370759e-01,  1.27420950e+00, -2.61765868e-01,\n'
 '         1.38090444e+00,  4.15872872e-01, -2.08370805e-01,\n'
 '         7.79693127e-01, -4.67532277e-02, -9.78453398e-01,\n'
 '         1.12192929e+00,  1.17560673e+00,  8.52957010e-01,\n'
 '        -2.00072438e-01, -2.19434667e+00, -1.58170581e+00,\n'
 '        -4.82436419e-01,  2.23510551e+00,  1.53015363e+00,\n'
 '        -6.78304195e-01, -2.94479322e+00,  4.42904830e-01,\n'
 '         9.00310338e-01, -5.59976220e-01,  2.79819560e+00,\n'
 '        -4.41737622e-01,  1.03878641e+00,  9.33847487e-01,\n'
 '         6.17396534e-01, -3.27723950e-01, -3.65330625e+00,\n'
 '         5.38959801e-01, -1.69399381e-03, -4.36870289e+00,\n'
 '        -2.84213781e-01, -4.95148271e-01, -8.95910799e-01,\n'
 '        -2.29756451e+00,  3.61659825e-01,  1.89539290e+00,\n'
 '        -1.03948486e+00, -9.98302817e-01, -1.84332907e+00,\n'
 '         7.15052724e-01, -1.49489021e+00, -1.93233561e+00,\n'
 '         3.14916313e-01,  1.29936314e+00, -2.18519163e+00,\n'
 '        -3.12448815e-02,  1.60604286e+00, -1.38493776e+00,\n'
 '        -2.92922211e+00,  8.05693388e-01, -1.53576684e+00,\n'
 '        -7.79041588e-01, -1.20011568e+00, -1.41448808e+00,\n'
 '         1.67851985e+00,  1.02915466e+00, -3.69792610e-01,\n'
 '        -1.13201213e+00,  8.30356657e-01,  1.43553376e-01,\n'
 '        -1.47711456e+00,  2.89790034e-01, -4.21738768e+00,\n'
 '        -4.56211948e+00, -1.03724718e+00, -3.03705454e+00,\n'
 '         2.08221048e-01, -2.06928563e+00,  4.94460464e-02,\n'
 '         2.71131813e-01, -1.26361072e+00, -2.55459356e+00,\n'
 '        -1.55730772e+00, -1.68928611e+00, -8.88602376e-01,\n'
 '        -1.97378397e-02, -1.18697509e-01, -1.16770005e+00,\n'
 '        -1.60407901e+00, -2.25842923e-01, -5.15428901e-01,\n'
 '         3.53837442e+00,  1.74675083e+00, -3.57842112e+00,\n'
 '        -1.28089809e+00, -1.34526753e+00, -1.30605447e+00,\n'
 '         7.20515788e-01, -1.04545522e+00, -2.18201446e+00,\n'
 '         2.16295242e+00,  7.13157117e-01, -2.31904244e+00,\n'
 '        -1.74631238e-01, -1.29322350e-01, -1.11113262e+00,\n'
 '        -1.36099672e+00, -2.07202506e+00,  1.50512683e+00,\n'
 '        -1.07534921e+00,  6.20473921e-01,  2.58293152e-01,\n'
 '        -1.67920446e+00, -1.64911878e+00, -3.12543094e-01,\n'
 '        -1.46176970e+00,  3.64620995e+00, -8.30319047e-01,\n'
 '        -1.58729386e+00, -1.15543270e+00, -2.69471169e-01,\n'
 '        -2.96974659e+00, -6.95999861e-02, -4.29833651e-01,\n'
 '        -5.29214919e-01, -2.03389049e+00,  3.08161378e+00,\n'
 '         1.12055302e+00, -2.10632533e-01, -2.94033694e+00,\n'
 '         1.81679928e+00, -8.30701292e-02,  8.10677111e-02,\n'
 '        -2.93297386e+00, -9.97805223e-03,  1.75160915e-01,\n'
 '         5.27227580e-01,  1.93632984e+00,  4.18445766e-01,\n'
 '         5.61854124e-01, -2.04555154e+00,  1.07554758e+00,\n'
 '        -8.88081908e-01, -1.63736713e+00,  1.22153020e+00,\n'
 '        -1.79846072e+00,  1.04206276e+00, -9.23871398e-01,\n'
 '         1.53121853e+00, -5.77155590e-01,  2.39480638e+00,\n'
 '         1.55311918e+00, -1.83388448e+00, -9.41072524e-01,\n'
 '        -2.97712386e-01, -1.88856232e+00, -1.49347544e+00,\n'
 '        -5.45642138e-01,  1.74914181e+00, -1.41835153e+00,\n'
 '         4.28388643e+00,  6.03426337e-01, -4.46253359e-01,\n'
 '         4.38282549e-01, -2.76117593e-01,  1.93441320e+00,\n'
 '        -9.06081319e-01, -2.90827274e-01,  6.51844204e-01,\n'
 '        -1.71840346e+00, -9.57102716e-01,  7.02612221e-01,\n'
 '         5.23000956e-02, -1.99827647e+00, -3.03101158e+00,\n'
 '         7.99511790e-01,  4.46502149e-01,  2.80195564e-01,\n'
 '         1.11856699e+00,  2.71932626e+00,  6.15466893e-01,\n'
 '        -1.36054683e+00,  1.58840418e+00,  1.53957713e+00,\n'
 '        -9.92703795e-01, -2.16633582e+00, -1.93801141e+00,\n'
 '        -1.51319787e-01, -2.62361884e+00, -2.94986534e+00,\n'
 '        -1.24830365e-01,  3.09652388e-01, -3.13138068e-01,\n'
 '         1.81419671e+00, -1.51594663e+00, -2.71355224e+00,\n'
 '        -5.30678511e-01,  1.33476579e+00,  2.86488473e-01,\n'
 '         1.54462802e+00,  4.84586358e-01, -1.92013240e+00,\n'
 '        -2.60384381e-01,  6.30430818e-01, -1.89191925e+00,\n'
 '        -2.85252428e+00,  1.44412148e+00, -2.93709254e+00,\n'
 '         2.86040217e-01, -2.86985731e+00,  6.30180716e-01,\n'
 '        -2.24100161e+00, -5.58409095e-01, -4.43416119e-01,\n'
 '        -1.84704351e+00, -1.78886354e-01, -5.72604299e-01,\n'
 '        -2.37365961e+00, -1.69899118e+00, -6.74444199e-01,\n'
 '         1.79020286e+00, -6.86180234e-01, -1.74144590e+00,\n'
 '        -1.16248321e+00,  1.23526669e+00, -6.41255259e-01,\n'
 '         1.29538321e+00, -2.12354898e+00,  3.90924126e-01,\n'
 '         2.09549666e-01,  1.99240685e+00,  6.07788920e-01,\n'
 '         1.14564276e+00,  4.83053714e-01,  8.17513585e-01,\n'
 '        -4.28337622e+00,  2.71690583e+00, -1.89650798e+00,\n'
 '         7.12995529e-01, -6.74817920e-01, -2.74539232e+00,\n'
 '         9.74667728e-01, -9.20875549e-01, -1.91379070e-01,\n'
 '         5.42998314e-03,  3.88877690e-02, -1.20992255e+00,\n'
 '        -1.58772576e+00,  2.41372824e-01,  4.06972677e-01,\n'
 '        -7.29022920e-01,  7.01457322e-01,  1.56363511e+00,\n'
 '        -7.84600556e-01, -3.17692804e+00, -2.68025488e-01,\n'
 '        -3.64397263e+00, -1.54151094e+00, -4.65188026e+00,\n'
 '        -3.56894994e+00,  7.39849150e-01, -3.40703219e-01,\n'
 '         8.90563130e-01, -1.60504806e+00,  2.45876670e+00,\n'
 '         9.79884863e-01, -4.35538471e-01, -3.43885875e+00,\n'
 '         1.23660302e+00,  1.30226147e+00, -1.51029456e+00,\n'
 '        -1.03911173e+00, -4.65963632e-02,  2.44141364e+00,\n'
 '         4.23316449e-01, -3.07573509e+00, -1.76294065e+00,\n'
 '         2.71633792e+00,  2.67586327e+00,  9.45808947e-01,\n'
 '         6.56594515e-01, -6.30037189e-02, -6.85464978e-01,\n'
 '        -1.93612099e+00,  7.98690915e-01,  1.60132074e+00,\n'
 '         6.33650780e-01, -1.10170674e+00,  1.81489170e-01,\n'
 '        -9.42176104e-01, -1.91383636e+00, -1.00910246e+00,\n'
 '         5.55618465e-01,  8.15975130e-01,  1.01703811e+00,\n'
 '        -8.34282517e-01, -2.07928753e+00, -4.98611152e-01,\n'
 '         4.79733527e-01, -2.42166519e+00,  3.78703404e+00,\n'
 '        -1.72707856e+00, -1.06972396e+00,  4.78250384e-01,\n'
 '        -3.72991157e+00,  4.29579973e-01, -1.18014240e+00,\n'
 '        -1.79749834e+00, -3.79978776e+00,  1.01596880e+00,\n'
 '        -1.07847333e-01,  6.00192726e-01, -1.20501828e+00,\n'
 '        -1.10320139e+00, -4.12488365e+00, -2.71712685e+00,\n'
 '         5.97098231e-01,  1.51660430e+00, -1.04971468e+00,\n'
 '        -1.05289079e-01, -1.56061053e+00,  9.11939800e-01,\n'
 '        -1.22642231e+00,  1.50281382e+00,  2.28841603e-01,\n'
 '        -1.18565416e+00, -6.66728854e-01, -8.42326999e-01,\n'
 '         5.10423541e-01,  8.44737709e-01,  1.42126751e+00,\n'
 '        -4.53665182e-02, -1.88079214e+00,  4.32980061e-02,\n'
 '         2.49111843e+00,  8.65749121e-01, -6.03109837e-01,\n'
 '         4.41053212e-02,  2.06537396e-02, -1.70236754e+00,\n'
 '        -1.49518752e+00,  1.46093035e+00,  1.00536060e+00,\n'
 '        -4.19194222e-01,  1.52787066e+00,  1.49921238e+00,\n'
 '         1.28915870e+00, -1.02697420e+00, -1.69989085e+00,\n'
 '        -6.15848124e-01,  5.47099352e-01, -2.75009727e+00,\n'
 '         6.68476760e-01,  6.38556480e-01,  1.12050962e+00,\n'
 '        -1.15767622e+00,  2.46409035e+00,  1.87189996e+00,\n'
 '        -6.16534471e-01,  3.79137576e-01, -1.82487392e+00,\n'
 '        -1.15257418e+00,  1.13452661e+00,  6.55268133e-02,\n'
 '         1.01640487e+00, -1.78136921e+00,  1.09534037e+00,\n'
 '        -2.12333113e-01,  1.49694240e+00,  5.84615052e-01,\n'
 '         1.22630894e+00, -6.16871297e-01, -9.53315437e-01,\n'
 '         4.78725165e-01,  9.83224511e-01, -1.44931006e+00,\n'
 '        -8.22539329e-02,  7.48471618e-02,  8.79729092e-02,\n'
 '        -1.35155678e+00,  9.80770662e-02, -1.69370329e+00,\n'
 '         1.25719404e+00, -2.10872292e+00,  7.54893780e-01,\n'
 '        -2.66558766e+00,  1.06922388e+00,  1.60380364e+00,\n'
 '        -4.13342595e-01, -1.43470621e+00,  1.85704064e+00,\n'
 '        -2.65640527e-01, -2.05194402e+00, -2.44851565e+00,\n'
 '         2.04990101e+00,  2.20502675e-01,  9.15338159e-01,\n'
 '         5.85131049e-01, -8.79796684e-01,  1.19846773e+00,\n'
 '        -1.38085413e+00, -1.26146960e+00, -6.18013620e-01,\n'
 '        -1.10627866e+00,  1.87439406e+00, -5.78110039e-01,\n'
 '         2.48045254e+00,  2.11047530e-01,  1.24998653e+00,\n'
 '        -4.21238184e-01, -2.64945912e+00,  1.44565535e+00,\n'
 '         1.09908521e+00, -2.79433203e+00,  3.70964587e-01,\n'
 '         2.43212604e+00, -8.52775216e-01,  1.36087203e+00,\n'
 '        -1.89065123e+00, -9.25919533e-01, -6.46402240e-01,\n'
 '         1.99193537e+00, -2.84995985e+00, -1.17011175e-01,\n'
 '         7.14900494e-01,  3.40822905e-01,  6.11224890e-01,\n'
 '        -1.53861403e+00, -1.01651478e+00, -1.51475906e+00,\n'
 '        -5.55648953e-02, -3.77562714e+00,  3.23091984e+00,\n'
 '        -3.94585341e-01, -2.20197487e+00, -3.44454122e+00,\n'
 '        -1.04540491e+00, -8.01594019e-01,  1.63353890e-01,\n'
 '        -1.06874227e+00,  9.02444720e-01,  4.44254756e-01,\n'
 '        -2.74942011e-01,  1.12923443e+00,  5.41263893e-02,\n'
 '         2.92775393e-01, -1.96785128e+00,  1.11549759e+00,\n'
 '        -3.87939960e-01, -3.84379804e-01,  3.74073553e+00,\n'
 '        -1.36848974e+00, -1.04527462e+00, -4.68626618e-01,\n'
 '        -7.57638812e-01, -1.94163704e+00,  1.05670655e+00,\n'
 '        -2.33317518e+00, -3.40434599e+00, -4.11765242e+00,\n'
 '        -2.64695793e-01,  2.05956745e+00,  1.39197779e+00,\n'
 '         8.55181575e-01,  1.10624099e+00, -1.85028708e+00,\n'
 '        -2.71694481e-01,  2.31516170e+00,  1.29574525e+00,\n'
 '         7.97069073e-01, -1.00585544e+00,  2.14471054e+00,\n'
 '         1.77859381e-01, -4.97493058e-01, -8.75088692e-01,\n'
 '         9.36880946e-01,  4.88488376e-01,  8.75713050e-01,\n'
 '        -1.95075914e-01,  7.50679314e-01, -1.26922750e+00,\n'
 '        -1.19681871e+00,  4.69478130e-01, -3.03664595e-01,\n'
 '        -9.11411583e-01, -1.07314980e+00, -1.71396649e+00,\n'
 '        -1.84236491e+00, -1.54003942e+00,  3.87941986e-01,\n'
 '        -2.36499548e-01, -5.34544349e-01, -2.12446856e+00,\n'
 '        -1.28920746e+00, -5.61304033e-01,  1.30898869e+00,\n'
 '         2.22473264e+00,  1.47773624e+00,  2.17817426e+00,\n'
 '         2.85159707e+00, -8.32685471e-01, -1.07787669e+00,\n'
 '        -2.10108489e-01,  2.12495148e-01,  5.92873216e-01,\n'
 '         1.99617696e+00,  1.87859738e+00,  1.34434426e+00,\n'
 '         8.99183750e-01,  9.32296276e-01,  1.38139331e+00,\n'
 '         1.71644854e+00, -1.44747841e+00, -3.31645519e-01,\n'
 '        -7.55441070e-01, -4.13556516e-01, -1.40680337e+00,\n'
 '        -1.89675903e+00, -1.51291084e+00, -1.44104409e+00,\n'
 '         7.00149417e-01,  1.42119312e+00, -1.00104010e+00,\n'
 '         8.60226676e-02, -1.17710972e+00,  2.20470500e+00,\n'
 '        -2.77731657e-01, -1.79887104e+00, -1.59797847e-01,\n'
 '        -3.84864020e+00, -8.18019867e-01,  1.64413464e+00,\n'
 '         6.47873759e-01, -1.23175836e+00, -1.62352204e+00,\n'
 '        -2.98153848e-01, -1.11552715e+00, -3.14633667e-01,\n'
 '        -1.31477833e+00, -6.39504194e-01,  8.29320252e-01,\n'
 '         2.08919018e-01,  1.71300113e+00, -2.49275446e-01,\n'
 '         5.12209892e-01, -8.14027965e-01, -1.26292634e+00,\n'
 '        -1.85410702e+00, -1.75452435e+00, -6.23788714e-01,\n'
 '        -4.81817037e-01, -1.48652029e+00, -6.75161242e-01,\n'
 '        -6.39115930e-01]])')
'test_inceptionnet | batch_shape is: [1]'
'test_inceptionnet | logits.shape is: ivy.Shape(1, 1000)'
'||'
'test_inceptionnet | indices_test | true_indices is: [258 270 279]'
'test_inceptionnet | indices_test | calc_indices is: [258 270 279]'
'test_inceptionnet | device is: cpu'
'test_inceptionnet | fw is: tensorflow'
'test_inceptionnet | load_weights is: False'
'InceptionV3 | build | layer 1/22 built'
'InceptionV3 | build | layer 2/22 built'
'layer 3/22 built'
'InceptionV3 | build | layer 4/22 built'
'InceptionV3 | build | layer 5/22 built'
'InceptionV3 | build | layer 6/22 built'
'InceptionV3 | build | layer 7/22 built'
'InceptionV3 | build | layer 8/22 built'
'InceptionV3 | build | layer 9/22 built'
'InceptionV3 | build | layer 10/22 built'
'InceptionV3 | build | layer 11/22 built'
'InceptionV3 | build | layer 12/22 built'
'InceptionV3 | build | layer 13/22 built'
'InceptionV3 | build | layer 14/22 built'
'InceptionV3 | build | layer 15/22 built'
'InceptionV3 | build | layer 17/22 built'
'InceptionV3 | build | layer 18/22 built'
'InceptionV3 | build | layer 19/22 built'
'InceptionV3 | build | layer 20/22 built'
'InceptionV3 | build | layer 21/22 built'
'InceptionV3 | build | layer 22/22 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/4 built'
'layer 2/4 built'
'layer 3/4 built'
'layer 4/4 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/6 built'
'layer 2/6 built'
'layer 3/6 built'
'layer 4/6 built'
'layer 5/6 built'
'layer 6/6 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'inceptionNet_v3 | building InceptionV3 model | done 1/3'
'InceptionV3 | forward | input shape is:ivy.Shape(1, 3, 224, 224) | done 1/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 3, 224, 224) | done 0/3'
'test_inceptionnet | device is: cpu'
'test_inceptionnet | fw is: tensorflow'
'test_inceptionnet | load_weights is: True'
'InceptionV3 | build | layer 1/22 built'
'InceptionV3 | build | layer 2/22 built'
'layer 3/22 built'
'InceptionV3 | build | layer 4/22 built'
'InceptionV3 | build | layer 5/22 built'
'InceptionV3 | build | layer 6/22 built'
'InceptionV3 | build | layer 7/22 built'
'InceptionV3 | build | layer 8/22 built'
'InceptionV3 | build | layer 9/22 built'
'InceptionV3 | build | layer 10/22 built'
'InceptionV3 | build | layer 11/22 built'
'InceptionV3 | build | layer 12/22 built'
'InceptionV3 | build | layer 13/22 built'
'InceptionV3 | build | layer 14/22 built'
'InceptionV3 | build | layer 15/22 built'
'InceptionV3 | build | layer 17/22 built'
'InceptionV3 | build | layer 18/22 built'
'InceptionV3 | build | layer 19/22 built'
'InceptionV3 | build | layer 20/22 built'
'InceptionV3 | build | layer 21/22 built'
'InceptionV3 | build | layer 22/22 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/4 built'
'layer 2/4 built'
'layer 3/4 built'
'layer 4/4 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/6 built'
'layer 2/6 built'
'layer 3/6 built'
'layer 4/6 built'
'layer 5/6 built'
'layer 6/6 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'inceptionNet_v3 | building InceptionV3 model | done 1/3'
'inceptionNet_v3 | clearning pretrained weights | done 2/3'
'inceptionNet_v3 | loading pretrained weights | done 3/3'
'InceptionV3 | forward | input shape is:ivy.Shape(1, 3, 224, 224) | done 1/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 3, 224, 224) | done 0/3'
'test_inceptionnet | device is: cpu'
'test_inceptionnet | fw is: torch'
'test_inceptionnet | load_weights is: False'
'InceptionV3 | build | layer 1/22 built'
'InceptionV3 | build | layer 2/22 built'
'layer 3/22 built'
'InceptionV3 | build | layer 4/22 built'
'InceptionV3 | build | layer 5/22 built'
'InceptionV3 | build | layer 6/22 built'
'InceptionV3 | build | layer 7/22 built'
'InceptionV3 | build | layer 8/22 built'
'InceptionV3 | build | layer 9/22 built'
'InceptionV3 | build | layer 10/22 built'
'InceptionV3 | build | layer 11/22 built'
'InceptionV3 | build | layer 12/22 built'
'InceptionV3 | build | layer 13/22 built'
'InceptionV3 | build | layer 14/22 built'
'InceptionV3 | build | layer 15/22 built'
'InceptionV3 | build | layer 17/22 built'
'InceptionV3 | build | layer 18/22 built'
'InceptionV3 | build | layer 19/22 built'
'InceptionV3 | build | layer 20/22 built'
'InceptionV3 | build | layer 21/22 built'
'InceptionV3 | build | layer 22/22 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/4 built'
'layer 2/4 built'
'layer 3/4 built'
'layer 4/4 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/6 built'
'layer 2/6 built'
'layer 3/6 built'
'layer 4/6 built'
'layer 5/6 built'
'layer 6/6 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'inceptionNet_v3 | building InceptionV3 model | done 1/3'
'InceptionV3 | forward | input shape is:ivy.Shape(1, 224, 224, 3) | done 1/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 224, 224, 3) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 111, 111, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 111, 111, 32) | done 2/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 111, 111, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 32) | done 3/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 109, 109, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 64) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 64) | done 4/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 54, 54, 64) | done 5/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 54, 54, 80) | done 3/3'
'InceptionV3 | forward | is:ivy.Shape(1, 54, 54, 80) | done 6/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 80) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 52, 52, 192) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 52, 52, 192) | done 7/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 192) | done 8/27'
'input shape is:ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 32) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 32)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 25, 25, 256) | done 9/27'
'input shape is:ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 10/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 11/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 384) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 96) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 96)'
'one 20/20, output shape is:ivy.Shape(1, 12, 12, 288)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 12/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 12, 12, 768) | done 13/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 14/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 15/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 16/27'
'v3 16/27, output shape is:ivy.Shape(1, 12, 12, 768)'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 5, 5, 192)'
'one 7/20, output shape is:ivy.Shape(1, 5, 5, 768)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 1280) | done 17/27'
'input shape is:ivy.Shape(1, 5, 5, 1280)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 18/27'
'input shape is:ivy.Shape(1, 5, 5, 2048)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 19/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 20/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 5, 5) | done 21/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 1, 1) | done 22/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 27/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 24/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 25/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048) | done 26/27'
'InceptionV3 | forward | fc | done 27/27'
('test_inceptionnet | logits is: ivy.array([[ 2.05097188e+04, -3.01782562e+05, '
 '-4.45283812e+05,\n'
 '         1.78496328e+04, -4.97121312e+05, -7.29821875e+04,\n'
 '        -3.57723438e+04,  1.77061031e+05, -2.09679734e+05,\n'
 '         2.40665137e+04,  4.26717422e+04, -2.37465453e+05,\n'
 '         3.56474062e+04, -4.99885469e+05,  2.36433750e+04,\n'
 '         4.74701094e+05, -1.84429234e+05, -1.97960094e+05,\n'
 '        -2.50232328e+05, -2.01620688e+05,  9.67989531e+04,\n'
 '        -6.30150312e+05, -6.75589000e+05,  6.62307031e+04,\n'
 '         1.56174344e+05,  4.70576812e+05,  4.01349000e+05,\n'
 '         3.84478500e+05,  7.06031719e+04,  3.54864938e+05,\n'
 '         4.69454688e+05,  6.56509875e+05, -1.28592469e+05,\n'
 '        -2.64884125e+05,  2.17258375e+05,  2.78369438e+05,\n'
 '        -2.16469406e+05, -2.23587281e+05,  3.22973938e+05,\n'
 '        -3.49664500e+05,  4.24862094e+05,  7.67865125e+05,\n'
 '        -4.08295188e+05, -3.85340906e+05, -1.63185875e+05,\n'
 '         1.00557141e+05,  9.58650938e+04,  4.34515625e+04,\n'
 '        -1.70145859e+04,  4.55437500e+02,  1.08970188e+05,\n'
 '         4.03701406e+05, -1.83263781e+05,  2.44624922e+05,\n'
 '         2.07690031e+05,  3.14239188e+05, -5.58675625e+05,\n'
 '         6.12441875e+05, -3.59054531e+05,  2.98412375e+05,\n'
 '        -3.08316531e+05,  2.33396406e+05, -4.87141656e+05,\n'
 '        -3.39899250e+05,  1.72089969e+05,  3.95906000e+05,\n'
 '        -3.14155750e+05,  9.52320312e+04, -1.50909125e+05,\n'
 '        -3.07610500e+05, -4.87519719e+05, -5.09116094e+04,\n'
 '        -6.07025312e+05, -4.11662406e+05, -4.08245844e+05,\n'
 '         5.46774000e+05,  9.95808125e+04,  4.94676094e+05,\n'
 '        -6.54251688e+05, -6.93784375e+05, -4.37919250e+05,\n'
 '         1.57049031e+05, -3.63849141e+04, -3.96914344e+05,\n'
 '        -3.81541094e+05,  5.36000500e+05,  2.97929625e+05,\n'
 '        -4.99263094e+05, -1.20853500e+05, -3.35199875e+05,\n'
 '         9.13507688e+05,  2.19574312e+05, -1.67481266e+05,\n'
 '         7.26339000e+05, -4.26418750e+03, -3.49953438e+05,\n'
 '         2.13659875e+05,  2.41235797e+05, -5.05529625e+05,\n'
 '        -4.14286531e+05, -2.77886344e+05, -3.16299125e+05,\n'
 '        -2.38599688e+05, -3.51184469e+05, -2.40532312e+05,\n'
 '        -3.62341062e+05,  4.00752000e+05,  7.30045312e+04,\n'
 '         2.21762094e+05,  2.64361875e+05, -1.20772266e+04,\n'
 '        -3.81605969e+05, -3.81860594e+05,  5.05732875e+05,\n'
 '        -5.41014875e+05,  2.45992594e+05,  1.43721844e+05,\n'
 '         1.00388453e+05,  6.50991562e+04, -3.84841562e+05,\n'
 '        -8.63738000e+05, -8.06811312e+05,  5.90215688e+05,\n'
 '         2.27551734e+05, -5.25318625e+05,  1.40269766e+05,\n'
 '         1.38369688e+05, -6.67697375e+05, -4.95959750e+05,\n'
 '        -3.83970875e+05, -3.00878344e+05,  3.81099312e+05,\n'
 '         1.77216688e+05, -2.52006203e+05, -4.22350750e+05,\n'
 '        -2.59486516e+05, -6.97534938e+05, -2.30023922e+05,\n'
 '         2.44284469e+05,  2.60627656e+05,  7.30605750e+05,\n'
 '        -1.08631406e+05, -8.08277500e+05,  4.67435688e+05,\n'
 '        -4.31343844e+05,  3.72060156e+03,  5.30058750e+05,\n'
 '        -2.60315391e+04,  3.45617531e+05, -5.05056094e+05,\n'
 '         1.41229312e+05, -1.91681734e+05, -6.43359531e+04,\n'
 '        -2.38855719e+05, -1.44804344e+05,  2.33729219e+04,\n'
 '        -3.09229875e+05, -1.90287094e+05,  1.31805328e+05,\n'
 '        -1.11208859e+05,  5.80349438e+05,  6.81408375e+05,\n'
 '         4.98248125e+05,  8.28300547e+04, -2.81395625e+05,\n'
 '        -5.78090875e+05,  3.60310094e+05,  9.37386719e+03,\n'
 '        -7.10475625e+05, -1.99103062e+05, -6.20563625e+05,\n'
 '        -8.64330625e+04,  5.49134219e+04, -5.29041625e+05,\n'
 '        -4.53501219e+05, -6.48539531e+04, -2.19566703e+05,\n'
 '        -1.50416219e+05, -4.01960250e+05, -2.49154000e+05,\n'
 '        -3.11325875e+05,  4.35900562e+05,  9.93900438e+05,\n'
 '        -3.93781875e+04,  1.79520828e+05,  2.05250703e+05,\n'
 '        -6.07114750e+05,  9.64230000e+05,  2.18290156e+05,\n'
 '        -3.99443125e+05,  5.61607500e+05, -3.18890688e+05,\n'
 '        -1.88169703e+05, -1.04086711e+05, -6.98597625e+05,\n'
 '        -5.50982000e+05, -3.38025234e+04, -2.23767531e+05,\n'
 '        -3.64072938e+05, -2.79912688e+05,  4.04893312e+05,\n'
 '        -2.60781656e+05, -6.18286000e+05,  1.12352258e+05,\n'
 '        -5.29210188e+05,  3.07030375e+05,  3.32064938e+05,\n'
 '         7.74970469e+04, -4.44829562e+05,  6.84740469e+04,\n'
 '         6.69838250e+05,  3.27626281e+05,  4.27972109e+04,\n'
 '        -4.14014312e+05,  1.08868125e+04, -1.75553141e+05,\n'
 '        -7.49740688e+05, -9.06158438e+04, -8.28336500e+05,\n'
 '         7.40500000e+02, -3.89497500e+05, -7.30469844e+04,\n'
 '         6.00490312e+04, -1.15035650e+06, -3.47021562e+05,\n'
 '        -3.82503688e+05, -1.98109469e+05, -2.53759562e+05,\n'
 '         1.28167094e+05, -1.49530391e+05,  3.03579531e+05,\n'
 '        -4.27976562e+05, -1.88364625e+05,  2.13695719e+05,\n'
 '        -8.90369531e+04, -2.40800188e+05, -7.49199500e+05,\n'
 '        -4.66436594e+05, -4.28586094e+05,  3.33569656e+05,\n'
 '        -7.62177344e+04, -4.72487125e+05, -1.39169094e+05,\n'
 '        -8.60622000e+05, -3.34228000e+05,  7.19463750e+05,\n'
 '         1.22660500e+05,  4.19524344e+05,  1.49567219e+05,\n'
 '        -1.99396500e+05,  4.95548406e+05,  5.65078906e+04,\n'
 '         1.00922453e+05, -1.72795094e+05, -4.47418906e+05,\n'
 '         1.25007094e+05,  1.79131797e+04, -4.13949438e+05,\n'
 '        -5.72117438e+05, -4.34425000e+03, -4.75404375e+05,\n'
 '        -8.28002125e+05, -4.50169625e+05,  7.95488594e+04,\n'
 '         2.88574375e+05, -1.01910888e+06,  9.63261000e+05,\n'
 '         3.89229250e+05,  3.55258781e+05, -1.00364844e+03,\n'
 '        -9.54543750e+03, -1.15545695e+05, -4.98167875e+05,\n'
 '         2.18974531e+05,  9.39057500e+04, -1.06050531e+05,\n'
 '        -5.67771000e+05,  3.16198281e+05,  2.27182250e+05,\n'
 '         1.05783750e+05, -1.00341812e+06, -2.07038516e+04,\n'
 '         7.38080125e+05, -2.19743438e+04,  6.18554453e+04,\n'
 '        -2.48629961e+04, -9.01640500e+05,  4.57326750e+05,\n'
 '         4.66429250e+05,  2.15167000e+05, -2.22188844e+05,\n'
 '         1.60723938e+05,  2.60941203e+05, -3.32111562e+05,\n'
 '         6.32546188e+05, -8.23284375e+05,  5.30234250e+05,\n'
 '        -3.64815062e+05,  7.91178125e+03, -4.97189312e+05,\n'
 '         3.45405438e+05,  4.64838125e+04,  1.08272258e+05,\n'
 '         1.16818750e+04,  3.84289562e+05, -2.66622688e+05,\n'
 '         3.15828875e+05,  8.51921641e+04,  2.43772406e+05,\n'
 '         1.97394375e+04,  2.53446500e+05, -3.03781562e+04,\n'
 '        -3.25059906e+05,  7.81147031e+04,  3.00787000e+05,\n'
 '         5.34018312e+05,  2.42643578e+05, -1.35102891e+04,\n'
 '        -5.14355031e+05, -1.58303500e+05, -6.48168875e+05,\n'
 '         4.70490594e+05,  5.12644312e+05, -1.11735703e+05,\n'
 '         4.02696375e+05, -1.79338906e+05, -3.08775000e+03,\n'
 '        -6.90396875e+03,  1.60779000e+05,  2.52443656e+05,\n'
 '         6.79487125e+05,  5.27275000e+05,  1.72995738e+06,\n'
 '         4.58107750e+05, -1.19525562e+05, -9.32318062e+05,\n'
 '         2.44210547e+05, -1.80668656e+05, -5.13086094e+05,\n'
 '        -2.13392938e+05,  3.38448719e+05, -3.89740250e+05,\n'
 '         2.59641031e+05, -3.35963594e+05,  4.74354719e+05,\n'
 '         5.47101875e+05,  2.67203469e+05, -4.37027031e+04,\n'
 '         5.68381188e+05, -3.06785750e+05, -1.86028531e+05,\n'
 '         7.25973125e+04, -1.24000219e+05, -1.34196453e+05,\n'
 '         1.00696320e+05,  1.92339688e+04, -1.08740461e+05,\n'
 '         4.95342188e+05,  1.87923906e+05, -5.48725625e+04,\n'
 '        -1.58622594e+05, -3.28229688e+05,  1.45560344e+05,\n'
 '         9.14346938e+05,  9.05662734e+04, -9.30732109e+04,\n'
 '         5.00222812e+05,  3.73594250e+05, -1.62717406e+05,\n'
 '         2.93966188e+05,  2.69770688e+05, -6.26110688e+05,\n'
 '        -5.06125938e+05,  1.08536750e+05, -4.59313625e+05,\n'
 '         4.77969469e+05, -5.57227875e+05,  6.71349844e+04,\n'
 '         3.12027562e+05,  1.00438544e+06,  6.91362000e+05,\n'
 '         1.67402609e+05, -5.31082000e+05,  7.55220000e+04,\n'
 '         1.27789547e+05, -4.25813219e+05, -1.08210250e+05,\n'
 '         1.28013312e+05, -1.10002453e+05, -4.46905188e+05,\n'
 '        -8.40639938e+05, -9.39222500e+04,  7.41513250e+05,\n'
 '        -3.68348125e+04,  7.97701016e+04,  1.36355453e+05,\n'
 '        -6.74795000e+05, -3.01144062e+05,  2.20825453e+05,\n'
 '         1.30447914e+05,  7.03452000e+05, -5.18867188e+03,\n'
 '         5.16709500e+05, -8.70188250e+05,  8.53118875e+05,\n'
 '         4.60959031e+05,  5.47925500e+05,  1.44038141e+05,\n'
 '        -5.07699031e+05,  4.42718469e+05, -3.75595625e+05,\n'
 '        -7.35763812e+05,  5.27811562e+04,  9.92276188e+05,\n'
 '        -2.82949500e+05,  5.59315562e+05, -1.40573094e+05,\n'
 '         9.02268500e+05, -2.70087000e+05,  8.27443125e+05,\n'
 '         9.25639688e+05,  9.62396250e+04,  3.24189438e+05,\n'
 '         4.39249766e+04, -2.84178906e+05,  1.94461656e+05,\n'
 '         4.48866969e+05,  5.58735812e+05, -2.45897578e+05,\n'
 '         2.44861156e+05, -8.74971875e+03,  1.24381984e+05,\n'
 '        -4.72600469e+05,  9.94722188e+04,  4.67049969e+05,\n'
 '         2.95652688e+05,  7.29510156e+04, -2.48844031e+05,\n'
 '         1.27530375e+05,  7.76664688e+04, -2.79823438e+05,\n'
 '        -5.05484875e+05,  4.63667625e+05,  7.50001172e+04,\n'
 '         2.09825000e+04,  1.72092094e+05,  5.92598500e+05,\n'
 '        -3.67103625e+05, -1.78902422e+04, -5.99068812e+05,\n'
 '        -3.11269250e+05, -5.17847812e+05, -3.47512625e+05,\n'
 '        -5.68099750e+05, -1.13947453e+05, -3.69843688e+05,\n'
 '        -1.85324844e+05,  3.24087812e+05,  5.77306500e+05,\n'
 '         6.11455000e+05,  4.20015906e+05, -5.51341125e+05,\n'
 '         1.54846797e+05, -4.39337062e+05,  5.95047375e+05,\n'
 '         9.76692344e+04, -4.43288188e+05, -2.72142562e+05,\n'
 '        -7.40333750e+04, -9.19489375e+05, -3.42772656e+05,\n'
 '         3.12393438e+04,  3.79558094e+05,  2.09441500e+05,\n'
 '         2.46211531e+05,  4.30148750e+05, -3.36700094e+05,\n'
 '        -1.56476250e+05, -2.62873000e+05, -5.72222250e+05,\n'
 '        -8.19655781e+04, -1.78519344e+05,  5.43586250e+05,\n'
 '         3.21137281e+05,  4.81942062e+05,  1.01134977e+05,\n'
 '         3.16035844e+05, -1.99122734e+05,  3.31728031e+05,\n'
 '        -7.26493250e+05, -2.61031891e+05, -4.33151969e+05,\n'
 '        -8.03140625e+02,  6.46517812e+04,  1.76565078e+05,\n'
 '         3.58354250e+05,  2.40165719e+05,  5.08440000e+04,\n'
 '        -1.63819250e+05, -9.62420000e+05, -2.43946359e+05,\n'
 '         2.19950469e+05, -6.14826094e+04, -5.58432500e+04,\n'
 '         6.53657656e+04, -9.81504531e+04,  3.74784438e+05,\n'
 '        -6.42940125e+05,  5.31382031e+03,  4.72271875e+05,\n'
 '         1.92196219e+05,  9.94384453e+04,  7.27930875e+05,\n'
 '        -2.15417031e+05, -7.85933875e+05,  2.63373969e+05,\n'
 '        -1.37593656e+05, -6.32144062e+05, -3.28461375e+05,\n'
 '         9.12442562e+05, -3.91768750e+04,  7.91331562e+04,\n'
 '        -4.60169781e+05, -3.16384125e+05, -7.07502250e+05,\n'
 '        -1.66674594e+05, -4.46867062e+05, -1.88032844e+05,\n'
 '         2.31385312e+05,  4.32221156e+05, -3.02926156e+05,\n'
 '         8.17226625e+05,  3.35987406e+05, -3.02981688e+05,\n'
 '        -4.28338000e+05,  3.93705688e+05, -5.73769812e+05,\n'
 '        -1.70084750e+05,  7.12283812e+05, -9.34157656e+04,\n'
 '        -6.59532188e+04, -8.21369188e+05,  5.82391172e+04,\n'
 '         4.13625656e+05, -3.54880156e+05,  7.39574375e+05,\n'
 '         7.30248984e+04, -2.29688531e+05, -2.08901312e+05,\n'
 '        -3.56734781e+05, -1.14154200e+06,  1.33028266e+05,\n'
 '         2.26268422e+05, -1.34228422e+05, -1.43789016e+05,\n'
 '         2.76309344e+05, -1.33843938e+05,  3.42759156e+05,\n'
 '         6.29007109e+04, -4.58082500e+05, -7.79075781e+04,\n'
 '        -4.90371875e+05,  4.81204594e+05, -4.99828906e+03,\n'
 '         7.75678375e+05,  2.91115562e+05, -1.64543844e+05,\n'
 '         3.88500688e+05, -3.78553719e+05,  8.52221625e+05,\n'
 '        -2.99195438e+05, -7.42688438e+04,  3.72289141e+04,\n'
 '         1.01748367e+05,  3.35600250e+05,  2.71156062e+05,\n'
 '        -1.31558922e+05, -1.38095781e+04, -3.46907562e+05,\n'
 '         4.72790250e+05, -5.35436625e+05, -2.53967500e+05,\n'
 '        -2.42930031e+05,  2.96224625e+05,  3.28514000e+05,\n'
 '         2.43970703e+04,  5.11316562e+05,  2.70582719e+05,\n'
 '         5.69247000e+05, -1.72581500e+05,  1.85750750e+05,\n'
 '         4.88323656e+05, -3.77609625e+05, -1.91635125e+05,\n'
 '        -3.99131969e+05,  5.73573250e+05, -7.84120625e+05,\n'
 '         7.74321719e+04,  5.59047562e+05,  4.26322562e+05,\n'
 '         2.88332219e+05, -1.98064375e+05, -1.49063844e+05,\n'
 '         2.94610688e+05,  2.13486312e+05,  9.83211250e+04,\n'
 '         5.37385000e+05, -8.40079062e+04,  6.85753688e+05,\n'
 '        -4.36833750e+05,  3.76022062e+05, -8.80275562e+05,\n'
 '        -2.83999344e+05, -8.06468438e+04, -7.23940125e+05,\n'
 '         4.28813375e+05, -6.63036375e+05,  8.89470875e+05,\n'
 '         2.11709688e+04,  7.44201188e+05, -3.34543625e+05,\n'
 '         3.59158594e+05,  6.66592125e+05, -4.44820219e+05,\n'
 '         1.86511312e+05, -4.09078312e+05,  4.59296812e+05,\n'
 '        -1.87230156e+05,  4.85397000e+05,  4.28659250e+05,\n'
 '         8.49009375e+04, -4.04705750e+05, -2.07962828e+05,\n'
 '        -9.78724375e+05, -4.57162312e+05, -3.92613250e+05,\n'
 '        -2.23636234e+05, -2.99642938e+05,  8.21267375e+05,\n'
 '         3.61399906e+05, -1.44528438e+05, -2.14272062e+05,\n'
 '        -2.04194422e+05,  3.10954312e+05,  2.32500812e+05,\n'
 '        -9.20975375e+05, -8.84025625e+04, -5.86993938e+05,\n'
 '        -5.10918031e+05, -3.22413906e+04, -5.86532734e+04,\n'
 '        -1.88275234e+05, -1.09539781e+05,  1.31058250e+05,\n'
 '         5.41578938e+05, -3.90646344e+05, -1.39810328e+05,\n'
 '         5.45445875e+05,  4.50898516e+04, -5.07564719e+05,\n'
 '         5.24970469e+04, -3.02049656e+05,  3.10955688e+05,\n'
 '         5.59104625e+05, -7.26574766e+04, -7.55415781e+04,\n'
 '        -1.53659391e+05,  4.36739375e+04,  2.73601812e+05,\n'
 '         2.71484500e+05,  1.70355094e+05, -3.72534969e+05,\n'
 '        -7.08907250e+05,  2.30533531e+05,  1.20483945e+04,\n'
 '        -6.29710234e+04, -4.95457938e+05,  5.53955438e+05,\n'
 '         1.43297938e+05,  7.57413125e+05,  3.41128094e+05,\n'
 '        -2.24748688e+05,  2.24915719e+05, -5.99225375e+05,\n'
 '         2.60888844e+05,  6.78557188e+04,  5.06421406e+05,\n'
 '        -7.65376750e+05,  3.35423875e+05, -4.09113281e+04,\n'
 '        -2.55610094e+05, -5.24470234e+04,  1.25935719e+05,\n'
 '        -3.13496125e+05, -4.39815500e+05,  2.62077500e+05,\n'
 '         7.91139062e+05, -1.73274375e+04, -7.11083125e+05,\n'
 '        -2.08939875e+05, -1.40814297e+05, -3.26754312e+05,\n'
 '        -3.06592734e+04,  3.19578125e+04, -2.38526656e+05,\n'
 '        -3.11314375e+05, -2.84682500e+04,  2.11978062e+05,\n'
 '         4.74310312e+05,  3.84345688e+05, -3.87958500e+05,\n'
 '         1.42657359e+05,  4.27802375e+05, -2.67043688e+05,\n'
 '         1.10092344e+05,  2.34932000e+05, -2.29408672e+05,\n'
 '        -1.48905156e+05, -8.81387250e+05,  2.12978609e+05,\n'
 '         1.17025484e+05, -2.31496344e+05,  1.40860625e+04,\n'
 '         5.61901250e+05,  2.78226562e+05,  4.30981500e+05,\n'
 '        -5.08481906e+05,  1.06530609e+05, -1.55739188e+05,\n'
 '         2.87052875e+05, -1.97531406e+04, -2.10430938e+05,\n'
 '        -3.35474031e+05, -3.93819875e+05, -2.64443406e+05,\n'
 '        -3.04412031e+05,  1.06321547e+05,  1.01108352e+05,\n'
 '        -1.16109688e+05, -4.56621906e+05,  3.31443531e+05,\n'
 '         8.11710250e+05, -4.90820062e+05,  4.08603656e+05,\n'
 '         1.80501406e+05, -2.78647781e+05,  1.91044312e+05,\n'
 '         9.58797344e+04,  8.13603812e+05, -3.48815312e+05,\n'
 '         4.21380625e+04,  5.44813438e+04, -5.82576812e+05,\n'
 '         1.03143281e+04,  2.17130375e+05,  2.86774844e+05,\n'
 '         3.12229312e+05,  2.80939188e+05, -7.53695234e+04,\n'
 '        -4.53488531e+05,  7.60051312e+05, -5.54869750e+05,\n'
 '         5.38086688e+05, -7.25560000e+04,  4.87669312e+05,\n'
 '         6.24121312e+05,  1.52614234e+05,  5.22961938e+05,\n'
 '         4.28144406e+05, -1.16075844e+05, -5.05151844e+05,\n'
 '         1.19434195e+05,  5.82961016e+04, -5.68207875e+05,\n'
 '         3.06177688e+05,  2.95356500e+05, -1.07654375e+04,\n'
 '         4.31826125e+05,  2.79655875e+05,  1.29665781e+05,\n'
 '         6.47201016e+04, -3.53109688e+05, -6.32397625e+05,\n'
 '         1.98489656e+05,  7.45646125e+05,  3.90218812e+05,\n'
 '        -2.25082031e+05, -1.41302062e+05,  4.53144562e+05,\n'
 '         2.06241844e+05, -4.91961156e+05, -3.12676469e+05,\n'
 '         6.56851562e+03,  2.96805344e+05, -4.26003188e+05,\n'
 '         5.22672812e+05, -2.13226266e+05,  9.14204688e+03,\n'
 '        -2.77334531e+05,  7.21929250e+05, -1.31216312e+05,\n'
 '         2.44985812e+05, -2.31844750e+05,  4.28627969e+05,\n'
 '         3.78030438e+05, -7.10559250e+05, -1.86438344e+05,\n'
 '         7.85022500e+04,  1.56730078e+05,  2.40869656e+05,\n'
 '        -5.34105812e+05,  2.29664812e+05, -3.57949125e+05,\n'
 '        -1.55012359e+05, -4.58469188e+05,  5.49885375e+05,\n'
 '         4.80945375e+05, -7.07223906e+04,  4.46724312e+05,\n'
 '         2.49680438e+05,  4.72400250e+05,  4.93222531e+05,\n'
 '        -5.52909375e+05, -3.14120562e+05,  3.38706344e+05,\n'
 '        -3.88591250e+05, -3.38127812e+05,  4.73592031e+04,\n'
 '        -5.40229375e+04, -1.70297188e+04,  8.75239688e+04,\n'
 '        -3.75413125e+05,  4.12432750e+05, -2.57124250e+05,\n'
 '        -1.52825594e+05,  1.80483375e+05,  5.13022938e+05,\n'
 '         1.73854188e+05, -4.10657875e+05, -4.33845375e+05,\n'
 '         3.44177562e+05,  6.00584000e+05,  5.18980094e+05,\n'
 '         4.09829750e+05, -8.71472250e+05,  6.42671875e+05,\n'
 '        -2.92787000e+05,  9.35797422e+04, -8.32493438e+04,\n'
 '         2.25827859e+05,  1.28271156e+05,  2.62717500e+05,\n'
 '         4.08511719e+05,  3.10415969e+05,  2.79529531e+05,\n'
 '         3.60390344e+05, -1.09548625e+06,  5.91823000e+05,\n'
 '        -1.91283250e+05,  3.07414375e+05,  2.61336328e+05,\n'
 '         7.82247000e+05, -1.50885062e+05,  7.58451375e+05,\n'
 '         4.35397188e+05,  3.66138984e+04,  2.03761062e+05,\n'
 '        -2.25128125e+03,  5.07901312e+05, -6.49418938e+05,\n'
 '        -5.21808008e+04,  3.84893344e+05,  4.38900375e+05,\n'
 '        -4.01982812e+03,  2.38913875e+05, -3.18216125e+05,\n'
 '         6.47847000e+05, -3.61045250e+05,  1.78549906e+05,\n'
 '        -6.30703906e+03, -2.11546625e+05, -4.00217656e+05,\n'
 '         4.11568312e+05,  3.33354125e+05,  3.97364812e+05,\n'
 '        -5.94341438e+05, -1.41810656e+05,  2.97736125e+05,\n'
 '        -2.82956812e+05,  7.34596250e+05, -4.46454000e+05,\n'
 '         3.23113062e+05, -3.86726625e+05,  2.43922031e+04,\n'
 '         4.06385438e+05,  9.52087891e+04, -1.38917500e+04,\n'
 '         5.01346531e+05,  6.26302938e+05,  7.39396750e+05,\n'
 '        -4.47108625e+05, -4.95403625e+05, -2.88568812e+05,\n'
 '        -2.62341188e+05,  2.04361281e+05, -1.72671906e+05,\n'
 '        -5.70823125e+05,  6.73369062e+04,  1.59197391e+05,\n'
 '         5.73634438e+05, -7.40617250e+05,  5.06274469e+05,\n'
 '        -4.49590547e+04, -3.37115938e+04, -2.45674672e+05,\n'
 '         1.22153625e+05, -1.97580578e+05,  4.79725156e+04,\n'
 '         5.55266375e+05,  4.48591125e+05,  3.81019125e+05,\n'
 '         4.00577750e+05,  3.37155906e+05,  2.74761250e+05,\n'
 '         1.07254062e+05, -4.11960156e+03,  1.52269484e+05,\n'
 '         6.62967812e+04, -4.68778188e+05,  4.51472562e+05,\n'
 '        -2.72317781e+05, -2.57727109e+05,  2.20747969e+05,\n'
 '         7.10758000e+05,  3.45709688e+05,  1.92616469e+05,\n'
 '         2.64778406e+05,  1.70545000e+05, -3.32938875e+05,\n'
 '         7.59875688e+05,  2.50402812e+05, -9.44991328e+04,\n'
 '         2.66479875e+05,  1.17517453e+05,  3.38949031e+05,\n'
 '        -3.88205156e+05,  1.75626812e+05, -4.85053562e+05,\n'
 '        -3.06406062e+05,  2.03604375e+05,  1.54181211e+04,\n'
 '         3.98013438e+05, -3.26000188e+05,  3.16416750e+05,\n'
 '         2.17896859e+05, -8.39407125e+05,  1.61582875e+05,\n'
 '        -1.12784469e+05, -8.43031250e+05, -6.67185938e+04,\n'
 '        -2.80858438e+05,  7.78812875e+05,  1.38333688e+05,\n'
 '        -3.00743812e+05,  3.37089312e+05, -1.33798156e+05,\n'
 '         1.62912578e+05, -1.67252844e+05, -3.88581156e+05,\n'
 '        -9.70815781e+04, -2.17840844e+05,  5.64989250e+05,\n'
 '        -3.43164094e+05,  2.97933875e+05, -7.04956016e+04,\n'
 '         2.17357781e+05, -1.98028125e+04, -3.57463406e+05,\n'
 '        -8.95790625e+05,  3.86465812e+05, -1.97388797e+05,\n'
 '        -2.27402500e+04, -2.37349703e+05,  1.82315281e+05,\n'
 '        -5.24142844e+05, -4.28338250e+05, -2.44766000e+05,\n'
 '        -4.01843438e+05,  1.76215938e+04,  3.86339938e+05,\n'
 '        -6.34087812e+05,  5.94443375e+05,  1.12944961e+05,\n'
 '         4.60299031e+05,  6.40462188e+04,  4.01306562e+05,\n'
 '        -1.14931047e+05, -3.63709594e+05,  5.25560312e+05,\n'
 '         7.32517109e+04]])')
'test_inceptionnet | batch_shape is: [1]'
'test_inceptionnet | logits.shape is: ivy.Shape(1, 1000)'
'||'
'test_inceptionnet | device is: cpu'
'test_inceptionnet | fw is: torch'
'test_inceptionnet | load_weights is: True'
'InceptionV3 | build | layer 1/22 built'
'InceptionV3 | build | layer 2/22 built'
'layer 3/22 built'
'InceptionV3 | build | layer 4/22 built'
'InceptionV3 | build | layer 5/22 built'
'InceptionV3 | build | layer 6/22 built'
'InceptionV3 | build | layer 7/22 built'
'InceptionV3 | build | layer 8/22 built'
'InceptionV3 | build | layer 9/22 built'
'InceptionV3 | build | layer 10/22 built'
'InceptionV3 | build | layer 11/22 built'
'InceptionV3 | build | layer 12/22 built'
'InceptionV3 | build | layer 13/22 built'
'InceptionV3 | build | layer 14/22 built'
'InceptionV3 | build | layer 15/22 built'
'InceptionV3 | build | layer 17/22 built'
'InceptionV3 | build | layer 18/22 built'
'InceptionV3 | build | layer 19/22 built'
'InceptionV3 | build | layer 20/22 built'
'InceptionV3 | build | layer 21/22 built'
'InceptionV3 | build | layer 22/22 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/4 built'
'layer 2/4 built'
'layer 3/4 built'
'layer 4/4 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/6 built'
'layer 2/6 built'
'layer 3/6 built'
'layer 4/6 built'
'layer 5/6 built'
'layer 6/6 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'inceptionNet_v3 | building InceptionV3 model | done 1/3'
'inceptionNet_v3 | clearning pretrained weights | done 2/3'
'inceptionNet_v3 | loading pretrained weights | done 3/3'
'InceptionV3 | forward | input shape is:ivy.Shape(1, 224, 224, 3) | done 1/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 224, 224, 3) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 111, 111, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 111, 111, 32) | done 2/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 111, 111, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 32) | done 3/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 109, 109, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 64) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 64) | done 4/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 54, 54, 64) | done 5/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 54, 54, 80) | done 3/3'
'InceptionV3 | forward | is:ivy.Shape(1, 54, 54, 80) | done 6/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 80) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 52, 52, 192) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 52, 52, 192) | done 7/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 192) | done 8/27'
'input shape is:ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 32) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 32)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 25, 25, 256) | done 9/27'
'input shape is:ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 10/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 11/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 384) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 96) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 96)'
'one 20/20, output shape is:ivy.Shape(1, 12, 12, 288)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 12/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 12, 12, 768) | done 13/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 14/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 15/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 16/27'
'v3 16/27, output shape is:ivy.Shape(1, 12, 12, 768)'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 5, 5, 192)'
'one 7/20, output shape is:ivy.Shape(1, 5, 5, 768)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 1280) | done 17/27'
'input shape is:ivy.Shape(1, 5, 5, 1280)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 18/27'
'input shape is:ivy.Shape(1, 5, 5, 2048)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 19/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 20/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 5, 5) | done 21/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 1, 1) | done 22/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 27/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 24/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 25/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048) | done 26/27'
'InceptionV3 | forward | fc | done 27/27'
('test_inceptionnet | logits is: ivy.array([[-2.24087015e-01, -1.19860983e+00, '
 '-1.52679229e+00,\n'
 '         2.10536957e+00,  7.75176942e-01, -6.19121075e-01,\n'
 '         2.40123534e+00,  8.43373179e-01, -6.07317448e-01,\n'
 '        -1.59831393e+00, -1.68264419e-01,  4.85009968e-01,\n'
 '         5.49955845e-01,  1.39843392e+00,  2.74495459e+00,\n'
 '        -2.08635151e-01, -8.04263830e-01,  1.93442762e-01,\n'
 '        -3.18760395e-01,  7.68216848e-02,  3.70216560e+00,\n'
 '        -1.33183980e+00,  1.47061050e+00, -4.09077197e-01,\n'
 '        -3.63695681e-01,  4.20890898e-02, -6.78154349e-01,\n'
 '        -1.24254167e+00, -5.62238753e-01, -1.00824892e-01,\n'
 '        -1.02187324e+00,  1.30473113e+00,  1.73010886e+00,\n'
 '         6.43975616e-01,  1.52112842e+00, -9.20378089e-01,\n'
 '        -6.52451575e-01,  4.74911988e-01, -1.59082338e-01,\n'
 '         1.96856892e+00,  5.96229076e-01,  7.58468151e-01,\n'
 '         3.04803401e-01, -5.63771009e-01, -2.81251103e-01,\n'
 '         1.22073233e+00,  6.62655354e-01,  1.67120981e+00,\n'
 '         2.04679966e-02,  5.81188202e-01, -1.26094377e+00,\n'
 '        -1.14475834e+00, -5.87362051e-01, -1.11098611e+00,\n'
 '        -5.92242479e-02,  2.17659926e+00, -1.85777092e+00,\n'
 '        -2.30535358e-01,  5.32941222e-01,  1.82659459e+00,\n'
 '         8.69740367e-01,  2.86759591e+00, -2.05396438e+00,\n'
 '         3.35877001e-01,  1.57929575e+00,  2.11562514e+00,\n'
 '         8.38737309e-01,  2.04396844e+00,  5.81793010e-01,\n'
 '        -1.43752348e+00, -4.21539694e-01, -1.37667847e+00,\n'
 '        -4.06456411e-01, -8.65870595e-01,  2.59554118e-01,\n'
 '        -7.92652965e-01, -9.47419822e-01,  7.48552144e-01,\n'
 '        -1.29032361e+00,  1.50008833e+00, -2.18393707e+00,\n'
 '         1.67749333e+00, -9.14186835e-02,  7.34793007e-01,\n'
 '         2.87192941e+00,  5.05469441e-02, -5.12883186e-01,\n'
 '        -4.09123898e-01,  1.12799406e+00,  4.21273410e-01,\n'
 '         1.97416872e-01,  1.70548439e+00,  4.52723592e-01,\n'
 '        -1.66515917e-01, -1.04010940e+00, -5.79581380e-01,\n'
 '         2.65947253e-01, -6.81200922e-02, -1.56692171e+00,\n'
 '         2.95448232e+00,  8.20949018e-01,  8.32126081e-01,\n'
 '         5.39052308e-01,  1.28838539e+00,  1.86181152e+00,\n'
 '        -1.67334795e+00,  2.48495609e-01, -2.65368366e+00,\n'
 '         1.57947111e+00, -1.68143302e-01,  9.51662660e-01,\n'
 '        -1.01310527e+00,  5.51789045e-01,  1.67797768e+00,\n'
 '         7.12854624e-01, -1.35161996e-01, -3.61595798e+00,\n'
 '         2.27674246e-01, -3.33532906e+00, -1.01908958e+00,\n'
 '         2.97435045e-01, -2.73040581e+00, -2.23708063e-01,\n'
 '        -2.36147553e-01, -2.57033563e+00, -1.72704875e-01,\n'
 '        -1.28431571e+00,  2.82162929e+00,  2.04014492e+00,\n'
 '         2.13054165e-01,  1.93209434e+00,  3.09792757e+00,\n'
 '         2.06221795e+00, -2.37577692e-01,  3.23871076e-01,\n'
 '         2.25779390e+00,  3.27695417e+00, -5.22332728e-01,\n'
 '        -1.06077480e+00,  6.01724863e-01, -8.29540968e-01,\n'
 '        -1.70230776e-01, -1.84106803e+00,  1.61532140e+00,\n'
 '         2.24971437e+00, -2.85832733e-01,  2.74100184e-01,\n'
 '        -1.74404287e+00, -9.09931734e-02,  8.10918331e-01,\n'
 '         1.99748290e+00,  6.82069898e-01,  4.77855825e+00,\n'
 '         6.18560553e-01,  1.40204847e+00, -2.88226247e+00,\n'
 '         4.23114061e-01,  5.37379074e+00, -2.23088169e+00,\n'
 '        -8.46164003e-02, -1.38327026e+00, -9.79515851e-01,\n'
 '        -8.21050584e-01,  7.22183704e-01, -1.08262509e-01,\n'
 '         2.52809599e-02,  3.79731566e-01,  1.21306694e+00,\n'
 '        -1.36859333e+00,  2.32455778e+00,  2.01520061e+00,\n'
 '        -1.28792763e+00,  2.76687384e-01,  3.25531691e-01,\n'
 '         1.97292638e+00, -7.59990871e-01, -6.65444255e-01,\n'
 '        -8.18513215e-01,  1.62818146e+00,  3.91513437e-01,\n'
 '        -7.30412185e-01,  7.89601803e-01,  4.22541141e-01,\n'
 '        -1.55689383e+00, -1.42436469e+00,  4.47724104e-01,\n'
 '         1.71230698e+00, -1.96784389e+00, -1.21539593e+00,\n'
 '        -1.86334860e+00, -1.19769001e+00, -5.00995099e-01,\n'
 '         2.86029637e-01, -3.34857512e+00, -2.88690567e+00,\n'
 '         4.14983988e-01, -8.04815888e-01,  1.70455742e+00,\n'
 '         2.42500007e-02,  1.24658442e+00, -7.04667151e-01,\n'
 '        -3.10947490e+00, -2.15126014e+00,  6.81069517e+00,\n'
 '        -2.19272137e+00, -1.45245790e+00, -8.53972912e-01,\n'
 '         7.05393255e-01, -7.95513868e-01, -1.77371055e-01,\n'
 '         2.68412054e-01,  8.29917133e-01,  2.17822760e-01,\n'
 '        -9.46001947e-01,  2.73926795e-01,  1.03862321e+00,\n'
 '         5.24072885e-01,  2.64728093e+00,  1.85527253e+00,\n'
 '        -3.45762920e+00, -3.68175298e-01, -3.49288970e-01,\n'
 '         3.48967528e+00,  1.87653792e+00,  6.10061455e+00,\n'
 '         4.86232459e-01,  2.18017727e-01, -3.14761496e+00,\n'
 '         2.70193696e-01,  2.30774212e+00,  2.81316280e+00,\n'
 '         2.96615362e+00,  3.15001583e+00,  1.31262815e+00,\n'
 '         5.71421906e-02,  1.67530477e+00,  1.44428825e+00,\n'
 '        -1.34245908e+00,  1.04254270e+00,  6.84229255e-01,\n'
 '         1.61172533e+00,  8.37174416e-01,  1.00350475e+00,\n'
 '        -9.68792558e-01, -1.14951217e+00,  1.12017989e-03,\n'
 '         1.83424663e+00,  1.34469223e+00,  9.19361305e+00,\n'
 '         7.76354885e+00,  4.52676964e+00,  3.33561158e+00,\n'
 '        -1.28050911e+00, -2.72958904e-01,  3.74048233e-01,\n'
 '         2.19937372e+00,  2.59421205e+00,  8.20978260e+00,\n'
 '         2.07196598e+01,  7.15425253e+00,  4.87406731e+00,\n'
 '         8.58800507e+00, -1.57145393e+00, -2.89595485e+00,\n'
 '         2.11189359e-01,  6.57644570e-01, -2.43786859e+00,\n'
 '        -9.37959403e-02, -6.38699532e-03,  9.87247169e-01,\n'
 '         1.13163748e+01, -1.90354145e+00, -1.36380422e+00,\n'
 '         2.89391339e-01,  5.41388988e-01,  8.75469327e-01,\n'
 '        -4.73630160e-01,  1.31333315e+00, -1.28931952e+00,\n'
 '         1.11239471e+01, -4.43539917e-01, -2.31790721e-01,\n'
 '         1.14721203e+00,  3.28935885e+00, -5.77946186e-01,\n'
 '        -2.98721969e-01, -2.61577630e+00,  3.33619976e+00,\n'
 '        -1.16082400e-01,  1.23608458e+00, -1.37539959e+00,\n'
 '         2.23427087e-01,  3.72140169e-01, -4.78249490e-02,\n'
 '        -2.28644157e+00, -2.59848499e+00,  2.79368138e+00,\n'
 '        -1.09229177e-01, -1.11654890e+00, -2.63198555e-01,\n'
 '        -2.76725918e-01, -6.42802477e-01, -6.05456054e-01,\n'
 '         1.40138245e+00,  1.74502939e-01,  2.89466053e-01,\n'
 '         8.66201281e-01,  2.45806980e+00, -7.12561131e-01,\n'
 '        -4.60006475e-01, -5.77475131e-01, -7.67687023e-01,\n'
 '        -9.09252584e-01, -9.47099388e-01, -2.53180790e+00,\n'
 '        -1.56178153e+00, -2.12383294e+00, -2.16150105e-01,\n'
 '        -3.84356171e-01, -1.16034955e-01,  2.16470671e+00,\n'
 '        -2.38348216e-01,  6.46986067e-01,  1.68732655e+00,\n'
 '        -2.82372022e+00, -6.70984507e-01,  6.23960137e-01,\n'
 '         3.93912137e-01,  2.12887192e+00, -1.33281398e+00,\n'
 '         5.16299367e-01,  2.79358459e+00,  3.25381708e+00,\n'
 '        -1.39786518e+00,  7.48297691e-01, -2.56326723e+00,\n'
 '        -2.88943243e+00,  1.11011076e+00,  1.52616811e+00,\n'
 '        -1.20625210e+00,  1.50962400e+00, -3.37816477e-01,\n'
 '        -7.61778891e-01, -7.53592133e-01, -2.55202103e+00,\n'
 '         1.36028099e+00,  2.80532551e+00,  5.57511210e-01,\n'
 '        -6.80970699e-02, -1.77698469e+00,  3.78521860e-01,\n'
 '        -4.39879358e-01,  3.66866708e-01,  1.02955377e+00,\n'
 '        -1.66129911e+00,  9.47140634e-01,  1.79999065e+00,\n'
 '         1.45461392e+00,  2.47614789e+00,  7.45608747e-01,\n'
 '        -2.23603749e+00,  9.83733773e-01, -3.06240052e-01,\n'
 '         1.98363769e+00, -1.21750653e+00, -4.12459135e+00,\n'
 '        -3.80468965e+00, -2.05893707e+00, -1.92908084e+00,\n'
 '        -3.31225276e+00, -3.09407562e-01, -2.24388432e+00,\n'
 '         8.59503388e-01,  6.61146402e-01, -4.41731214e-02,\n'
 '        -2.06981850e+00, -3.08187485e+00,  1.32663536e+00,\n'
 '         8.31081927e-01, -2.91840601e+00, -1.14526796e+00,\n'
 '        -1.85582852e+00, -3.52501869e-01, -1.69892967e-01,\n'
 '        -4.25658643e-01, -3.41718316e-01, -1.48141956e+00,\n'
 '         5.43763518e-01, -8.62188518e-01, -1.15494490e+00,\n'
 '         9.69281733e-01, -1.16039753e+00,  4.68321919e-01,\n'
 '         1.21515703e+00, -8.99462819e-01, -1.28066778e+00,\n'
 '         2.17539406e+00, -5.32720327e-01,  2.08438539e+00,\n'
 '         2.24053884e+00,  4.29681659e-01, -2.38770676e+00,\n'
 '         4.45138782e-01, -1.40307784e+00,  2.10928488e+00,\n'
 '         6.95917964e-01, -6.11047864e-01, -8.63251209e-01,\n'
 '         6.21365368e-01, -2.80140209e+00,  1.59006834e-01,\n'
 '        -1.82402945e+00, -2.27885461e+00, -7.96324432e-01,\n'
 '        -9.56660092e-01, -7.78570354e-01, -3.65166888e-02,\n'
 '         8.14436257e-01, -2.49909210e+00, -2.18188703e-01,\n'
 '        -4.37771618e-01, -3.02493119e+00, -1.41352344e+00,\n'
 '        -8.08608293e-01, -2.05720449e+00,  1.71047425e+00,\n'
 '        -2.04898429e+00,  9.93943930e-01,  6.18067086e-01,\n'
 '         9.06583369e-01,  9.97969210e-02, -1.04387891e+00,\n'
 '         9.37205255e-02,  2.22959518e+00, -1.10892296e+00,\n'
 '        -7.05262840e-01,  3.44111741e-01,  2.52545059e-01,\n'
 '        -1.90086043e+00,  6.58306718e-01,  2.22359777e+00,\n'
 '         6.52570724e-02,  1.66562068e+00, -1.90901369e-01,\n'
 '        -1.75321639e+00,  9.04938638e-01, -9.86859381e-01,\n'
 '        -1.04513860e+00, -1.70964599e-01,  6.54601634e-01,\n'
 '         9.42727685e-01,  7.83275366e-01,  1.35962331e+00,\n'
 '         1.18571967e-01, -1.02497339e+00,  6.91044331e-01,\n'
 '         1.02993345e+00, -9.08399701e-01, -7.70786405e-01,\n'
 '         7.79231667e-01, -1.05785513e+00, -2.60441446e+00,\n'
 '         3.29837227e+00,  8.00090849e-01,  8.76029074e-01,\n'
 '        -1.10716498e+00, -1.31613642e-01, -3.56773758e+00,\n'
 '         5.15272021e-01,  1.15011883e+00,  1.00984454e+00,\n'
 '         9.67867911e-01, -1.35667419e+00,  1.28321672e+00,\n'
 '        -1.69408321e-02, -9.84209418e-01,  4.37341309e+00,\n'
 '        -1.92308497e+00,  1.68034625e+00,  4.59635824e-01,\n'
 '        -1.98423177e-01, -1.34490952e-01, -2.98851633e+00,\n'
 '         1.95408866e-01,  1.49031132e-01, -9.97054339e-01,\n'
 '        -6.66367114e-01,  1.86363846e-01,  1.31494856e+00,\n'
 '         6.70004427e-01, -3.41377824e-01,  4.90511119e-01,\n'
 '        -1.08437586e+00, -1.00155711e+00,  4.78310853e-01,\n'
 '         1.65205693e+00, -1.44020927e+00,  1.74225658e-01,\n'
 '         7.97581017e-01,  4.18236703e-01, -2.97511125e+00,\n'
 '         9.16672409e-01, -1.43419647e+00, -2.73982525e+00,\n'
 '        -2.73067808e+00, -1.06888413e+00,  2.58556306e-02,\n'
 '        -1.30104208e+00, -8.85475814e-01, -1.90203041e-01,\n'
 '         1.06236374e+00, -4.28502917e-01, -5.65984368e-01,\n'
 '        -1.47396934e+00,  1.20136070e+00, -6.51232898e-03,\n'
 '        -2.23959327e+00,  1.82100010e+00, -1.82988679e+00,\n'
 '        -1.77574706e+00,  5.42474031e-01, -2.51096678e+00,\n'
 '         3.13230801e+00, -9.04605627e-01, -5.23626566e-01,\n'
 '        -7.87583947e-01, -2.04947281e+00, -4.22476911e+00,\n'
 '        -5.59271157e-01, -5.48536539e-01,  3.46566051e-01,\n'
 '        -1.14687157e+00,  1.23861802e+00, -2.50117374e+00,\n'
 '        -1.67669022e+00, -9.30320620e-01, -3.55738926e+00,\n'
 '         3.47509360e+00,  1.84694123e+00, -1.85570908e+00,\n'
 '        -2.19540715e+00, -6.11443043e-01, -8.88949156e-01,\n'
 '         5.93157887e-01, -1.67121291e-01, -1.40334511e+00,\n'
 '         5.19064307e-01,  1.61442149e+00, -2.46120787e+00,\n'
 '        -1.81237125e+00, -1.93101621e+00, -4.68334556e-01,\n'
 '        -8.27812433e-01, -3.53122902e+00,  8.51631999e-01,\n'
 '        -1.79629493e+00,  3.03198397e-01,  8.36137056e-01,\n'
 '         5.09388268e-01, -9.77055073e-01,  1.38297474e+00,\n'
 '        -9.51012015e-01,  4.73959351e+00, -1.12140703e+00,\n'
 '        -5.41198492e-01, -3.56502145e-01, -5.45367897e-01,\n'
 '        -2.38281512e+00,  1.84559852e-01, -8.36496711e-01,\n'
 '        -1.22875094e+00, -1.19095874e+00,  1.15866673e+00,\n'
 '         2.18363643e+00,  7.78231502e-01, -1.77589715e+00,\n'
 '        -5.57313263e-02, -3.02667737e-01,  8.38208497e-01,\n'
 '        -4.21824408e+00,  2.33213544e+00, -3.59623223e-01,\n'
 '         1.07753408e+00,  4.09989715e-01,  3.82732123e-01,\n'
 '         2.86232054e-01, -2.05464196e+00,  5.50946713e-01,\n'
 '         7.07131624e-01, -2.24578977e+00, -1.86707437e-01,\n'
 '        -2.01140118e+00, -1.72391124e-02,  2.60646671e-01,\n'
 '         1.19114065e+00,  7.67762482e-01,  1.57716835e+00,\n'
 '         7.27283776e-01, -2.38436770e+00, -1.90907144e+00,\n'
 '         2.27762640e-01, -1.03132582e+00, -2.25998139e+00,\n'
 '         4.60958302e-01,  1.29982770e+00, -5.13687611e-01,\n'
 '         3.66333175e+00,  1.08167863e+00,  1.04673672e+00,\n'
 '         8.85740578e-01,  1.02017271e+00, -6.51355565e-01,\n'
 '         8.93147886e-02,  1.32380173e-01, -1.74033463e-01,\n'
 '        -1.89651334e+00, -2.27148652e+00, -1.00106394e+00,\n'
 '        -1.41602993e+00, -1.12769187e+00, -3.78258991e+00,\n'
 '         3.59737062e+00, -6.27457321e-01, -7.89767742e-01,\n'
 '         1.53245539e-01,  1.05235946e+00,  9.06147063e-02,\n'
 '         1.18158042e+00,  5.99263310e-01, -7.99333930e-01,\n'
 '        -2.58460808e+00, -4.43292677e-01, -2.05943728e+00,\n'
 '        -1.93827897e-01, -9.21841264e-01, -3.27658439e+00,\n'
 '        -1.31449163e+00,  6.25164390e-01,  4.43432987e-01,\n'
 '         3.72667849e-01, -8.76179814e-01, -7.06485629e-01,\n'
 '        -7.42752612e-01,  3.80192965e-01, -7.68891215e-01,\n'
 '         5.21106303e-01,  1.03766549e+00, -1.32018471e+00,\n'
 '        -5.61870873e-01, -4.21952128e-01, -2.08921957e+00,\n'
 '        -1.17881894e+00,  1.17258787e+00, -1.31853449e+00,\n'
 '         7.09971964e-01, -1.83452535e+00,  1.73332643e+00,\n'
 '        -1.95966458e+00, -1.57995284e+00, -8.87167454e-01,\n'
 '        -2.18391061e+00, -9.53075945e-01, -1.06570637e+00,\n'
 '        -3.58463240e+00, -1.44297826e+00, -1.75937974e+00,\n'
 '         4.56452489e-01,  6.32439256e-02,  8.80439162e-01,\n'
 '         5.82083285e-01, -1.38061017e-01, -8.26139510e-01,\n'
 '         2.20151401e+00, -1.09689820e+00,  1.65975362e-01,\n'
 '         1.27579904e+00,  1.45699334e+00, -8.29420447e-01,\n'
 '         2.63410777e-01, -9.16860938e-01,  3.30117881e-01,\n'
 '        -3.29844665e+00,  2.42406797e+00,  2.03119695e-01,\n'
 '         1.12209112e-01, -2.12539768e+00, -4.36135483e+00,\n'
 '        -1.37588477e+00, -1.89222002e+00,  4.49629486e-01,\n'
 '         6.34095311e-01, -2.28654862e+00, -1.14902449e+00,\n'
 '        -2.12882137e+00, -8.05332959e-01,  1.39575517e+00,\n'
 '        -1.92092329e-01,  3.83964121e-01,  9.00064468e-01,\n'
 '         1.13581133e+00, -8.22759986e-01, -1.68404985e+00,\n'
 '        -3.47224498e+00,  2.64690471e+00, -2.83377004e+00,\n'
 '        -3.54413032e+00,  3.79197746e-01,  7.84497559e-01,\n'
 '        -3.56177717e-01, -3.25505423e+00, -4.92260426e-01,\n'
 '         4.06077355e-01, -2.10601234e+00, -4.00717259e+00,\n'
 '        -1.36131036e+00,  1.68670380e+00, -7.08368540e-01,\n'
 '         1.94136429e+00,  1.06578469e+00,  1.46880758e+00,\n'
 '        -1.10688520e+00, -1.90200424e+00, -3.16122860e-01,\n'
 '         1.98530471e+00,  5.57735443e-01,  1.96908608e-01,\n'
 '         9.79328036e-01,  3.11262071e-01, -5.26837587e-01,\n'
 '         6.69249356e-01,  2.20644212e+00,  6.92815781e-01,\n'
 '        -1.78200757e+00,  1.20803833e-01,  6.12124920e-01,\n'
 '        -5.15752077e-01, -1.09228385e+00, -1.04929602e+00,\n'
 '         2.11187458e+00,  7.77852118e-01,  6.92226350e-01,\n'
 '         3.15349400e-01, -2.10256433e+00, -1.61481547e+00,\n'
 '        -9.84100997e-01, -4.02561855e+00,  3.38285971e+00,\n'
 '        -1.67196357e+00, -1.79166985e+00,  1.98758411e+00,\n'
 '        -1.05988729e+00,  2.73618531e+00,  1.81851161e+00,\n'
 '        -2.48552084e+00, -2.84222746e+00,  1.66834652e-01,\n'
 '        -1.53017581e+00,  2.13745832e-02,  4.18474436e-01,\n'
 '        -2.51790905e+00, -1.44784665e+00, -1.70702589e+00,\n'
 '        -1.29760230e+00,  7.27491736e-01, -1.45801449e+00,\n'
 '        -2.24640667e-02, -1.84421134e+00, -1.27055204e+00,\n'
 '         2.09775257e+00,  3.35502476e-01, -7.80006051e-01,\n'
 '        -8.94495368e-01, -9.15805936e-01, -1.90477002e+00,\n'
 '        -1.89497697e+00,  2.48511300e-01,  5.06644010e-01,\n'
 '        -7.30273485e-01,  1.37418282e+00,  1.47408938e+00,\n'
 '         1.40829897e+00, -6.12764358e-01, -1.70578456e+00,\n'
 '        -2.75205564e+00, -3.81305551e+00, -1.78093386e+00,\n'
 '        -3.56557488e-01, -2.18245745e-01,  6.87035203e-01,\n'
 '        -9.23885107e-01,  1.79005289e+00,  1.85609686e+00,\n'
 '         3.88496995e+00,  2.72393078e-02,  8.31801444e-02,\n'
 '        -6.04059994e-01, -6.88172817e-01, -3.17981720e+00,\n'
 '        -6.88021541e-01,  9.74215627e-01,  1.14648843e+00,\n'
 '        -1.21616459e+00,  1.24809813e+00,  1.57573497e+00,\n'
 '        -3.14435005e+00,  9.43005681e-01, -3.68062091e+00,\n'
 '        -7.33217537e-01,  2.95067143e+00,  4.39053357e-01,\n'
 '         1.09161055e+00, -2.90710783e+00,  1.55282235e+00,\n'
 '        -5.28825164e-01,  2.64426231e+00,  5.40840566e-01,\n'
 '         6.49904490e-01,  3.52578471e-04, -4.37902164e+00,\n'
 '        -1.81053591e+00,  9.20622706e-01, -1.05082059e+00,\n'
 '        -9.05665040e-01, -7.67239511e-01,  2.93283939e-01,\n'
 '        -5.12427270e-01, -2.67156267e+00, -5.37198424e-01,\n'
 '        -7.85378218e-01, -4.51780736e-01, -4.01336312e-01,\n'
 '        -1.17165887e+00,  2.17000341e+00,  7.46128678e-01,\n'
 '        -1.44442570e+00, -7.59459555e-01,  5.76943994e-01,\n'
 '         5.69081903e-01,  2.40855634e-01, -8.46182346e-01,\n'
 '        -1.07122794e-01,  1.75939441e-01,  1.69937968e+00,\n'
 '         3.91990566e+00,  4.55857694e-01, -1.16900778e+00,\n'
 '        -1.86806226e+00, -7.48130918e-01, -1.58109725e+00,\n'
 '        -7.19963491e-01,  8.03118825e-01, -2.25531951e-01,\n'
 '         3.13757014e+00,  7.17616498e-01, -5.06326482e-02,\n'
 '        -1.26814663e+00, -1.38353777e+00,  4.04321194e-01,\n'
 '         2.32932359e-01, -5.34589291e-01,  4.26318288e-01,\n'
 '         1.28447390e+00, -3.88850868e-02,  1.04896522e+00,\n'
 '         8.65577638e-01,  4.97619599e-01,  1.41105735e+00,\n'
 '         2.69247842e+00, -3.03180885e+00, -3.87576044e-01,\n'
 '         1.41199088e+00, -4.58394624e-02, -8.12698245e-01,\n'
 '        -1.73478329e+00, -6.24583185e-01, -9.07305241e-01,\n'
 '        -1.30580437e+00, -2.23167014e+00,  1.61694407e+00,\n'
 '         2.07419300e+00, -2.53616261e+00, -2.83496714e+00,\n'
 '         1.36312938e+00, -5.25058985e-01,  6.91849589e-02,\n'
 '        -6.14933550e-01,  2.12066293e+00,  5.83037496e-01,\n'
 '         2.58160532e-01,  8.34771514e-01, -7.59695828e-01,\n'
 '         2.29727626e-02, -9.16967750e-01, -5.67759335e-01,\n'
 '        -1.11813283e+00, -1.84410143e+00,  1.15079188e+00,\n'
 '        -1.03504145e+00, -8.78268600e-01,  5.76068282e-01,\n'
 '         2.98680306e-01, -5.55898070e-01, -5.21201611e-01,\n'
 '        -1.35838997e+00, -3.08127642e-01, -2.04632258e+00,\n'
 '        -1.17119193e+00,  4.38079298e-01, -1.26650381e+00,\n'
 '        -9.99806583e-01, -7.94899225e-01, -1.07389855e+00,\n'
 '         4.35032129e+00,  1.60573959e+00,  6.40970767e-02,\n'
 '         2.52318907e+00,  7.20719933e-01, -8.26874375e-02,\n'
 '        -9.90857601e-01,  9.59370971e-01, -1.13775957e+00,\n'
 '         9.03215051e-01, -4.21060979e-01,  7.88959444e-01,\n'
 '        -1.18632555e+00,  1.31292835e-01, -2.87826776e+00,\n'
 '        -1.53883696e+00,  1.01987934e+00,  1.48264122e+00,\n'
 '         5.21590412e-01, -1.93577611e+00, -9.05775487e-01,\n'
 '        -2.30280042e+00, -1.72091043e+00, -1.17415786e+00,\n'
 '        -8.55867207e-01, -1.80340111e-02, -1.18922211e-01,\n'
 '        -4.36399967e-01, -1.28774679e+00,  1.36414611e+00,\n'
 '        -2.46696770e-01,  1.53452492e+00,  2.19304681e+00,\n'
 '         5.81229150e-01,  3.64145339e-01, -4.14928258e-01,\n'
 '         1.87773669e+00, -5.13151586e-02,  3.24821234e-01,\n'
 '         1.01559210e+00,  1.99414337e+00,  2.79771662e+00,\n'
 '        -3.99155110e-01,  2.79048830e-01,  3.74307346e+00,\n'
 '         4.99700665e-01,  3.55464637e-01, -1.08166277e+00,\n'
 '         1.46263421e-01,  7.72990584e-01, -2.22944999e+00,\n'
 '        -3.13763905e+00, -2.18070269e+00, -1.66648448e+00,\n'
 '        -1.21066952e+00,  2.61012852e-01, -2.19513655e+00,\n'
 '        -2.25646996e+00, -1.04544079e+00,  3.67767960e-01,\n'
 '         8.66409302e-01, -1.47134244e+00, -3.70065570e-02,\n'
 '        -1.92277074e+00, -1.51364803e+00,  2.95538020e+00,\n'
 '         9.18204069e-01, -1.00409210e+00, -1.17140245e+00,\n'
 '         2.44075537e-01, -7.78613627e-01, -2.43559256e-01,\n'
 '        -1.06163764e+00, -1.31599176e+00,  8.94423246e-01,\n'
 '        -5.19122720e-01,  1.63543427e+00,  7.62279510e-01,\n'
 '         4.47019130e-01, -2.22938910e-01, -1.01928544e+00,\n'
 '        -1.70872927e+00, -9.37089741e-01,  5.87686896e-01,\n'
 '        -1.22276962e+00, -2.67137289e+00, -6.09099388e-01,\n'
 '        -6.79367364e-01]])')
'test_inceptionnet | batch_shape is: [1]'
'test_inceptionnet | logits.shape is: ivy.Shape(1, 1000)'
'||'
'test_inceptionnet | indices_test | true_indices is: [258 270 279]'
'test_inceptionnet | indices_test | calc_indices is: [258 270 279]'
'test_inceptionnet | device is: cpu'
'test_inceptionnet | fw is: torch'
'test_inceptionnet | load_weights is: False'
'InceptionV3 | build | layer 1/22 built'
'InceptionV3 | build | layer 2/22 built'
'layer 3/22 built'
'InceptionV3 | build | layer 4/22 built'
'InceptionV3 | build | layer 5/22 built'
'InceptionV3 | build | layer 6/22 built'
'InceptionV3 | build | layer 7/22 built'
'InceptionV3 | build | layer 8/22 built'
'InceptionV3 | build | layer 9/22 built'
'InceptionV3 | build | layer 10/22 built'
'InceptionV3 | build | layer 11/22 built'
'InceptionV3 | build | layer 12/22 built'
'InceptionV3 | build | layer 13/22 built'
'InceptionV3 | build | layer 14/22 built'
'InceptionV3 | build | layer 15/22 built'
'InceptionV3 | build | layer 17/22 built'
'InceptionV3 | build | layer 18/22 built'
'InceptionV3 | build | layer 19/22 built'
'InceptionV3 | build | layer 20/22 built'
'InceptionV3 | build | layer 21/22 built'
'InceptionV3 | build | layer 22/22 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/4 built'
'layer 2/4 built'
'layer 3/4 built'
'layer 4/4 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/6 built'
'layer 2/6 built'
'layer 3/6 built'
'layer 4/6 built'
'layer 5/6 built'
'layer 6/6 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'inceptionNet_v3 | building InceptionV3 model | done 1/3'
'InceptionV3 | forward | input shape is:ivy.Shape(1, 3, 224, 224) | done 1/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 3, 224, 224) | done 0/3'
'test_inceptionnet | device is: cpu'
'test_inceptionnet | fw is: torch'
'test_inceptionnet | load_weights is: True'
'InceptionV3 | build | layer 1/22 built'
'InceptionV3 | build | layer 2/22 built'
'layer 3/22 built'
'InceptionV3 | build | layer 4/22 built'
'InceptionV3 | build | layer 5/22 built'
'InceptionV3 | build | layer 6/22 built'
'InceptionV3 | build | layer 7/22 built'
'InceptionV3 | build | layer 8/22 built'
'InceptionV3 | build | layer 9/22 built'
'InceptionV3 | build | layer 10/22 built'
'InceptionV3 | build | layer 11/22 built'
'InceptionV3 | build | layer 12/22 built'
'InceptionV3 | build | layer 13/22 built'
'InceptionV3 | build | layer 14/22 built'
'InceptionV3 | build | layer 15/22 built'
'InceptionV3 | build | layer 17/22 built'
'InceptionV3 | build | layer 18/22 built'
'InceptionV3 | build | layer 19/22 built'
'InceptionV3 | build | layer 20/22 built'
'InceptionV3 | build | layer 21/22 built'
'InceptionV3 | build | layer 22/22 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/4 built'
'layer 2/4 built'
'layer 3/4 built'
'layer 4/4 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/6 built'
'layer 2/6 built'
'layer 3/6 built'
'layer 4/6 built'
'layer 5/6 built'
'layer 6/6 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'inceptionNet_v3 | building InceptionV3 model | done 1/3'
'inceptionNet_v3 | clearning pretrained weights | done 2/3'
'inceptionNet_v3 | loading pretrained weights | done 3/3'
'InceptionV3 | forward | input shape is:ivy.Shape(1, 3, 224, 224) | done 1/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 3, 224, 224) | done 0/3'
