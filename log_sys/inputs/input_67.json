'BasicConv2d | Test | input shape is: ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 128) | done 3/3'
'BasicConv2d | Test | Test Successfull!'
'||'
'InceptionAux | random_test_tensor shape is: ivy.Shape(1, 17, 17, 768)'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'InceptionAux | input shape is:ivy.Shape(1, 17, 17, 768)'
'InceptionAux | done 1/8, output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 128) | done 3/3'
'InceptionAux | done 2/8'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 1, 1, 768) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 1, 1, 768) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 1, 1, 768) | done 3/3'
'InceptionAux | done 3/8'
'InceptionAux | input shape to adaptive_avg_pool2d is:ivy.Shape(1, 1, 1, 768)'
('InceptionAux | permuted input shape to adaptive_avg_pool2d is:ivy.Shape(1, '
 '768, 1, 1)')
('InceptionAux | output shape from adaptive_avg_pool2d is:ivy.Shape(1, 768, 1, '
 '1)')
('InceptionAux | permuted output shape from adaptive_avg_pool2d '
 'is:ivy.Shape(1, 1, 1, 768)')
'InceptionAux | done 4/8'
'InceptionAux | done 5/8'
'InceptionAux | done 8/8'
'InceptionAux | Test Successfull!'
'random_test_tensor shape is: ivy.Shape(1, 35, 35, 192)'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'input shape is:ivy.Shape(1, 35, 35, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 35, 35, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 35, 35, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 35, 35, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 35, 35, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 35, 35, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 35, 35, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 35, 35, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 35, 35, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 35, 35, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 35, 35, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 35, 35, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 35, 35, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 35, 35, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 35, 35, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 35, 35, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 35, 35, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 35, 35, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 35, 35, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 35, 35, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 35, 35, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 35, 35, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 35, 35, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 35, 35, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 35, 35, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 35, 35, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 35, 35, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 35, 35, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 35, 35, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 35, 35, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 35, 35, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 35, 35, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 35, 35, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 35, 35, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 35, 35, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 35, 35, 32) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 35, 35, 32)'
'InceptionA | outputs 20/20'
'Test Successfull!'
'random_test_tensor shape is: ivy.Shape(1, 35, 35, 288)'
'layer 1/4 built'
'layer 2/4 built'
'layer 3/4 built'
'layer 4/4 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'input shape is:ivy.Shape(1, 35, 35, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 35, 35, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 17, 17, 384) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 17, 17, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 35, 35, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 35, 35, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 35, 35, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 35, 35, 64) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 35, 35, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 35, 35, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 35, 35, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 35, 35, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 35, 35, 96) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 35, 35, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 35, 35, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 17, 17, 96) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 17, 17, 96)'
'one 20/20, output shape is:ivy.Shape(1, 17, 17, 288)'
'one 20/20'
'Test Successfull!'
'random_test_tensor shape is: ivy.Shape(1, 17, 17, 768)'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'input shape is:ivy.Shape(1, 17, 17, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 17, 17, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 17, 17, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 17, 17, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 17, 17, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 17, 17, 128) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 17, 17, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 17, 17, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 17, 17, 128) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 17, 17, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 17, 17, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 17, 17, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 17, 17, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 17, 17, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 17, 17, 128) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 17, 17, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 17, 17, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 17, 17, 128) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 17, 17, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 17, 17, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 17, 17, 128) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 17, 17, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 17, 17, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 17, 17, 128) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 17, 17, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 17, 17, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 17, 17, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 17, 17, 192)'
'one 10/20, output shape is:ivy.Shape(1, 17, 17, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 17, 17, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 17, 17, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 17, 17, 192)'
'one 20/20'
'Test Successfull!'
'random_test_tensor shape is: ivy.Shape(1, 17, 17, 768)'
'layer 1/6 built'
'layer 2/6 built'
'layer 3/6 built'
'layer 4/6 built'
'layer 5/6 built'
'layer 6/6 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'input shape is:ivy.Shape(1, 17, 17, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 17, 17, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 17, 17, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 17, 17, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 17, 17, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 8, 8, 320) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 8, 8, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 17, 17, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 17, 17, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 17, 17, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 17, 17, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 17, 17, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 17, 17, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 17, 17, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 17, 17, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 17, 17, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 17, 17, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 17, 17, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 8, 8, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 8, 8, 192)'
'one 7/20, output shape is:ivy.Shape(1, 8, 8, 768)'
'one 20/20'
'Test Successfull!'
'random_test_tensor shape is: ivy.Shape(1, 8, 8, 1280)'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'input shape is:ivy.Shape(1, 8, 8, 1280)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 8, 8, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 8, 8, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 8, 8, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 8, 8, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 8, 8, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 8, 8, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 8, 8, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 8, 8, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 8, 8, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 8, 8, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 8, 8, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 8, 8, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 8, 8, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 8, 8, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 8, 8, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 8, 8, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 8, 8, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 8, 8, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 8, 8, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 8, 8, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 8, 8, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 8, 8, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 8, 8, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 8, 8, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 8, 8, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 8, 8, 192)'
'20/20'
'Test Successfull!'
'test_inceptionnet | device is: cpu'
'test_inceptionnet | fw is: numpy'
'test_inceptionnet | load_weights is: False'
'InceptionV3 | build | layer 1/22 built'
'InceptionV3 | build | layer 2/22 built'
'layer 3/22 built'
'InceptionV3 | build | layer 4/22 built'
'InceptionV3 | build | layer 5/22 built'
'InceptionV3 | build | layer 6/22 built'
'InceptionV3 | build | layer 7/22 built'
'InceptionV3 | build | layer 8/22 built'
'InceptionV3 | build | layer 9/22 built'
'InceptionV3 | build | layer 10/22 built'
'InceptionV3 | build | layer 11/22 built'
'InceptionV3 | build | layer 12/22 built'
'InceptionV3 | build | layer 13/22 built'
'InceptionV3 | build | layer 14/22 built'
'InceptionV3 | build | layer 15/22 built'
'InceptionV3 | build | layer 17/22 built'
'InceptionV3 | build | layer 18/22 built'
'InceptionV3 | build | layer 19/22 built'
'InceptionV3 | build | layer 20/22 built'
'InceptionV3 | build | layer 21/22 built'
'InceptionV3 | build | layer 22/22 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/4 built'
'layer 2/4 built'
'layer 3/4 built'
'layer 4/4 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/6 built'
'layer 2/6 built'
'layer 3/6 built'
'layer 4/6 built'
'layer 5/6 built'
'layer 6/6 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'inceptionNet_v3 | building InceptionV3 model | done 1/3'
'InceptionV3 | forward | input shape is:(1, 224, 224, 3) | done 1/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 224, 224, 3) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 111, 111, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 111, 111, 32) | done 2/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 111, 111, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 32) | done 3/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 109, 109, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 64) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 64) | done 4/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 54, 54, 64) | done 5/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 54, 54, 80) | done 3/3'
'InceptionV3 | forward | is:ivy.Shape(1, 54, 54, 80) | done 6/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 80) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 52, 52, 192) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 52, 52, 192) | done 7/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 192) | done 8/27'
'input shape is:ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 32) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 32)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 25, 25, 256) | done 9/27'
'input shape is:ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 10/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 11/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 384) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 96) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 96)'
'one 20/20, output shape is:ivy.Shape(1, 12, 12, 288)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 12/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 12, 12, 768) | done 13/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 14/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 15/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 16/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 5, 5, 192)'
'one 7/20, output shape is:ivy.Shape(1, 5, 5, 768)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 1280) | done 17/27'
'input shape is:ivy.Shape(1, 5, 5, 1280)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 18/27'
'input shape is:ivy.Shape(1, 5, 5, 2048)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 19/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 20/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 5, 5) | done 21/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 1, 1) | done 22/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 27/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 24/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 25/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048) | done 26/27'
'InceptionV3 | forward | fc | done 27/27'
('test_inceptionnet | logits is: ivy.array([[-1.05732600e+06, '
 '-1.35002188e+06,  2.69240900e+06,\n'
 '        -1.31989100e+06, -9.00116875e+05, -1.32940750e+06,\n'
 '         1.95528288e+06,  1.01838000e+06,  8.87724125e+05,\n'
 '         1.38332562e+05, -1.72316750e+06, -4.47544688e+04,\n'
 '         1.72248100e+06,  1.82615850e+06, -1.98698750e+04,\n'
 '         2.49789600e+06,  1.88722962e+06, -2.07089212e+06,\n'
 '        -9.57075500e+05, -3.00779850e+06, -1.01218250e+06,\n'
 '        -1.28254000e+06,  1.22818100e+06,  2.44522600e+06,\n'
 '         5.92003625e+05,  1.10453862e+06, -1.19668125e+05,\n'
 '         3.18385200e+06, -2.57663438e+05,  7.47814625e+05,\n'
 '         6.83389125e+05, -5.08307562e+05, -9.94621000e+05,\n'
 '        -9.17774250e+05,  2.69799100e+06, -3.17437675e+06,\n'
 '        -8.82382188e+04,  1.71702650e+06,  4.90306688e+05,\n'
 '         7.51362750e+05,  1.95233875e+06, -7.40251500e+05,\n'
 '         9.47508688e+05, -1.28084225e+06,  1.10340850e+06,\n'
 '         1.38490312e+06,  1.39531850e+06,  2.25419250e+06,\n'
 '         3.22075594e+05, -3.13443750e+05,  9.76467500e+05,\n'
 '         7.54224625e+05, -3.73144800e+06,  1.53280850e+06,\n'
 '         1.05905875e+06,  1.10227912e+06, -2.01057062e+05,\n'
 '        -1.54617000e+06,  1.37224406e+05,  1.80385338e+06,\n'
 '         5.48448562e+05, -2.91611350e+06, -3.78381688e+05,\n'
 '         1.85938050e+06, -9.38302000e+05, -7.33043125e+05,\n'
 '         1.37177725e+06,  1.08230700e+06, -8.73288250e+05,\n'
 '        -1.74043650e+06,  6.18902500e+04,  1.99718688e+06,\n'
 '        -6.77094938e+05, -1.35163900e+06, -1.36739650e+06,\n'
 '         5.97757750e+05, -1.94132500e+04,  6.72298000e+05,\n'
 '        -1.48558188e+05,  6.77837375e+05, -7.45547062e+05,\n'
 '        -1.86657250e+06, -3.38550188e+05, -4.64699875e+05,\n'
 '         9.17186000e+05, -4.44580500e+05,  1.02690738e+06,\n'
 '         4.87227344e+05, -1.90877875e+06, -9.37523312e+05,\n'
 '        -1.03566725e+06, -9.47367500e+05,  3.04349500e+05,\n'
 '        -1.32805438e+06,  4.96812000e+05, -2.74760825e+06,\n'
 '        -1.29057050e+06, -1.34649400e+06,  2.50271953e+05,\n'
 '        -1.60995450e+06,  7.47238875e+05,  2.55108000e+06,\n'
 '        -3.23905375e+05,  1.81415238e+06,  2.35691600e+06,\n'
 '        -1.88575812e+06, -8.15862000e+05,  2.23400075e+06,\n'
 '        -5.15253562e+05,  4.61158600e+06, -1.22121338e+06,\n'
 '        -7.84853188e+05, -5.65664750e+05, -6.70516938e+05,\n'
 '         1.24485388e+06, -1.83237625e+05,  3.27596400e+06,\n'
 '         1.36334662e+06,  1.43697612e+06,  5.76008688e+05,\n'
 '        -2.29638938e+05,  3.38054250e+05, -1.17704525e+06,\n'
 '        -1.47456225e+06, -9.23509812e+05,  3.66270125e+06,\n'
 '        -1.39386362e+06, -1.00520075e+06,  1.08740719e+05,\n'
 '         9.34833688e+05, -2.33917050e+06,  1.91719675e+06,\n'
 '         1.32764350e+06, -5.97006875e+05, -3.67737725e+06,\n'
 '         3.01685950e+06,  2.05228500e+06,  1.13152625e+06,\n'
 '         4.81915062e+05,  7.08576875e+04,  5.03236094e+05,\n'
 '        -1.19948150e+06,  8.23524188e+05,  2.95198312e+05,\n'
 '         7.64394812e+05, -1.57001662e+06,  8.76698688e+05,\n'
 '         3.43027600e+06,  1.90362962e+06,  1.28965500e+06,\n'
 '        -2.60420400e+06,  1.85527862e+06, -4.23001719e+05,\n'
 '        -9.34007875e+05, -4.17007719e+05,  1.26871162e+06,\n'
 '        -6.77126250e+04, -2.15298050e+06, -5.26770250e+05,\n'
 '         1.66954950e+06,  5.01781125e+05,  3.49250812e+05,\n'
 '        -3.94047250e+05,  1.86675512e+06,  2.49872500e+04,\n'
 '         9.56967375e+05,  5.85680188e+05, -2.19138125e+04,\n'
 '         1.55455750e+06,  1.14267388e+06, -1.28602375e+05,\n'
 '        -1.91268288e+06,  8.56880625e+04, -3.42200325e+06,\n'
 '         7.74751375e+05, -1.37053812e+06, -7.15554500e+05,\n'
 '        -2.70599438e+05, -6.63018375e+05,  2.03436225e+06,\n'
 '         1.14566700e+06, -1.23899725e+06,  1.38448550e+06,\n'
 '        -1.82352050e+06,  4.24750812e+05,  1.04834038e+06,\n'
 '         7.35613688e+05, -4.29745500e+05, -2.65609844e+05,\n'
 '        -5.15594250e+05,  1.80036000e+05,  1.01051712e+06,\n'
 '        -2.88211625e+05, -4.06059250e+05,  7.12989750e+05,\n'
 '        -1.89576625e+05,  1.56662225e+06,  2.13521406e+05,\n'
 '        -9.80596125e+05,  1.63599125e+06,  1.45074462e+06,\n'
 '         1.11051438e+06,  1.03028288e+06,  2.24908250e+05,\n'
 '        -1.43797175e+06,  4.08198500e+05,  1.33747750e+06,\n'
 '        -2.99886375e+05, -9.67627125e+05, -9.24795938e+05,\n'
 '         1.15923100e+06, -3.78068025e+06, -2.09209275e+06,\n'
 '        -3.17879450e+06, -1.40479075e+06, -1.53641100e+06,\n'
 '        -2.25162500e+04,  1.71428188e+06, -4.70426719e+05,\n'
 '         7.19429500e+05, -1.22482350e+06, -1.82332988e+06,\n'
 '        -1.18164625e+06,  4.73230312e+05,  8.71274312e+05,\n'
 '         3.57386875e+05, -3.32815969e+05,  2.71575188e+05,\n'
 '         3.02715875e+05, -3.24247100e+06, -6.94281500e+05,\n'
 '         2.06492500e+04,  2.14909250e+05, -7.33720438e+05,\n'
 '        -6.60580938e+05,  1.30119975e+06,  1.57454225e+06,\n'
 '         1.07290150e+06, -4.85919906e+05, -4.58233438e+05,\n'
 '         6.24509688e+05,  1.99201762e+06,  3.96551688e+05,\n'
 '        -1.60652525e+06, -3.39449281e+05, -2.72724700e+06,\n'
 '         2.32059150e+06,  1.14369150e+06,  4.40551000e+05,\n'
 '        -1.49167725e+06, -7.11695625e+05, -7.72952000e+05,\n'
 '         1.83821900e+06,  3.12970275e+06,  8.84973000e+05,\n'
 '         1.25704625e+06, -3.90055650e+06, -3.30026844e+05,\n'
 '         6.86708875e+05,  3.03246938e+05, -1.60619350e+06,\n'
 '        -1.89703212e+06, -9.88424188e+05, -1.08651450e+06,\n'
 '        -1.19656588e+06,  8.83008625e+05, -1.73225750e+05,\n'
 '        -9.10406188e+05,  2.29056594e+05, -1.77447988e+06,\n'
 '        -1.47135088e+06,  1.85774600e+06,  9.93988000e+05,\n'
 '         1.15289225e+06, -1.26138125e+06,  1.41393312e+06,\n'
 '         1.20409475e+06,  8.00223125e+04, -2.17492188e+04,\n'
 '         4.46451050e+06, -2.72338312e+05, -6.79643062e+05,\n'
 '        -3.30979625e+05,  3.56746650e+06, -1.92905850e+06,\n'
 '         3.62670500e+05, -2.01418300e+06,  1.80726075e+06,\n'
 '         1.97197100e+06, -4.36013625e+05, -1.34945900e+06,\n'
 '         1.09761875e+06, -1.19576838e+06,  1.32029638e+06,\n'
 '         1.47078175e+06, -2.84762656e+05,  5.80300688e+05,\n'
 '         2.04791362e+06, -3.59435562e+05,  2.02137975e+06,\n'
 '        -5.40893938e+05, -1.40361375e+06,  2.84859688e+05,\n'
 '         1.70164438e+05,  4.26276250e+05, -1.27767025e+06,\n'
 '         6.52725000e+05,  1.36553750e+04, -8.65721625e+05,\n'
 '         1.59163312e+06, -1.29558888e+06, -2.41343800e+06,\n'
 '        -7.75164750e+05, -4.95214688e+05,  4.70925875e+05,\n'
 '         7.44206750e+05,  1.49182938e+06,  1.35030156e+05,\n'
 '        -2.14350500e+06,  1.97550512e+06, -2.92836400e+06,\n'
 '         2.42719275e+06,  4.88500375e+05, -1.08608050e+06,\n'
 '         1.40639788e+06, -3.66761625e+05, -4.89875281e+05,\n'
 '        -9.19913688e+05,  5.53948062e+05, -3.38664875e+06,\n'
 '        -9.27835375e+05, -1.89067350e+06,  2.82103575e+06,\n'
 '        -7.55091562e+04, -8.69615562e+05, -2.99336688e+05,\n'
 '         6.25534625e+05, -7.33376750e+05, -1.15929750e+06,\n'
 '         2.01458612e+06, -2.08679475e+06,  3.21793062e+05,\n'
 '        -1.92875312e+04, -2.20672750e+06, -3.70284250e+06,\n'
 '         9.82326875e+05, -8.08907000e+05, -7.75297375e+05,\n'
 '        -1.24733425e+06,  1.73785450e+06,  5.76486375e+05,\n'
 '        -1.93283688e+05,  1.30185588e+06,  7.59035000e+05,\n'
 '         3.47659750e+05,  9.81146875e+05,  1.14945550e+06,\n'
 '         1.41943100e+06, -6.02503750e+05,  1.36020475e+06,\n'
 '        -5.93620125e+05,  1.81375750e+05,  8.75920438e+05,\n'
 '         1.38873475e+06,  4.42533125e+04,  9.10270250e+05,\n'
 '         2.15850250e+06,  2.89487000e+05,  7.97323125e+04,\n'
 '         2.52019828e+05, -5.91075625e+05,  1.25314575e+06,\n'
 '        -1.96445525e+06,  9.86668625e+05, -4.27370250e+05,\n'
 '         1.91118500e+05,  3.44970250e+05, -2.20919325e+06,\n'
 '        -4.10931312e+05, -3.59866450e+06, -1.61921300e+06,\n'
 '        -2.19663050e+06, -2.73821125e+06, -1.79664750e+06,\n'
 '         5.07111562e+05,  1.84942912e+06, -1.85075675e+06,\n'
 '        -9.78779875e+05, -6.86035625e+05,  8.44147125e+05,\n'
 '         2.58115900e+06, -3.93170062e+05, -1.55009612e+06,\n'
 '         3.49192050e+06, -1.17090938e+06, -5.91302750e+05,\n'
 '        -9.62736016e+04,  2.00244950e+06,  4.55478125e+05,\n'
 '         1.48239138e+06, -2.75456844e+05, -7.96417125e+05,\n'
 '         2.17180850e+06,  1.58208388e+06,  6.17971438e+05,\n'
 '         1.08671875e+06,  3.87890562e+05,  5.03843469e+05,\n'
 '        -1.36255112e+06,  2.41333600e+06, -2.39564925e+06,\n'
 '        -1.68512538e+06,  6.89836500e+05,  2.48112531e+05,\n'
 '         7.54110375e+05, -1.58381750e+06,  4.58896750e+05,\n'
 '        -9.28075000e+05, -1.84587888e+06, -1.13906825e+06,\n'
 '         1.55248625e+05,  8.63480875e+05, -1.72411975e+06,\n'
 '         1.39635738e+06, -1.84367938e+05, -9.00885875e+05,\n'
 '         8.42415875e+05, -2.00241200e+06, -7.10307625e+05,\n'
 '        -4.59308750e+05,  1.83606875e+05, -7.70147656e+04,\n'
 '         7.61454688e+05, -6.14059875e+05, -9.46603375e+05,\n'
 '        -9.60990875e+05, -4.75627000e+05,  4.16667500e+04,\n'
 '        -4.12988625e+05, -1.35173325e+06, -2.00587088e+06,\n'
 '        -1.92446362e+06,  2.51925050e+06,  1.34607700e+06,\n'
 '        -3.11832750e+05,  3.33318450e+06,  1.36233350e+06,\n'
 '         2.11540750e+06,  4.93807450e+06,  3.69797750e+05,\n'
 '         3.29738844e+05, -2.11296281e+05, -1.97538250e+05,\n'
 '        -2.12162100e+06,  2.11429125e+06,  2.38210675e+06,\n'
 '         1.36494700e+06, -3.30315875e+05, -1.89162212e+06,\n'
 '        -1.37371875e+04, -7.03260625e+05, -1.46554900e+06,\n'
 '        -3.11618925e+06,  5.06518719e+05, -1.05146125e+05,\n'
 '        -2.30646350e+06,  4.82495125e+05,  1.53226875e+04,\n'
 '         1.03320138e+06, -2.94358125e+05, -2.11109700e+06,\n'
 '         5.94696250e+05,  1.75346762e+06, -6.67212750e+05,\n'
 '         4.14377312e+05,  6.31685750e+05,  1.11419375e+06,\n'
 '         9.57712188e+05, -1.35669500e+06, -3.17057100e+06,\n'
 '         1.21289525e+06, -2.91909344e+05,  5.94241688e+05,\n'
 '        -1.77366950e+06,  4.30471312e+05, -1.42995138e+06,\n'
 '         4.13478188e+05,  1.80066425e+06,  4.26738562e+05,\n'
 '        -2.17216650e+06, -1.47506862e+06, -7.56796250e+04,\n'
 '        -4.38463875e+05, -3.73575550e+06,  3.17836812e+05,\n'
 '        -1.21178625e+05,  1.79156950e+06,  6.90240812e+05,\n'
 '        -1.04503738e+06,  1.83070550e+06, -9.97335625e+04,\n'
 '        -3.45203594e+05, -1.92807938e+06,  1.67331375e+06,\n'
 '        -1.31001512e+06, -1.09377675e+06, -2.10756300e+06,\n'
 '        -1.05456875e+05, -4.45010531e+05,  1.60579525e+06,\n'
 '        -2.17580375e+05, -1.71625425e+06,  1.96269638e+06,\n'
 '        -9.57555625e+05,  4.98080656e+05, -1.18054688e+04,\n'
 '         1.47123750e+04,  2.86629150e+06,  1.99694250e+05,\n'
 '         5.58144688e+04,  1.51752238e+06, -1.28496900e+06,\n'
 '         3.37237344e+05,  1.17637100e+06, -2.51625750e+05,\n'
 '         1.28356050e+06, -4.04808594e+05,  7.47127688e+05,\n'
 '        -2.34494500e+06,  1.91890825e+06,  2.07322375e+06,\n'
 '         2.14920900e+06, -7.78841625e+05,  6.38776875e+04,\n'
 '        -7.60663250e+05,  7.79674125e+05,  2.28386125e+05,\n'
 '         5.45558000e+05,  1.37529112e+06, -6.23886938e+05,\n'
 '        -5.17025375e+05, -6.69247062e+05,  2.54752075e+06,\n'
 '         1.04375912e+06, -1.30878438e+06, -1.85196812e+06,\n'
 '        -2.88633344e+05,  2.13417150e+06, -1.34530469e+05,\n'
 '        -2.30075875e+06, -2.30540450e+06,  1.70597550e+06,\n'
 '         6.62185875e+05,  1.34441262e+06,  1.32011038e+06,\n'
 '         2.39443525e+06,  5.54815375e+05, -4.55226812e+05,\n'
 '        -1.59622500e+04,  1.89320650e+06, -1.43033575e+06,\n'
 '         5.43071625e+05, -1.56805362e+06,  1.30855950e+06,\n'
 '         5.50627750e+05,  1.20084200e+06, -1.48486125e+06,\n'
 '        -2.46034050e+06, -1.78567925e+06,  3.30228000e+05,\n'
 '         2.34202050e+06, -1.51787175e+06, -2.99920375e+05,\n'
 '         7.02153938e+05, -1.72605850e+06,  2.31036438e+05,\n'
 '         9.91512625e+05, -8.96458750e+04, -3.68681312e+05,\n'
 '         6.96306625e+05, -7.50960125e+05, -1.77305100e+06,\n'
 '        -1.55831650e+06, -3.44280188e+05,  1.73836475e+06,\n'
 '         1.55149838e+06, -5.97552562e+05,  3.16770625e+04,\n'
 '        -4.41333938e+05,  1.34529800e+06,  1.49276075e+06,\n'
 '         2.24415750e+05, -1.27573250e+06, -1.25562812e+06,\n'
 '        -4.40478450e+06,  6.97582750e+05,  5.87717500e+05,\n'
 '         3.43369500e+06, -2.07573775e+06, -6.65962875e+05,\n'
 '        -1.84338000e+05, -2.76415800e+06, -1.42552675e+06,\n'
 '        -3.07541175e+06, -1.40261712e+06,  2.37661600e+06,\n'
 '        -4.82176500e+05,  2.93323275e+06,  1.50464375e+05,\n'
 '        -1.83082188e+04, -1.64886125e+05, -1.04441650e+06,\n'
 '         1.30927925e+06,  1.63163297e+05,  1.69176875e+06,\n'
 '         6.85029875e+05, -1.83964950e+06, -6.94589875e+05,\n'
 '         5.25962938e+05,  2.07816112e+06,  2.33744550e+06,\n'
 '        -1.58226350e+06,  8.00949375e+04, -9.57224375e+05,\n'
 '         9.83967188e+05, -9.09661875e+05,  5.13363125e+05,\n'
 '        -2.14832025e+06,  1.81340500e+05,  1.31902488e+06,\n'
 '         1.37252225e+06, -1.11358662e+06, -1.99817350e+06,\n'
 '        -7.73820250e+05,  1.14792075e+06,  1.80288562e+05,\n'
 '         4.31108688e+05, -2.83119562e+05,  2.27078475e+06,\n'
 '         1.34657038e+06,  1.52502950e+06, -1.62709150e+06,\n'
 '         3.06307800e+06, -1.19981325e+06,  9.17018688e+05,\n'
 '        -2.22728656e+05, -2.00153575e+06,  2.06944312e+05,\n'
 '        -2.36946600e+06, -2.10343725e+06,  8.89004438e+05,\n'
 '        -2.52913500e+05,  4.45041094e+05,  1.42819788e+06,\n'
 '         4.95818375e+05,  2.96164075e+06, -5.06057188e+05,\n'
 '         5.53915625e+04, -1.33426750e+06, -1.42555500e+05,\n'
 '         1.85111025e+06,  4.27318000e+05, -1.93243438e+05,\n'
 '         6.88492312e+05,  3.08929450e+06,  1.73250025e+06,\n'
 '        -1.45073200e+06, -3.48001562e+05,  3.35006225e+06,\n'
 '         2.55421750e+05,  1.53986600e+06,  1.15638062e+06,\n'
 '         1.58792512e+06,  4.39352000e+05, -7.01979250e+05,\n'
 '        -4.57473950e+06,  3.08215375e+05,  1.16664953e+05,\n'
 '        -1.11970638e+06, -2.95740075e+06, -1.62240125e+05,\n'
 '         1.13831475e+06,  8.06312125e+05,  6.48118625e+05,\n'
 '        -1.40488875e+05,  1.46384650e+06,  4.53047250e+05,\n'
 '        -9.35306125e+05,  1.17453025e+06,  4.04209075e+06,\n'
 '         5.04003125e+05, -1.12413350e+06,  3.43354312e+05,\n'
 '        -1.64391475e+06,  7.33226750e+05,  7.69110438e+05,\n'
 '        -2.33814500e+05, -5.94442500e+04, -1.96739462e+06,\n'
 '        -3.55326200e+06, -6.43805375e+05,  2.20257175e+06,\n'
 '         7.10172500e+05, -5.21704375e+05,  2.18147141e+05,\n'
 '         1.87776700e+06,  7.38777625e+05,  2.43188062e+05,\n'
 '        -3.68021725e+06,  7.59324000e+05, -8.13531250e+04,\n'
 '         5.86007250e+05, -8.85084750e+05, -2.83029750e+05,\n'
 '        -2.53823025e+06,  1.93016250e+06, -1.98605375e+06,\n'
 '         7.99078688e+05,  1.64237175e+06,  2.36815625e+05,\n'
 '         1.86663375e+06,  4.52518500e+05,  3.19753125e+06,\n'
 '        -1.09560250e+06, -3.68086938e+05, -1.41169288e+06,\n'
 '        -2.12673594e+05, -9.89701750e+05, -6.95882500e+05,\n'
 '        -7.91899750e+05, -2.97005000e+05, -3.12703125e+04,\n'
 '        -8.92541125e+05,  1.99340062e+06, -6.07795750e+05,\n'
 '        -9.55594250e+05,  2.12965400e+06, -2.08542938e+05,\n'
 '        -3.68185000e+04,  8.45067125e+05, -2.09394125e+06,\n'
 '         2.63377025e+06, -2.60516825e+06, -1.92458850e+06,\n'
 '         1.86250412e+06, -9.49629062e+05,  3.46415575e+06,\n'
 '         1.44397350e+06,  2.40700000e+03,  6.66792625e+05,\n'
 '        -2.95472188e+05,  1.82236625e+06,  9.32497344e+04,\n'
 '        -1.17419188e+06,  1.50522550e+06,  1.99967275e+06,\n'
 '        -5.03480406e+05, -8.37140000e+05,  2.83197750e+05,\n'
 '         6.20558250e+05,  5.53538500e+05, -2.02380700e+06,\n'
 '        -5.74674688e+04,  1.46716812e+06, -2.64583000e+05,\n'
 '         2.55824100e+06, -2.68108825e+06,  1.48156688e+05,\n'
 '         1.02907800e+06,  9.52122125e+05, -7.45943500e+05,\n'
 '        -4.26857125e+05, -1.73838875e+06, -9.79922562e+05,\n'
 '         1.90601475e+06, -1.06077788e+06, -2.55781725e+06,\n'
 '        -1.08726388e+06, -7.70763875e+05, -1.32898050e+06,\n'
 '         1.35211862e+06, -3.11466812e+05,  5.73602000e+05,\n'
 '        -1.07905875e+06,  5.38176188e+05,  2.12708750e+06,\n'
 '        -1.05188100e+06,  2.01882800e+06, -1.99870950e+06,\n'
 '         1.78807775e+06, -1.38476638e+06,  7.36156625e+05,\n'
 '         1.83507788e+06, -3.56966050e+06,  1.31933950e+06,\n'
 '         1.91623250e+05, -1.36163588e+06, -1.55202275e+06,\n'
 '         1.62531050e+06, -1.76505375e+06, -1.31009175e+06,\n'
 '         1.46351938e+05, -1.73857400e+06,  1.71424625e+06,\n'
 '         8.31759938e+05,  1.38022100e+06,  5.25678312e+05,\n'
 '         2.52836281e+05, -2.48318450e+06, -9.32801750e+05,\n'
 '         1.07597625e+06, -1.99440812e+06,  3.08671150e+06,\n'
 '        -7.62037875e+05,  6.88687875e+05, -7.92162375e+05,\n'
 '        -1.62276612e+06, -1.23876775e+06,  9.37667438e+05,\n'
 '         1.72294175e+06,  1.15072400e+06,  7.98813250e+05,\n'
 '         4.08474281e+05, -1.61369250e+05,  9.53541438e+05,\n'
 '        -3.59064625e+05,  4.18274375e+05, -3.52425625e+06,\n'
 '        -3.29602781e+05, -3.34180975e+06, -2.04907525e+06,\n'
 '         1.20168662e+06, -2.87623688e+05,  1.61163588e+06,\n'
 '        -1.66786400e+06, -7.03650375e+05,  4.63879250e+05,\n'
 '         4.58588850e+06, -4.46262750e+05, -1.29675662e+06,\n'
 '         4.57295500e+06, -2.69575750e+05,  6.49728750e+05,\n'
 '         1.22438725e+06,  1.45161300e+06, -2.26341225e+06,\n'
 '         6.59042500e+04, -3.76677500e+05,  2.75110875e+05,\n'
 '         1.43772438e+06,  1.62790900e+06, -7.53612188e+05,\n'
 '         8.07675000e+04, -1.76082000e+06,  1.89347500e+06,\n'
 '        -8.81386438e+05,  3.01655625e+05,  2.42546650e+06,\n'
 '        -3.95735475e+06, -2.17117200e+06, -2.19134800e+06,\n'
 '         7.74351625e+05,  1.27744988e+06,  9.12836125e+05,\n'
 '        -3.08691625e+05,  3.34660125e+05,  7.32095312e+03,\n'
 '         2.63430312e+05,  2.21941825e+06,  1.38596112e+06,\n'
 '        -1.23990975e+06, -2.43912325e+06,  2.70492350e+06,\n'
 '        -1.61499125e+05, -2.34346175e+06,  4.47160000e+04,\n'
 '         4.95438281e+05, -2.07145750e+05,  2.32809750e+06,\n'
 '        -1.01708125e+05,  1.49955162e+06, -1.79596125e+06,\n'
 '         1.86732638e+06, -1.78042828e+05,  2.63907850e+06,\n'
 '         2.27729500e+05, -2.98073438e+04,  1.57164450e+06,\n'
 '         1.33113262e+06, -1.34772550e+06, -1.08306825e+06,\n'
 '        -1.94172425e+06,  1.06481400e+06,  1.24090912e+06,\n'
 '        -7.78992188e+04,  8.55344875e+05,  2.51198925e+06,\n'
 '        -1.89941238e+06, -1.02106938e+05, -5.49172250e+05,\n'
 '        -4.13719375e+05, -7.96944188e+05, -1.93963125e+04,\n'
 '        -1.89452344e+05, -1.50836125e+06,  1.87936250e+05,\n'
 '        -2.68642375e+05,  1.97121950e+06, -2.42978725e+06,\n'
 '         1.15105650e+06, -1.66941550e+06, -4.63741500e+05,\n'
 '        -1.36403825e+06,  1.88584725e+06, -1.33347725e+06,\n'
 '        -1.76978550e+06, -1.97773375e+05,  2.01208950e+06,\n'
 '        -1.09528100e+06, -2.04110288e+06, -7.62175438e+05,\n'
 '        -2.81977000e+06, -1.20279375e+06, -7.10810500e+05,\n'
 '        -6.06997500e+05,  1.48828525e+06, -1.66089612e+06,\n'
 '        -3.32135800e+06, -7.76689875e+05,  1.58697600e+06,\n'
 '        -6.58434500e+05,  4.64853125e+04,  1.27358125e+06,\n'
 '         1.98192725e+06,  1.22431350e+06,  1.06084000e+05,\n'
 '        -9.47381500e+05,  2.82871562e+05,  7.39701875e+05,\n'
 '         6.94327375e+05, -4.47492875e+05, -2.32090281e+05,\n'
 '        -1.30415650e+06,  1.64658612e+06, -1.53404638e+06,\n'
 '        -2.19034950e+06, -1.77536800e+06,  5.87029125e+05,\n'
 '         1.58501225e+06, -4.28960781e+05, -1.94800325e+06,\n'
 '        -5.61535562e+05,  3.72974625e+05,  7.23634062e+05,\n'
 '        -8.29679438e+05, -5.12664062e+05, -1.10718400e+06,\n'
 '        -5.33753938e+05,  1.66625262e+06,  2.79586562e+05,\n'
 '         6.16252875e+05,  1.79862312e+05,  1.28134950e+06,\n'
 '         4.86196445e+04, -1.24306200e+06, -1.82729625e+05,\n'
 '        -1.38481400e+06, -1.03115150e+06, -6.88587250e+05,\n'
 '        -9.76089625e+05,  4.04321750e+05, -8.59512438e+05,\n'
 '        -1.06425000e+06, -5.17572500e+04,  1.50416112e+06,\n'
 '        -2.54324938e+05, -2.27481350e+06,  1.07816075e+06,\n'
 '        -3.03734438e+05, -4.58487500e+04,  1.59664362e+06,\n'
 '        -1.27427875e+05,  3.78111100e+06,  1.57346250e+04,\n'
 '         3.51294688e+04,  7.92377500e+04,  1.61162112e+06,\n'
 '         7.15616625e+05,  1.52891762e+06, -1.73821625e+05,\n'
 '        -2.23912375e+06, -1.58377762e+06, -2.80621250e+04,\n'
 '        -2.13371500e+05,  9.98038750e+05, -1.42783641e+05,\n'
 '         1.93777350e+06,  1.04325981e+06, -9.07954500e+05,\n'
 '         2.10764950e+06]])')
'test_inceptionnet | batch_shape is: [1]'
'test_inceptionnet | logits.shape is: ivy.Shape(1, 1000)'
'||'
'test_inceptionnet | device is: cpu'
'test_inceptionnet | fw is: numpy'
'test_inceptionnet | load_weights is: True'
'InceptionV3 | build | layer 1/22 built'
'InceptionV3 | build | layer 2/22 built'
'layer 3/22 built'
'InceptionV3 | build | layer 4/22 built'
'InceptionV3 | build | layer 5/22 built'
'InceptionV3 | build | layer 6/22 built'
'InceptionV3 | build | layer 7/22 built'
'InceptionV3 | build | layer 8/22 built'
'InceptionV3 | build | layer 9/22 built'
'InceptionV3 | build | layer 10/22 built'
'InceptionV3 | build | layer 11/22 built'
'InceptionV3 | build | layer 12/22 built'
'InceptionV3 | build | layer 13/22 built'
'InceptionV3 | build | layer 14/22 built'
'InceptionV3 | build | layer 15/22 built'
'InceptionV3 | build | layer 17/22 built'
'InceptionV3 | build | layer 18/22 built'
'InceptionV3 | build | layer 19/22 built'
'InceptionV3 | build | layer 20/22 built'
'InceptionV3 | build | layer 21/22 built'
'InceptionV3 | build | layer 22/22 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/4 built'
'layer 2/4 built'
'layer 3/4 built'
'layer 4/4 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/6 built'
'layer 2/6 built'
'layer 3/6 built'
'layer 4/6 built'
'layer 5/6 built'
'layer 6/6 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'inceptionNet_v3 | building InceptionV3 model | done 1/3'
'inceptionNet_v3 | clearning pretrained weights | done 2/3'
'inceptionNet_v3 | loading pretrained weights | done 3/3'
'InceptionV3 | forward | input shape is:(1, 224, 224, 3) | done 1/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 224, 224, 3) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 111, 111, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 111, 111, 32) | done 2/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 111, 111, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 32) | done 3/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 109, 109, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 64) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 64) | done 4/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 54, 54, 64) | done 5/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 54, 54, 80) | done 3/3'
'InceptionV3 | forward | is:ivy.Shape(1, 54, 54, 80) | done 6/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 80) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 52, 52, 192) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 52, 52, 192) | done 7/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 192) | done 8/27'
'input shape is:ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 32) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 32)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 25, 25, 256) | done 9/27'
'input shape is:ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 10/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 11/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 384) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 96) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 96)'
'one 20/20, output shape is:ivy.Shape(1, 12, 12, 288)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 12/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 12, 12, 768) | done 13/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 14/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 15/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 16/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 5, 5, 192)'
'one 7/20, output shape is:ivy.Shape(1, 5, 5, 768)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 1280) | done 17/27'
'input shape is:ivy.Shape(1, 5, 5, 1280)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 18/27'
'input shape is:ivy.Shape(1, 5, 5, 2048)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 19/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 20/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 5, 5) | done 21/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 1, 1) | done 22/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 27/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 24/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 25/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048) | done 26/27'
'InceptionV3 | forward | fc | done 27/27'
('test_inceptionnet | logits is: ivy.array([[ 1.10841417e+00,  '
 '3.24745268e-01,  8.36178124e-01,\n'
 '        -2.37763986e-01,  7.32617617e-01,  4.51485485e-01,\n'
 '         2.42788434e+00,  8.27208877e-01,  7.94592857e-01,\n'
 '        -3.54858017e+00, -4.35606569e-01,  8.66661549e-01,\n'
 '         1.79625750e-01,  1.74259162e+00,  4.80293274e+00,\n'
 '        -6.52660072e-01, -3.30317593e+00,  1.04160261e+00,\n'
 '         4.39753473e-01,  1.73105836e+00,  2.56263113e+00,\n'
 '        -2.69155121e+00,  1.70338166e+00, -1.30888414e+00,\n'
 '        -2.56444141e-03, -5.52554727e-01, -9.36099172e-01,\n'
 '        -9.80965972e-01,  1.93308771e-01, -5.59335411e-01,\n'
 '        -8.67626369e-02, -8.59888434e-01,  6.75072670e-01,\n'
 '        -1.54993045e+00,  2.52427077e+00, -4.92370397e-01,\n'
 '         1.28496122e+00, -1.14259791e+00, -1.89354241e+00,\n'
 '         5.31624198e-01, -1.70813754e-01,  4.86885101e-01,\n'
 '         7.38963723e-01,  1.61850417e+00, -2.22038776e-01,\n'
 '         4.03140992e-01, -1.36591482e+00,  7.98408210e-01,\n'
 '         7.17014074e-01,  3.23829651e-01,  2.00273782e-01,\n'
 '         1.08696032e+00,  1.22611022e+00, -2.43844938e+00,\n'
 '         2.36622453e-01,  5.66797376e-01, -1.98002434e+00,\n'
 '        -3.07730406e-01,  1.09971270e-01, -1.76624227e+00,\n'
 '        -9.76533771e-01,  1.64780080e+00, -1.46445894e+00,\n'
 '        -8.54637206e-01, -2.51360989e+00, -2.66551882e-01,\n'
 '        -4.21153992e-01,  1.38713598e+00,  3.20856959e-01,\n'
 '        -2.84713626e-01, -1.13529384e+00, -2.06063533e+00,\n'
 '        -2.75302482e+00, -3.20348096e+00, -1.05956471e+00,\n'
 '        -1.51955950e+00, -1.82574558e+00, -7.72485614e-01,\n'
 '        -1.45558083e+00,  8.44440341e-01,  6.19511545e-01,\n'
 '         3.45625281e+00,  1.36359847e+00,  1.41224814e+00,\n'
 '         2.88989758e+00, -2.52822190e-02, -4.32241678e-01,\n'
 '        -1.59900713e+00, -7.88583636e-01,  6.97503984e-01,\n'
 '        -9.75521803e-01,  4.25546706e-01, -5.71861267e-02,\n'
 '        -1.23931360e+00, -8.09814930e-02, -2.41253686e+00,\n'
 '         9.47263300e-01,  1.09321821e+00, -1.90346193e+00,\n'
 '         3.89826179e+00,  1.70117772e+00,  1.01893902e+00,\n'
 '         1.39572531e-01,  1.37259507e+00,  3.36765361e+00,\n'
 '        -1.91504037e+00,  7.49269247e-01, -6.60727620e-02,\n'
 '         3.30914473e+00,  1.00454938e+00,  8.01645160e-01,\n'
 '        -1.09342647e+00,  1.64411521e+00,  3.61827087e+00,\n'
 '         1.96095601e-01, -7.01290608e-01, -1.02761769e+00,\n'
 '         3.81916881e-01, -2.28132415e+00,  6.53455555e-01,\n'
 '        -3.20731282e-01, -1.01113856e+00, -8.98454189e-01,\n'
 '        -2.47589320e-01, -8.20751727e-01,  1.16450739e+00,\n'
 '        -1.33827853e+00,  1.77962518e+00, -5.09020984e-01,\n'
 '         9.23156023e-01, -3.46938610e-01, -5.93239069e-01,\n'
 '         1.72217631e+00, -3.58963180e+00,  7.22003221e-01,\n'
 '         1.96593657e-01,  5.58145568e-02, -5.50742686e-01,\n'
 '        -1.67515683e+00, -2.04448804e-01, -1.63062692e-01,\n'
 '         6.87118053e-01, -1.81359231e+00, -1.59802079e-01,\n'
 '         2.76674819e+00,  1.15439689e+00, -2.13705093e-01,\n'
 '        -7.67029583e-01,  9.60153267e-02, -4.32213485e-01,\n'
 '        -4.19176280e-01, -5.76383114e-01,  4.57048416e+00,\n'
 '        -5.54735661e-02, -1.27295077e+00, -1.67150962e+00,\n'
 '        -1.66348267e+00,  5.18434668e+00, -3.17404437e+00,\n'
 '        -1.87078619e+00,  2.32821763e-01, -1.10608363e+00,\n'
 '        -7.74478733e-01, -1.58758569e+00, -2.89531738e-01,\n'
 '        -6.79967582e-01, -1.56394422e-01,  2.73562521e-01,\n'
 '        -2.58573937e+00,  1.76138926e+00,  1.19829988e+00,\n'
 '        -1.56349003e+00, -6.23100519e-01,  3.64469349e-01,\n'
 '         3.05583143e+00, -2.30076528e+00, -1.44620776e+00,\n'
 '        -4.02989149e-01, -7.25506365e-01,  1.10445189e+00,\n'
 '        -9.52333033e-01,  3.23161274e-01, -9.84265387e-01,\n'
 '         6.64969742e-01, -2.35862875e+00,  8.25420856e-01,\n'
 '         1.31832099e+00, -2.19739556e+00,  6.68305576e-01,\n'
 '        -4.22520685e+00, -1.44971997e-01, -2.07509971e+00,\n'
 '        -1.90739107e+00, -2.28290796e+00, -2.65258408e+00,\n'
 '        -4.36809957e-01, -4.40126753e+00,  1.52732074e-01,\n'
 '        -4.65743214e-01,  6.80738568e-01,  3.02237868e-02,\n'
 '        -4.34461307e+00, -4.81686711e-01,  5.14955282e+00,\n'
 '        -3.35037160e+00, -2.95201850e+00, -2.17225337e+00,\n'
 '        -2.29111671e+00, -4.40351915e+00, -2.35961223e+00,\n'
 '        -1.70705333e-01, -2.53320169e+00, -1.35102653e+00,\n'
 '        -1.26556206e+00, -5.59776127e-01,  3.32140744e-01,\n'
 '         6.75841689e-01,  5.10707140e-01, -3.02421451e-02,\n'
 '        -5.47024298e+00, -2.00609708e+00,  1.75365686e+00,\n'
 '         4.36107159e+00,  3.89499712e+00,  6.26176071e+00,\n'
 '        -1.23101020e+00, -1.24183142e+00, -2.15118980e+00,\n'
 '         1.84995472e+00,  7.63227344e-01,  2.38562131e+00,\n'
 '         3.48241663e+00,  2.03236103e+00,  2.50512290e+00,\n'
 '        -1.31374240e+00,  1.69018960e+00,  9.49735940e-01,\n'
 '        -1.38421595e+00, -8.00883055e-01, -1.59440863e+00,\n'
 '         6.56505376e-02,  6.77508473e-01,  2.29469255e-01,\n'
 '        -3.36034489e+00, -1.68310225e+00, -7.06166387e-01,\n'
 '        -3.04005295e-01,  4.61738482e-02,  8.72573280e+00,\n'
 '         5.88224506e+00,  4.22972727e+00,  1.18341827e+00,\n'
 '        -1.74528945e+00, -1.02888155e+00, -1.36794710e+00,\n'
 '         5.59399486e-01,  1.93125021e+00,  7.31709003e+00,\n'
 '         2.21167393e+01,  7.43885708e+00,  5.61148119e+00,\n'
 '         9.12905693e+00, -4.54734993e+00, -1.05366218e+00,\n'
 '         6.72235966e-01, -4.29978609e-01, -1.48411417e+00,\n'
 '         8.71838987e-01, -2.96376729e+00,  3.70460463e+00,\n'
 '         1.33830433e+01, -9.29516912e-01,  1.43824577e+00,\n'
 '         2.55567133e-01,  1.92024326e+00, -5.15605271e-01,\n'
 '         5.97316146e-01,  2.39611125e+00,  2.53516913e-01,\n'
 '         1.29103603e+01,  1.44703424e+00,  8.89452457e-01,\n'
 '        -2.25306153e+00,  2.48826385e+00, -2.22726870e+00,\n'
 '        -1.66532385e+00, -2.56873041e-01,  9.88689363e-01,\n'
 '         9.60429907e-02,  1.80904675e+00, -1.74375439e+00,\n'
 '        -6.40843749e-01,  4.95816618e-02, -1.65730488e+00,\n'
 '        -9.79470611e-01, -1.55987561e+00,  3.94456291e+00,\n'
 '        -1.23509622e+00, -2.29554653e+00, -2.07863355e+00,\n'
 '        -8.81430209e-01, -8.33738446e-01,  1.44103944e+00,\n'
 '        -1.23682702e+00,  9.40013051e-01,  1.23865247e-01,\n'
 '         3.49009395e-01,  3.69360268e-01,  4.90341604e-01,\n'
 '        -4.49100018e-01, -1.36584866e+00, -9.67263401e-01,\n'
 '        -1.29344296e+00, -1.81145477e+00, -6.29209995e-01,\n'
 '         3.98923874e-01, -2.11998081e+00,  7.65367091e-01,\n'
 '         7.59629548e-01, -3.75983298e-01,  1.53258771e-01,\n'
 '         6.79494262e-01,  6.59693897e-01,  1.75668323e+00,\n'
 '        -1.66153943e+00,  1.31282341e+00,  1.74791157e+00,\n'
 '         4.85212028e-01,  1.92037332e+00, -1.74904227e-01,\n'
 '        -1.99636745e+00,  2.21049094e+00,  3.09562492e+00,\n'
 '        -1.70919597e+00, -5.73425233e-01, -2.30865765e+00,\n'
 '        -2.51903296e+00, -6.38103485e-01,  5.97106218e-01,\n'
 '        -2.95690823e+00, -2.69826829e-01,  3.29372525e-01,\n'
 '        -2.25574326e+00, -1.18739462e+00,  5.24801090e-02,\n'
 '        -3.46903205e-02, -4.70875025e-01, -8.00005436e-01,\n'
 '         1.19215727e+00, -1.00165725e+00, -2.03243780e+00,\n'
 '        -1.36499906e+00, -2.87716603e+00, -1.53947854e+00,\n'
 '        -1.22643042e+00,  7.65194833e-01,  1.71306670e+00,\n'
 '         1.03737772e+00,  1.63037181e+00,  2.36741829e+00,\n'
 '        -2.23188639e+00,  1.25378537e+00,  7.19508901e-02,\n'
 '         1.70221531e+00, -2.34192419e+00, -3.06965900e+00,\n'
 '        -4.26034498e+00, -2.58412290e+00, -2.38232183e+00,\n'
 '        -3.11283231e+00, -1.57594573e+00, -2.91738606e+00,\n'
 '        -6.57621801e-01, -1.35330367e+00, -1.27818751e+00,\n'
 '        -1.25575483e-01, -1.82789779e+00, -7.41764307e-01,\n'
 '        -1.85693884e+00, -2.14411449e+00, -3.18401027e+00,\n'
 '        -3.01034045e+00, -2.28360748e+00, -1.85783672e+00,\n'
 '        -1.50575781e+00, -9.04838264e-01, -2.79180908e+00,\n'
 '         1.51205206e+00, -1.96918145e-01,  7.04409778e-01,\n'
 '        -1.54963303e+00,  3.33707333e-01,  1.28043306e+00,\n'
 '         2.90270734e+00,  1.94798922e+00, -3.29519182e-01,\n'
 '         2.51289034e+00,  1.56702149e+00,  2.86092490e-01,\n'
 '         1.41435289e+00, -4.91477072e-01, -1.23359251e+00,\n'
 '         2.24094868e+00,  9.18048859e-01,  2.36522007e+00,\n'
 '        -2.13859886e-01, -1.60093218e-01,  3.45358700e-01,\n'
 '         1.86926150e+00, -1.58881319e+00,  7.72428513e-03,\n'
 '        -1.51864302e+00, -2.49247342e-01, -3.18525493e-01,\n'
 '         7.55432427e-01, -4.36252475e-01, -2.91474438e+00,\n'
 '        -5.18299937e-01, -7.68854082e-01, -6.81935310e-01,\n'
 '         5.91791630e-01, -1.54884791e+00, -2.62821913e+00,\n'
 '        -7.14470148e-01, -1.64140630e+00,  2.63341188e+00,\n'
 '        -3.25533390e-01, -4.42328781e-01,  1.33156037e+00,\n'
 '        -1.59466243e+00,  1.45830780e-01,  5.62283218e-01,\n'
 '        -1.47565454e-01, -2.67899108e+00, -1.60010016e+00,\n'
 '        -9.32042777e-01,  6.03431106e-01,  5.30357063e-01,\n'
 '        -8.37132752e-01, -7.77735114e-01, -4.68703508e-02,\n'
 '        -7.02144384e-01,  1.17688179e-01, -1.25023270e+00,\n'
 '        -1.09807432e+00,  6.79131746e-02, -2.13364744e+00,\n'
 '         5.14962971e-01,  1.71123529e+00,  1.59970558e+00,\n'
 '        -4.84228045e-01,  9.46452081e-01,  6.80148840e-01,\n'
 '        -1.77640784e+00, -7.80134499e-02, -1.71544790e-01,\n'
 '         1.15753174e+00,  6.78589046e-02,  9.63479400e-01,\n'
 '         3.64590973e-01,  3.90066981e-01, -1.65226102e+00,\n'
 '        -3.49043727e-01,  6.67440653e-01,  1.56945026e+00,\n'
 '        -1.29546118e+00,  5.50227284e-01, -2.04610086e+00,\n'
 '         2.73482346e+00,  6.22660756e-01, -4.49988723e-01,\n'
 '         1.09147501e+00,  2.59281695e-01,  7.76437998e-01,\n'
 '        -2.76867509e-01, -3.81205410e-01,  3.65847302e+00,\n'
 '        -1.24711621e+00,  2.66637206e+00,  1.23968613e+00,\n'
 '        -5.66851199e-02, -2.40701899e-01, -3.46309686e+00,\n'
 '         8.87255847e-01, -3.28453273e-01, -1.67492461e+00,\n'
 '         2.91496635e-01,  5.16621947e-01,  2.17901096e-01,\n'
 '         2.88241625e+00,  2.13205195e+00,  1.91075373e+00,\n'
 '        -7.53546655e-01, -1.00583231e+00, -7.33842552e-02,\n'
 '         1.69003248e+00,  4.74563897e-01, -3.29416347e+00,\n'
 '         4.76019114e-01, -5.04152775e-01, -1.34587550e+00,\n'
 '         1.69789660e+00,  6.84246302e-01, -1.20121336e+00,\n'
 '         1.49676919e-01,  1.87208724e+00,  2.60806179e+00,\n'
 '         1.29691422e-01, -6.37002289e-01, -8.75059605e-01,\n'
 '        -6.81184158e-02,  1.80357814e+00,  6.04583502e-01,\n'
 '        -2.33182460e-01,  9.16774213e-01,  7.17421651e-01,\n'
 '        -2.03241157e+00, -5.78940928e-01, -2.17895555e+00,\n'
 '        -2.45517945e+00, -3.40309322e-01,  1.10358626e-01,\n'
 '         5.10220170e-01, -4.04104590e-03,  4.61373925e-02,\n'
 '        -9.13033664e-01, -9.23497319e-01, -2.32167292e+00,\n'
 '         2.38353163e-02, -2.90891242e+00, -1.76015818e+00,\n'
 '         1.85247123e-01,  9.73738879e-02, -1.66552973e+00,\n'
 '        -6.50725424e-01, -1.15933478e+00, -1.99840522e+00,\n'
 '         4.12889099e+00,  6.63203374e-02, -6.18904173e-01,\n'
 '        -1.32006621e+00,  1.32053363e+00, -3.88560146e-01,\n'
 '         9.28460658e-01,  2.07479096e+00,  2.37223804e-02,\n'
 '         2.20076227e+00,  3.80137265e-01, -2.85423994e+00,\n'
 '        -1.67554247e+00,  1.12235653e+00,  6.37849510e-01,\n'
 '        -2.42067367e-01, -2.55631065e+00,  9.74968553e-01,\n'
 '        -1.43014655e-01, -7.65722990e-03,  1.85584617e+00,\n'
 '         2.16389168e-03,  1.13246226e+00,  1.01764214e+00,\n'
 '        -1.22792208e+00,  2.96582484e+00,  1.75908637e+00,\n'
 '         1.31037950e+00, -5.70853353e-01, -1.05259526e+00,\n'
 '        -8.73664618e-01,  2.20717740e+00, -1.67225254e+00,\n'
 '         9.52979028e-01, -1.00107181e+00, -1.40952778e+00,\n'
 '         1.57016683e+00, -1.25946128e+00, -6.43715441e-01,\n'
 '        -9.27711844e-01, -6.98263526e-01,  2.79962309e-02,\n'
 '        -9.08652782e-01,  1.39226329e+00,  1.11957645e+00,\n'
 '        -6.02514386e-01, -6.69216156e-01,  1.28147543e+00,\n'
 '         8.11383009e-01, -1.14151466e+00,  1.72388518e+00,\n'
 '        -5.69818735e-01, -4.87241238e-01, -3.47285748e-01,\n'
 '         1.00852144e+00,  2.22330117e+00, -5.83175778e-01,\n'
 '         1.80067873e+00, -1.39447165e+00,  2.52467322e+00,\n'
 '        -6.39829397e-01, -2.33788800e+00, -9.13107514e-01,\n'
 '        -9.41764534e-01, -1.59448922e+00, -2.83702040e+00,\n'
 '        -8.49200845e-01,  2.23316550e+00,  7.59997189e-01,\n'
 '         4.26045418e+00, -3.87498736e-03,  2.02722120e+00,\n'
 '         9.38190401e-01, -3.66714448e-01,  1.29827905e+00,\n'
 '        -2.40926743e+00,  1.76648593e+00,  1.41016865e+00,\n'
 '         1.65334135e-01, -1.06232631e+00,  1.47957772e-01,\n'
 '        -8.40591371e-01, -2.63719511e+00, -3.25219131e+00,\n'
 '         1.60102868e+00,  1.73040104e+00, -9.35534716e-01,\n'
 '        -5.76771379e-01,  8.21396828e-01, -8.78823996e-02,\n'
 '         8.68717313e-01,  2.67507911e+00,  1.14672852e+00,\n'
 '        -6.20832741e-01, -1.94307232e+00, -1.63375807e+00,\n'
 '        -2.33192295e-01, -2.80864883e+00, -2.67304087e+00,\n'
 '         4.05305415e-01, -1.55415928e+00, -6.41960621e-01,\n'
 '        -3.13529253e-01,  5.31102777e-01, -8.76128018e-01,\n'
 '         3.49191308e-01, -3.94175977e-01, -2.17274219e-01,\n'
 '         1.64887977e+00,  3.01059246e+00, -1.14436972e+00,\n'
 '         6.41561031e-01,  1.88034415e+00,  1.02267575e+00,\n'
 '        -1.02450001e+00,  1.68992257e+00, -6.51723564e-01,\n'
 '         1.33363533e+00, -1.26161838e+00,  2.46087050e+00,\n'
 '        -1.92207408e+00, -6.47753060e-01, -1.30102825e+00,\n'
 '        -5.25301993e-01, -2.13155895e-01, -1.97152269e+00,\n'
 '        -3.49715757e+00, -6.42536402e-01, -1.34002536e-01,\n'
 '         7.63511360e-01,  9.69506860e-01, -1.93581522e+00,\n'
 '         1.43380809e+00,  1.79306960e+00,  2.81055629e-01,\n'
 '         2.15499306e+00, -2.20116281e+00, -1.29081357e+00,\n'
 '         2.03945804e+00,  1.51470017e+00, -1.98437178e+00,\n'
 '         1.09751709e-01, -9.42799449e-01, -6.49228394e-01,\n'
 '        -1.62280214e+00,  1.91040063e+00, -6.14030659e-01,\n'
 '         6.86000943e-01, -4.30671930e-01, -1.80222380e+00,\n'
 '        -6.88237071e-01, -2.52732825e+00,  1.30555999e+00,\n'
 '         4.01030928e-01, -3.01115608e+00, -4.57660615e-01,\n'
 '        -2.64788032e+00, -4.84262407e-01,  2.63295174e+00,\n'
 '        -7.51758516e-02,  9.93703723e-01, -1.98538601e-02,\n'
 '        -7.02818036e-02, -2.64438057e+00, -1.20959687e+00,\n'
 '        -3.52827120e+00,  1.24752760e+00, -2.46653390e+00,\n'
 '        -1.60856116e+00, -6.36284351e-01,  1.36323452e+00,\n'
 '        -1.51675493e-01,  3.73183549e-01,  8.92331243e-01,\n'
 '         1.77559745e+00,  8.22919011e-01, -2.46178412e+00,\n'
 '         5.72228432e-01, -7.48591185e-01, -9.35050845e-01,\n'
 '         1.53798115e+00,  1.93228030e+00,  2.50942826e+00,\n'
 '        -2.02557146e-02,  1.00368455e-01, -1.65115213e+00,\n'
 '         1.63114798e+00,  2.24934840e+00, -1.39654741e-01,\n'
 '        -2.72615165e-01,  1.39714408e+00, -1.04271805e+00,\n'
 '         1.34177804e-02, -1.85450435e+00, -6.59985662e-01,\n'
 '        -1.12715721e+00,  6.86980903e-01,  8.58346105e-01,\n'
 '         1.72443122e-01, -1.90507495e+00, -3.24850440e+00,\n'
 '         1.55441415e+00,  1.92590192e-01,  5.68191350e-01,\n'
 '        -2.60602057e-01, -1.22689187e+00, -9.87565637e-01,\n'
 '        -8.21337759e-01, -1.01785421e+00,  4.19129753e+00,\n'
 '        -2.45863461e+00, -1.11924851e+00,  1.38321924e+00,\n'
 '        -2.29171228e+00,  2.64115870e-01, -1.31738794e+00,\n'
 '        -1.80490398e+00, -2.84161091e+00,  3.19395482e-01,\n'
 '         6.62429511e-01,  1.45900786e+00,  3.00551605e+00,\n'
 '         4.78282332e-01, -2.42639828e+00, -1.67177379e+00,\n'
 '        -7.05170989e-01,  7.61490583e-01,  2.49460727e-01,\n'
 '         5.65147281e-01, -2.55871439e+00,  1.08027339e+00,\n'
 '         2.21701682e-01,  4.73638177e-01,  1.05709994e+00,\n'
 '        -5.60321510e-01, -6.30082488e-01, -1.94053531e-01,\n'
 '        -2.16385698e+00, -2.25555673e-01,  8.98381829e-01,\n'
 '        -3.21113199e-01, -2.51641893e+00,  7.18402267e-02,\n'
 '         2.74439526e+00, -8.26354742e-01, -6.67080954e-02,\n'
 '        -2.14749908e+00, -1.52945411e+00,  9.39677954e-02,\n'
 '        -9.54579174e-01,  7.59488404e-01,  1.44893873e+00,\n'
 '        -1.27869749e+00, -3.56553078e-01,  2.85590172e+00,\n'
 '         3.32318354e+00, -1.30174982e+00, -9.86389995e-01,\n'
 '        -1.44755018e+00,  1.08808184e+00, -1.86881673e+00,\n'
 '        -8.01928520e-01,  1.92127097e+00, -1.50670588e-01,\n'
 '        -7.61918426e-01,  1.97113526e+00,  2.89789826e-01,\n'
 '        -2.80274797e+00,  1.28355837e+00, -2.46183109e+00,\n'
 '        -2.27852678e+00,  1.76445222e+00,  1.40955806e+00,\n'
 '        -7.60672331e-01, -4.94270325e-01,  8.44275117e-01,\n'
 '         2.55313188e-01,  8.77184510e-01,  1.65893841e+00,\n'
 '         2.72469091e+00, -1.54699659e+00, -1.12400722e+00,\n'
 '         6.77824020e-01,  2.31766701e-02, -3.36948705e+00,\n'
 '         1.80430269e+00,  6.31223619e-01,  1.05416119e+00,\n'
 '         1.90824032e+00, -4.68208045e-01,  5.04477978e-01,\n'
 '         1.89934945e+00, -4.39163387e-01,  4.24297810e-01,\n'
 '        -1.95913470e+00,  7.90315509e-01,  2.84949690e-02,\n'
 '        -1.83924329e+00, -5.04922867e-03,  3.21984649e-01,\n'
 '        -7.95567632e-01,  4.96418327e-01,  2.66620636e-01,\n'
 '         1.42757630e+00,  1.12237298e+00, -8.42925906e-01,\n'
 '         3.30686927e+00,  1.18248057e+00, -4.92716014e-01,\n'
 '        -1.12662101e+00, -8.92997801e-01, -8.55620742e-01,\n'
 '         8.37402523e-01,  7.25000262e-01, -1.41283262e+00,\n'
 '         1.98613048e-01,  1.65043879e+00,  2.46355608e-01,\n'
 '         6.66432142e-01, -2.81021976e+00,  9.27540779e-01,\n'
 '         1.16657913e+00,  3.02726150e-01, -4.69347715e-01,\n'
 '         7.54108548e-01,  9.05882120e-02,  2.75024581e+00,\n'
 '        -2.37125325e+00,  5.63228846e-01, -8.69424939e-01,\n'
 '         1.49050939e+00, -4.08684492e+00, -1.18651259e+00,\n'
 '         1.63458109e+00, -1.63070989e+00,  1.67122710e+00,\n'
 '        -9.12261069e-01, -3.94327790e-01, -1.67113638e+00,\n'
 '        -5.40342629e-01, -2.11843038e+00,  6.59981728e-01,\n'
 '         3.31654215e+00, -1.05806017e+00, -4.37681198e-01,\n'
 '         1.47365522e+00, -1.34104884e+00,  5.70196509e-01,\n'
 '        -2.92756891e+00, -4.88401443e-01,  7.45406747e-01,\n'
 '         3.30331102e-02,  5.83660722e-01,  1.59309775e-01,\n'
 '        -9.65639889e-01, -1.12608707e+00,  3.33159089e+00,\n'
 '        -1.22153830e+00, -3.40490103e-01,  2.31447554e+00,\n'
 '        -4.70577538e-01,  3.05822372e+00,  4.75866586e-01,\n'
 '         6.04573369e-01, -2.01498294e+00, -3.00535530e-01,\n'
 '        -1.54644597e+00, -9.19262767e-02, -2.12177920e+00,\n'
 '        -1.49888170e+00,  1.19886327e+00,  8.92532826e-01,\n'
 '         1.79711950e+00,  7.64055550e-02, -4.40115929e-02,\n'
 '        -6.86815858e-01,  3.20323086e+00, -5.14693260e-01,\n'
 '         3.48090410e+00,  6.08580947e-01, -1.27542829e+00,\n'
 '         4.39070374e-01,  5.31618238e-01, -1.92147040e+00,\n'
 '         9.57304120e-01,  6.78120911e-01, -2.71306559e-02,\n'
 '        -1.18625319e+00,  1.10211802e+00, -2.20309830e+00,\n'
 '        -1.42127645e+00, -5.59566736e-01,  2.36783653e-01,\n'
 '         2.27625132e-01, -2.44200492e+00, -1.46743619e+00,\n'
 '        -1.18164790e+00, -3.77084804e+00, -2.17884946e+00,\n'
 '        -1.04833877e+00,  9.21139002e-01,  2.07385957e-01,\n'
 '         1.73910487e+00, -2.30476260e+00, -1.20007718e+00,\n'
 '        -9.76988912e-01, -1.36769891e+00,  1.86603820e+00,\n'
 '         9.04678464e-01,  2.60535598e+00, -9.97732878e-02,\n'
 '         5.66822052e-01, -1.43202531e+00,  8.58742118e-01,\n'
 '         2.03187990e+00,  7.64226317e-01,  3.57660949e-02,\n'
 '         4.27381247e-01,  1.02637863e+00, -3.08701694e-02,\n'
 '         7.09646463e-01, -5.16984463e-02, -7.79202759e-01,\n'
 '        -6.87362671e-01, -2.13190153e-01, -1.04226613e+00,\n'
 '        -2.38693357e-02, -4.26185310e-01, -2.78525996e+00,\n'
 '         5.40693224e-01,  1.95027065e+00,  1.38506502e-01,\n'
 '        -1.42285276e+00, -7.67912626e-01,  2.16470861e+00,\n'
 '         7.40191281e-01,  3.77934128e-01, -1.40283752e+00,\n'
 '        -9.16747034e-01, -2.47559667e+00,  2.87973690e+00,\n'
 '         8.44388246e-01, -4.68683600e-01, -1.56859565e+00,\n'
 '         8.69970501e-01,  1.01756442e+00,  3.73250484e-01,\n'
 '        -1.94800377e+00, -2.41219163e-01,  7.26351559e-01,\n'
 '         7.04046786e-01,  7.37347007e-01, -1.61144078e-01,\n'
 '        -3.17350864e-01, -2.69438791e+00, -9.34039176e-01,\n'
 '        -3.05220532e+00, -1.08849657e+00,  8.64196718e-02,\n'
 '         8.73318553e-01, -9.00580227e-01, -1.63575697e+00,\n'
 '         4.06622946e-01]])')
'test_inceptionnet | batch_shape is: [1]'
'test_inceptionnet | logits.shape is: ivy.Shape(1, 1000)'
'||'
'test_inceptionnet | indices_test | true_indices is: [258 270 279]'
'test_inceptionnet | indices_test | calc_indices is: [258 270 279]'
'test_inceptionnet | device is: cpu'
'test_inceptionnet | fw is: torch'
'test_inceptionnet | load_weights is: False'
'InceptionV3 | build | layer 1/22 built'
'InceptionV3 | build | layer 2/22 built'
'layer 3/22 built'
'InceptionV3 | build | layer 4/22 built'
'InceptionV3 | build | layer 5/22 built'
'InceptionV3 | build | layer 6/22 built'
'InceptionV3 | build | layer 7/22 built'
'InceptionV3 | build | layer 8/22 built'
'InceptionV3 | build | layer 9/22 built'
'InceptionV3 | build | layer 10/22 built'
'InceptionV3 | build | layer 11/22 built'
'InceptionV3 | build | layer 12/22 built'
'InceptionV3 | build | layer 13/22 built'
'InceptionV3 | build | layer 14/22 built'
'InceptionV3 | build | layer 15/22 built'
'InceptionV3 | build | layer 17/22 built'
'InceptionV3 | build | layer 18/22 built'
'InceptionV3 | build | layer 19/22 built'
'InceptionV3 | build | layer 20/22 built'
'InceptionV3 | build | layer 21/22 built'
'InceptionV3 | build | layer 22/22 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/4 built'
'layer 2/4 built'
'layer 3/4 built'
'layer 4/4 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/6 built'
'layer 2/6 built'
'layer 3/6 built'
'layer 4/6 built'
'layer 5/6 built'
'layer 6/6 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'inceptionNet_v3 | building InceptionV3 model | done 1/3'
'InceptionV3 | forward | input shape is:(1, 224, 224, 3) | done 1/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 224, 224, 3) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 111, 111, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 111, 111, 32) | done 2/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 111, 111, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 32) | done 3/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 109, 109, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 64) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 64) | done 4/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 54, 54, 64) | done 5/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 54, 54, 80) | done 3/3'
'InceptionV3 | forward | is:ivy.Shape(1, 54, 54, 80) | done 6/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 80) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 52, 52, 192) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 52, 52, 192) | done 7/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 192) | done 8/27'
'input shape is:ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 32) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 32)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 25, 25, 256) | done 9/27'
'input shape is:ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 10/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 11/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 384) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 96) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 96)'
'one 20/20, output shape is:ivy.Shape(1, 12, 12, 288)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 12/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 12, 12, 768) | done 13/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 14/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 15/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 16/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 5, 5, 192)'
'one 7/20, output shape is:ivy.Shape(1, 5, 5, 768)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 1280) | done 17/27'
'input shape is:ivy.Shape(1, 5, 5, 1280)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 18/27'
'input shape is:ivy.Shape(1, 5, 5, 2048)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 19/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 20/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 5, 5) | done 21/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 1, 1) | done 22/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 27/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 24/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 25/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048) | done 26/27'
'InceptionV3 | forward | fc | done 27/27'
('test_inceptionnet | logits is: ivy.array([[ 6.71159125e+05, '
 '-1.05670600e+06,  1.25322300e+06,\n'
 '        -5.19069375e+04,  1.46882250e+06, -3.20891250e+05,\n'
 '         5.66274500e+05, -2.33040000e+04,  5.83628875e+05,\n'
 '         4.60153031e+05, -6.59494500e+05,  1.60509925e+06,\n'
 '         1.40451312e+05,  1.41112275e+06,  1.32892094e+05,\n'
 '         2.17473675e+06,  1.21721275e+06,  3.40045781e+05,\n'
 '         1.04911450e+06, -9.85994875e+05, -1.95557950e+06,\n'
 '        -1.95523625e+06,  1.49400975e+06,  8.18878812e+05,\n'
 '        -3.18975100e+06, -4.32931594e+05,  4.45664656e+05,\n'
 '        -1.04321819e+06, -6.87881250e+05, -7.70450875e+05,\n'
 '         7.57160812e+05,  3.71704531e+05, -4.20128125e+05,\n'
 '         1.58270212e+06,  8.08360750e+05, -3.64281125e+05,\n'
 '         8.17717562e+05,  3.17931375e+05, -4.81488938e+05,\n'
 '        -1.32203875e+06,  3.50879125e+05,  8.66023000e+05,\n'
 '        -3.56708031e+05, -1.06656650e+06, -4.18055312e+04,\n'
 '         3.20713400e+06, -1.70307500e+04, -2.54930125e+05,\n'
 '        -1.06482788e+06,  2.33345062e+05,  5.92146250e+04,\n'
 '         1.41113812e+05, -4.36313969e+05,  1.35745375e+06,\n'
 '         5.83483000e+05,  8.67710125e+05, -1.03192000e+06,\n'
 '         9.68946625e+05,  1.19632125e+06, -5.38837875e+05,\n'
 '         1.49094200e+06,  5.56952312e+05, -1.85554400e+06,\n'
 '        -2.62067500e+04, -5.26730375e+05, -7.48800000e+03,\n'
 '        -1.60275225e+06, -7.92302500e+04, -9.21917000e+05,\n'
 '        -2.02383375e+05, -1.14925225e+06, -4.78001562e+05,\n'
 '        -4.22786250e+05,  7.01436625e+05, -9.18880625e+05,\n'
 '         1.82011138e+06, -1.30500000e+06, -8.93818750e+03,\n'
 '         1.55864531e+05, -8.94757812e+04, -1.39336375e+05,\n'
 '         2.25124775e+06, -7.74174500e+05, -1.47506688e+06,\n'
 '         1.14160388e+06, -8.97758250e+05,  2.81836550e+06,\n'
 '        -1.31674500e+06,  3.79339625e+05,  1.17461225e+06,\n'
 '        -1.38868188e+05, -4.16169094e+05, -1.38343125e+05,\n'
 '        -6.25468375e+05,  8.12772875e+05, -1.59439562e+05,\n'
 '         1.77132575e+06, -1.18167700e+06, -2.07915312e+04,\n'
 '        -3.31531250e+04,  1.22928812e+06, -3.78198719e+05,\n'
 '         7.78053125e+05, -5.72905625e+04,  7.66784062e+05,\n'
 '        -1.13668200e+06,  4.87062594e+05,  5.21411375e+05,\n'
 '        -4.11703125e+04,  5.77582875e+05, -9.48514000e+05,\n'
 '         1.39206038e+06, -2.97853150e+06,  9.00565500e+05,\n'
 '         7.50250438e+05, -1.08570675e+06,  9.68843562e+05,\n'
 '         1.39566675e+06, -2.53732625e+05, -1.05807475e+06,\n'
 '         1.58688262e+06, -7.96850938e+05,  1.62386438e+05,\n'
 '        -2.06120550e+06,  7.95548188e+05,  3.18411500e+05,\n'
 '         4.01579500e+05,  1.35770075e+06, -3.27472656e+04,\n'
 '        -2.48185188e+05,  1.07468512e+06,  4.08970719e+05,\n'
 '        -1.37668525e+06,  5.33692500e+05,  2.44192300e+06,\n'
 '         1.87791388e+06,  1.84472750e+05,  1.31170962e+06,\n'
 '         3.40261281e+05,  8.31293062e+05, -1.78039938e+05,\n'
 '        -1.27264400e+06,  5.10975000e+03,  1.57210800e+06,\n'
 '        -1.95129062e+05,  1.05643297e+05,  1.23717912e+06,\n'
 '         5.48163062e+05, -1.26791550e+06, -1.51732362e+06,\n'
 '         5.94873062e+05,  1.31402900e+06, -7.26658000e+05,\n'
 '        -1.93551700e+06, -1.09741750e+05,  1.00047175e+06,\n'
 '         3.99645719e+05,  3.00167312e+05, -2.04096900e+06,\n'
 '        -5.22327688e+05,  2.77059500e+05, -1.31893138e+06,\n'
 '         3.22270750e+05,  8.49735250e+05,  3.47893750e+04,\n'
 '         6.69488750e+05,  2.30048062e+05,  2.26217234e+05,\n'
 '        -5.85978125e+04,  4.13735625e+04,  1.47032062e+06,\n'
 '        -1.22004275e+06, -6.69455250e+05, -4.52643688e+05,\n'
 '         1.26339088e+06, -2.36114688e+04, -6.97973688e+05,\n'
 '         1.74543812e+06,  5.79393125e+04, -7.15293438e+05,\n'
 '         1.89674375e+06,  1.49250650e+06,  1.63628950e+06,\n'
 '        -5.97436500e+05, -5.26106875e+04,  8.88575375e+05,\n'
 '         3.87218219e+05, -1.78144275e+06, -1.22437125e+06,\n'
 '         3.61079906e+05,  8.41016625e+05,  1.34863212e+06,\n'
 '         2.09673275e+06, -1.18367400e+06, -1.84410938e+06,\n'
 '        -6.41478000e+05,  7.09923938e+05, -3.49395750e+05,\n'
 '        -8.59739312e+05, -1.20968575e+06, -8.55126438e+05,\n'
 '        -6.57748625e+05,  4.73028156e+05, -2.97067375e+05,\n'
 '         3.05179125e+05,  6.52264500e+05, -5.12070375e+05,\n'
 '        -1.37885600e+06,  8.87505938e+05,  1.06665688e+05,\n'
 '        -9.91080375e+05,  1.27770662e+06, -1.32183781e+05,\n'
 '        -8.67798750e+04,  1.05791175e+06,  9.45794688e+05,\n'
 '         1.44665588e+06, -2.84309688e+04,  8.02265312e+04,\n'
 '        -4.94132188e+05,  2.59989500e+05,  1.90616900e+06,\n'
 '        -8.34789562e+05, -4.26321562e+05, -8.11257500e+05,\n'
 '         2.16695125e+05, -9.84699312e+05,  7.48370500e+05,\n'
 '        -5.52550625e+05,  1.93647844e+05,  2.58898825e+06,\n'
 '         9.31608500e+05,  2.49636188e+05,  1.96827800e+06,\n'
 '         1.20230938e+06,  8.30328562e+05, -3.08818375e+05,\n'
 '        -1.18403000e+05,  8.85713500e+05,  8.99927750e+05,\n'
 '        -1.34777325e+06, -1.46043925e+06, -2.43525797e+05,\n'
 '        -7.86787000e+05, -3.54515875e+05,  1.82052038e+06,\n'
 '         4.08305188e+05, -1.11402050e+06, -5.39978875e+05,\n'
 '        -1.84786125e+06,  1.08799281e+05,  1.85739188e+05,\n'
 '        -5.47810000e+05, -7.78437938e+05, -5.12248062e+05,\n'
 '         5.31370312e+05, -7.60139062e+05, -2.10784906e+05,\n'
 '        -3.97756719e+05,  6.84575000e+03, -1.87917062e+05,\n'
 '         7.17338125e+05,  7.32706562e+05, -2.87533875e+05,\n'
 '         4.08036812e+05, -8.36594000e+05, -7.32204062e+05,\n'
 '         7.52857125e+05,  1.59329062e+05,  1.17967975e+06,\n'
 '         1.43553925e+06, -1.82310391e+05,  9.98307750e+05,\n'
 '         4.10349438e+05, -8.32021312e+05, -2.99584000e+05,\n'
 '        -2.28548875e+05, -1.36921600e+06,  1.22460675e+06,\n'
 '         5.53139875e+05, -7.53300500e+05, -8.53584125e+05,\n'
 '         8.57162750e+05,  7.18360000e+04, -2.15891400e+06,\n'
 '        -1.29731650e+06,  6.71636875e+05, -1.39373462e+06,\n'
 '         1.93249700e+06, -1.22470312e+06, -7.17422250e+05,\n'
 '         7.47600625e+04, -1.04594556e+06,  1.38833612e+06,\n'
 '        -3.58259844e+05,  1.98469203e+05,  8.92313125e+05,\n'
 '         1.07505950e+06, -8.71130938e+05,  1.35537725e+06,\n'
 '         1.60168750e+03, -2.30114500e+06, -1.78956969e+05,\n'
 '        -3.27998469e+05, -2.23010975e+06, -1.18000438e+05,\n'
 '         1.00829744e+06,  1.04344131e+06,  9.41231750e+05,\n'
 '        -6.24390000e+05,  1.13754975e+06, -1.41135625e+06,\n'
 '        -7.52007000e+05, -2.53504781e+05,  9.71466625e+05,\n'
 '         2.35115050e+06,  1.54400838e+06,  1.54756250e+03,\n'
 '        -5.81624375e+04, -9.56812188e+04,  1.26153962e+06,\n'
 '         5.50665000e+05,  7.08519625e+05, -2.99669625e+05,\n'
 '        -6.32453125e+05,  6.20576375e+05, -1.21868338e+06,\n'
 '        -1.06445875e+06, -1.10857775e+06,  8.43788750e+04,\n'
 '         6.67626750e+05, -5.43869688e+04,  6.79537422e+04,\n'
 '        -5.26058375e+05, -6.57100062e+05,  3.15863562e+05,\n'
 '         1.02208638e+06, -7.29198375e+05, -3.26301250e+04,\n'
 '         3.27110750e+05,  1.28662525e+06,  6.06702812e+04,\n'
 '        -1.78247588e+06, -2.12234844e+05,  1.83110188e+06,\n'
 '         1.07911125e+06,  5.22002719e+05, -8.28827500e+05,\n'
 '         1.74020500e+06,  8.95738000e+05, -6.12427500e+05,\n'
 '         4.10295312e+04, -4.62254906e+05,  1.03312462e+06,\n'
 '         1.15979325e+06,  1.65681250e+04, -1.41423938e+06,\n'
 '         5.80118750e+05, -1.54437200e+06, -3.25417688e+05,\n'
 '        -4.70756625e+05, -2.91541812e+05,  9.03076750e+05,\n'
 '         1.82740688e+05, -6.76898625e+05, -5.15472188e+05,\n'
 '        -5.42416562e+05,  1.05553250e+06,  6.97875812e+05,\n'
 '         4.86243531e+05, -1.19078062e+05,  2.05985850e+06,\n'
 '        -4.75549000e+05, -2.67350312e+05, -1.43762594e+05,\n'
 '         1.35840750e+06,  7.35616438e+05, -1.24828038e+06,\n'
 '        -1.32637500e+06,  9.35031250e+05, -1.98310312e+05,\n'
 '         2.11763312e+05,  1.63197625e+06,  1.57032219e+05,\n'
 '         2.32056850e+06, -6.65781000e+05, -4.39392781e+05,\n'
 '        -1.93674000e+06, -4.61407031e+05,  3.74170875e+05,\n'
 '        -2.06339875e+05,  1.96456412e+06, -2.89899125e+05,\n'
 '        -8.63269688e+05, -4.49364250e+05,  7.68938688e+05,\n'
 '        -1.57966609e+05,  6.60480812e+05,  8.66797500e+05,\n'
 '         1.44118525e+06, -1.09459450e+06, -1.77069338e+06,\n'
 '         1.44020588e+06, -1.51813050e+06,  1.27876200e+06,\n'
 '         1.73379975e+06, -7.00896312e+05,  5.20312312e+05,\n'
 '        -6.39919375e+05,  4.08396938e+05, -1.20379775e+06,\n'
 '        -5.18404250e+05,  3.80097656e+05, -2.36723344e+05,\n'
 '         3.06181750e+06,  3.59012812e+04,  1.57011062e+05,\n'
 '         1.85334562e+05, -1.63957450e+06, -2.53081950e+06,\n'
 '        -1.65602575e+06, -2.20587562e+05,  1.29221775e+06,\n'
 '        -5.53234250e+05, -3.11219125e+05, -1.30038725e+06,\n'
 '        -1.28978938e+06, -2.15987375e+06, -3.44673938e+05,\n'
 '         7.94263438e+05, -9.69963125e+05,  9.82967625e+05,\n'
 '        -2.27019938e+05,  1.01397650e+06,  1.08227862e+06,\n'
 '         1.04339156e+06,  6.80661250e+05, -8.66543125e+05,\n'
 '         1.13555262e+06,  2.92470875e+05, -2.83152656e+05,\n'
 '        -2.11512500e+05,  3.70749375e+05,  6.29359375e+05,\n'
 '         1.30924212e+06, -3.78412594e+05, -3.53741688e+05,\n'
 '         1.35505525e+06, -1.47006125e+06,  8.59119875e+05,\n'
 '        -8.11306688e+05, -8.09370000e+05,  1.51292000e+06,\n'
 '        -5.90807188e+04, -4.33485500e+05,  1.38955516e+05,\n'
 '         6.62814312e+05,  4.06078781e+05, -8.03540562e+05,\n'
 '         2.33249500e+06, -1.04090781e+06, -8.11480625e+05,\n'
 '        -8.76620000e+04, -8.10280500e+05,  7.95012500e+05,\n'
 '         7.25664188e+05,  1.23424362e+06,  5.81630000e+05,\n'
 '         1.30997450e+06, -5.71897438e+05,  4.70769438e+05,\n'
 '         7.96658562e+05, -1.44683238e+06, -8.50505438e+05,\n'
 '         2.89633575e+06,  1.69897975e+06, -2.93769438e+05,\n'
 '        -1.99298075e+06,  1.19463688e+06, -3.30923969e+05,\n'
 '        -4.33304781e+05, -1.26033625e+06,  5.19199969e+05,\n'
 '         1.54805000e+05,  3.80037125e+05, -3.61723062e+05,\n'
 '        -5.31732250e+05, -1.23720656e+05, -1.32603950e+06,\n'
 '         2.20878188e+05, -1.83831588e+06,  3.11891750e+05,\n'
 '        -8.57521375e+05, -8.94897938e+05, -3.06440219e+05,\n'
 '        -6.37993500e+05, -1.66501828e+05, -5.89486562e+05,\n'
 '         1.99478525e+06,  1.98608750e+05, -1.75809050e+06,\n'
 '        -7.01103688e+05, -8.82185500e+05, -2.09063031e+05,\n'
 '         4.24046562e+05, -1.15619453e+05, -2.10831250e+03,\n'
 '        -1.08747788e+06, -5.61470500e+05,  8.14396500e+05,\n'
 '         1.20739125e+06, -1.34782750e+05,  3.20680562e+05,\n'
 '        -1.55701312e+06,  4.71415188e+05,  1.23977188e+05,\n'
 '        -1.23176650e+06,  9.73639500e+05, -3.60282938e+05,\n'
 '        -4.60866875e+05,  4.99889125e+05, -1.88087312e+05,\n'
 '         3.24344000e+05, -5.04830375e+05,  9.31838250e+05,\n'
 '        -3.63805625e+04, -7.48120625e+05,  8.32112125e+05,\n'
 '        -2.35745000e+05,  3.20946781e+05,  7.79264875e+05,\n'
 '         1.47853850e+06,  9.32893500e+05,  3.92457812e+05,\n'
 '        -1.63750344e+05,  1.44694550e+06, -2.62324562e+05,\n'
 '        -5.21438125e+05,  8.99350250e+05, -4.76408844e+05,\n'
 '         3.35531781e+05,  5.75406125e+05,  6.34276188e+05,\n'
 '         1.70057938e+05, -1.55635038e+06,  4.02229688e+05,\n'
 '         9.19337312e+05,  4.81371875e+03,  4.10393312e+05,\n'
 '         8.89592688e+05,  6.92767625e+05, -5.56234250e+05,\n'
 '         5.86573750e+04, -3.06229000e+05,  1.74394781e+05,\n'
 '         1.83319406e+05,  2.03084150e+06, -6.74702250e+05,\n'
 '         6.19036000e+05, -6.34478875e+05, -7.69237750e+05,\n'
 '         1.54924800e+06,  3.74562156e+05, -6.10678375e+05,\n'
 '        -1.83865738e+06,  3.11559188e+05, -1.09064638e+06,\n'
 '        -2.17881594e+05,  1.87352525e+06, -1.01628488e+06,\n'
 '        -2.36056719e+05,  3.26945600e+06, -1.35835538e+06,\n'
 '         1.49457500e+05, -1.48787450e+06, -2.06977025e+06,\n'
 '        -4.80383562e+05, -9.85396438e+05,  2.69128281e+05,\n'
 '        -8.03061875e+04,  9.31009000e+05,  3.05878312e+05,\n'
 '         1.70762825e+06,  2.32661950e+06,  3.90886281e+05,\n'
 '         5.65721438e+05, -4.23868562e+05,  1.74899750e+05,\n'
 '        -4.28342500e+05, -8.31379812e+05, -6.62441312e+05,\n'
 '         3.16115812e+05, -1.36853594e+05, -2.08665312e+05,\n'
 '         1.38547450e+06,  2.91614812e+05,  9.62439375e+05,\n'
 '        -2.92497925e+06, -3.11552625e+05, -1.69665775e+06,\n'
 '         3.80785531e+05,  3.28846812e+05, -1.78289375e+05,\n'
 '         6.74581562e+05,  8.82993062e+05,  1.68838588e+06,\n'
 '        -5.29994500e+05, -4.63684625e+05, -1.85299412e+06,\n'
 '        -1.17798025e+06, -4.34546250e+04, -2.55231850e+06,\n'
 '        -1.47248750e+06,  5.83396250e+05,  1.31566750e+05,\n'
 '         1.86190938e+05, -2.35015281e+05,  7.50887000e+05,\n'
 '        -1.36784812e+06, -8.30593125e+04, -1.56983088e+06,\n'
 '        -6.05809375e+04, -8.89420000e+04, -1.69344562e+05,\n'
 '         1.56145350e+06,  6.79776875e+05,  1.18805875e+06,\n'
 '        -5.90393875e+05,  9.90777875e+05,  4.94360844e+05,\n'
 '        -2.14522938e+05,  1.13279412e+06, -1.79508375e+05,\n'
 '         5.50035500e+05, -9.22873375e+05, -1.73613212e+06,\n'
 '        -7.18331062e+05, -2.14856562e+04, -2.07441812e+05,\n'
 '        -1.05496844e+05,  8.76812500e+05,  1.41608750e+06,\n'
 '        -1.67456125e+05, -1.57104150e+06, -1.80620725e+06,\n'
 '        -9.54113750e+04,  1.51862050e+06,  6.92462875e+05,\n'
 '         7.94477625e+05,  2.23711350e+06,  8.61403250e+05,\n'
 '        -1.72456938e+05,  4.82670531e+05, -1.51255188e+05,\n'
 '         1.40234275e+06,  9.26745938e+05,  4.11734656e+05,\n'
 '         3.37457062e+05, -1.73582375e+05, -2.31095000e+04,\n'
 '         1.14317750e+05, -2.34748906e+05, -1.15408538e+06,\n'
 '        -1.01113375e+05,  1.52332950e+06,  1.28561550e+06,\n'
 '         2.38682500e+06,  6.73805562e+05,  1.95959844e+05,\n'
 '        -7.88920312e+05, -9.56988000e+05,  4.89297344e+05,\n'
 '        -1.73143875e+05,  8.23868375e+05, -1.64844988e+06,\n'
 '        -1.60803250e+05, -4.93502125e+05, -1.66554925e+06,\n'
 '        -3.16333625e+05, -1.09334275e+06, -7.60603500e+05,\n'
 '         5.95412500e+04,  3.83882188e+05, -4.96507219e+05,\n'
 '         1.42462000e+06,  8.48174125e+05, -5.79806375e+05,\n'
 '         2.99994062e+05,  5.43752000e+05,  4.99085000e+04,\n'
 '        -4.96502125e+05, -1.75471938e+06, -1.77383031e+05,\n'
 '         4.53039625e+05, -1.07760781e+05, -7.36316875e+04,\n'
 '         1.08752850e+06, -7.95770000e+05,  1.51587700e+06,\n'
 '         4.11489062e+05,  1.00778038e+06,  1.00715325e+06,\n'
 '         6.85409375e+04,  7.91278750e+04,  2.40366625e+05,\n'
 '         9.49148750e+05, -9.67227562e+05, -2.12816150e+06,\n'
 '        -6.47255250e+05, -1.41812675e+06, -4.47147188e+05,\n'
 '         1.21048450e+06,  1.03982750e+06,  4.29536969e+05,\n'
 '         8.83421250e+05, -3.04991531e+05,  4.47133938e+05,\n'
 '        -8.70811250e+04, -9.25099312e+05, -3.79136725e+06,\n'
 '         1.77652781e+05,  2.57950047e+05,  1.18726925e+06,\n'
 '         1.00933088e+06, -1.75760125e+05, -4.79138438e+05,\n'
 '        -1.70119125e+06,  2.43631250e+05,  1.53467738e+06,\n'
 '        -5.07532344e+05,  1.33930025e+06, -1.48339688e+04,\n'
 '         3.53536469e+05,  9.13556875e+05,  1.06191562e+04,\n'
 '         8.35733375e+05,  2.20597156e+05, -1.96660675e+06,\n'
 '        -2.13691875e+04, -1.20876675e+06,  5.96608375e+05,\n'
 '        -4.30931875e+05, -8.18592562e+05, -1.71656312e+05,\n'
 '         1.33187812e+06, -1.07117055e+05, -8.53784875e+05,\n'
 '        -1.06447662e+06, -2.52561000e+05,  1.82024925e+06,\n'
 '         2.92871562e+05, -5.05201250e+04, -4.78756750e+05,\n'
 '         1.52992638e+06,  3.07894062e+04,  8.25947938e+05,\n'
 '        -3.06102625e+06, -5.28747875e+05,  4.06957125e+05,\n'
 '         3.97778531e+05, -4.05207062e+05,  8.73368000e+05,\n'
 '         1.15850488e+06, -1.78272406e+05, -1.11590625e+05,\n'
 '        -5.72307812e+05, -8.60217188e+05,  1.25336738e+06,\n'
 '         1.25869912e+06, -1.90631925e+06,  1.99208188e+05,\n'
 '        -1.57179612e+06, -8.00319000e+05,  1.17962325e+06,\n'
 '        -3.19887219e+05,  1.62997812e+06, -1.12532888e+06,\n'
 '         2.48598650e+06, -6.21133250e+05, -1.69030612e+06,\n'
 '        -2.79113750e+05, -2.00153950e+06, -3.01583125e+04,\n'
 '         7.19315750e+05,  1.12925000e+05, -1.90335750e+05,\n'
 '        -4.00994312e+05, -1.21055312e+06,  1.68513600e+06,\n'
 '        -4.83150031e+05, -6.02772750e+05, -6.51662500e+03,\n'
 '         4.44591312e+05,  3.71706281e+05,  1.45669688e+06,\n'
 '         6.89243594e+04, -3.45390062e+05, -1.52163875e+06,\n'
 '        -9.18330062e+05, -1.70107688e+06,  6.74862125e+05,\n'
 '        -1.24502275e+06,  1.02826362e+06,  6.89781812e+05,\n'
 '        -5.41549375e+05,  2.00910775e+06, -4.16858188e+05,\n'
 '        -1.99971825e+06,  1.90319400e+06, -4.55386594e+05,\n'
 '        -1.83659838e+06,  2.59777850e+06, -5.29964688e+04,\n'
 '         3.11127719e+05,  9.74827812e+05, -1.96298969e+05,\n'
 '         1.10587775e+06, -1.67016562e+06,  3.05440825e+06,\n'
 '        -5.44006375e+05,  4.95911750e+05,  1.54700362e+06,\n'
 '        -7.31965812e+05, -9.62481812e+05,  4.90321469e+05,\n'
 '        -2.14552000e+06,  6.08645438e+05,  6.37303125e+05,\n'
 '         2.15905350e+06,  2.55742225e+06, -1.66882988e+06,\n'
 '         8.43797375e+05,  1.68496288e+06, -2.65019800e+06,\n'
 '        -3.30508500e+05,  4.00604812e+05, -2.04175812e+06,\n'
 '         2.52528688e+05, -7.21848125e+05, -1.90657550e+06,\n'
 '        -6.69925000e+04,  9.90537312e+05,  1.35741550e+06,\n'
 '         1.59730328e+05,  9.79889812e+05, -2.03506688e+06,\n'
 '        -5.54609000e+05, -6.65398438e+04,  1.78737438e+05,\n'
 '        -1.70656400e+06,  7.40013438e+05, -9.58378625e+05,\n'
 '        -4.60309375e+04, -7.33410000e+04,  9.97127125e+05,\n'
 '        -1.03731425e+06, -5.61499188e+05,  1.79241453e+05,\n'
 '        -4.48848312e+05,  1.26019844e+04, -2.82054125e+05,\n'
 '        -1.33464362e+06, -6.84384375e+05,  1.31699438e+05,\n'
 '        -1.43551875e+06,  9.49904938e+05,  1.89479250e+06,\n'
 '        -1.26007375e+06, -4.21317500e+04, -3.69240406e+05,\n'
 '         3.90023125e+04,  4.52928312e+05,  9.38086375e+05,\n'
 '         3.56686531e+05,  9.23021562e+05,  1.80903075e+06,\n'
 '        -9.83099625e+05, -6.86342500e+04,  4.93593688e+05,\n'
 '        -2.09218953e+05,  1.21457112e+06, -1.38504375e+05,\n'
 '        -4.49591375e+05, -7.87401250e+04, -6.98511250e+05,\n'
 '         7.58457125e+05,  1.09034462e+06, -4.58652938e+05,\n'
 '         1.05673950e+06, -2.12846200e+06,  4.99983406e+05,\n'
 '        -7.69411125e+05, -1.86293000e+05,  6.75538250e+05,\n'
 '         2.00357225e+06, -2.29194188e+05,  1.25162875e+06,\n'
 '        -9.76059000e+05, -7.62021625e+05,  7.43469062e+04,\n'
 '         9.19539000e+05, -1.66831000e+06,  7.80238125e+05,\n'
 '         3.31824844e+05, -8.28641062e+05,  9.86326875e+05,\n'
 '         4.32372281e+05, -1.45309300e+06,  1.44508338e+06,\n'
 '        -3.05740438e+05, -1.06466250e+04,  4.34269875e+05,\n'
 '         2.89577812e+05, -4.19536375e+05,  8.90665625e+03,\n'
 '        -9.61180469e+04, -4.86727125e+05,  4.81519281e+05,\n'
 '        -3.95211000e+05,  1.10960000e+06,  1.77922688e+05,\n'
 '         3.69479688e+04, -1.04588612e+06,  1.23895250e+06,\n'
 '         2.27307000e+06,  3.17993844e+05,  3.71920250e+05,\n'
 '         1.99087125e+05, -1.33014362e+06, -4.72756719e+05,\n'
 '         1.04344700e+06,  1.42493350e+06,  6.06290000e+05,\n'
 '         1.05421325e+06,  1.12055525e+06,  1.69501312e+06,\n'
 '         2.57224062e+04,  6.42980812e+05, -3.83777812e+05,\n'
 '        -8.77486500e+05,  9.78543562e+05,  7.95317562e+05,\n'
 '        -6.32481250e+05, -2.68864725e+06, -1.40693412e+06,\n'
 '         2.28728734e+05, -1.77807156e+05,  1.17067325e+06,\n'
 '         5.40890938e+04,  1.65171438e+05,  1.52886312e+06,\n'
 '        -6.23514250e+05, -1.43278375e+05,  1.93254875e+05,\n'
 '        -5.69023812e+05, -1.31912338e+06,  6.67757875e+05,\n'
 '         2.27380938e+04, -9.78219812e+05,  1.60820462e+06,\n'
 '        -1.00551331e+06,  7.35721875e+04, -1.79711725e+06,\n'
 '        -2.02886975e+06, -1.11386412e+06, -5.85887625e+05,\n'
 '        -1.84168288e+06, -1.08124250e+06, -5.21237375e+05,\n'
 '         1.73317138e+06,  4.64381000e+05, -9.66759875e+05,\n'
 '        -3.48607188e+05, -1.43892500e+06, -6.06797188e+05,\n'
 '         1.00357750e+05,  2.28139000e+05, -8.38387375e+05,\n'
 '        -1.55051462e+06,  5.50808125e+04, -5.17467312e+05,\n'
 '         1.59823425e+06, -1.58382625e+06, -2.61125406e+05,\n'
 '        -7.00969375e+05,  1.09454838e+06, -1.63941953e+05,\n'
 '         7.40218125e+04, -3.00436000e+05, -7.88574500e+05,\n'
 '         4.17191562e+05,  4.33815750e+05, -1.45977575e+06,\n'
 '         5.82016750e+05, -2.52166875e+05,  2.07163000e+06,\n'
 '         1.01639725e+06,  2.25855100e+06,  2.20469250e+05,\n'
 '        -1.80096175e+06]])')
'test_inceptionnet | batch_shape is: [1]'
'test_inceptionnet | logits.shape is: ivy.Shape(1, 1000)'
'||'
'test_inceptionnet | device is: cpu'
'test_inceptionnet | fw is: torch'
'test_inceptionnet | load_weights is: True'
'InceptionV3 | build | layer 1/22 built'
'InceptionV3 | build | layer 2/22 built'
'layer 3/22 built'
'InceptionV3 | build | layer 4/22 built'
'InceptionV3 | build | layer 5/22 built'
'InceptionV3 | build | layer 6/22 built'
'InceptionV3 | build | layer 7/22 built'
'InceptionV3 | build | layer 8/22 built'
'InceptionV3 | build | layer 9/22 built'
'InceptionV3 | build | layer 10/22 built'
'InceptionV3 | build | layer 11/22 built'
'InceptionV3 | build | layer 12/22 built'
'InceptionV3 | build | layer 13/22 built'
'InceptionV3 | build | layer 14/22 built'
'InceptionV3 | build | layer 15/22 built'
'InceptionV3 | build | layer 17/22 built'
'InceptionV3 | build | layer 18/22 built'
'InceptionV3 | build | layer 19/22 built'
'InceptionV3 | build | layer 20/22 built'
'InceptionV3 | build | layer 21/22 built'
'InceptionV3 | build | layer 22/22 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/7 built'
'layer 2/7 built'
'layer 3/7 built'
'layer 4/7 built'
'layer 5/7 built'
'layer 6/7 built'
'layer 7/7 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/4 built'
'layer 2/4 built'
'layer 3/4 built'
'layer 4/4 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/10 built'
'layer 2/10 built'
'layer 3/10 built'
'layer 4/10 built'
'layer 5/10 built'
'layer 6/10 built'
'layer 7/10 built'
'layer 8/10 built'
'layer 9/10 built'
'layer 10/10 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'layer 1/6 built'
'layer 2/6 built'
'layer 3/6 built'
'layer 4/6 built'
'layer 5/6 built'
'layer 6/6 built'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 0/2'
'BasicConv2d | build | done 2/2'
'BasicConv2d | build | done 2/2'
'inceptionNet_v3 | building InceptionV3 model | done 1/3'
'inceptionNet_v3 | clearning pretrained weights | done 2/3'
'inceptionNet_v3 | loading pretrained weights | done 3/3'
'InceptionV3 | forward | input shape is:(1, 224, 224, 3) | done 1/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 224, 224, 3) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 111, 111, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 111, 111, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 111, 111, 32) | done 2/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 111, 111, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 32) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 32) | done 3/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 109, 109, 32) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 109, 109, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 109, 109, 64) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 109, 109, 64) | done 4/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 54, 54, 64) | done 5/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 54, 54, 80) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 54, 54, 80) | done 3/3'
'InceptionV3 | forward | is:ivy.Shape(1, 54, 54, 80) | done 6/27'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 54, 54, 80) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 52, 52, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 52, 52, 192) | done 3/3'
'InceptionV3 | forward | shape is:ivy.Shape(1, 52, 52, 192) | done 7/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 192) | done 8/27'
'input shape is:ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 32) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 32) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 32)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 25, 25, 256) | done 9/27'
'input shape is:ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 256)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 256) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 10/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch1x1 1/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 48) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 48) | done 3/3'
'InceptionA | one 2/20, output shape is: ivy.Shape(1, 25, 25, 48)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 48) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch5x5_1 3/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | one 4/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | one 5/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'InceptionA | branch3x3dbl_1 6/20, output shape is: ivy.Shape(1, 25, 25, 96)'
'InceptionA | one 7/20, output shape is: ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'InceptionA | branch_pool 8/20, output shape is: ivy.Shape(1, 25, 25, 64)'
'InceptionA | outputs 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 25, 25, 288) | done 11/27'
'input shape is:ivy.Shape(1, 25, 25, 288)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 384) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 288) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 64) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 64) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 25, 25, 64)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 64) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 25, 25, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 25, 25, 96) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 25, 25, 96)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 25, 25, 96) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 96) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 96) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 96)'
'one 20/20, output shape is:ivy.Shape(1, 12, 12, 288)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 12/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 128) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 128) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 128)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 128) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward |shape is:ivy.Shape(1, 12, 12, 768) | done 13/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 14/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 160) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 160) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 160)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 160) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 15/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 7/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 8/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 9/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 10/20, output shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 11/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 12, 12, 768) | done 16/27'
'input shape is:ivy.Shape(1, 12, 12, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 1/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'one 2/20, output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 768) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 3/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 4/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 12, 12, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 12, 12, 192) | done 3/3'
'one 5/20, output shape is:ivy.Shape(1, 12, 12, 192)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 12, 12, 192) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'one 6/20, output shape is:ivy.Shape(1, 5, 5, 192)'
'one 7/20, output shape is:ivy.Shape(1, 5, 5, 768)'
'one 20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 1280) | done 17/27'
'input shape is:ivy.Shape(1, 5, 5, 1280)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 1280) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 18/27'
'input shape is:ivy.Shape(1, 5, 5, 2048)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 320) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 320) | done 3/3'
'1/20, branch1x1 output shape is:ivy.Shape(1, 5, 5, 320)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'2/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'3/20, branch3x3 output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 448) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 448) | done 3/3'
'4/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 448)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 448) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'5/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 384)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 384) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 384) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 384) | done 3/3'
'6/20, branch3x3dbl output shape is:ivy.Shape(1, 5, 5, 768)'
'BasicConv2d | forward | input shape is: ivy.Shape(1, 5, 5, 2048) | done 0/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 1/3'
'BasicConv2d | forward | shape is: ivy.Shape(1, 5, 5, 192) | done 2/3'
'BasicConv2d | forward | output shape is: ivy.Shape(1, 5, 5, 192) | done 3/3'
'7/20, branch_pool output shape is:ivy.Shape(1, 5, 5, 192)'
'20/20'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 19/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 5, 5, 2048) | done 20/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 5, 5) | done 21/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048, 1, 1) | done 22/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 27/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 24/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 1, 1, 2048) | done 25/27'
'InceptionV3 | forward | shape is:ivy.Shape(1, 2048) | done 26/27'
'InceptionV3 | forward | fc | done 27/27'
('test_inceptionnet | logits is: ivy.array([[ 1.89221942e+00, -9.34305787e-01, '
 '-5.06619871e-01,\n'
 '         2.73170710e+00, -4.16227162e-01, -1.16683471e+00,\n'
 '         2.34689570e+00, -1.13461256e+00,  1.69668615e-01,\n'
 '        -1.35532975e+00, -1.65294409e+00,  1.18935382e+00,\n'
 '         2.69755006e-01, -4.53601897e-01,  2.47658539e+00,\n'
 '        -2.28962094e-01, -4.03631926e-01,  5.18320441e-01,\n'
 '        -8.97264600e-01,  1.77833891e+00,  1.95676756e+00,\n'
 '        -2.75402546e+00,  2.43714064e-01, -3.86733085e-01,\n'
 '         1.17929876e+00, -7.13459104e-02, -2.42664504e+00,\n'
 '        -1.17881441e+00, -1.36063719e+00, -1.52595151e+00,\n'
 '         1.80450141e-01,  2.32107616e+00,  3.21207911e-01,\n'
 '        -2.14058787e-01,  1.08106959e+00, -1.73796785e+00,\n'
 '         1.52218938e-02, -2.03752899e+00, -3.87157261e-01,\n'
 '         8.24967027e-01,  1.29216659e+00,  4.56456453e-01,\n'
 '        -1.55020380e+00,  6.23106360e-01, -1.69273078e+00,\n'
 '        -5.90475440e-01, -3.03840727e-01,  3.31593096e-01,\n'
 '        -2.07129002e+00, -4.95271564e-01, -1.08020055e+00,\n'
 '         7.00967550e-01,  3.19148004e-01, -1.09361327e+00,\n'
 '        -2.25629926e-01,  6.37064576e-01, -1.10354924e+00,\n'
 '        -1.33582318e+00,  1.62950587e+00, -1.15085101e+00,\n'
 '         2.33136630e+00,  2.94304466e+00, -1.66664052e+00,\n'
 '        -1.22282195e+00,  2.45156407e-01, -2.39131123e-01,\n'
 '        -1.21724045e+00,  1.68665659e+00,  1.47470117e+00,\n'
 '         5.98616123e-01, -8.90633583e-01,  6.04692340e-01,\n'
 '        -1.77737510e+00, -1.10574663e+00, -1.14735758e+00,\n'
 '        -7.35699892e-01,  2.28611469e-01,  1.20954073e+00,\n'
 '        -5.60621083e-01,  1.93904471e+00, -1.30678952e+00,\n'
 '         1.20534134e+00,  3.38644355e-01,  3.61346006e-01,\n'
 '         2.57887340e+00, -8.12485755e-01, -1.28690815e+00,\n'
 '         1.02314722e+00,  2.01005149e+00,  2.33242345e+00,\n'
 '         5.15850544e-01,  1.14701390e+00, -3.28776240e-02,\n'
 '         1.98360801e+00, -2.47842953e-01,  1.99516714e-01,\n'
 '         1.31873333e+00,  6.58508658e-01, -2.31604886e+00,\n'
 '         1.88774693e+00,  3.75582480e+00,  1.10205062e-01,\n'
 '        -1.42313778e-01, -1.91996202e-01,  1.96937347e+00,\n'
 '        -1.29335153e+00, -1.19506323e+00,  9.28768396e-01,\n'
 '         2.26534724e+00,  3.76304078e+00, -5.66358388e-01,\n'
 '        -1.26362622e-01,  2.08823562e+00,  3.81453037e+00,\n'
 '        -7.14904517e-02, -1.94751072e+00, -7.39990711e-01,\n'
 '         1.39919651e+00, -2.29504252e+00, -2.65192330e-01,\n'
 '        -1.79928875e+00, -2.44978857e+00, -9.14046288e-01,\n'
 '        -1.24811363e+00, -2.49060345e+00, -1.62336564e+00,\n'
 '        -1.99774826e+00,  1.29268026e+00,  3.04144412e-01,\n'
 '         8.06687325e-02,  8.58853877e-01,  3.42331260e-01,\n'
 '         1.21535420e+00, -1.51111531e+00,  1.20875865e-01,\n'
 '         2.09482122e+00, -1.09178698e+00, -1.60309464e-01,\n'
 '        -1.16231227e+00, -1.25315905e+00,  3.09019685e-02,\n'
 '         7.51721859e-01, -1.35015261e+00, -2.90617943e-01,\n'
 '         3.01020575e+00,  1.09451353e+00,  4.37738955e-01,\n'
 '         8.05858433e-01,  9.48578894e-01,  1.08839917e+00,\n'
 '        -1.45857602e-01, -2.13315988e+00,  2.77597785e+00,\n'
 '        -2.46436453e+00, -7.99542189e-01, -4.29354668e+00,\n'
 '        -5.78542113e-01,  4.71034622e+00, -3.72738063e-01,\n'
 '        -2.65589237e+00, -3.15692246e-01, -3.00256634e+00,\n'
 '        -1.62715626e+00, -1.33184701e-01, -3.67108226e-01,\n'
 '        -8.67273748e-01,  9.32812691e-06,  8.10626507e-01,\n'
 '        -3.52521563e+00,  1.23705888e+00,  9.61077869e-01,\n'
 '         2.06389189e-01, -8.51212621e-01, -1.14732039e+00,\n'
 '        -7.40034521e-01, -2.47259283e+00, -2.69550729e+00,\n'
 '         3.64966422e-01, -7.78777003e-02,  6.34008467e-01,\n'
 '        -5.26180625e-01,  6.64578676e-01, -3.20045161e+00,\n'
 '         6.28165901e-01, -1.51165867e+00,  1.04870117e+00,\n'
 '         2.07717371e+00, -1.02558327e+00, -2.36322299e-01,\n'
 '        -2.84869409e+00, -1.51606649e-01, -7.90151477e-01,\n'
 '        -4.99140561e-01, -3.45955038e+00, -2.58684492e+00,\n'
 '        -1.89974234e-02, -2.04877853e+00,  4.74475056e-01,\n'
 '        -3.70289087e-01,  1.35054600e+00, -1.62912107e+00,\n'
 '        -4.17081261e+00, -2.21338701e+00,  6.01122665e+00,\n'
 '        -4.20284653e+00, -1.70553946e+00, -2.83615589e-02,\n'
 '        -1.14679193e+00, -2.45062280e+00, -1.97914839e+00,\n'
 '         1.56118727e+00, -3.25194812e+00, -1.26436365e+00,\n'
 '         5.24369419e-01,  1.38679040e+00, -1.18525875e+00,\n'
 '         5.79293966e-01, -8.59159827e-01, -1.04634345e-01,\n'
 '        -5.53200340e+00,  2.55811363e-01,  1.82362866e+00,\n'
 '         2.13248229e+00,  3.00440073e+00,  5.63362360e+00,\n'
 '        -9.38067138e-01,  8.97390008e-01, -4.74406195e+00,\n'
 '         9.50332284e-01, -2.84183979e-01,  1.32397938e+00,\n'
 '         2.49532151e+00,  1.94106329e+00,  2.54873347e+00,\n'
 '        -1.18016720e+00,  8.13688219e-01, -2.65585005e-01,\n'
 '        -2.24478459e+00, -1.10526407e+00, -6.45168662e-01,\n'
 '         3.78860861e-01,  5.93505025e-01,  6.00019217e-01,\n'
 '        -3.37247252e-01, -2.42035484e+00, -5.69255710e-01,\n'
 '         1.23570514e+00,  1.14715385e+00,  8.49908638e+00,\n'
 '         4.96097660e+00,  3.78483486e+00,  1.44144249e+00,\n'
 '         4.57108587e-01, -1.15281653e+00, -1.43720901e+00,\n'
 '         1.42674720e+00,  2.24308205e+00,  6.29496002e+00,\n'
 '         1.86417618e+01,  6.59271717e+00,  4.75951338e+00,\n'
 '         6.46528387e+00, -1.59559846e+00, -1.42779422e+00,\n'
 '        -3.35510462e-01, -4.24425542e-01, -1.13638258e+00,\n'
 '         1.12945294e+00, -8.07861566e-01,  1.98570263e+00,\n'
 '         1.18041220e+01, -2.62548351e+00, -1.52735448e+00,\n'
 '        -1.89891994e-01, -1.24664402e+00, -1.59361219e+00,\n'
 '        -2.97012895e-01,  1.47027469e+00, -2.20839548e+00,\n'
 '         1.13858452e+01,  7.48183072e-01, -7.65527844e-01,\n'
 '         3.86306673e-01,  4.14292574e+00, -2.42993736e+00,\n'
 '        -1.55444801e+00, -4.87723351e+00,  1.97506249e-01,\n'
 '         5.70078731e-01,  1.35797429e+00, -1.28792751e+00,\n'
 '        -2.34505033e+00,  8.63481820e-01, -1.67928672e+00,\n'
 '        -8.34373832e-01, -2.14745045e+00,  3.73958969e+00,\n'
 '         7.75022984e-01, -2.00949788e+00, -1.70228374e+00,\n'
 '        -7.51872420e-01,  8.40954900e-01,  1.56784737e+00,\n'
 '         4.96100455e-01,  6.76750302e-01,  3.41387630e-01,\n'
 '         2.03487825e+00,  1.23920465e+00,  1.83850989e-01,\n'
 '         1.23650730e+00, -1.77756035e+00, -8.86723936e-01,\n'
 '         1.27820104e-01, -1.17455220e+00,  1.17728937e+00,\n'
 '        -1.18735313e+00,  4.03194010e-01,  2.78820813e-01,\n'
 '        -6.80734277e-01,  2.66770452e-01,  4.87517208e-01,\n'
 '         7.15649128e-01,  8.51712525e-01,  8.08752894e-01,\n'
 '        -1.63816440e+00,  1.51919055e+00,  2.03094029e+00,\n'
 '         4.63372052e-01,  1.35341871e+00, -7.35133707e-01,\n'
 '        -2.23945570e+00,  1.59812939e+00,  3.05880213e+00,\n'
 '         1.36548072e-01, -1.69965669e-01, -2.63777733e+00,\n'
 '        -3.67301273e+00,  9.22184050e-01,  1.95369291e+00,\n'
 '        -1.80012023e+00,  7.37335861e-01,  3.39217067e-01,\n'
 '        -1.08052039e+00,  6.46879822e-02, -6.82436153e-02,\n'
 '        -1.29254651e+00,  3.54560047e-01,  1.35677719e+00,\n'
 '         1.47642946e+00, -6.35725558e-01, -2.20779944e+00,\n'
 '        -1.22111297e+00,  2.13302732e-01,  2.50487161e+00,\n'
 '        -4.73322690e-01,  3.24644613e+00,  1.67393696e+00,\n'
 '        -2.05584154e-01,  1.25602317e+00,  4.79263902e-01,\n'
 '        -1.74107361e+00,  8.80913660e-02, -1.17020357e+00,\n'
 '         4.25103724e-01, -1.10317826e+00, -3.39915705e+00,\n'
 '        -2.10482383e+00, -2.60390115e+00, -5.81001461e-01,\n'
 '        -2.61786008e+00, -1.41908735e-01, -2.16349101e+00,\n'
 '        -2.31780624e+00, -1.68434548e+00,  6.35949016e-01,\n'
 '        -2.55405283e+00, -1.22940922e+00, -2.50466973e-01,\n'
 '         1.30578026e-01, -2.35635376e+00,  9.39014196e-01,\n'
 '        -1.28090262e+00, -2.75685132e-01,  3.18646014e-01,\n'
 '        -5.02553344e-01, -7.24735782e-02, -1.91146541e+00,\n'
 '         4.74349201e-01, -5.14463723e-01, -8.03075731e-01,\n'
 '        -7.55912244e-01,  2.29006481e+00,  1.50117636e+00,\n'
 '         2.27519894e+00,  3.36242646e-01,  4.88337785e-01,\n'
 '         1.99051857e+00, -6.79288447e-01, -1.71442121e-01,\n'
 '         2.45697999e+00,  4.22876775e-01, -6.81355953e-01,\n'
 '         7.83721328e-01, -1.16241276e-02,  1.04436517e+00,\n'
 '        -3.32368404e-01,  5.82449436e-01,  4.82223064e-01,\n'
 '         1.86058688e+00, -3.27562046e+00,  5.53215265e-01,\n'
 '        -1.08053660e+00, -8.89355063e-01,  1.72695219e-01,\n'
 '         4.00467753e-01, -2.03130937e+00, -9.37611997e-01,\n'
 '         1.35911018e-01, -2.44383907e+00, -1.87236118e+00,\n'
 '        -4.96517718e-01, -2.23519588e+00,  5.00106573e-01,\n'
 '        -4.47597802e-01,  3.38154852e-01,  3.52665484e-01,\n'
 '        -1.75820005e+00, -1.55346185e-01,  3.32737744e-01,\n'
 '         7.98784852e-01,  2.70641238e-01, -1.69507885e+00,\n'
 '         7.36109137e-01, -1.46609843e+00, -3.46130609e+00,\n'
 '        -3.44080865e-01, -5.69438457e-01,  9.31250602e-02,\n'
 '        -2.32933927e+00,  1.16151011e+00, -5.88644385e-01,\n'
 '        -4.16735649e-01,  4.96335655e-01, -1.38457060e+00,\n'
 '         2.07167730e-01,  2.00688869e-01, -1.43137503e+00,\n'
 '         6.42896354e-01,  1.19520164e+00, -2.18721092e-01,\n'
 '         1.44591367e+00,  3.55733824e+00, -5.63915610e-01,\n'
 '        -1.34593558e+00,  2.07581252e-01, -1.78411758e+00,\n'
 '         1.57699525e-01,  1.62678730e+00, -9.86988664e-01,\n'
 '        -3.24419737e-01,  1.59176624e+00, -1.47528362e+00,\n'
 '        -3.64921391e-01, -1.07638514e+00,  7.66940773e-01,\n'
 '        -5.37870884e-01,  4.70575601e-01, -1.27459288e+00,\n'
 '         1.07757175e+00,  2.20942402e+00,  9.84747410e-01,\n'
 '         6.48333430e-02,  1.54444611e+00,  1.52537775e+00,\n'
 '         1.25710320e+00, -1.24406254e+00,  3.78792334e+00,\n'
 '        -8.45402718e-01,  7.25662053e-01,  4.44551706e-01,\n'
 '        -1.03822780e+00, -1.00573075e+00, -2.62529111e+00,\n'
 '         5.80017455e-02, -2.81054884e-01, -2.43696451e+00,\n'
 '        -2.10796580e-01, -1.73289537e+00,  1.11742663e+00,\n'
 '         2.50310507e-02,  1.15167749e+00,  2.68505740e+00,\n'
 '        -6.90861404e-01, -8.34868193e-01, -1.14558732e+00,\n'
 '         1.42141247e+00, -1.68883550e+00, -2.33009076e+00,\n'
 '        -2.71769023e+00,  8.72053623e-01, -1.65128171e+00,\n'
 '         5.02448678e-01,  7.49078274e-01,  1.40954637e+00,\n'
 '        -6.52490914e-01,  1.82399940e+00,  1.23481357e+00,\n'
 '        -2.09080481e+00, -1.18570423e+00, -4.55348164e-01,\n'
 '         2.32058704e-01,  9.57217932e-01, -1.02460056e-01,\n'
 '        -8.29742789e-01, -5.46242476e-01,  9.06966507e-01,\n'
 '        -3.58703947e+00, -1.15270948e+00, -2.24301410e+00,\n'
 '        -1.24591982e+00, -2.03006744e+00,  2.07945705e-03,\n'
 '         2.31239271e+00, -2.77858078e-01,  1.45634818e+00,\n'
 '        -1.15424943e+00, -1.70285142e+00, -2.70073867e+00,\n'
 '        -1.19662732e-02, -2.40422249e+00, -9.73215461e-01,\n'
 '        -1.58265698e+00, -1.49548876e+00, -1.68628156e-01,\n'
 '         1.75081062e+00, -4.18529213e-01, -1.92948341e+00,\n'
 '         3.43954325e+00,  1.07386422e+00, -5.42309523e-01,\n'
 '        -1.06246555e+00,  9.35181022e-01, -2.02319336e+00,\n'
 '         3.11070395e+00,  1.11065412e+00, -3.43298316e-02,\n'
 '         1.49957430e+00,  6.62756264e-01, -1.15058506e+00,\n'
 '        -2.90047693e+00, -4.69168484e-01, -6.55988276e-01,\n'
 '        -1.01421404e+00, -1.72584045e+00,  4.37804371e-01,\n'
 '        -1.96833944e+00, -4.69057947e-01,  5.25874436e-01,\n'
 '         7.77529061e-01,  1.72672406e-01, -4.01050091e-01,\n'
 '         1.77145636e+00,  4.28862381e+00, -1.09777904e+00,\n'
 '        -2.90084064e-01, -1.26229256e-01,  7.95535743e-01,\n'
 '        -1.89636302e+00,  8.27268600e-01, -1.99608600e+00,\n'
 '         2.14987111e+00, -1.50275201e-01,  5.36430478e-01,\n'
 '         2.41259837e+00, -1.61215174e+00, -3.54164302e-01,\n'
 '         6.72585368e-01, -3.80600095e-01,  1.11146021e+00,\n'
 '        -2.27537131e+00, -1.12136789e-02, -3.94764453e-01,\n'
 '         1.16159439e+00,  1.55819130e+00,  1.22403562e+00,\n'
 '         2.83770084e-01, -1.18321514e+00,  1.08835256e+00,\n'
 '         4.14565802e-02,  2.88039952e-01, -1.78062856e-01,\n'
 '        -1.28794289e+00,  2.36645675e+00,  3.50545138e-01,\n'
 '         2.47933269e+00, -1.39665806e+00,  1.27473640e+00,\n'
 '         1.52334285e+00, -2.16188645e+00,  1.53524220e-01,\n'
 '        -1.14566910e+00, -1.99345767e+00, -2.37080026e+00,\n'
 '        -8.59544039e-01,  2.11649466e+00, -2.35156298e+00,\n'
 '         3.29271483e+00,  1.41230917e+00,  2.13040209e+00,\n'
 '        -9.91718292e-01,  6.88195825e-01, -8.57979476e-01,\n'
 '        -6.51549578e-01, -2.74041057e-01,  1.39309096e+00,\n'
 '        -5.17699718e-01,  1.19203854e+00, -3.40141207e-01,\n'
 '        -1.28216481e+00, -1.35871422e+00, -1.29977918e+00,\n'
 '         4.49856549e-01, -1.93188667e-01, -1.29057443e+00,\n'
 '         6.29927874e-01,  1.15777135e+00, -2.98022699e+00,\n'
 '         1.94677025e-01,  3.81641388e-02, -2.04088330e+00,\n'
 '        -4.67146337e-01, -1.01592219e+00, -1.47630668e+00,\n'
 '        -1.50677288e+00, -8.93486619e-01, -1.46053410e+00,\n'
 '        -4.23442155e-01, -1.92177951e-01, -1.01815116e+00,\n'
 '        -7.39941597e-01, -7.34444022e-01, -1.48208845e+00,\n'
 '         2.21759200e-01,  4.22761887e-01, -2.55477643e+00,\n'
 '         1.31136131e+00,  2.15660930e+00, -2.40372395e+00,\n'
 '        -1.50463009e+00,  1.62195182e+00, -2.09752655e+00,\n'
 '         5.41253090e-02,  3.26199055e+00, -1.51175785e+00,\n'
 '        -6.92120716e-02, -8.92181277e-01,  1.47949505e+00,\n'
 '        -2.14398313e+00,  3.57675970e-01,  3.18047523e-01,\n'
 '        -1.21941686e+00,  5.25333822e-01,  1.58055210e+00,\n'
 '        -3.22326756e+00, -7.36755371e-01, -8.41953531e-02,\n'
 '         5.53887427e-01, -1.64854944e+00, -3.39022279e+00,\n'
 '         8.61976624e-01,  6.86713100e-01,  1.23938203e+00,\n'
 '         1.97110260e+00, -2.58272529e-01,  4.46162969e-01,\n'
 '         2.13083911e+00,  6.16060257e-01,  4.17556256e-01,\n'
 '         3.47415030e-01,  2.43551731e+00,  4.69266772e-02,\n'
 '        -1.90026987e+00,  2.01833892e+00, -1.63266945e+00,\n'
 '         7.66532898e-01, -1.99531925e+00, -1.89014351e+00,\n'
 '         4.98841345e-01, -2.62964666e-01,  1.22167683e+00,\n'
 '        -7.36951768e-01, -1.50520217e+00, -1.72852302e+00,\n'
 '        -1.76881611e+00, -1.96166182e+00,  4.03107732e-01,\n'
 '        -1.91447341e+00,  3.83593023e-01,  4.50805396e-01,\n'
 '         6.12828493e-01, -6.98335528e-01,  8.58123303e-01,\n'
 '        -2.93324923e+00,  1.18825996e+00, -2.97273874e+00,\n'
 '        -1.89699721e+00, -1.03065801e+00,  8.67265165e-01,\n'
 '         4.36804444e-01, -3.34046316e+00,  3.92943531e-01,\n'
 '         3.16619486e-01, -4.94099528e-01, -1.18140757e+00,\n'
 '         1.62380606e-01, -1.99170113e-01, -3.48037243e-01,\n'
 '         4.18492615e-01,  3.88050228e-02,  1.01466036e+00,\n'
 '        -2.66123205e-01, -1.77824604e+00, -2.24144131e-01,\n'
 '         2.66796321e-01,  9.97293115e-01,  2.38047147e+00,\n'
 '         7.85966039e-01, -8.00354123e-01,  1.23067451e+00,\n'
 '        -3.72378230e-02, -1.57384753e+00,  2.76257300e+00,\n'
 '         4.29427415e-01,  4.66355741e-01, -4.16118026e-01,\n'
 '         4.54240739e-02, -9.46758986e-01, -2.47772574e+00,\n'
 '         6.75771892e-01, -4.39488143e-02,  2.62821674e+00,\n'
 '         1.53175962e+00,  6.52454495e-01,  3.87159347e-01,\n'
 '        -5.23986816e-01, -2.16033173e+00,  3.63586187e+00,\n'
 '         6.68906122e-02, -4.32773709e-01, -3.01749587e-01,\n'
 '        -2.72365808e+00,  4.08976853e-01,  4.48759913e-01,\n'
 '        -3.96225631e-01, -1.99029994e+00,  3.05337131e-01,\n'
 '         2.28549051e+00, -9.19628739e-01,  8.27304363e-01,\n'
 '        -1.45383620e+00, -2.37701034e+00, -2.52741337e+00,\n'
 '        -2.24272060e+00,  1.48625684e+00, -4.58392888e-01,\n'
 '        -6.74032927e-01, -5.65637350e-01,  1.31263077e+00,\n'
 '         2.14718640e-01, -1.43163800e-01, -1.54488325e-01,\n'
 '        -9.16526318e-01, -6.62293673e-01, -1.04456747e+00,\n'
 '        -5.58369875e-01,  3.33660388e+00,  1.95687801e-01,\n'
 '         1.39205799e-01, -1.16999102e+00, -1.07351279e+00,\n'
 '         2.40960550e+00, -1.37057018e+00,  2.21827149e-01,\n'
 '         1.85313344e-01,  2.06029460e-01, -2.61904550e+00,\n'
 '        -1.95935178e+00,  1.79750180e+00, -1.02533519e+00,\n'
 '        -2.45307898e+00, -1.16293859e+00,  7.54571855e-02,\n'
 '         1.49385333e+00,  6.15513205e-01, -2.13722467e+00,\n'
 '         7.21521735e-01,  6.70651913e-01, -2.09652162e+00,\n'
 '        -1.12817657e+00, -1.39399946e+00,  3.87798727e-01,\n'
 '         2.07713932e-01,  3.89972282e+00,  2.56080604e+00,\n'
 '        -2.83505797e+00, -1.14455080e+00, -3.13690877e+00,\n'
 '        -2.21435952e+00, -3.42924893e-01, -6.01890266e-01,\n'
 '         1.36056459e+00, -5.66935718e-01,  6.81310654e-01,\n'
 '        -7.99575090e-01,  1.97016561e+00,  1.53225708e+00,\n'
 '         1.00501990e+00,  9.72454906e-01, -8.21109593e-01,\n'
 '         1.35759568e+00,  3.14100623e-01, -9.10355091e-01,\n'
 '         2.66817522e+00, -1.11644435e+00,  1.37484336e+00,\n'
 '        -5.48107028e-02, -7.48346031e-01,  1.19132566e+00,\n'
 '         2.66478395e+00,  8.00706148e-02, -5.65703213e-01,\n'
 '        -1.78150034e+00,  6.79541528e-01, -4.96795773e-01,\n'
 '        -1.23180807e+00, -1.30334914e+00, -1.48803875e-01,\n'
 '        -2.27555013e+00,  1.29905784e+00,  1.26712203e-01,\n'
 '         1.73699713e+00, -3.77172142e-01, -5.29870153e-01,\n'
 '         1.53763449e+00,  1.88171172e+00, -2.43024111e+00,\n'
 '        -2.63680673e+00, -1.78207922e+00, -2.18910158e-01,\n'
 '         5.04725039e-01,  7.20891357e-01, -1.30291188e+00,\n'
 '         2.69182992e+00,  1.05846465e+00, -1.11038315e+00,\n'
 '         4.17352915e-01, -3.12444210e+00,  1.81413722e+00,\n'
 '         3.84861559e-01,  3.93031240e-01,  8.70451570e-01,\n'
 '         6.34830177e-01,  3.31837326e-01,  1.76803613e+00,\n'
 '        -3.41641664e+00, -1.87550175e+00, -2.29507580e-01,\n'
 '        -1.83110625e-01, -2.52371454e+00, -5.48732460e-01,\n'
 '        -8.68128300e-01, -9.40430701e-01,  5.68328023e-01,\n'
 '         2.66370535e-01,  4.65082020e-01, -7.42183804e-01,\n'
 '        -4.86296296e-01, -1.40315521e+00,  2.19489169e+00,\n'
 '        -1.97436809e+00,  9.63942349e-01, -2.41765380e-01,\n'
 '         1.37114406e+00, -1.38248694e+00, -5.84908485e-01,\n'
 '        -1.12210870e+00,  9.48664546e-01,  2.32436943e+00,\n'
 '        -2.46130019e-01,  5.23611605e-01, -1.41717565e+00,\n'
 '         1.49495220e+00, -2.40711975e+00,  2.23531902e-01,\n'
 '        -1.93868172e+00, -1.01105595e+00,  1.68814158e+00,\n'
 '         5.39551914e-01,  3.10299158e-01,  1.01203728e+00,\n'
 '        -1.00405109e+00, -1.67866182e+00,  1.92106819e+00,\n'
 '        -1.74722731e+00,  1.94135755e-01, -3.47082114e+00,\n'
 '        -2.86280245e-01, -2.83727556e-01,  8.24656963e-01,\n'
 '         2.80028057e+00,  3.17528546e-02, -2.05287695e-01,\n'
 '         1.83977675e+00,  1.35552502e+00,  4.12898362e-01,\n'
 '         2.77735090e+00,  2.76848108e-01, -2.07796669e+00,\n'
 '        -3.15780848e-01, -1.68673360e+00,  2.33064100e-01,\n'
 '         8.64380121e-01, -6.93335235e-01,  4.09641236e-01,\n'
 '        -1.22582006e+00,  5.25960922e-01, -1.30260491e+00,\n'
 '        -8.32707703e-01, -5.11005759e-01, -6.98054910e-01,\n'
 '         7.04207122e-01, -2.12647104e+00, -9.34244394e-01,\n'
 '        -3.43704843e+00, -3.13437295e+00, -3.81747186e-01,\n'
 '         9.27569747e-01,  3.82761121e-01, -4.91187945e-02,\n'
 '         1.08561003e+00,  1.42838085e+00,  1.00544596e+00,\n'
 '         3.76519233e-01,  6.02691114e-01,  1.48028612e+00,\n'
 '        -5.28964639e-01, -1.43373534e-01,  1.26758170e+00,\n'
 '         5.90236008e-01, -1.43190324e-02,  3.04254627e+00,\n'
 '         4.02080965e+00,  1.93186748e+00,  1.07208276e+00,\n'
 '         9.73628163e-01,  9.69516635e-01,  3.08938170e+00,\n'
 '         1.01339364e+00, -2.45172739e-01,  2.12699741e-01,\n'
 '        -1.49311161e+00,  2.18512011e+00, -8.93274248e-02,\n'
 '        -2.47455180e-01, -1.13082612e+00, -1.79468238e+00,\n'
 '        -1.15042162e+00,  1.04521930e+00,  5.35123289e-01,\n'
 '        -4.00812238e-01, -1.23046040e-02,  2.63183981e-01,\n'
 '         1.46483815e+00,  1.20291162e+00, -3.11302185e-01,\n'
 '         6.58134043e-01,  1.51400566e-02,  2.35909772e+00,\n'
 '         1.28808904e+00,  6.96606755e-01, -1.27682030e-01,\n'
 '        -2.31078193e-02, -3.59156966e-01,  1.15410006e+00,\n'
 '        -8.81890118e-01, -1.12105358e+00, -3.52707118e-01,\n'
 '        -3.12252730e-01,  1.34070218e-02,  2.00742531e+00,\n'
 '        -4.19663310e-01,  1.39932263e+00, -9.73571956e-01,\n'
 '        -2.34276104e+00, -1.35628963e+00, -6.24902248e-01,\n'
 '         1.73797000e+00, -4.81064498e-01, -1.52042580e+00,\n'
 '        -3.88211608e-01]])')
'test_inceptionnet | batch_shape is: [1]'
'test_inceptionnet | logits.shape is: ivy.Shape(1, 1000)'
'||'
'test_inceptionnet | indices_test | true_indices is: [258 270 279]'
'test_inceptionnet | indices_test | calc_indices is: [258 270 279]'
